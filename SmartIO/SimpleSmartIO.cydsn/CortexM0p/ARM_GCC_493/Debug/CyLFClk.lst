ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLFClk.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkIloStart,"ax",%progbits
  18              		.align	2
  19              		.global	CySysClkIloStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkIloStart, %function
  23              	CySysClkIloStart:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CyLFClk.c"
   1:.\Generated_Source\PSoC4/CyLFClk.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/CyLFClk.c **** * \file .c
   3:.\Generated_Source\PSoC4/CyLFClk.c **** * \version 1.10
   4:.\Generated_Source\PSoC4/CyLFClk.c **** *
   5:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief
   6:.\Generated_Source\PSoC4/CyLFClk.c **** *  This file provides the source code for configuring watchdog timers WDTs), 
   7:.\Generated_Source\PSoC4/CyLFClk.c **** *  low frequency clocks (LFCLK) and the Real-time Clock (RTC) component in
   8:.\Generated_Source\PSoC4/CyLFClk.c **** *  PSoC Creator for the PSoC 4 families.
   9:.\Generated_Source\PSoC4/CyLFClk.c **** *
  10:.\Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
  11:.\Generated_Source\PSoC4/CyLFClk.c **** * \copyright
  12:.\Generated_Source\PSoC4/CyLFClk.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CyLFClk.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CyLFClk.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CyLFClk.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CyLFClk.c **** 
  18:.\Generated_Source\PSoC4/CyLFClk.c **** 
  19:.\Generated_Source\PSoC4/CyLFClk.c **** #include "CyLFClk.h"
  20:.\Generated_Source\PSoC4/CyLFClk.c **** #include "CyLib.h"
  21:.\Generated_Source\PSoC4/CyLFClk.c **** 
  22:.\Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
  23:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void);
  24:.\Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
  25:.\Generated_Source\PSoC4/CyLFClk.c **** 
  26:.\Generated_Source\PSoC4/CyLFClk.c **** 
  27:.\Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
  28:.\Generated_Source\PSoC4/CyLFClk.c ****     /* Default Ilo Trim Register value for ILO trimming*/
  29:.\Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint16 defaultIloTrimRegValue = CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE;
  30:.\Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
  31:.\Generated_Source\PSoC4/CyLFClk.c **** 
  32:.\Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 2


  33:.\Generated_Source\PSoC4/CyLFClk.c ****     /* CySysClkLfclkPosedgeCatch() / CySysClkLfclkPosedgeRestore() */
  34:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Enabled = 0u;
  35:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Mode    = CY_SYS_WDT_MODE_NONE;
  36:.\Generated_Source\PSoC4/CyLFClk.c **** 
  37:.\Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableServicedIsr = 0uL;
  38:.\Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 wdtIsrMask = CY_SYS_WDT_COUNTER0_INT |\
  39:.\Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER1_INT |\
  40:.\Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER2_INT;
  41:.\Generated_Source\PSoC4/CyLFClk.c **** 
  42:.\Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterIntMaskTbl[CY_WDT_NUM_OF_WDT] = {CY_SYS_WDT_COUNTER0_INT,
  43:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER1_INT,
  44:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER2_INT};
  45:.\Generated_Source\PSoC4/CyLFClk.c **** 
  46:.\Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void);
  47:.\Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void);
  48:.\Generated_Source\PSoC4/CyLFClk.c **** 
  49:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void);
  50:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void);
  51:.\Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  52:.\Generated_Source\PSoC4/CyLFClk.c **** 
  53:.\Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  54:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void);
  55:.\Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableTimerServicedIsr = 0uL;
  56:.\Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 timerIsrMask = CY_SYS_TIMER0_INT |\
  57:.\Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER1_INT |\
  58:.\Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER2_INT;
  59:.\Generated_Source\PSoC4/CyLFClk.c **** 
  60:.\Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterTimerIntMaskTbl[CY_SYS_NUM_OF_TIMERS] = {CY_SYS_TIMER0_INT,
  61:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER1_INT,
  62:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER2_INT};
  63:.\Generated_Source\PSoC4/CyLFClk.c **** 
  64:.\Generated_Source\PSoC4/CyLFClk.c ****     static cyTimerCallback cySysTimerCallback[CY_SYS_NUM_OF_TIMERS] = {(void *)0, (void *)0, (void 
  65:.\Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_DWT_EN) */
  66:.\Generated_Source\PSoC4/CyLFClk.c **** 
  67:.\Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  68:.\Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback[CY_WDT_NUM_OF_WDT] = {(void *)0, (void *)0, (void *)0};
  69:.\Generated_Source\PSoC4/CyLFClk.c **** #else
  70:.\Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback = (void *)0;
  71:.\Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  72:.\Generated_Source\PSoC4/CyLFClk.c **** 
  73:.\Generated_Source\PSoC4/CyLFClk.c **** 
  74:.\Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  75:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStart
  76:.\Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  77:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief
  78:.\Generated_Source\PSoC4/CyLFClk.c **** *  Enables ILO.
  79:.\Generated_Source\PSoC4/CyLFClk.c **** *
  80:.\Generated_Source\PSoC4/CyLFClk.c **** *  Refer to the device datasheet for the ILO startup time.
  81:.\Generated_Source\PSoC4/CyLFClk.c **** *
  82:.\Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  83:.\Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStart(void)
  84:.\Generated_Source\PSoC4/CyLFClk.c **** {
  26              		.loc 1 84 0
  27              		.cfi_startproc
  85:.\Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
  28              		.loc 1 85 0
  29 0000 034A     		ldr	r2, .L2
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 3


  30 0002 1368     		ldr	r3, [r2]
  31 0004 8021     		mov	r1, #128
  32 0006 0906     		lsl	r1, r1, #24
  33 0008 0B43     		orr	r3, r1
  34 000a 1360     		str	r3, [r2]
  86:.\Generated_Source\PSoC4/CyLFClk.c **** }
  35              		.loc 1 86 0
  36              		@ sp needed
  37 000c 7047     		bx	lr
  38              	.L3:
  39 000e C046     		.align	2
  40              	.L2:
  41 0010 2C000340 		.word	1073938476
  42              		.cfi_endproc
  43              	.LFE1:
  44              		.size	CySysClkIloStart, .-CySysClkIloStart
  45              		.section	.text.CySysClkIloStop,"ax",%progbits
  46              		.align	2
  47              		.global	CySysClkIloStop
  48              		.code	16
  49              		.thumb_func
  50              		.type	CySysClkIloStop, %function
  51              	CySysClkIloStop:
  52              	.LFB2:
  87:.\Generated_Source\PSoC4/CyLFClk.c **** 
  88:.\Generated_Source\PSoC4/CyLFClk.c **** 
  89:.\Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStop
  91:.\Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  92:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief
  93:.\Generated_Source\PSoC4/CyLFClk.c **** *  Disables the ILO.
  94:.\Generated_Source\PSoC4/CyLFClk.c **** *
  95:.\Generated_Source\PSoC4/CyLFClk.c **** *  This function has no effect if WDT is locked (CySysWdtLock() is
  96:.\Generated_Source\PSoC4/CyLFClk.c **** *  called). Call CySysWdtUnlock() to unlock WDT and stop ILO.
  97:.\Generated_Source\PSoC4/CyLFClk.c **** *
  98:.\Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 / PSoC 4200: Note that ILO is required for WDT's operation.
  99:.\Generated_Source\PSoC4/CyLFClk.c **** *
 100:.\Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / 
 101:.\Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M:
 102:.\Generated_Source\PSoC4/CyLFClk.c **** *  Stopping ILO affects the peripheral clocked by LFCLK, if
 103:.\Generated_Source\PSoC4/CyLFClk.c **** *  LFCLK is configured to be sourced by ILO.
 104:.\Generated_Source\PSoC4/CyLFClk.c **** *
 105:.\Generated_Source\PSoC4/CyLFClk.c **** *  If the ILO is disabled, all blocks run by ILO will stop functioning.
 106:.\Generated_Source\PSoC4/CyLFClk.c **** *
 107:.\Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 108:.\Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStop(void)
 109:.\Generated_Source\PSoC4/CyLFClk.c **** {
  53              		.loc 1 109 0
  54              		.cfi_startproc
 110:.\Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 111:.\Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 112:.\Generated_Source\PSoC4/CyLFClk.c **** 
 113:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Do nothing if WDT is locked or ILO is disabled */
 114:.\Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtLocked())
 115:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 116:.\Generated_Source\PSoC4/CyLFClk.c ****             if (0u != CySysClkIloEnabled())
 117:.\Generated_Source\PSoC4/CyLFClk.c ****             {
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 4


 118:.\Generated_Source\PSoC4/CyLFClk.c **** 
 119:.\Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 120:.\Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_ILO == CySysClkGetLfclkSource())
 121:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 122:.\Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 123:.\Generated_Source\PSoC4/CyLFClk.c **** 
 124:.\Generated_Source\PSoC4/CyLFClk.c ****                 interruptState = CyEnterCriticalSection();
 125:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeCatch();
 126:.\Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 127:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeRestore();
 128:.\Generated_Source\PSoC4/CyLFClk.c ****                 CyExitCriticalSection(interruptState);
 129:.\Generated_Source\PSoC4/CyLFClk.c **** 
 130:.\Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 131:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 132:.\Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 133:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 134:.\Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 135:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 136:.\Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 137:.\Generated_Source\PSoC4/CyLFClk.c **** 
 138:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 139:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 140:.\Generated_Source\PSoC4/CyLFClk.c ****     #else
 141:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_ILO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_ILO_CONFIG_ENABLE);
  55              		.loc 1 141 0
  56 0000 024A     		ldr	r2, .L5
  57 0002 1368     		ldr	r3, [r2]
  58 0004 5B00     		lsl	r3, r3, #1
  59 0006 5B08     		lsr	r3, r3, #1
  60 0008 1360     		str	r3, [r2]
 142:.\Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
 143:.\Generated_Source\PSoC4/CyLFClk.c **** }
  61              		.loc 1 143 0
  62              		@ sp needed
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 2C000340 		.word	1073938476
  68              		.cfi_endproc
  69              	.LFE2:
  70              		.size	CySysClkIloStop, .-CySysClkIloStop
  71              		.section	.text.CySysClkIloStartMeasurement,"ax",%progbits
  72              		.align	2
  73              		.global	CySysClkIloStartMeasurement
  74              		.code	16
  75              		.thumb_func
  76              		.type	CySysClkIloStartMeasurement, %function
  77              	CySysClkIloStartMeasurement:
  78              	.LFB3:
 144:.\Generated_Source\PSoC4/CyLFClk.c **** 
 145:.\Generated_Source\PSoC4/CyLFClk.c **** 
 146:.\Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 147:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStartMeasurement
 148:.\Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 149:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief
 150:.\Generated_Source\PSoC4/CyLFClk.c **** * Starts the ILO accuracy measurement.
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 5


 151:.\Generated_Source\PSoC4/CyLFClk.c **** *
 152:.\Generated_Source\PSoC4/CyLFClk.c **** * This function is non-blocking and needs to be called before using the 
 153:.\Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloTrim() and CySysClkIloCompensate() API.
 154:.\Generated_Source\PSoC4/CyLFClk.c **** *
 155:.\Generated_Source\PSoC4/CyLFClk.c **** * This API configures measurement counters to be sourced by SysClk (Counter 1)
 156:.\Generated_Source\PSoC4/CyLFClk.c **** * and ILO (Counter 2). 
 157:.\Generated_Source\PSoC4/CyLFClk.c **** *
 158:.\Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 159:.\Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 160:.\Generated_Source\PSoC4/CyLFClk.c **** *
 161:.\Generated_Source\PSoC4/CyLFClk.c **** * In addition, this API stores the factory ILO trim settings on the first call 
 162:.\Generated_Source\PSoC4/CyLFClk.c **** * after reset. This stored factory setting is used by the 
 163:.\Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloRestoreFactoryTrim() API to restore the ILO factory trim. 
 164:.\Generated_Source\PSoC4/CyLFClk.c **** * Hence, it is important to call this API before restoring the ILO 
 165:.\Generated_Source\PSoC4/CyLFClk.c **** * factory trim settings.
 166:.\Generated_Source\PSoC4/CyLFClk.c **** *
 167:.\Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 168:.\Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStartMeasurement(void)
 169:.\Generated_Source\PSoC4/CyLFClk.c **** {
  79              		.loc 1 169 0
  80              		.cfi_startproc
 170:.\Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 171:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint8 iloTrimTrig = 0u;
 172:.\Generated_Source\PSoC4/CyLFClk.c **** 
 173:.\Generated_Source\PSoC4/CyLFClk.c ****     /* Write default ILO trim value while ILO starting ( Cypress ID 225244 )*/
 174:.\Generated_Source\PSoC4/CyLFClk.c ****     if (0u == iloTrimTrig)
 175:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 176:.\Generated_Source\PSoC4/CyLFClk.c ****         defaultIloTrimRegValue = ((uint8)(CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK));
 177:.\Generated_Source\PSoC4/CyLFClk.c ****         iloTrimTrig = 1u;
 178:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 179:.\Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 180:.\Generated_Source\PSoC4/CyLFClk.c **** 
 181:.\Generated_Source\PSoC4/CyLFClk.c ****     /* Configure measurement counters to source by SysClk (Counter 1) and ILO (Counter 2)*/
 182:.\Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG = (CY_SYS_CLK_DFT_REG & (uint32) ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK) |
  81              		.loc 1 182 0
  82 0000 074A     		ldr	r2, .L8
  83 0002 1168     		ldr	r1, [r2]
  84 0004 074B     		ldr	r3, .L8+4
  85 0006 0B40     		and	r3, r1
  86 0008 8021     		mov	r1, #128
  87 000a 4900     		lsl	r1, r1, #1
  88 000c 0B43     		orr	r3, r1
  89 000e 1360     		str	r3, [r2]
 183:.\Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 184:.\Generated_Source\PSoC4/CyLFClk.c **** 
 185:.\Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_TST_DDFT_CTRL_REG = (CY_SYS_TST_DDFT_CTRL_REG & (uint32) ~ CY_SYS_TST_DDFT_CTRL_REG_DEFA
  90              		.loc 1 185 0
  91 0010 054A     		ldr	r2, .L8+8
  92 0012 1168     		ldr	r1, [r2]
  93 0014 054B     		ldr	r3, .L8+12
  94 0016 0B40     		and	r3, r1
  95 0018 0549     		ldr	r1, .L8+16
  96 001a 0B43     		orr	r3, r1
  97 001c 1360     		str	r3, [r2]
 186:.\Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 187:.\Generated_Source\PSoC4/CyLFClk.c **** }
  98              		.loc 1 187 0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 6


  99              		@ sp needed
 100 001e 7047     		bx	lr
 101              	.L9:
 102              		.align	2
 103              	.L8:
 104 0020 34000340 		.word	1073938484
 105 0024 FFF0FFFF 		.word	-3841
 106 0028 18000340 		.word	1073938456
 107 002c F0F0FFFF 		.word	-3856
 108 0030 08090000 		.word	2312
 109              		.cfi_endproc
 110              	.LFE3:
 111              		.size	CySysClkIloStartMeasurement, .-CySysClkIloStartMeasurement
 112              		.section	.text.CySysClkIloStopMeasurement,"ax",%progbits
 113              		.align	2
 114              		.global	CySysClkIloStopMeasurement
 115              		.code	16
 116              		.thumb_func
 117              		.type	CySysClkIloStopMeasurement, %function
 118              	CySysClkIloStopMeasurement:
 119              	.LFB4:
 188:.\Generated_Source\PSoC4/CyLFClk.c **** 
 189:.\Generated_Source\PSoC4/CyLFClk.c **** 
 190:.\Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 191:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStopMeasurement
 192:.\Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 193:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief
 194:.\Generated_Source\PSoC4/CyLFClk.c **** * Stops the ILO accuracy measurement.
 195:.\Generated_Source\PSoC4/CyLFClk.c **** *
 196:.\Generated_Source\PSoC4/CyLFClk.c **** * Calling this function immediately stops the the ILO frequency measurement.
 197:.\Generated_Source\PSoC4/CyLFClk.c **** * This function should be called before placing the device to deepsleep, if 
 198:.\Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API was called before. 
 199:.\Generated_Source\PSoC4/CyLFClk.c **** *
 200:.\Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 201:.\Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStopMeasurement(void)
 202:.\Generated_Source\PSoC4/CyLFClk.c **** {
 120              		.loc 1 202 0
 121              		.cfi_startproc
 203:.\Generated_Source\PSoC4/CyLFClk.c ****     /* Set default configurations in 11...8 DFT register bits to zero */
 204:.\Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG &= ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK;
 122              		.loc 1 204 0
 123 0000 054A     		ldr	r2, .L11
 124 0002 1168     		ldr	r1, [r2]
 125 0004 054B     		ldr	r3, .L11+4
 126 0006 0B40     		and	r3, r1
 127 0008 1360     		str	r3, [r2]
 205:.\Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 206:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_TST_DDFT_CTRL_REG &= ((uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 128              		.loc 1 206 0
 129 000a 054A     		ldr	r2, .L11+8
 130 000c 1168     		ldr	r1, [r2]
 131 000e 054B     		ldr	r3, .L11+12
 132 0010 0B40     		and	r3, r1
 133 0012 1360     		str	r3, [r2]
 207:.\Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
 208:.\Generated_Source\PSoC4/CyLFClk.c **** }
 134              		.loc 1 208 0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 7


 135              		@ sp needed
 136 0014 7047     		bx	lr
 137              	.L12:
 138 0016 C046     		.align	2
 139              	.L11:
 140 0018 34000340 		.word	1073938484
 141 001c FFF0FFFF 		.word	-3841
 142 0020 18000340 		.word	1073938456
 143 0024 0F0F0000 		.word	3855
 144              		.cfi_endproc
 145              	.LFE4:
 146              		.size	CySysClkIloStopMeasurement, .-CySysClkIloStopMeasurement
 147              		.global	__aeabi_uidiv
 148              		.section	.text.CySysClkIloCompensate,"ax",%progbits
 149              		.align	2
 150              		.global	CySysClkIloCompensate
 151              		.code	16
 152              		.thumb_func
 153              		.type	CySysClkIloCompensate, %function
 154              	CySysClkIloCompensate:
 155              	.LFB5:
 209:.\Generated_Source\PSoC4/CyLFClk.c **** 
 210:.\Generated_Source\PSoC4/CyLFClk.c **** 
 211:.\Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 212:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloCompensate
 213:.\Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 214:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief
 215:.\Generated_Source\PSoC4/CyLFClk.c **** * This API measures the current ILO accuracy.
 216:.\Generated_Source\PSoC4/CyLFClk.c **** *
 217:.\Generated_Source\PSoC4/CyLFClk.c **** * Basing on the measured frequency the required number of ILO cycles for a 
 218:.\Generated_Source\PSoC4/CyLFClk.c **** * given delay (in microseconds) is obtained. The desired delay that needs to 
 219:.\Generated_Source\PSoC4/CyLFClk.c **** * be compensated is passed through the desiredDelay parameter. The compensated 
 220:.\Generated_Source\PSoC4/CyLFClk.c **** * cycle count is returned through the compesatedCycles pointer.
 221:.\Generated_Source\PSoC4/CyLFClk.c **** * The compensated ILO cycles can then be used to define the WDT period value, 
 222:.\Generated_Source\PSoC4/CyLFClk.c **** * effectively compensating for the ILO inaccuracy and allowing a more 
 223:.\Generated_Source\PSoC4/CyLFClk.c **** * accurate WDT interrupt generation.
 224:.\Generated_Source\PSoC4/CyLFClk.c **** *
 225:.\Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API should be called prior to calling this API. 
 226:.\Generated_Source\PSoC4/CyLFClk.c **** *
 227:.\Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 228:.\Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 229:.\Generated_Source\PSoC4/CyLFClk.c **** *
 230:.\Generated_Source\PSoC4/CyLFClk.c **** * \note If the System clock frequency is changed in runtime, the CyDelayFreq() 
 231:.\Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 232:.\Generated_Source\PSoC4/CyLFClk.c **** * called before calling a next CySysClkIloCompensate().
 233:.\Generated_Source\PSoC4/CyLFClk.c **** *
 234:.\Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS.
 235:.\Generated_Source\PSoC4/CyLFClk.c **** *
 236:.\Generated_Source\PSoC4/CyLFClk.c **** * \param desiredDelay Required delay in microseconds.
 237:.\Generated_Source\PSoC4/CyLFClk.c **** *
 238:.\Generated_Source\PSoC4/CyLFClk.c **** * \param *compensatedCycles The pointer to the variable in which the required
 239:.\Generated_Source\PSoC4/CyLFClk.c **** * number of ILO cycles for the given delay will be returned.
 240:.\Generated_Source\PSoC4/CyLFClk.c **** *
 241:.\Generated_Source\PSoC4/CyLFClk.c **** * \details
 242:.\Generated_Source\PSoC4/CyLFClk.c **** * The value returned in *compensatedCycles pointer is not valid until the 
 243:.\Generated_Source\PSoC4/CyLFClk.c **** * function returns CYRET_SUCCESS.
 244:.\Generated_Source\PSoC4/CyLFClk.c **** *
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 8


 245:.\Generated_Source\PSoC4/CyLFClk.c **** * The desiredDelay parameter value should be in next range: <br>From 100 to 
 246:.\Generated_Source\PSoC4/CyLFClk.c **** * 2 000 000 microseconds for PSoC 4000 / PSoC 4000S / 4100S / Analog 
 247:.\Generated_Source\PSoC4/CyLFClk.c **** * Coprocessor devices.<br>From 100 to 4 000 000 000 microseconds for 
 248:.\Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / 
 249:.\Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L / PSoC 4100M /PSoC 4200M devices.
 250:.\Generated_Source\PSoC4/CyLFClk.c **** *
 251:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - The compensation process is complete and the 
 252:.\Generated_Source\PSoC4/CyLFClk.c **** * compensated cycles value is returned in the compensatedCycles pointer.
 253:.\Generated_Source\PSoC4/CyLFClk.c **** *
 254:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. It is 
 255:.\Generated_Source\PSoC4/CyLFClk.c **** * strongly recommended to do not make pauses between API calling. The 
 256:.\Generated_Source\PSoC4/CyLFClk.c **** * function should be called repeatedly until the API returns CYRET_SUCCESS.
 257:.\Generated_Source\PSoC4/CyLFClk.c **** *
 258:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates that measurement not started. 
 259:.\Generated_Source\PSoC4/CyLFClk.c **** * The user should call CySysClkIloStartMeasurement() API before calling 
 260:.\Generated_Source\PSoC4/CyLFClk.c **** * this API.
 261:.\Generated_Source\PSoC4/CyLFClk.c **** *
 262:.\Generated_Source\PSoC4/CyLFClk.c **** * \note For a correct WDT or WCO Timers functioning with ILO compensating the 
 263:.\Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() should be called before WDT or WCO Timers enabling.
 264:.\Generated_Source\PSoC4/CyLFClk.c **** *
 265:.\Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 266:.\Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloCompensate(uint32 desiredDelay , uint32* compensatedCycles)
 267:.\Generated_Source\PSoC4/CyLFClk.c **** {
 156              		.loc 1 267 0
 157              		.cfi_startproc
 158              	.LVL0:
 159 0000 70B5     		push	{r4, r5, r6, lr}
 160              		.cfi_def_cfa_offset 16
 161              		.cfi_offset 4, -16
 162              		.cfi_offset 5, -12
 163              		.cfi_offset 6, -8
 164              		.cfi_offset 14, -4
 268:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 269:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 desiredDelayInCounts;
 270:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 271:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 272:.\Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 273:.\Generated_Source\PSoC4/CyLFClk.c **** 
 274:.\Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 165              		.loc 1 274 0
 166 0002 344B     		ldr	r3, .L25
 167 0004 1A68     		ldr	r2, [r3]
 168 0006 344B     		ldr	r3, .L25+4
 169 0008 1340     		and	r3, r2
 170              	.LVL1:
 275:.\Generated_Source\PSoC4/CyLFClk.c **** 
 276:.\Generated_Source\PSoC4/CyLFClk.c ****     /* Check if CySysStartMeasurement was called before */
 277:.\Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) && 
 171              		.loc 1 277 0
 172 000a 8022     		mov	r2, #128
 173 000c 5200     		lsl	r2, r2, #1
 174 000e 9342     		cmp	r3, r2
 175 0010 52D1     		bne	.L18
 278:.\Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 176              		.loc 1 278 0 discriminator 1
 177 0012 324B     		ldr	r3, .L25+8
 178              	.LVL2:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 9


 179 0014 1A68     		ldr	r2, [r3]
 277:.\Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 180              		.loc 1 277 0 discriminator 1
 181 0016 324B     		ldr	r3, .L25+12
 182 0018 9A42     		cmp	r2, r3
 183 001a 4FD1     		bne	.L19
 184              		.loc 1 278 0
 185 001c 314B     		ldr	r3, .L25+16
 186 001e 9842     		cmp	r0, r3
 187 0020 4ED8     		bhi	.L20
 279:.\Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 188              		.loc 1 279 0
 189 0022 6328     		cmp	r0, #99
 190 0024 4ED9     		bls	.L21
 280:.\Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 191              		.loc 1 280 0
 192 0026 0029     		cmp	r1, #0
 193 0028 4ED0     		beq	.L22
 281:.\Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 282:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 283:.\Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_TRIM_OR_COMP_FINISHED != compensateRunningStatus)
 194              		.loc 1 283 0
 195 002a 2F4B     		ldr	r3, .L25+20
 196 002c 1B68     		ldr	r3, [r3]
 197 002e 002B     		cmp	r3, #0
 198 0030 38D0     		beq	.L15
 284:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 285:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Wait until counter 1 stopped counting and after it calculate compensated cycles */
 286:.\Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 199              		.loc 1 286 0
 200 0032 2E4B     		ldr	r3, .L25+24
 201 0034 1B68     		ldr	r3, [r3]
 202 0036 002B     		cmp	r3, #0
 203 0038 48DA     		bge	.L23
 287:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 288:.\Generated_Source\PSoC4/CyLFClk.c ****                 if (0u != CY_SYS_CNT_REG2_REG)
 204              		.loc 1 288 0
 205 003a 2D4B     		ldr	r3, .L25+28
 206 003c 1B68     		ldr	r3, [r3]
 207 003e 002B     		cmp	r3, #0
 208 0040 46D0     		beq	.L24
 209 0042 0D1C     		mov	r5, r1
 289:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 290:.\Generated_Source\PSoC4/CyLFClk.c ****                     /* Calculate required number of ILO cycles for given delay */
 291:.\Generated_Source\PSoC4/CyLFClk.c ****                     #if(CY_IP_SRSSV2)
 292:.\Generated_Source\PSoC4/CyLFClk.c ****                         if (CY_SYS_CLK_DELAY_COUNTS_LIMIT < desiredDelay)
 293:.\Generated_Source\PSoC4/CyLFClk.c ****                         {
 294:.\Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = (desiredDelay / CY_SYS_CLK_ILO_PERIOD);
 295:.\Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 296:.\Generated_Source\PSoC4/CyLFClk.c ****                             (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_
 297:.\Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 298:.\Generated_Source\PSoC4/CyLFClk.c ****                         }
 299:.\Generated_Source\PSoC4/CyLFClk.c ****                         else
 300:.\Generated_Source\PSoC4/CyLFClk.c ****                         {
 301:.\Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + 
 302:.\Generated_Source\PSoC4/CyLFClk.c ****                                                      CY_SYS_CLK_HALF_OF_CLOCK) / CY_SYS_CLK_ILO_PER
 303:.\Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 10


 304:.\Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 305:.\Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 306:.\Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 307:.\Generated_Source\PSoC4/CyLFClk.c ****                         }
 308:.\Generated_Source\PSoC4/CyLFClk.c ****                     #else /* (CY_IP_SRSSLT) */
 309:.\Generated_Source\PSoC4/CyLFClk.c ****                         desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + CY_SYS_
 210              		.loc 1 309 0
 211 0044 6423     		mov	r3, #100
 212 0046 5843     		mul	r0, r3
 213              	.LVL3:
 214 0048 2A4B     		ldr	r3, .L25+32
 215 004a 9C46     		mov	ip, r3
 216 004c 6044     		add	r0, r0, ip
 217 004e 2A49     		ldr	r1, .L25+36
 218              	.LVL4:
 219 0050 FFF7FEFF 		bl	__aeabi_uidiv
 220              	.LVL5:
 221 0054 041E     		sub	r4, r0, #0
 222              	.LVL6:
 310:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 311:.\Generated_Source\PSoC4/CyLFClk.c ****                         if(CY_SYS_CLK_MAX_LITE_NUMBER < desiredDelayInCounts)
 223              		.loc 1 311 0
 224 0056 294B     		ldr	r3, .L25+40
 225 0058 9C42     		cmp	r4, r3
 226 005a 12D9     		bls	.L16
 312:.\Generated_Source\PSoC4/CyLFClk.c ****                         {
 313:.\Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydel
 227              		.loc 1 313 0
 228 005c 244B     		ldr	r3, .L25+28
 229 005e 1868     		ldr	r0, [r3]
 230              	.LVL7:
 231 0060 274B     		ldr	r3, .L25+44
 232 0062 1968     		ldr	r1, [r3]
 233 0064 4843     		mul	r0, r1
 234 0066 890A     		lsr	r1, r1, #10
 235 0068 FFF7FEFF 		bl	__aeabi_uidiv
 236              	.LVL8:
 314:.\Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 237              		.loc 1 314 0
 238 006c 2821     		mov	r1, #40
 239 006e FFF7FEFF 		bl	__aeabi_uidiv
 240              	.LVL9:
 241 0072 061C     		mov	r6, r0
 315:.\Generated_Source\PSoC4/CyLFClk.c ****                                                    (desiredDelayInCounts / CY_SYS_CLK_ILO_FREQ_3LSB
 242              		.loc 1 315 0
 243 0074 201C     		mov	r0, r4
 244 0076 FA21     		mov	r1, #250
 245 0078 8900     		lsl	r1, r1, #2
 246 007a FFF7FEFF 		bl	__aeabi_uidiv
 247              	.LVL10:
 313:.\Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 248              		.loc 1 313 0
 249 007e 7043     		mul	r0, r6
 250              	.LVL11:
 251 0080 0BE0     		b	.L17
 252              	.LVL12:
 253              	.L16:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 11


 316:.\Generated_Source\PSoC4/CyLFClk.c ****                         }
 317:.\Generated_Source\PSoC4/CyLFClk.c ****                         else
 318:.\Generated_Source\PSoC4/CyLFClk.c ****                         {
 319:.\Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 254              		.loc 1 319 0
 255 0082 1B4B     		ldr	r3, .L25+28
 256 0084 1868     		ldr	r0, [r3]
 257              	.LVL13:
 258 0086 1E4B     		ldr	r3, .L25+44
 259 0088 1968     		ldr	r1, [r3]
 260 008a 4843     		mul	r0, r1
 320:.\Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 261              		.loc 1 320 0
 262 008c 890A     		lsr	r1, r1, #10
 319:.\Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 263              		.loc 1 319 0
 264 008e FFF7FEFF 		bl	__aeabi_uidiv
 265              	.LVL14:
 266              		.loc 1 320 0
 267 0092 6043     		mul	r0, r4
 319:.\Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 268              		.loc 1 319 0
 269 0094 1B49     		ldr	r1, .L25+48
 270 0096 FFF7FEFF 		bl	__aeabi_uidiv
 271              	.LVL15:
 272              	.L17:
 321:.\Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 322:.\Generated_Source\PSoC4/CyLFClk.c ****                         }
 323:.\Generated_Source\PSoC4/CyLFClk.c ****                     #endif /* (CY_IP_SRSSV2) */
 324:.\Generated_Source\PSoC4/CyLFClk.c **** 
 325:.\Generated_Source\PSoC4/CyLFClk.c ****                     *compensatedCycles = iloCompensatedCycles;
 273              		.loc 1 325 0
 274 009a 2860     		str	r0, [r5]
 326:.\Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 275              		.loc 1 326 0
 276 009c 0020     		mov	r0, #0
 277              	.LVL16:
 278 009e 124B     		ldr	r3, .L25+20
 279 00a0 1860     		str	r0, [r3]
 280              	.LVL17:
 281 00a2 16E0     		b	.L14
 282              	.LVL18:
 283              	.L15:
 327:.\Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 328:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 329:.\Generated_Source\PSoC4/CyLFClk.c ****                 else
 330:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 331:.\Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus  = CYRET_INVALID_STATE;
 332:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 333:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 334:.\Generated_Source\PSoC4/CyLFClk.c ****             else
 335:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 336:.\Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 337:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 338:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 339:.\Generated_Source\PSoC4/CyLFClk.c ****         else
 340:.\Generated_Source\PSoC4/CyLFClk.c ****         {
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 12


 341:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Reload CNTR 1 count value for next measurement cycle*/
 342:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CNT_REG1_REG = (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER);
 284              		.loc 1 342 0
 285 00a4 164B     		ldr	r3, .L25+44
 286 00a6 1B68     		ldr	r3, [r3]
 287 00a8 9B0A     		lsr	r3, r3, #10
 288 00aa 104A     		ldr	r2, .L25+24
 289 00ac 1360     		str	r3, [r2]
 343:.\Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 290              		.loc 1 343 0
 291 00ae 0122     		mov	r2, #1
 292 00b0 0D4B     		ldr	r3, .L25+20
 293 00b2 1A60     		str	r2, [r3]
 294              	.LVL19:
 344:.\Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 295              		.loc 1 344 0
 296 00b4 0720     		mov	r0, #7
 297              	.LVL20:
 298 00b6 0CE0     		b	.L14
 299              	.LVL21:
 300              	.L18:
 345:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 346:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 347:.\Generated_Source\PSoC4/CyLFClk.c ****     else
 348:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 349:.\Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 301              		.loc 1 349 0
 302 00b8 1120     		mov	r0, #17
 303              	.LVL22:
 304 00ba 0AE0     		b	.L14
 305              	.LVL23:
 306              	.L19:
 307 00bc 1120     		mov	r0, #17
 308              	.LVL24:
 309 00be 08E0     		b	.L14
 310              	.LVL25:
 311              	.L20:
 312 00c0 1120     		mov	r0, #17
 313              	.LVL26:
 314 00c2 06E0     		b	.L14
 315              	.LVL27:
 316              	.L21:
 317 00c4 1120     		mov	r0, #17
 318              	.LVL28:
 319 00c6 04E0     		b	.L14
 320              	.LVL29:
 321              	.L22:
 322 00c8 1120     		mov	r0, #17
 323              	.LVL30:
 324 00ca 02E0     		b	.L14
 325              	.LVL31:
 326              	.L23:
 336:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 327              		.loc 1 336 0
 328 00cc 0720     		mov	r0, #7
 329              	.LVL32:
 330 00ce 00E0     		b	.L14
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 13


 331              	.LVL33:
 332              	.L24:
 331:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 333              		.loc 1 331 0
 334 00d0 1120     		mov	r0, #17
 335              	.LVL34:
 336              	.L14:
 350:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 351:.\Generated_Source\PSoC4/CyLFClk.c **** 
 352:.\Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 353:.\Generated_Source\PSoC4/CyLFClk.c **** }
 337              		.loc 1 353 0
 338              		@ sp needed
 339 00d2 70BD     		pop	{r4, r5, r6, pc}
 340              	.L26:
 341              		.align	2
 342              	.L25:
 343 00d4 34000340 		.word	1073938484
 344 00d8 0F0F0000 		.word	3855
 345 00dc 18000340 		.word	1073938456
 346 00e0 08090000 		.word	2312
 347 00e4 80841E00 		.word	2000000
 348 00e8 00000000 		.word	.LANCHOR0
 349 00ec 1C000340 		.word	1073938460
 350 00f0 20000340 		.word	1073938464
 351 00f4 71020000 		.word	625
 352 00f8 C4090000 		.word	2500
 353 00fc 60D10000 		.word	53600
 354 0100 00000000 		.word	cydelayFreqHz
 355 0104 409C0000 		.word	40000
 356              		.cfi_endproc
 357              	.LFE5:
 358              		.size	CySysClkIloCompensate, .-CySysClkIloCompensate
 359              		.section	.text.CySysClkWcoStart,"ax",%progbits
 360              		.align	2
 361              		.global	CySysClkWcoStart
 362              		.code	16
 363              		.thumb_func
 364              		.type	CySysClkWcoStart, %function
 365              	CySysClkWcoStart:
 366              	.LFB6:
 354:.\Generated_Source\PSoC4/CyLFClk.c **** 
 355:.\Generated_Source\PSoC4/CyLFClk.c **** 
 356:.\Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 357:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 358:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkIloEnabled
 359:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 360:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 361:.\Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 362:.\Generated_Source\PSoC4/CyLFClk.c ****     * Reports the ILO enable state.
 363:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 364:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return
 365:.\Generated_Source\PSoC4/CyLFClk.c ****     * 1 if ILO is enabled, and 0 if ILO is disabled.
 366:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 367:.\Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 368:.\Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************/
 369:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void)
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 14


 370:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 371:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal to 0 */
 372:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_ILO_CONFIG_REG & (uint32)(CY_SYS_CLK_ILO_CONFIG_ENABLE))) ?
 373:.\Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
 374:.\Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 0u);
 375:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 376:.\Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
 377:.\Generated_Source\PSoC4/CyLFClk.c **** 
 378:.\Generated_Source\PSoC4/CyLFClk.c **** 
 379:.\Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 380:.\Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 381:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloTrim
 382:.\Generated_Source\PSoC4/CyLFClk.c **** *****************************************************************************//**
 383:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief
 384:.\Generated_Source\PSoC4/CyLFClk.c **** * The API trims the ILO frequency to +/- 10% accuracy range using accurate 
 385:.\Generated_Source\PSoC4/CyLFClk.c **** * SysClk.
 386:.\Generated_Source\PSoC4/CyLFClk.c **** *
 387:.\Generated_Source\PSoC4/CyLFClk.c **** * The API can be blocking or non-blocking depending on the value of the mode 
 388:.\Generated_Source\PSoC4/CyLFClk.c **** * parameter passed. The accuracy of ILO after trimming in parts per thousand 
 389:.\Generated_Source\PSoC4/CyLFClk.c **** * is returned through the iloAccuracyInPPT pointer. A positive number indicates 
 390:.\Generated_Source\PSoC4/CyLFClk.c **** * that the ILO is running fast and a negative number indicates that the ILO is 
 391:.\Generated_Source\PSoC4/CyLFClk.c **** * running slowly. This error is relative to the error in the reference clock 
 392:.\Generated_Source\PSoC4/CyLFClk.c **** * (SysClk), so the absolute error will be higher and depends on the accuracy 
 393:.\Generated_Source\PSoC4/CyLFClk.c **** * of the reference.
 394:.\Generated_Source\PSoC4/CyLFClk.c **** *
 395:.\Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to calling this 
 396:.\Generated_Source\PSoC4/CyLFClk.c **** * API. Otherwise it will return CYRET_INVALID_STATE as the measurement was not 
 397:.\Generated_Source\PSoC4/CyLFClk.c **** * started.
 398:.\Generated_Source\PSoC4/CyLFClk.c **** *
 399:.\Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 400:.\Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 401:.\Generated_Source\PSoC4/CyLFClk.c **** *
 402:.\Generated_Source\PSoC4/CyLFClk.c **** * \note If System clock frequency is changed in runtime, the CyDelayFreq() 
 403:.\Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 404:.\Generated_Source\PSoC4/CyLFClk.c **** * called before next CySysClkIloCompensate() usage.
 405:.\Generated_Source\PSoC4/CyLFClk.c **** *
 406:.\Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS
 407:.\Generated_Source\PSoC4/CyLFClk.c **** * or CYRET_TIMEOUT.
 408:.\Generated_Source\PSoC4/CyLFClk.c **** *
 409:.\Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices with ILO trim capability. This excludes 
 410:.\Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4000 / PSoC 4100 / PSoC 4200 / PSoC 4000S / PSoC 4100S / 
 411:.\Generated_Source\PSoC4/CyLFClk.c **** * Analog Coprocessor devices.
 412:.\Generated_Source\PSoC4/CyLFClk.c **** *
 413:.\Generated_Source\PSoC4/CyLFClk.c **** * \param mode
 414:.\Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_BLOCKING -  The function does not return until the ILO is 
 415:.\Generated_Source\PSoC4/CyLFClk.c **** * within +/-10% accuracy range or time out has occurred.<br>
 416:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_NON_BLOCKING - The function returns immediately after 
 417:.\Generated_Source\PSoC4/CyLFClk.c **** * performing a single iteration of the trim process. The function should be 
 418:.\Generated_Source\PSoC4/CyLFClk.c **** * called repeatedly until the trimming is completed successfully.
 419:.\Generated_Source\PSoC4/CyLFClk.c **** *
 420:.\Generated_Source\PSoC4/CyLFClk.c **** * \param *iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 421:.\Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned.
 422:.\Generated_Source\PSoC4/CyLFClk.c **** *
 423:.\Generated_Source\PSoC4/CyLFClk.c **** * \details The value returned in *iloAccuracyInPPT pointer is not valid 
 424:.\Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. ILO accuracy in PPT is given by:
 425:.\Generated_Source\PSoC4/CyLFClk.c **** *
 426:.\Generated_Source\PSoC4/CyLFClk.c **** * IloAccuracyInPPT = ((MeasuredIloFreq - DesiredIloFreq) * 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 15


 427:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_PERTHOUSAND) / DesiredIloFreq);
 428:.\Generated_Source\PSoC4/CyLFClk.c **** *
 429:.\Generated_Source\PSoC4/CyLFClk.c **** * DesiredIloFreq  = 32000, CY_SYS_CLK_PERTHOUSAND = 1000;
 430:.\Generated_Source\PSoC4/CyLFClk.c **** *
 431:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates trimming is complete. This value indicates 
 432:.\Generated_Source\PSoC4/CyLFClk.c **** * trimming is successful and iloAccuracyInPPT is within +/- 10%.
 433:.\Generated_Source\PSoC4/CyLFClk.c **** *
 434:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. This is applicable 
 435:.\Generated_Source\PSoC4/CyLFClk.c **** * only for non-blocking mode.
 436:.\Generated_Source\PSoC4/CyLFClk.c **** *
 437:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful. You should 
 438:.\Generated_Source\PSoC4/CyLFClk.c **** * call CySysClkIloStartMeasurement() before calling this API.
 439:.\Generated_Source\PSoC4/CyLFClk.c **** *
 440:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_TIMEOUT - Indicates trimming was unsuccessful. This is applicable 
 441:.\Generated_Source\PSoC4/CyLFClk.c **** * only for blocking mode. Timeout means the trimming was tried 5 times without 
 442:.\Generated_Source\PSoC4/CyLFClk.c **** * success (i.e. ILO accuracy > +/- 10%). The user can call the API again for 
 443:.\Generated_Source\PSoC4/CyLFClk.c **** * another try or wait for some time before calling it again (to let the system 
 444:.\Generated_Source\PSoC4/CyLFClk.c **** * to settle to another operating point change in temperature etc.) and continue 
 445:.\Generated_Source\PSoC4/CyLFClk.c **** * using the previous trim value till the next call.
 446:.\Generated_Source\PSoC4/CyLFClk.c **** *
 447:.\Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 448:.\Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloTrim(uint32 mode, int32* iloAccuracyInPPT)
 449:.\Generated_Source\PSoC4/CyLFClk.c **** {
 450:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 timeOutClocks = CY_SYS_CLK_TIMEOUT;
 451:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 waitUntilCntr1Stops;
 452:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 453:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 454:.\Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 455:.\Generated_Source\PSoC4/CyLFClk.c **** 
 456:.\Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 457:.\Generated_Source\PSoC4/CyLFClk.c **** 
 458:.\Generated_Source\PSoC4/CyLFClk.c ****     /* Check if DFT and CTRL registers were configures in CySysStartMeasurement*/
 459:.\Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) &&
 460:.\Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 461:.\Generated_Source\PSoC4/CyLFClk.c ****        (iloAccuracyInPPT != NULL))
 462:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 463:.\Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_BLOCKING == mode)
 464:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 465:.\Generated_Source\PSoC4/CyLFClk.c ****             waitUntilCntr1Stops = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 466:.\Generated_Source\PSoC4/CyLFClk.c ****             do
 467:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 468:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for measuring cycle*/
 469:.\Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER; 
 470:.\Generated_Source\PSoC4/CyLFClk.c **** 
 471:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait until counter CNTR 1 will finish down-counting */
 472:.\Generated_Source\PSoC4/CyLFClk.c ****                 while (0u == (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 473:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 474:.\Generated_Source\PSoC4/CyLFClk.c ****                     waitUntilCntr1Stops--;
 475:.\Generated_Source\PSoC4/CyLFClk.c ****                     if (0u == waitUntilCntr1Stops)
 476:.\Generated_Source\PSoC4/CyLFClk.c ****                     {
 477:.\Generated_Source\PSoC4/CyLFClk.c ****                         break;
 478:.\Generated_Source\PSoC4/CyLFClk.c ****                     }
 479:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 480:.\Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 481:.\Generated_Source\PSoC4/CyLFClk.c ****                 timeOutClocks--;
 482:.\Generated_Source\PSoC4/CyLFClk.c **** 
 483:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Untill ILO accuracy will be in range less than +/- 10% or timeout occurs*/
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 16


 484:.\Generated_Source\PSoC4/CyLFClk.c ****             } while((CYRET_SUCCESS != trimRunningStatus) && 
 485:.\Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 486:.\Generated_Source\PSoC4/CyLFClk.c ****                                (0u != timeOutClocks));
 487:.\Generated_Source\PSoC4/CyLFClk.c **** 
 488:.\Generated_Source\PSoC4/CyLFClk.c ****             if (CYRET_SUCCESS == trimRunningStatus)
 489:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 490:.\Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_SUCCESS;
 491:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 492:.\Generated_Source\PSoC4/CyLFClk.c ****             else
 493:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 494:.\Generated_Source\PSoC4/CyLFClk.c ****                 if(0u == timeOutClocks)
 495:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 496:.\Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 497:.\Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_TIMEOUT;
 498:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 499:.\Generated_Source\PSoC4/CyLFClk.c ****                 else
 500:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 501:.\Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_INVALID_STATE;
 502:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 503:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 504:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 505:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Non - blocking mode */
 506:.\Generated_Source\PSoC4/CyLFClk.c ****         else
 507:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 508:.\Generated_Source\PSoC4/CyLFClk.c ****             if (CY_SYS_CLK_TRIM_OR_COMP_FINISHED != trimRunningStatus)
 509:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 510:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Checking if the counter CNTR 1 finished down-counting */
 511:.\Generated_Source\PSoC4/CyLFClk.c ****                 if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 512:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 513:.\Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 514:.\Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 515:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 516:.\Generated_Source\PSoC4/CyLFClk.c ****                 else
 517:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 518:.\Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_STARTED;
 519:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 520:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 521:.\Generated_Source\PSoC4/CyLFClk.c ****             else
 522:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 523:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for next measuring */
 524:.\Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 525:.\Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 526:.\Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 527:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 528:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 529:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 530:.\Generated_Source\PSoC4/CyLFClk.c ****     else
 531:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 532:.\Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 533:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 534:.\Generated_Source\PSoC4/CyLFClk.c **** 
 535:.\Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 536:.\Generated_Source\PSoC4/CyLFClk.c **** }
 537:.\Generated_Source\PSoC4/CyLFClk.c **** 
 538:.\Generated_Source\PSoC4/CyLFClk.c **** 
 539:.\Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 540:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloUpdateTrimReg
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 17


 541:.\Generated_Source\PSoC4/CyLFClk.c **** *********************************************************************************
 542:.\Generated_Source\PSoC4/CyLFClk.c **** *
 543:.\Generated_Source\PSoC4/CyLFClk.c **** * \internal
 544:.\Generated_Source\PSoC4/CyLFClk.c **** * Function calculates ILO accuracy and check is error range is higher than 
 545:.\Generated_Source\PSoC4/CyLFClk.c **** * +/- 10%. If Measured frequency is higher than +/- 10% function updates 
 546:.\Generated_Source\PSoC4/CyLFClk.c **** * ILO Trim register.
 547:.\Generated_Source\PSoC4/CyLFClk.c **** *
 548:.\Generated_Source\PSoC4/CyLFClk.c **** * \param
 549:.\Generated_Source\PSoC4/CyLFClk.c **** * iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 550:.\Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned. The value returned in this pointer is not valid 
 551:.\Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. If ILO frequency error is lower 
 552:.\Generated_Source\PSoC4/CyLFClk.c **** * than +/- 10% then the value returned in this pointer will be updated.
 553:.\Generated_Source\PSoC4/CyLFClk.c **** *
 554:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates that ILO frequency error is lower than 
 555:.\Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and no actions are required.
 556:.\Generated_Source\PSoC4/CyLFClk.c **** *
 557:.\Generated_Source\PSoC4/CyLFClk.c **** * \return  CYRET_STARTED - Indicates that ILO frequency error is higher than 
 558:.\Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and ILO Trim register was updated.
 559:.\Generated_Source\PSoC4/CyLFClk.c **** *
 560:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful.
 561:.\Generated_Source\PSoC4/CyLFClk.c **** *
 562:.\Generated_Source\PSoC4/CyLFClk.c **** * Post #1 - To obtain 10% ILO accuracy the calculated accuracy should be equal 
 563:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_ERROR_RANGE = 5.6%. Error value should take to account IMO error of 
 564:.\Generated_Source\PSoC4/CyLFClk.c **** * +/-2% (+/-0.64kHz), trim step of 2.36kHz (+/-1.18kHz) and error while ILO 
 565:.\Generated_Source\PSoC4/CyLFClk.c **** * frequency measuring.
 566:.\Generated_Source\PSoC4/CyLFClk.c **** *
 567:.\Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 568:.\Generated_Source\PSoC4/CyLFClk.c **** *
 569:.\Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 570:.\Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT)
 571:.\Generated_Source\PSoC4/CyLFClk.c **** {
 572:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 measuredIloFreq;
 573:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 currentIloTrimValue;
 574:.\Generated_Source\PSoC4/CyLFClk.c ****     int32 iloAccuracyValue;
 575:.\Generated_Source\PSoC4/CyLFClk.c ****     int32 trimStep;
 576:.\Generated_Source\PSoC4/CyLFClk.c ****     cystatus errorRangeStatus;
 577:.\Generated_Source\PSoC4/CyLFClk.c **** 
 578:.\Generated_Source\PSoC4/CyLFClk.c ****     if(0u != CY_SYS_CNT_REG2_REG)
 579:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 580:.\Generated_Source\PSoC4/CyLFClk.c ****         measuredIloFreq = (CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_SYS_
 581:.\Generated_Source\PSoC4/CyLFClk.c **** 
 582:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Calculate value of error in PPT according to formula - 
 583:.\Generated_Source\PSoC4/CyLFClk.c ****         *       ((measuredIlofrequency - iloDesired freaquency) * 1000 / iloDesired freaquency) */
 584:.\Generated_Source\PSoC4/CyLFClk.c ****         iloAccuracyValue = (((int32) measuredIloFreq - (int32) CY_SYS_CLK_ILO_DESIRED_FREQ_HZ) * \
 585:.\Generated_Source\PSoC4/CyLFClk.c ****                             ((int32) CY_SYS_CLK_PERTHOUSAND)) / ((int32) CY_SYS_CLK_ILO_DESIRED_FRE
 586:.\Generated_Source\PSoC4/CyLFClk.c **** 
 587:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Check if ILO accuracy is more than +/- CY_SYS_CLK_ERROR_RANGE. See post #1 of API descri
 588:.\Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_ERROR_RANGE < (uint32) (CY_SYS_CLK_ABS_MACRO(iloAccuracyValue)))
 589:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 590:.\Generated_Source\PSoC4/CyLFClk.c ****             if (0 < iloAccuracyValue)
 591:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 592:.\Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) + 
 593:.\Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 594:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 595:.\Generated_Source\PSoC4/CyLFClk.c ****             else
 596:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 597:.\Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) - 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 18


 598:.\Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 599:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 600:.\Generated_Source\PSoC4/CyLFClk.c ****             currentIloTrimValue = (CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK);
 601:.\Generated_Source\PSoC4/CyLFClk.c ****             trimStep = (int32) currentIloTrimValue - trimStep;
 602:.\Generated_Source\PSoC4/CyLFClk.c **** 
 603:.\Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep > CY_SYS_CLK_FOURBITS_MAX)
 604:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 605:.\Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = CY_SYS_CLK_FOURBITS_MAX;
 606:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 607:.\Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep < 0)
 608:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 609:.\Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = 0;
 610:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 611:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = (CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MASK
 612:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 613:.\Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_STARTED;
 614:.\Generated_Source\PSoC4/CyLFClk.c ****         } /* Else return success because error is in +/- 10% range*/
 615:.\Generated_Source\PSoC4/CyLFClk.c ****         else
 616:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 617:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Write trimmed ILO accuracy through pointer. */
 618:.\Generated_Source\PSoC4/CyLFClk.c ****             *iloAccuracyInPPT = iloAccuracyValue;
 619:.\Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_SUCCESS;
 620:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 621:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 622:.\Generated_Source\PSoC4/CyLFClk.c ****     else
 623:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 624:.\Generated_Source\PSoC4/CyLFClk.c ****         errorRangeStatus = CYRET_INVALID_STATE;
 625:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 626:.\Generated_Source\PSoC4/CyLFClk.c **** return (errorRangeStatus);
 627:.\Generated_Source\PSoC4/CyLFClk.c **** }
 628:.\Generated_Source\PSoC4/CyLFClk.c **** 
 629:.\Generated_Source\PSoC4/CyLFClk.c **** 
 630:.\Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 631:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloRestoreFactoryTrim
 632:.\Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 633:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief
 634:.\Generated_Source\PSoC4/CyLFClk.c **** * Restores the ILO Trim Register to factory value.
 635:.\Generated_Source\PSoC4/CyLFClk.c **** *
 636:.\Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to 
 637:.\Generated_Source\PSoC4/CyLFClk.c **** * calling this API. Otherwise CYRET_UNKNOWN will be returned.
 638:.\Generated_Source\PSoC4/CyLFClk.c **** *
 639:.\Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices except for PSoC 4000 / PSoC 4100 / PSoC 4200 
 640:.\Generated_Source\PSoC4/CyLFClk.c **** * / PSoC 4000S / PSoC 4100S / Analog Coprocessor devices.
 641:.\Generated_Source\PSoC4/CyLFClk.c **** *
 642:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Operation was successful. 
 643:.\Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_UNKNOWN - CySysClkIloStartMeasurement() was not called 
 644:.\Generated_Source\PSoC4/CyLFClk.c **** * before this API. Hence the trim value cannot be updated.
 645:.\Generated_Source\PSoC4/CyLFClk.c **** *
 646:.\Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 647:.\Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloRestoreFactoryTrim(void)
 648:.\Generated_Source\PSoC4/CyLFClk.c **** {
 649:.\Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus = CYRET_SUCCESS;
 650:.\Generated_Source\PSoC4/CyLFClk.c **** 
 651:.\Generated_Source\PSoC4/CyLFClk.c ****     /* Check was defaultIloTrimRegValue modified in CySysClkIloStartMeasurement */
 652:.\Generated_Source\PSoC4/CyLFClk.c ****     if(CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE != defaultIloTrimRegValue)
 653:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 654:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = ((CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MAS
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 19


 655:.\Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
 656:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 657:.\Generated_Source\PSoC4/CyLFClk.c ****         else
 658:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 659:.\Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_UNKNOWN;
 660:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 661:.\Generated_Source\PSoC4/CyLFClk.c **** 
 662:.\Generated_Source\PSoC4/CyLFClk.c ****         return (returnStatus);
 663:.\Generated_Source\PSoC4/CyLFClk.c **** }
 664:.\Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 665:.\Generated_Source\PSoC4/CyLFClk.c **** 
 666:.\Generated_Source\PSoC4/CyLFClk.c **** 
 667:.\Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
 668:.\Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 669:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkGetLfclkSource
 670:.\Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
 671:.\Generated_Source\PSoC4/CyLFClk.c **** *
 672:.\Generated_Source\PSoC4/CyLFClk.c **** * \internal
 673:.\Generated_Source\PSoC4/CyLFClk.c **** *  Gets the clock source for the LFCLK clock.
 674:.\Generated_Source\PSoC4/CyLFClk.c **** *  The function is applicable only for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M /
 675:.\Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M / PSoC 4200L.
 676:.\Generated_Source\PSoC4/CyLFClk.c **** *
 677:.\Generated_Source\PSoC4/CyLFClk.c **** * \return The LFCLK source:
 678:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
 679:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
 680:.\Generated_Source\PSoC4/CyLFClk.c **** *
 681:.\Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 682:.\Generated_Source\PSoC4/CyLFClk.c **** *
 683:.\Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 684:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void)
 685:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 686:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 lfclkSource;
 687:.\Generated_Source\PSoC4/CyLFClk.c ****         lfclkSource = CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK;
 688:.\Generated_Source\PSoC4/CyLFClk.c ****         return (lfclkSource);
 689:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 690:.\Generated_Source\PSoC4/CyLFClk.c **** 
 691:.\Generated_Source\PSoC4/CyLFClk.c ****     
 692:.\Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 693:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkSetLfclkSource
 694:.\Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 695:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief
 696:.\Generated_Source\PSoC4/CyLFClk.c **** *  Sets the clock source for the LFCLK clock.
 697:.\Generated_Source\PSoC4/CyLFClk.c **** *
 698:.\Generated_Source\PSoC4/CyLFClk.c **** * The switch between LFCLK sources must be done between the positive edges of
 699:.\Generated_Source\PSoC4/CyLFClk.c **** * LFCLK, because the glitch risk is around the LFCLK positive edge. To ensure
 700:.\Generated_Source\PSoC4/CyLFClk.c **** * that the switch can be done safely, the WDT counter value is read until it
 701:.\Generated_Source\PSoC4/CyLFClk.c **** * changes.
 702:.\Generated_Source\PSoC4/CyLFClk.c **** *
 703:.\Generated_Source\PSoC4/CyLFClk.c **** * That means that the positive edge just finished and the switch is performed.
 704:.\Generated_Source\PSoC4/CyLFClk.c **** * The enabled WDT counter is used for that purpose. If no counters are enabled,
 705:.\Generated_Source\PSoC4/CyLFClk.c **** * counter 0 is enabled. And after the LFCLK source is switched, counter 0
 706:.\Generated_Source\PSoC4/CyLFClk.c **** * configuration is restored.
 707:.\Generated_Source\PSoC4/CyLFClk.c **** *
 708:.\Generated_Source\PSoC4/CyLFClk.c **** *  The function is applicable only for devices with more than one source for 
 709:.\Generated_Source\PSoC4/CyLFClk.c **** * LFCLK - PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M / PSoC 4200L.
 710:.\Generated_Source\PSoC4/CyLFClk.c **** *
 711:.\Generated_Source\PSoC4/CyLFClk.c **** * \note For PSoC 4000S / PSoC 4100S / Analog Coprocessor devices LFCLK can only 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 20


 712:.\Generated_Source\PSoC4/CyLFClk.c **** * be sourced from ILO even though WCO is available.
 713:.\Generated_Source\PSoC4/CyLFClk.c **** *
 714:.\Generated_Source\PSoC4/CyLFClk.c **** * \param
 715:.\Generated_Source\PSoC4/CyLFClk.c **** * source
 716:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_ILO - Internal Low Frequency (32 kHz) 
 717:.\Generated_Source\PSoC4/CyLFClk.c **** * Oscillator (ILO).<br>
 718:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_WCO - Low Frequency Watch Crystal Oscillator (WCO).
 719:.\Generated_Source\PSoC4/CyLFClk.c **** *
 720:.\Generated_Source\PSoC4/CyLFClk.c **** * \details
 721:.\Generated_Source\PSoC4/CyLFClk.c **** * This function has no effect if WDT is locked (CySysWdtLock() is called). 
 722:.\Generated_Source\PSoC4/CyLFClk.c **** * Call CySysWdtUnlock() to unlock WDT.
 723:.\Generated_Source\PSoC4/CyLFClk.c **** *
 724:.\Generated_Source\PSoC4/CyLFClk.c **** * Both the current source and the new source must be running and stable before
 725:.\Generated_Source\PSoC4/CyLFClk.c **** * calling this function.
 726:.\Generated_Source\PSoC4/CyLFClk.c **** *
 727:.\Generated_Source\PSoC4/CyLFClk.c **** * Changing the LFCLK clock source may change the LFCLK clock frequency and
 728:.\Generated_Source\PSoC4/CyLFClk.c **** * affect the functionality that uses this clock. For example, watchdog timer
 729:.\Generated_Source\PSoC4/CyLFClk.c **** * "uses this clock" or "this clock uses" (WDT) is clocked by LFCLK.
 730:.\Generated_Source\PSoC4/CyLFClk.c **** *
 731:.\Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 732:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetLfclkSource(uint32 source)
 733:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 734:.\Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 735:.\Generated_Source\PSoC4/CyLFClk.c **** 
 736:.\Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetLfclkSource() != source)
 737:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 738:.\Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
 739:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeCatch();
 740:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 741:.\Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_LFCLK_SEL_MASK);
 742:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeRestore();
 743:.\Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 744:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 745:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 746:.\Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
 747:.\Generated_Source\PSoC4/CyLFClk.c **** 
 748:.\Generated_Source\PSoC4/CyLFClk.c **** 
 749:.\Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO)
 750:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 751:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStart
 752:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 753:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 754:.\Generated_Source\PSoC4/CyLFClk.c ****     *  Enables Watch Crystal Oscillator (WCO).
 755:.\Generated_Source\PSoC4/CyLFClk.c ****     * 
 756:.\Generated_Source\PSoC4/CyLFClk.c ****     * This API enables WCO which is used as a source for LFCLK.  Similar to ILO, 
 757:.\Generated_Source\PSoC4/CyLFClk.c ****     * WCO is also available in all modes except Hibernate and Stop modes.
 758:.\Generated_Source\PSoC4/CyLFClk.c ****     * \note In PSoC PSoC 4000S / PSoC 4100S / Analog Coprocessor devices
 759:.\Generated_Source\PSoC4/CyLFClk.c ****     * WCO cannot be a source for the LFCLK. 
 760:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 761:.\Generated_Source\PSoC4/CyLFClk.c ****     *  WCO is always enabled in High Power Mode (HPM). Refer to the device
 762:.\Generated_Source\PSoC4/CyLFClk.c ****     *  datasheet for the  WCO startup time. Once WCO becomes stable it can be
 763:.\Generated_Source\PSoC4/CyLFClk.c ****     *  switched to Low Power Mode (LPM). Note that oscillator can be unstable
 764:.\Generated_Source\PSoC4/CyLFClk.c ****     *  during a switch and hence its output should not be used at that moment.
 765:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 766:.\Generated_Source\PSoC4/CyLFClk.c ****     *  The CySysClkWcoSetPowerMode() function configures the WCO power mode.
 767:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 768:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 21


 769:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoStart(void)
 770:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 367              		.loc 1 770 0
 368              		.cfi_startproc
 369 0000 10B5     		push	{r4, lr}
 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 4, -8
 372              		.cfi_offset 14, -4
 373              	.LBB4:
 374              	.LBB5:
 375              		.file 2 ".\\Generated_Source\\PSoC4\\CyLFClk.h"
   1:.\Generated_Source\PSoC4/CyLFClk.h **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/CyLFClk.h **** * \file .c
   3:.\Generated_Source\PSoC4/CyLFClk.h **** * \version 1.10
   4:.\Generated_Source\PSoC4/CyLFClk.h **** *
   5:.\Generated_Source\PSoC4/CyLFClk.h **** * \brief
   6:.\Generated_Source\PSoC4/CyLFClk.h **** *  This file provides the source code to API for the lfclk and wdt.
   7:.\Generated_Source\PSoC4/CyLFClk.h **** *
   8:.\Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************
   9:.\Generated_Source\PSoC4/CyLFClk.h **** * \copyright
  10:.\Generated_Source\PSoC4/CyLFClk.h **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:.\Generated_Source\PSoC4/CyLFClk.h **** * You may use this file only in accordance with the license, terms, conditions,
  12:.\Generated_Source\PSoC4/CyLFClk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  13:.\Generated_Source\PSoC4/CyLFClk.h **** * the software package with which this file was provided.
  14:.\Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
  15:.\Generated_Source\PSoC4/CyLFClk.h **** 
  16:.\Generated_Source\PSoC4/CyLFClk.h **** 
  17:.\Generated_Source\PSoC4/CyLFClk.h **** #if !defined(CY_LFCLK_CYLIB_H)
  18:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_LFCLK_CYLIB_H
  19:.\Generated_Source\PSoC4/CyLFClk.h **** 
  20:.\Generated_Source\PSoC4/CyLFClk.h **** #include "cytypes.h"
  21:.\Generated_Source\PSoC4/CyLFClk.h **** #include "cydevice_trm.h"
  22:.\Generated_Source\PSoC4/CyLFClk.h **** 
  23:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_IP_WCO_WDT_EN           (-1 == 1)
  24:.\Generated_Source\PSoC4/CyLFClk.h **** 
  25:.\Generated_Source\PSoC4/CyLFClk.h **** 
  26:.\Generated_Source\PSoC4/CyLFClk.h **** typedef enum
  27:.\Generated_Source\PSoC4/CyLFClk.h **** {
  28:.\Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_WAIT = 0u,
  29:.\Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_INTERRUPT = 1u
  30:.\Generated_Source\PSoC4/CyLFClk.h **** } cy_sys_timer_delaytype_enum;
  31:.\Generated_Source\PSoC4/CyLFClk.h **** 
  32:.\Generated_Source\PSoC4/CyLFClk.h **** 
  33:.\Generated_Source\PSoC4/CyLFClk.h **** /***************************************
  34:.\Generated_Source\PSoC4/CyLFClk.h **** *    Function Prototypes
  35:.\Generated_Source\PSoC4/CyLFClk.h **** ***************************************/
  36:.\Generated_Source\PSoC4/CyLFClk.h **** /**
  37:.\Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_general
  38:.\Generated_Source\PSoC4/CyLFClk.h **** * @{
  39:.\Generated_Source\PSoC4/CyLFClk.h **** */
  40:.\Generated_Source\PSoC4/CyLFClk.h **** /* Clocks API */
  41:.\Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStart(void);
  42:.\Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStop(void);
  43:.\Generated_Source\PSoC4/CyLFClk.h **** /** @} general */
  44:.\Generated_Source\PSoC4/CyLFClk.h **** 
  45:.\Generated_Source\PSoC4/CyLFClk.h **** /**
  46:.\Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_compensate
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 22


  47:.\Generated_Source\PSoC4/CyLFClk.h **** * @{
  48:.\Generated_Source\PSoC4/CyLFClk.h **** */
  49:.\Generated_Source\PSoC4/CyLFClk.h **** cystatus CySysClkIloCompensate(uint32 desiredDelay, uint32 *compensatedCycles);
  50:.\Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStartMeasurement(void);
  51:.\Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStopMeasurement(void);
  52:.\Generated_Source\PSoC4/CyLFClk.h **** /** @} compensate */
  53:.\Generated_Source\PSoC4/CyLFClk.h **** 
  54:.\Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
  55:.\Generated_Source\PSoC4/CyLFClk.h **** /**
  56:.\Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_trim
  57:.\Generated_Source\PSoC4/CyLFClk.h **** * @{
  58:.\Generated_Source\PSoC4/CyLFClk.h **** */
  59:.\Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloTrim(uint32 mode, int32 *iloAccuracyInPPT);
  60:.\Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloRestoreFactoryTrim(void);
  61:.\Generated_Source\PSoC4/CyLFClk.h **** /** @} trim */
  62:.\Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT);
  63:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
  64:.\Generated_Source\PSoC4/CyLFClk.h **** 
  65:.\Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
  66:.\Generated_Source\PSoC4/CyLFClk.h **** /**
  67:.\Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_wco
  68:.\Generated_Source\PSoC4/CyLFClk.h **** * @{
  69:.\Generated_Source\PSoC4/CyLFClk.h **** */
  70:.\Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkSetLfclkSource(uint32 source);
  71:.\Generated_Source\PSoC4/CyLFClk.h **** /** @} wco */
  72:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
  73:.\Generated_Source\PSoC4/CyLFClk.h **** 
  74:.\Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
  75:.\Generated_Source\PSoC4/CyLFClk.h **** /**
  76:.\Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_wco
  77:.\Generated_Source\PSoC4/CyLFClk.h **** * @{
  78:.\Generated_Source\PSoC4/CyLFClk.h **** */
  79:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStart(void);
  80:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStop(void);
  81:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoSetPowerMode(uint32 mode);
  82:.\Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkWcoClockOutSelect(uint32 clockSel);
  83:.\Generated_Source\PSoC4/CyLFClk.h **** /** @} wco */
  84:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoEnabled(void);
  85:.\Generated_Source\PSoC4/CyLFClk.h **** 
  86:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
  87:.\Generated_Source\PSoC4/CyLFClk.h **** 
  88:.\Generated_Source\PSoC4/CyLFClk.h **** typedef void (*cyWdtCallback)(void);
  89:.\Generated_Source\PSoC4/CyLFClk.h **** 
  90:.\Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  91:.\Generated_Source\PSoC4/CyLFClk.h **** 
  92:.\Generated_Source\PSoC4/CyLFClk.h ****     typedef void (*cyTimerCallback)(void);
  93:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
  94:.\Generated_Source\PSoC4/CyLFClk.h **** 
  95:.\Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
  96:.\Generated_Source\PSoC4/CyLFClk.h **** /**
  97:.\Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_wdtsrssv2
  98:.\Generated_Source\PSoC4/CyLFClk.h **** * @{
  99:.\Generated_Source\PSoC4/CyLFClk.h **** */
 100:.\Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 101:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtLock(void);
 102:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnlock(void);
 103:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMode(uint32 counterNum, uint32 mode);
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 23


 104:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMode(uint32 counterNum);
 105:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum);
 106:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable);
 107:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum);
 108:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(uint32 counterMask);
 109:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(uint32 counterMask);
 110:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetCascade(uint32 cascadeMask);
 111:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCascade(void);
 112:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 counterNum, uint32 match);
 113:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetToggleBit(uint32 bits);
 114:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetToggleBit(void);
 115:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(uint32 counterNum);
 116:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(uint32 counterNum);
 117:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetInterruptSource(void);
 118:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(uint32 counterMask);
 119:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtResetCounters(uint32 countersMask);
 120:.\Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function);
 121:.\Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtGetInterruptCallback(uint32 counterNum);
 122:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 123:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 124:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWatchdogFeed(uint32 counterNum);
 125:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnableCounterIsr(uint32 counterNum);
 126:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisableCounterIsr(uint32 counterNum);
 127:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 128:.\Generated_Source\PSoC4/CyLFClk.h **** /** @} wdtsrssv2 */
 129:.\Generated_Source\PSoC4/CyLFClk.h **** #else
 130:.\Generated_Source\PSoC4/CyLFClk.h **** /**
 131:.\Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_wdtsrsslite
 132:.\Generated_Source\PSoC4/CyLFClk.h **** * @{
 133:.\Generated_Source\PSoC4/CyLFClk.h **** */
 134:.\Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 135:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(void);
 136:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(void);
 137:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(void);
 138:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 match);
 139:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(void);
 140:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(void);
 141:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetIgnoreBits(uint32 bitsNum);
 142:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetIgnoreBits(void);
 143:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(void);
 144:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtMaskInterrupt(void);
 145:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnmaskInterrupt(void);
 146:.\Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function);
 147:.\Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtGetInterruptCallback(void);
 148:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 149:.\Generated_Source\PSoC4/CyLFClk.h **** /** @} wdtsrsslite*/
 150:.\Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 151:.\Generated_Source\PSoC4/CyLFClk.h **** 
 152:.\Generated_Source\PSoC4/CyLFClk.h **** 
 153:.\Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 154:.\Generated_Source\PSoC4/CyLFClk.h **** /**
 155:.\Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_wcowdt
 156:.\Generated_Source\PSoC4/CyLFClk.h **** * @{
 157:.\Generated_Source\PSoC4/CyLFClk.h **** */
 158:.\Generated_Source\PSoC4/CyLFClk.h ****     /* WCO WDT APIs */
 159:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkSetTimerSource(uint32 source);
 160:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMode(uint32 counterNum, uint32 mode);
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 24


 161:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMode(uint32 counterNum);
 162:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum);
 163:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable);
 164:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum);
 165:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnable(uint32 counterMask);
 166:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisable(uint32 counterMask);
 167:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetCascade(uint32 cascadeMask);
 168:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCascade(void);
 169:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMatch(uint32 counterNum, uint32 match);
 170:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetToggleBit(uint32 bits);
 171:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetToggleBit(void);
 172:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMatch(uint32 counterNum);
 173:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCount(uint32 counterNum);
 174:.\Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetInterruptSource(void);
 175:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerClearInterrupt(uint32 counterMask);
 176:.\Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function);
 177:.\Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum);
 178:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 179:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 180:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerResetCounters(uint32 countersMask);
 181:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnableIsr(uint32 counterNum);
 182:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisableIsr(uint32 counterNum);
 183:.\Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerIsr(void);
 184:.\Generated_Source\PSoC4/CyLFClk.h **** /** @} wdtsrsslite*/
 185:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 186:.\Generated_Source\PSoC4/CyLFClk.h **** 
 187:.\Generated_Source\PSoC4/CyLFClk.h **** 
 188:.\Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 189:.\Generated_Source\PSoC4/CyLFClk.h **** * API Constants
 190:.\Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 191:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_UINT16_MAX_VAL    (0xFFFFu)
 192:.\Generated_Source\PSoC4/CyLFClk.h **** 
 193:.\Generated_Source\PSoC4/CyLFClk.h **** 
 194:.\Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 195:.\Generated_Source\PSoC4/CyLFClk.h **** * Clock API Constants
 196:.\Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 197:.\Generated_Source\PSoC4/CyLFClk.h **** 
 198:.\Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloStart()/CySysClkIloStop() - implementation definitions */
 199:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_ENABLE                    ((uint32)(( uint32 )0x01u << 31u))
 200:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK              ((uint32)(( uint32 )0x0fu << 8u ))
 201:.\Generated_Source\PSoC4/CyLFClk.h **** 
 202:.\Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - one ILO clock in uS multiplied on thousand */
 203:.\Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 204:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x0C35u))
 205:.\Generated_Source\PSoC4/CyLFClk.h **** #else
 206:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x09C4u))
 207:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 208:.\Generated_Source\PSoC4/CyLFClk.h **** 
 209:.\Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - implementation definitions */
 210:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK             ((uint32)(( uint32 )0x01u << 31u))
 211:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_DFT_LSB_MASK                     ((uint32)(0x00000FFFu))
 212:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_STARTED                 (1u)
 213:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_FINISHED                (0u)
 214:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_COEF_PHUNDRED                        ((uint32) (0x64u))
 215:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_CLOCK                        ((uint32) ((uint32) CY_SYS_CLK_ILO_PERIOD_P
 216:.\Generated_Source\PSoC4/CyLFClk.h **** 
 217:.\Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - maximum value of desiredDelay argument */
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 25


 218:.\Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 219:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0xEE6B2800u))
 220:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD                       ((uint32) (0x1Fu))
 221:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) 5u)
 222:.\Generated_Source\PSoC4/CyLFClk.h **** #else
 223:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0x1E8480u))
 224:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) (0x28u ))
 225:.\Generated_Source\PSoC4/CyLFClk.h **** 
 226:.\Generated_Source\PSoC4/CyLFClk.h **** 
 227:.\Generated_Source\PSoC4/CyLFClk.h **** /**********************************************************************************
 228:.\Generated_Source\PSoC4/CyLFClk.h **** * CySysClkIloCompensate() - value to walk over oversamling in calculations with srsslite.
 229:.\Generated_Source\PSoC4/CyLFClk.h **** * The oversample can be obtained when ilo frequency in equal 80 KHz and desired clocks 
 230:.\Generated_Source\PSoC4/CyLFClk.h **** * are 80 000 clocks.
 231:.\Generated_Source\PSoC4/CyLFClk.h **** **********************************************************************************/
 232:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_MAX_LITE_NUMBER                     ((uint32) 53600u)
 233:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 234:.\Generated_Source\PSoC4/CyLFClk.h **** 
 235:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_FREQ_3LSB                       ((uint32) (0x3E8u))
 236:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DELAY_COUNTS_LIMIT                  ((uint32) (0xD160u))
 237:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_MIN_DELAY_US                        ((uint32) (0x64u))
 238:.\Generated_Source\PSoC4/CyLFClk.h **** 
 239:.\Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetLfclkSource() - parameter definitions */
 240:.\Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 241:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_ILO                    (0u)                                  /**< 
 242:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_WCO                    ((uint32)(( uint32 )0x01u << 30u))    /**< 
 243:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
 244:.\Generated_Source\PSoC4/CyLFClk.h **** 
 245:.\Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetLfclkSource() - implementation definitions */
 246:.\Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 247:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 248:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 249:.\Generated_Source\PSoC4/CyLFClk.h **** 
 250:.\Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - implementation definitions */
 251:.\Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 252:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 253:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 254:.\Generated_Source\PSoC4/CyLFClk.h **** 
 255:.\Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - parameter definitions */
 256:.\Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 257:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_ILO                (0u)                                  /**< Inte
 258:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_WCO                ((uint32)(( uint32 )0x01u << 30u))    /**< Low 
 259:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 260:.\Generated_Source\PSoC4/CyLFClk.h **** 
 261:.\Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - parameter definitions */
 262:.\Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 263:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_CRYSTAL                  (1u)    /**< Selects External crystal as WC
 264:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_PIN                      (0u)    /**<Selects External clock input on
 265:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 266:.\Generated_Source\PSoC4/CyLFClk.h **** 
 267:.\Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - implementation definitions */
 268:.\Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 269:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_MASK              ((uint32)(( uint32 )0x01u << 2u))
 270:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_OFFSET            ((uint32) 0x02u)
 271:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 272:.\Generated_Source\PSoC4/CyLFClk.h **** 
 273:.\Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloRestoreFactoryTrim() - implementation definitions */
 274:.\Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 26


 275:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE           ((uint8 )(0xF0u))
 276:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_MASK            ((uint32)((uint32)0x01u << 3u))
 277:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_MASK                    ((uint32)(0x0Fu))
 278:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 279:.\Generated_Source\PSoC4/CyLFClk.h **** 
 280:.\Generated_Source\PSoC4/CyLFClk.h **** /* CySysIloTrim() - parameter definitions and macros*/
 281:.\Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 282:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_BLOCKING                         (0u)
 283:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_NON_BLOCKING                     (1u)
 284:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_PERTHOUSAND                      ((uint32) 0x000003E8u )
 285:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ABS_MACRO(x)                     ((0 > (x)) ? (-(x)) : (x))
 286:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_RANGE                      ((uint32) 0x38u)
 287:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMEOUT                          ((uint8 ) 0x05u)
 288:.\Generated_Source\PSoC4/CyLFClk.h **** 
 289:.\Generated_Source\PSoC4/CyLFClk.h ****     /* ILO error step is 7,37 % error range */
 290:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_STEP                       (( int32) 0x02E1u)
 291:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_COEF                       ((uint32) 0x0Au)
 292:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 293:.\Generated_Source\PSoC4/CyLFClk.h **** 
 294:.\Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 295:.\Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Configuration Register */
 296:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_EN                (( uint32 )(( uint32 )0x01u <<  0u))
 297:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_AUTO              (( uint32 )(( uint32 )0x01u <<  1u))
 298:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE            (( uint32 )(( uint32 )0x01u << 31u))
 299:.\Generated_Source\PSoC4/CyLFClk.h **** 
 300:.\Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Status Register */
 301:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_STATUS_OUT_BLNK_A            (( uint32 )(( uint32 )0x01u <<  0u))
 302:.\Generated_Source\PSoC4/CyLFClk.h **** 
 303:.\Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Trim Register */
 304:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_MASK                (( uint32 ) 0x07u)
 305:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_SHIFT               (( uint32 ) 0x00u)
 306:.\Generated_Source\PSoC4/CyLFClk.h **** 
 307:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_3370NA              (( uint32 ) 0x00u)
 308:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2620NA              (( uint32 ) 0x01u)
 309:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2250NA              (( uint32 ) 0x02u)
 310:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1500NA              (( uint32 ) 0x03u)
 311:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1870NA              (( uint32 ) 0x04u)
 312:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1120NA              (( uint32 ) 0x05u)
 313:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_750NA               (( uint32 ) 0x06u)
 314:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_0NA                 (( uint32 ) 0x07u)
 315:.\Generated_Source\PSoC4/CyLFClk.h **** 
 316:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_MASK                 (( uint32 )(( uint32 )0x03u << 4u))
 317:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_SHIFT                (( uint32 ) 0x04u)
 318:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_HPM                  (( uint32 ) 0x01u)
 319:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_LPM                  (( uint32 ) 0x02u)
 320:.\Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 321:.\Generated_Source\PSoC4/CyLFClk.h **** 
 322:.\Generated_Source\PSoC4/CyLFClk.h **** 
 323:.\Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 324:.\Generated_Source\PSoC4/CyLFClk.h **** * WDT API Constants
 325:.\Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 326:.\Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 327:.\Generated_Source\PSoC4/CyLFClk.h **** 
 328:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_NONE                (0u)
 329:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT                 (1u)
 330:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_RESET               (2u)
 331:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT_RESET           (3u)
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 27


 332:.\Generated_Source\PSoC4/CyLFClk.h **** 
 333:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_MASK            ((uint32)((uint32)0x01u))           /**< Counter 0 
 334:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_MASK            ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 335:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_MASK            ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 336:.\Generated_Source\PSoC4/CyLFClk.h **** 
 337:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_NONE             ((uint32)0x00u)             /**< Neither */
 338:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_01               ((uint32)0x01u << 3u)       /**< Cascade 01 */
 339:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_12               ((uint32)0x01u << 11u)      /**< Cascade 12 */
 340:.\Generated_Source\PSoC4/CyLFClk.h **** 
 341:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_INT             ((uint32)0x01u << 2u)
 342:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_INT             ((uint32)0x01u << 10u)
 343:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_INT             ((uint32)0x01u << 18u)
 344:.\Generated_Source\PSoC4/CyLFClk.h **** 
 345:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_RESET           ((uint32)0x01u << 3u)       /**< Counter 0 */
 346:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_RESET           ((uint32)0x01u << 11u)      /**< Counter 1 */
 347:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_RESET           ((uint32)0x01u << 19u)      /**< Counter 2 */
 348:.\Generated_Source\PSoC4/CyLFClk.h **** 
 349:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_RESET           (CY_SYS_WDT_COUNTER0_RESET |\
 350:.\Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER1_RESET |\
 351:.\Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER2_RESET)
 352:.\Generated_Source\PSoC4/CyLFClk.h **** 
 353:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0                 (0x00u)
 354:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1                 (0x01u)
 355:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2                 (0x02u)
 356:.\Generated_Source\PSoC4/CyLFClk.h **** 
 357:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_OFFSET          (0x00u)
 358:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_OFFSET          (0x02u)
 359:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_OFFSET          (0x04u)
 360:.\Generated_Source\PSoC4/CyLFClk.h **** 
 361:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_MASK                ((uint32)(0x03u))
 362:.\Generated_Source\PSoC4/CyLFClk.h **** 
 363:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_MASK        (uint32)(0x1Fu)
 364:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_POS         (uint32)(24u)
 365:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_LOWER_16BITS_MASK        (uint32)(0x0000FFFFu)
 366:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_HIGHER_16BITS_MASK       (uint32)(0xFFFF0000u)
 367:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_MAX             (0x03u)
 368:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_SHIFT                (0x08u)
 369:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_CLR_SHIFT      (0x02u)
 370:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_STTS_SHIFT           (0x01u)
 371:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_SHIFT          (0x10u)
 372:.\Generated_Source\PSoC4/CyLFClk.h **** 
 373:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BITS_MASK       ((uint32)0x03u << 14u)
 374:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT0            ((uint32)0x01u << 14u)
 375:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT1            ((uint32)0x01u << 15u)
 376:.\Generated_Source\PSoC4/CyLFClk.h **** 
 377:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_WDT                   (3u)
 378:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_CALLBACKS             (3u)
 379:.\Generated_Source\PSoC4/CyLFClk.h **** 
 380:.\Generated_Source\PSoC4/CyLFClk.h ****     #else
 381:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_WDT               (1u)
 382:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_CALLBACKS         (3u)
 383:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_KEY                  ((uint32)(0xACED8865u))
 384:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_MATCH_MASK           ((uint32)(0x0000FFFFu))
 385:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_MASK     ((uint32)(0x000F0000u))
 386:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_SHIFT    ((uint32)(16u))
 387:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_LOWER_BIT_MASK       ((uint32)(0x00000001u))
 388:.\Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 28


 389:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_COUNTER0             (0x00u)
 390:.\Generated_Source\PSoC4/CyLFClk.h **** 
 391:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 392:.\Generated_Source\PSoC4/CyLFClk.h **** 
 393:.\Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 394:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_ILO_DELAY_US    ((uint16)( 67u))
 395:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_ILO_DELAY_US    ((uint16)(201u))
 396:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_WCO_DELAY_US    ((uint16)( 31u))
 397:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_WCO_DELAY_US    ((uint16)( 93u))
 398:.\Generated_Source\PSoC4/CyLFClk.h **** 
 399:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_DELAY_US      \
 400:.\Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 401:.\Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_ILO_DELAY_US) : \
 402:.\Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_WCO_DELAY_US))
 403:.\Generated_Source\PSoC4/CyLFClk.h **** 
 404:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_DELAY_US      \
 405:.\Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 406:.\Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_ILO_DELAY_US) : \
 407:.\Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_WCO_DELAY_US))
 408:.\Generated_Source\PSoC4/CyLFClk.h ****     #else
 409:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_1LFCLK_DELAY_US      ((uint16)  (67u))
 410:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_3LFCLK_DELAY_US      ((uint16) (201u))
 411:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && !CY_IP_WCO) */
 412:.\Generated_Source\PSoC4/CyLFClk.h **** 
 413:.\Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 414:.\Generated_Source\PSoC4/CyLFClk.h **** 
 415:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_NONE              (0u)
 416:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_INT               (1u)
 417:.\Generated_Source\PSoC4/CyLFClk.h **** 
 418:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_MASK                  ((uint32)((uint32)0x01u))           /**< Counter 0 
 419:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_MASK                  ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 420:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_MASK                  ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 421:.\Generated_Source\PSoC4/CyLFClk.h **** 
 422:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_RESET                 ((uint32)0x01u << 3u)       /**< Counter 0 */
 423:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_RESET                 ((uint32)0x01u << 11u)      /**< Counter 1 */
 424:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_RESET                 ((uint32)0x01u << 19u)      /**< Counter 2 */
 425:.\Generated_Source\PSoC4/CyLFClk.h **** 
 426:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_RESET                  (CY_SYS_TIMER0_RESET |\
 427:.\Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER1_RESET |\
 428:.\Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER2_RESET)
 429:.\Generated_Source\PSoC4/CyLFClk.h **** 
 430:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_NONE           ((uint32)0x00u)             /**< Neither */
 431:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_01             ((uint32)0x01u << 3u)       /**< Cascade 01 */
 432:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_12             ((uint32)0x01u << 11u)      /**< Cascade 12 */
 433:.\Generated_Source\PSoC4/CyLFClk.h **** 
 434:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_INT                   ((uint32)0x01u << 2u)
 435:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_INT                   ((uint32)0x01u << 10u)
 436:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_INT                   ((uint32)0x01u << 18u)
 437:.\Generated_Source\PSoC4/CyLFClk.h **** 
 438:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0                       (0x00u)
 439:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1                       (0x01u)
 440:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2                       (0x02u)
 441:.\Generated_Source\PSoC4/CyLFClk.h **** 
 442:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_MASK              ((uint32)(0x01u))
 443:.\Generated_Source\PSoC4/CyLFClk.h **** 
 444:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_MASK      (uint32)(0x1Fu)
 445:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_POS       (uint32)(24u)
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 29


 446:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_LOWER_16BITS_MASK      (uint32)(0x0000FFFFu)
 447:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_HIGHER_16BITS_MASK     (uint32)(0xFFFF0000u)
 448:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_COUNTERS_MAX           (0x03u)
 449:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_SHIFT              (0x08u)
 450:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT    (0x02u)
 451:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_STTS_SHIFT         (0x01u)
 452:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_SHIFT        (0x10u)
 453:.\Generated_Source\PSoC4/CyLFClk.h **** 
 454:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_NUM_OF_TIMERS                (3u)
 455:.\Generated_Source\PSoC4/CyLFClk.h **** 
 456:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_ILO     ((uint16)(0x02u))
 457:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_WCO     ((uint16)(0x01u))
 458:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_RESET_MASK     ((uint32)(0x03u))
 459:.\Generated_Source\PSoC4/CyLFClk.h **** 
 460:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1ILO_DELAY_US          ((uint16)( 67u))
 461:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_2ILO_DELAY_US          ((uint16)(134u))
 462:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3ILO_DELAY_US          ((uint16)(201u))
 463:.\Generated_Source\PSoC4/CyLFClk.h **** 
 464:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1WCO_DELAY_US          ((uint16)( 31u))
 465:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_2WCO_DELAY_US          ((uint16)( 62u))
 466:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3WCO_DELAY_US          ((uint16)( 93u))
 467:.\Generated_Source\PSoC4/CyLFClk.h **** 
 468:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_1TIMER_DELAY_US      \
 469:.\Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 470:.\Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1ILO_DELAY_US) : \
 471:.\Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1WCO_DELAY_US))
 472:.\Generated_Source\PSoC4/CyLFClk.h **** 
 473:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_2TIMER_DELAY_US      \
 474:.\Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 475:.\Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_2WCO_DELAY_US) : \
 476:.\Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_2ILO_DELAY_US))
 477:.\Generated_Source\PSoC4/CyLFClk.h **** 
 478:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_3TIMER_DELAY_US      \
 479:.\Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 480:.\Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3ILO_DELAY_US) : \
 481:.\Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3WCO_DELAY_US))
 482:.\Generated_Source\PSoC4/CyLFClk.h **** 
 483:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT      \
 484:.\Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 485:.\Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_ILO) : \
 486:.\Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_WCO))
 487:.\Generated_Source\PSoC4/CyLFClk.h **** 
 488:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 489:.\Generated_Source\PSoC4/CyLFClk.h **** 
 490:.\Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoSetPowerMode() */
 491:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_WCO_HPM                              (0x0u)     /**< High power mode */
 492:.\Generated_Source\PSoC4/CyLFClk.h **** #if(CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 493:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_LPM                          (0x1u)     /**< Low power mode */
 494:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 495:.\Generated_Source\PSoC4/CyLFClk.h **** 
 496:.\Generated_Source\PSoC4/CyLFClk.h **** 
 497:.\Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 498:.\Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers Constants 
 499:.\Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 500:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SYS_CLK_DEVIDER                      ((uint32)0x0Au)
 501:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SEL_ILO_DFT_SOURCE                   ((uint32)0x00000100u)
 502:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_FOURBITS_MAX                         (( int32)0x0f)
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 30


 503:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_STEP                         (( int32)((uint32) CY_SYS_CLK_ERROR_STEP >>
 504:.\Generated_Source\PSoC4/CyLFClk.h **** 
 505:.\Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 506:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ              (32000u)
 507:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_DFT_SELSIZE                      ((uint32) 0x3F)
 508:.\Generated_Source\PSoC4/CyLFClk.h ****     #else
 509:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ          (40000u)
 510:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1      ((uint32)0x00000908u)
 511:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_DFT_SELSIZE                  ((uint32) 0x0F)
 512:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 513:.\Generated_Source\PSoC4/CyLFClk.h **** 
 514:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK    ((uint32)((CY_SYS_CLK_DFT_SELSIZE << 8u) | (CY_SYS
 515:.\Generated_Source\PSoC4/CyLFClk.h **** 
 516:.\Generated_Source\PSoC4/CyLFClk.h **** #if (0u != (CY_PSOC4_4100 || CY_PSOC4_4200))
 517:.\Generated_Source\PSoC4/CyLFClk.h ****     #define  CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1              ((uint32)0x00000201u)
 518:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (0u != (CY_PSOC4_4100 || CY_PSOC4_4200)) */
 519:.\Generated_Source\PSoC4/CyLFClk.h **** 
 520:.\Generated_Source\PSoC4/CyLFClk.h **** #if (0u != (CY_PSOC4_4200L))
 521:.\Generated_Source\PSoC4/CyLFClk.h ****     #define  CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1              ((uint32)0x00000908u)
 522:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (0u != (CY_PSOC4_4200L)) */
 523:.\Generated_Source\PSoC4/CyLFClk.h **** 
 524:.\Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && (!CY_PSOC4_4200L) && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 525:.\Generated_Source\PSoC4/CyLFClk.h ****     #define  CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1               ((uint32)0x00000B0Au)
 526:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && (!CY_PSOC4_4200L) && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 527:.\Generated_Source\PSoC4/CyLFClk.h **** 
 528:.\Generated_Source\PSoC4/CyLFClk.h **** 
 529:.\Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers 
 531:.\Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 532:.\Generated_Source\PSoC4/CyLFClk.h ****     /* DFT TST Control Register*/
 533:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG                         (*(reg32*) CYREG_TST_DDFT_CTRL)
 534:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_CTRL_PTR                              ( (reg32*) CYREG_TST_DDFT_CTRL)
 535:.\Generated_Source\PSoC4/CyLFClk.h **** 
 536:.\Generated_Source\PSoC4/CyLFClk.h ****     /* DFT TST Counter 1 Register*/
 537:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR1)
 538:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR1)
 539:.\Generated_Source\PSoC4/CyLFClk.h **** 
 540:.\Generated_Source\PSoC4/CyLFClk.h ****     /* DFT TST Counter 2 Register*/
 541:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR2)
 542:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR2)
 543:.\Generated_Source\PSoC4/CyLFClk.h **** 
 544:.\Generated_Source\PSoC4/CyLFClk.h ****     /* DFT Muxes Configuration Register*/
 545:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_REG                               (*(reg32*) CYREG_CLK_DFT_SELECT)
 546:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_PTR                               ( (reg32*) CYREG_CLK_DFT_SELECT)
 547:.\Generated_Source\PSoC4/CyLFClk.h **** 
 548:.\Generated_Source\PSoC4/CyLFClk.h ****     /* ILO Configuration Register*/
 549:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_REG                        (*(reg32 *) CYREG_CLK_ILO_CONFIG)
 550:.\Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_PTR                        ( (reg32 *) CYREG_CLK_ILO_CONFIG)
 551:.\Generated_Source\PSoC4/CyLFClk.h **** 
 552:.\Generated_Source\PSoC4/CyLFClk.h ****     /* ILO Trim Register*/
 553:.\Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
 554:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_REG                      (*(reg32 *) CYREG_CLK_ILO_TRIM)
 555:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_PTR                      ( (reg32 *) CYREG_CLK_ILO_TRIM)
 556:.\Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) && CY_IP_WCO*/
 557:.\Generated_Source\PSoC4/CyLFClk.h **** 
 558:.\Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 559:.\Generated_Source\PSoC4/CyLFClk.h ****     #if (CY_PSOC4_4100BL || CY_PSOC4_4200BL)
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 31


 560:.\Generated_Source\PSoC4/CyLFClk.h **** 
 561:.\Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 562:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 563:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 564:.\Generated_Source\PSoC4/CyLFClk.h **** 
 565:.\Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 566:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 567:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 568:.\Generated_Source\PSoC4/CyLFClk.h **** 
 569:.\Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 570:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 571:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 572:.\Generated_Source\PSoC4/CyLFClk.h ****     #else   /* (CY_PSOC4_4100M || CY_PSOC4_4200M) && (CY_PSOC4_4100L || CY_PSOC4_4200L) */
 573:.\Generated_Source\PSoC4/CyLFClk.h **** 
 574:.\Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 575:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_WCO_STATUS)
 576:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_WCO_STATUS)
 577:.\Generated_Source\PSoC4/CyLFClk.h **** 
 578:.\Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 579:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_WCO_CONFIG)
 580:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_WCO_CONFIG)
 581:.\Generated_Source\PSoC4/CyLFClk.h **** 
 582:.\Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 583:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_WCO_TRIM)
 584:.\Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_WCO_TRIM)
 585:.\Generated_Source\PSoC4/CyLFClk.h ****     #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 586:.\Generated_Source\PSoC4/CyLFClk.h **** 
 587:.\Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 588:.\Generated_Source\PSoC4/CyLFClk.h **** 
 589:.\Generated_Source\PSoC4/CyLFClk.h **** 
 590:.\Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 591:.\Generated_Source\PSoC4/CyLFClk.h **** * WDT API Registers
 592:.\Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 594:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_REG               (*(reg32 *) CYREG_WDT_CTRLOW)
 595:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_PTR               ( (reg32 *) CYREG_WDT_CTRLOW)
 596:.\Generated_Source\PSoC4/CyLFClk.h **** 
 597:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_REG              (*(reg32 *) CYREG_WDT_CTRHIGH)
 598:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_PTR              ( (reg32 *) CYREG_WDT_CTRHIGH)
 599:.\Generated_Source\PSoC4/CyLFClk.h **** 
 600:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 601:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 602:.\Generated_Source\PSoC4/CyLFClk.h **** 
 603:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_REG               (*(reg32 *) CYREG_WDT_CONFIG)
 604:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_PTR               ( (reg32 *) CYREG_WDT_CONFIG)
 605:.\Generated_Source\PSoC4/CyLFClk.h **** 
 606:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_REG              (*(reg32 *) CYREG_WDT_CONTROL)
 607:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_PTR              ( (reg32 *) CYREG_WDT_CONTROL)
 608:.\Generated_Source\PSoC4/CyLFClk.h **** #else
 609:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_REG          (*(reg32 *) CYREG_WDT_DISABLE_KEY)
 610:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_PTR          ( (reg32 *) CYREG_WDT_DISABLE_KEY)
 611:.\Generated_Source\PSoC4/CyLFClk.h **** 
 612:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 613:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 614:.\Generated_Source\PSoC4/CyLFClk.h **** 
 615:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_REG              (*(reg32 *) CYREG_WDT_COUNTER)
 616:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_PTR              ( (reg32 *) CYREG_WDT_COUNTER)
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 32


 617:.\Generated_Source\PSoC4/CyLFClk.h **** 
 618:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_REG                (*(reg32 *) CYREG_SRSS_INTR)
 619:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_PTR                ( (reg32 *) CYREG_SRSS_INTR)
 620:.\Generated_Source\PSoC4/CyLFClk.h **** 
 621:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_REG           (*(reg32 *) CYREG_SRSS_INTR_MASK)
 622:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_PTR           ( (reg32 *) CYREG_SRSS_INTR_MASK)
 623:.\Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 624:.\Generated_Source\PSoC4/CyLFClk.h **** 
 625:.\Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 626:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_REG           (*(reg32 *) CYREG_WCO_WDT_CTRLOW)
 627:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_PTR           ( (reg32 *) CYREG_WCO_WDT_CTRLOW)
 628:.\Generated_Source\PSoC4/CyLFClk.h **** 
 629:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_REG          (*(reg32 *) CYREG_WCO_WDT_CTRHIGH)
 630:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_PTR          ( (reg32 *) CYREG_WCO_WDT_CTRHIGH)
 631:.\Generated_Source\PSoC4/CyLFClk.h **** 
 632:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_REG            (*(reg32 *) CYREG_WCO_WDT_MATCH)
 633:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_PTR            ( (reg32 *) CYREG_WCO_WDT_MATCH)
 634:.\Generated_Source\PSoC4/CyLFClk.h **** 
 635:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_REG           (*(reg32 *) CYREG_WCO_WDT_CONFIG)
 636:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_PTR           ( (reg32 *) CYREG_WCO_WDT_CONFIG)
 637:.\Generated_Source\PSoC4/CyLFClk.h **** 
 638:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_REG          (*(reg32 *) CYREG_WCO_WDT_CONTROL)
 639:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_PTR          ( (reg32 *) CYREG_WCO_WDT_CONTROL)
 640:.\Generated_Source\PSoC4/CyLFClk.h **** 
 641:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_REG            (*(reg32 *) CYREG_WCO_WDT_CLKEN)
 642:.\Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_PTR            ( (reg32 *) CYREG_WCO_WDT_CLKEN)
 643:.\Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 644:.\Generated_Source\PSoC4/CyLFClk.h **** 
 645:.\Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 646:.\Generated_Source\PSoC4/CyLFClk.h **** 
 647:.\Generated_Source\PSoC4/CyLFClk.h **** 
 648:.\Generated_Source\PSoC4/CyLFClk.h ****     /*******************************************************************************
 649:.\Generated_Source\PSoC4/CyLFClk.h ****     * Function Name: CySysClkWcoSetHighPowerMode
 650:.\Generated_Source\PSoC4/CyLFClk.h ****     ********************************************************************************
 651:.\Generated_Source\PSoC4/CyLFClk.h ****     *
 652:.\Generated_Source\PSoC4/CyLFClk.h ****     * Summary:
 653:.\Generated_Source\PSoC4/CyLFClk.h ****     *  Sets the high power mode for the 32 KHz WCO.
 654:.\Generated_Source\PSoC4/CyLFClk.h ****     *
 655:.\Generated_Source\PSoC4/CyLFClk.h ****     *******************************************************************************/
 656:.\Generated_Source\PSoC4/CyLFClk.h ****     static CY_INLINE void CySysClkWcoSetHighPowerMode(void)
 657:.\Generated_Source\PSoC4/CyLFClk.h ****     {
 658:.\Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off low power mode for WCO */
 659:.\Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 376              		.loc 2 659 0
 377 0002 0D4B     		ldr	r3, .L28
 378 0004 1A68     		ldr	r2, [r3]
 379 0006 0121     		mov	r1, #1
 380 0008 8A43     		bic	r2, r1
 381 000a 1A60     		str	r2, [r3]
 660:.\Generated_Source\PSoC4/CyLFClk.h **** 
 661:.\Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off auto low power mode in WCO */
 662:.\Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= ((uint32)~CY_SYS_CLK_WCO_CONFIG_LPM_AUTO);
 382              		.loc 2 662 0
 383 000c 1A68     		ldr	r2, [r3]
 384 000e 0220     		mov	r0, #2
 385 0010 8243     		bic	r2, r0
 386 0012 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 33


 663:.\Generated_Source\PSoC4/CyLFClk.h **** 
 664:.\Generated_Source\PSoC4/CyLFClk.h ****         /* Restore WCO trim register HPM settings */
 665:.\Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_GM_MASK)
 387              		.loc 2 665 0
 388 0014 094A     		ldr	r2, .L28+4
 389 0016 1068     		ldr	r0, [r2]
 390 0018 3024     		mov	r4, #48
 391 001a A043     		bic	r0, r4
 666:.\Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 392              		.loc 2 666 0
 393 001c 203C     		sub	r4, r4, #32
 394 001e 2043     		orr	r0, r4
 665:.\Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 395              		.loc 2 665 0
 396 0020 1060     		str	r0, [r2]
 667:.\Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
 397              		.loc 2 667 0
 398 0022 1068     		ldr	r0, [r2]
 399 0024 093C     		sub	r4, r4, #9
 400 0026 A043     		bic	r0, r4
 668:.\Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
 401              		.loc 2 668 0
 402 0028 0143     		orr	r1, r0
 667:.\Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
 403              		.loc 2 667 0
 404 002a 1160     		str	r1, [r2]
 405              	.LBE5:
 406              	.LBE4:
 771:.\Generated_Source\PSoC4/CyLFClk.c ****         CySysClkWcoSetHighPowerMode();
 772:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 407              		.loc 1 772 0
 408 002c 1A68     		ldr	r2, [r3]
 409 002e 8021     		mov	r1, #128
 410 0030 0906     		lsl	r1, r1, #24
 411 0032 0A43     		orr	r2, r1
 412 0034 1A60     		str	r2, [r3]
 773:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 413              		.loc 1 773 0
 414              		@ sp needed
 415 0036 10BD     		pop	{r4, pc}
 416              	.L29:
 417              		.align	2
 418              	.L28:
 419 0038 00000740 		.word	1074200576
 420 003c 000F0740 		.word	1074204416
 421              		.cfi_endproc
 422              	.LFE6:
 423              		.size	CySysClkWcoStart, .-CySysClkWcoStart
 424              		.section	.text.CySysClkWcoEnabled,"ax",%progbits
 425              		.align	2
 426              		.global	CySysClkWcoEnabled
 427              		.code	16
 428              		.thumb_func
 429              		.type	CySysClkWcoEnabled, %function
 430              	CySysClkWcoEnabled:
 431              	.LFB8:
 774:.\Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 34


 775:.\Generated_Source\PSoC4/CyLFClk.c **** 
 776:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStop
 778:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 779:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 780:.\Generated_Source\PSoC4/CyLFClk.c ****     * Disables the 32 KHz Crystal Oscillator.
 781:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 782:.\Generated_Source\PSoC4/CyLFClk.c ****     * API switch of WCO.
 783:.\Generated_Source\PSoC4/CyLFClk.c ****     * \note PSoC 4000S / PSoC 4100S / Analog Coprocessor: WCO is required for 
 784:.\Generated_Source\PSoC4/CyLFClk.c ****     * WCO Timer's operation.
 785:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 786:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 787:.\Generated_Source\PSoC4/CyLFClk.c ****     void  CySysClkWcoStop(void)
 788:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 789:.\Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 790:.\Generated_Source\PSoC4/CyLFClk.c ****             uint8  interruptState;
 791:.\Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
 792:.\Generated_Source\PSoC4/CyLFClk.c **** 
 793:.\Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 794:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 795:.\Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_SRSSV2)
 796:.\Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_WCO == CySysClkGetLfclkSource())
 797:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
 798:.\Generated_Source\PSoC4/CyLFClk.c ****                     interruptState = CyEnterCriticalSection();
 799:.\Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeCatch();
 800:.\Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 801:.\Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeRestore();
 802:.\Generated_Source\PSoC4/CyLFClk.c ****                     CyExitCriticalSection(interruptState);
 803:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
 804:.\Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 805:.\Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_SRSSV2) */
 806:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 807:.\Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 808:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 809:.\Generated_Source\PSoC4/CyLFClk.c ****         } /* Otherwise do nothing. WCO configuration cannot be changed. */
 810:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 811:.\Generated_Source\PSoC4/CyLFClk.c **** 
 812:.\Generated_Source\PSoC4/CyLFClk.c **** 
 813:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 814:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoEnabled
 815:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 816:.\Generated_Source\PSoC4/CyLFClk.c ****     * \internal Reports the WCO enable state.
 817:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 818:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 if WCO is enabled
 819:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 if WCO is disabled.
 820:.\Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 821:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 822:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoEnabled(void)
 823:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 432              		.loc 1 823 0
 433              		.cfi_startproc
 824:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 434              		.loc 1 824 0
 435 0000 034B     		ldr	r3, .L33
 436 0002 1B68     		ldr	r3, [r3]
 825:.\Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 1u :
 437              		.loc 1 825 0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 35


 438 0004 002B     		cmp	r3, #0
 439 0006 01DA     		bge	.L32
 440 0008 0120     		mov	r0, #1
 441 000a 00E0     		b	.L31
 442              	.L32:
 443 000c 0020     		mov	r0, #0
 444              	.L31:
 826:.\Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 0u);
 827:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 445              		.loc 1 827 0
 446              		@ sp needed
 447 000e 7047     		bx	lr
 448              	.L34:
 449              		.align	2
 450              	.L33:
 451 0010 00000740 		.word	1074200576
 452              		.cfi_endproc
 453              	.LFE8:
 454              		.size	CySysClkWcoEnabled, .-CySysClkWcoEnabled
 455              		.section	.text.CySysClkWcoStop,"ax",%progbits
 456              		.align	2
 457              		.global	CySysClkWcoStop
 458              		.code	16
 459              		.thumb_func
 460              		.type	CySysClkWcoStop, %function
 461              	CySysClkWcoStop:
 462              	.LFB7:
 788:.\Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 463              		.loc 1 788 0
 464              		.cfi_startproc
 465 0000 08B5     		push	{r3, lr}
 466              		.cfi_def_cfa_offset 8
 467              		.cfi_offset 3, -8
 468              		.cfi_offset 14, -4
 793:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 469              		.loc 1 793 0
 470 0002 FFF7FEFF 		bl	CySysClkWcoEnabled
 471              	.LVL35:
 472 0006 0028     		cmp	r0, #0
 473 0008 04D0     		beq	.L35
 807:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 474              		.loc 1 807 0
 475 000a 034A     		ldr	r2, .L37
 476 000c 1368     		ldr	r3, [r2]
 477 000e 5B00     		lsl	r3, r3, #1
 478 0010 5B08     		lsr	r3, r3, #1
 479 0012 1360     		str	r3, [r2]
 480              	.L35:
 810:.\Generated_Source\PSoC4/CyLFClk.c **** 
 481              		.loc 1 810 0
 482              		@ sp needed
 483 0014 08BD     		pop	{r3, pc}
 484              	.L38:
 485 0016 C046     		.align	2
 486              	.L37:
 487 0018 00000740 		.word	1074200576
 488              		.cfi_endproc
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 36


 489              	.LFE7:
 490              		.size	CySysClkWcoStop, .-CySysClkWcoStop
 491              		.section	.text.CySysClkWcoSetPowerMode,"ax",%progbits
 492              		.align	2
 493              		.global	CySysClkWcoSetPowerMode
 494              		.code	16
 495              		.thumb_func
 496              		.type	CySysClkWcoSetPowerMode, %function
 497              	CySysClkWcoSetPowerMode:
 498              	.LFB9:
 828:.\Generated_Source\PSoC4/CyLFClk.c **** 
 829:.\Generated_Source\PSoC4/CyLFClk.c **** 
 830:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 831:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoSetPowerMode
 832:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 833:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 834:.\Generated_Source\PSoC4/CyLFClk.c ****     * Sets the power mode for the 32 KHz WCO.
 835:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 836:.\Generated_Source\PSoC4/CyLFClk.c ****     * By default (if this function is not called), the WCO is in High power mode 
 837:.\Generated_Source\PSoC4/CyLFClk.c ****     * during Active and device's low power modes
 838:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 839:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
 840:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_HPM - The High Power mode.<br>
 841:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_LPM - The Low Power mode.
 842:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 843:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return A previous power mode. The same as the parameters.
 844:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 845:.\Generated_Source\PSoC4/CyLFClk.c ****     * \note
 846:.\Generated_Source\PSoC4/CyLFClk.c ****     * The WCO Low Power mode is applicable for PSoC 4100 BLE / PSoC 4200 BLE devices.
 847:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 848:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 849:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoSetPowerMode(uint32 mode)
 850:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 499              		.loc 1 850 0
 500              		.cfi_startproc
 501              	.LVL36:
 502 0000 10B5     		push	{r4, lr}
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 4, -8
 505              		.cfi_offset 14, -4
 851:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 852:.\Generated_Source\PSoC4/CyLFClk.c **** 
 853:.\Generated_Source\PSoC4/CyLFClk.c ****         powerModeStatus = CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 506              		.loc 1 853 0
 507 0002 104B     		ldr	r3, .L44
 508 0004 1B68     		ldr	r3, [r3]
 509 0006 0124     		mov	r4, #1
 510 0008 1C40     		and	r4, r3
 511              	.LVL37:
 854:.\Generated_Source\PSoC4/CyLFClk.c **** 
 855:.\Generated_Source\PSoC4/CyLFClk.c ****         switch(mode)
 512              		.loc 1 855 0
 513 000a 0028     		cmp	r0, #0
 514 000c 15D1     		bne	.L43
 515              	.LBB8:
 516              	.LBB9:
 659:.\Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 37


 517              		.loc 2 659 0
 518 000e 0D4B     		ldr	r3, .L44
 519 0010 1968     		ldr	r1, [r3]
 520 0012 0122     		mov	r2, #1
 521 0014 9143     		bic	r1, r2
 522 0016 1960     		str	r1, [r3]
 662:.\Generated_Source\PSoC4/CyLFClk.h **** 
 523              		.loc 2 662 0
 524 0018 1968     		ldr	r1, [r3]
 525 001a 0230     		add	r0, r0, #2
 526              	.LVL38:
 527 001c 8143     		bic	r1, r0
 528 001e 1960     		str	r1, [r3]
 665:.\Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 529              		.loc 2 665 0
 530 0020 094B     		ldr	r3, .L44+4
 531 0022 1968     		ldr	r1, [r3]
 532 0024 2E30     		add	r0, r0, #46
 533              	.LVL39:
 534 0026 8143     		bic	r1, r0
 666:.\Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
 535              		.loc 2 666 0
 536 0028 2038     		sub	r0, r0, #32
 537              	.LVL40:
 538 002a 0143     		orr	r1, r0
 665:.\Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 539              		.loc 2 665 0
 540 002c 1960     		str	r1, [r3]
 667:.\Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
 541              		.loc 2 667 0
 542 002e 1968     		ldr	r1, [r3]
 543 0030 0938     		sub	r0, r0, #9
 544              	.LVL41:
 545 0032 8143     		bic	r1, r0
 546              		.loc 2 668 0
 547 0034 0A43     		orr	r2, r1
 667:.\Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
 548              		.loc 2 667 0
 549 0036 1A60     		str	r2, [r3]
 550 0038 02E0     		b	.L42
 551              	.LVL42:
 552              	.L43:
 553              	.LBE9:
 554              	.LBE8:
 856:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 857:.\Generated_Source\PSoC4/CyLFClk.c ****         case CY_SYS_CLK_WCO_HPM:
 858:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkWcoSetHighPowerMode();
 859:.\Generated_Source\PSoC4/CyLFClk.c ****             break;
 860:.\Generated_Source\PSoC4/CyLFClk.c **** 
 861:.\Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 862:.\Generated_Source\PSoC4/CyLFClk.c ****             case CY_SYS_CLK_WCO_LPM:
 863:.\Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkWcoSetLowPowerMode();
 864:.\Generated_Source\PSoC4/CyLFClk.c ****                 break;
 865:.\Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 866:.\Generated_Source\PSoC4/CyLFClk.c **** 
 867:.\Generated_Source\PSoC4/CyLFClk.c ****         default:
 868:.\Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 38


 555              		.loc 1 868 0 discriminator 1
 556 003a 0020     		mov	r0, #0
 557              	.LVL43:
 558 003c FFF7FEFF 		bl	CyHalt
 559              	.LVL44:
 560              	.L42:
 869:.\Generated_Source\PSoC4/CyLFClk.c ****             break;
 870:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 871:.\Generated_Source\PSoC4/CyLFClk.c **** 
 872:.\Generated_Source\PSoC4/CyLFClk.c ****         return (powerModeStatus);
 873:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 561              		.loc 1 873 0
 562 0040 201C     		mov	r0, r4
 563              		@ sp needed
 564              	.LVL45:
 565 0042 10BD     		pop	{r4, pc}
 566              	.L45:
 567              		.align	2
 568              	.L44:
 569 0044 00000740 		.word	1074200576
 570 0048 000F0740 		.word	1074204416
 571              		.cfi_endproc
 572              	.LFE9:
 573              		.size	CySysClkWcoSetPowerMode, .-CySysClkWcoSetPowerMode
 574              		.section	.text.CySysClkWcoClockOutSelect,"ax",%progbits
 575              		.align	2
 576              		.global	CySysClkWcoClockOutSelect
 577              		.code	16
 578              		.thumb_func
 579              		.type	CySysClkWcoClockOutSelect, %function
 580              	CySysClkWcoClockOutSelect:
 581              	.LFB10:
 874:.\Generated_Source\PSoC4/CyLFClk.c **** 
 875:.\Generated_Source\PSoC4/CyLFClk.c **** 
 876:.\Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 877:.\Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkWcoClockOutSelect
 878:.\Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 879:.\Generated_Source\PSoC4/CyLFClk.c **** * \brief
 880:.\Generated_Source\PSoC4/CyLFClk.c **** * Selects the WCO block output source.
 881:.\Generated_Source\PSoC4/CyLFClk.c **** *
 882:.\Generated_Source\PSoC4/CyLFClk.c **** * In addition to generating 32.768 kHz clock from external crystals, WCO 
 883:.\Generated_Source\PSoC4/CyLFClk.c **** * can be sourced by external clock source using wco_out pin. The API help to
 884:.\Generated_Source\PSoC4/CyLFClk.c **** * lets you select between the sources: External crystal or external pin.
 885:.\Generated_Source\PSoC4/CyLFClk.c **** *
 886:.\Generated_Source\PSoC4/CyLFClk.c **** * If you want to use external pin to drive WCO the next procedure is required:
 887:.\Generated_Source\PSoC4/CyLFClk.c **** * <br> 1) Disable the WCO.
 888:.\Generated_Source\PSoC4/CyLFClk.c **** * <br> 2) Drive the wco_out pin to an external signal source.
 889:.\Generated_Source\PSoC4/CyLFClk.c **** * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_PIN).
 890:.\Generated_Source\PSoC4/CyLFClk.c **** * <br> 4) Enable the WCO and wait for 15 us before clocking the XO pad at the high 
 891:.\Generated_Source\PSoC4/CyLFClk.c **** * potential. Let's assume you are using the 1.6v clock amplitude, then the
 892:.\Generated_Source\PSoC4/CyLFClk.c **** * sequence would start at 1.6v, then 0v, then 1.6v etc at a chosen frequency.
 893:.\Generated_Source\PSoC4/CyLFClk.c **** *
 894:.\Generated_Source\PSoC4/CyLFClk.c **** * If you want to use WCO after using an external pin source:
 895:.\Generated_Source\PSoC4/CyLFClk.c **** * <br> 1) Disable the WCO.
 896:.\Generated_Source\PSoC4/CyLFClk.c **** * <br> 2) Drive off wco_out pin with external signal source.
 897:.\Generated_Source\PSoC4/CyLFClk.c **** * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_CRYSTAL).
 898:.\Generated_Source\PSoC4/CyLFClk.c **** * <br> 4) Enable the WCO.
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 39


 899:.\Generated_Source\PSoC4/CyLFClk.c **** *
 900:.\Generated_Source\PSoC4/CyLFClk.c **** * \warning 
 901:.\Generated_Source\PSoC4/CyLFClk.c **** * Do not use the oscillator output clock prior to a 15uS delay in your system.
 902:.\Generated_Source\PSoC4/CyLFClk.c **** * There are no limitations on the external clock frequency.
 903:.\Generated_Source\PSoC4/CyLFClk.c **** * \warning 
 904:.\Generated_Source\PSoC4/CyLFClk.c **** * When external clock source was selected to drive WCO block the IMO can be 
 905:.\Generated_Source\PSoC4/CyLFClk.c **** * trimmed only when external clock source period is equal to WCO external
 906:.\Generated_Source\PSoC4/CyLFClk.c **** * crystal period. Also external clock source accuracy should be higher 
 907:.\Generated_Source\PSoC4/CyLFClk.c **** * or equal to WCO external crystal accuracy.
 908:.\Generated_Source\PSoC4/CyLFClk.c **** *
 909:.\Generated_Source\PSoC4/CyLFClk.c **** * \param clockSel
 910:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_WCO_SEL_CRYSTAL - Selects External crystal as clock 
 911:.\Generated_Source\PSoC4/CyLFClk.c **** * source of WCO.<br>
 912:.\Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_WCO_SEL_PIN - Selects External clock input on wco_in pin as 
 913:.\Generated_Source\PSoC4/CyLFClk.c **** * clock source of WCO.
 914:.\Generated_Source\PSoC4/CyLFClk.c **** *
 915:.\Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 916:.\Generated_Source\PSoC4/CyLFClk.c **** void CySysClkWcoClockOutSelect(uint32 clockSel)
 917:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 582              		.loc 1 917 0
 583              		.cfi_startproc
 584              	.LVL46:
 585 0000 10B5     		push	{r4, lr}
 586              		.cfi_def_cfa_offset 8
 587              		.cfi_offset 4, -8
 588              		.cfi_offset 14, -4
 589 0002 041C     		mov	r4, r0
 918:.\Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 590              		.loc 1 918 0
 591 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 592              	.LVL47:
 593 0008 0028     		cmp	r0, #0
 594 000a 0CD0     		beq	.L46
 919:.\Generated_Source\PSoC4/CyLFClk.c ****         {
 920:.\Generated_Source\PSoC4/CyLFClk.c ****             if (1u >= clockSel)
 595              		.loc 1 920 0
 596 000c 012C     		cmp	r4, #1
 597 000e 07D8     		bhi	.L48
 921:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 922:.\Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG = (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(~CY_SYS_CLK_WCO_S
 598              		.loc 1 922 0
 599 0010 054A     		ldr	r2, .L49
 600 0012 1368     		ldr	r3, [r2]
 601 0014 0421     		mov	r1, #4
 602 0016 8B43     		bic	r3, r1
 923:.\Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 603              		.loc 1 923 0
 604 0018 A400     		lsl	r4, r4, #2
 605              	.LVL48:
 922:.\Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 606              		.loc 1 922 0
 607 001a 1C43     		orr	r4, r3
 608 001c 1460     		str	r4, [r2]
 609 001e 02E0     		b	.L46
 610              	.LVL49:
 611              	.L48:
 924:.\Generated_Source\PSoC4/CyLFClk.c ****             }
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 40


 925:.\Generated_Source\PSoC4/CyLFClk.c ****             else
 926:.\Generated_Source\PSoC4/CyLFClk.c ****             {
 927:.\Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 612              		.loc 1 927 0 discriminator 1
 613 0020 0020     		mov	r0, #0
 614 0022 FFF7FEFF 		bl	CyHalt
 615              	.LVL50:
 616              	.L46:
 928:.\Generated_Source\PSoC4/CyLFClk.c ****             }
 929:.\Generated_Source\PSoC4/CyLFClk.c ****         }
 930:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 617              		.loc 1 930 0
 618              		@ sp needed
 619 0026 10BD     		pop	{r4, pc}
 620              	.L50:
 621              		.align	2
 622              	.L49:
 623 0028 00000740 		.word	1074200576
 624              		.cfi_endproc
 625              	.LFE10:
 626              		.size	CySysClkWcoClockOutSelect, .-CySysClkWcoClockOutSelect
 627              		.section	.text.CySysWdtGetEnabledStatus,"ax",%progbits
 628              		.align	2
 629              		.global	CySysWdtGetEnabledStatus
 630              		.code	16
 631              		.thumb_func
 632              		.type	CySysWdtGetEnabledStatus, %function
 633              	CySysWdtGetEnabledStatus:
 634              	.LFB11:
 931:.\Generated_Source\PSoC4/CyLFClk.c **** #endif  /* (CY_IP_WCO) */
 932:.\Generated_Source\PSoC4/CyLFClk.c **** 
 933:.\Generated_Source\PSoC4/CyLFClk.c **** 
 934:.\Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 935:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 936:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLock
 937:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 938:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 939:.\Generated_Source\PSoC4/CyLFClk.c ****     * Locks out configuration changes to the Watchdog timer registers and ILO
 940:.\Generated_Source\PSoC4/CyLFClk.c ****     * configuration register.
 941:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 942:.\Generated_Source\PSoC4/CyLFClk.c ****     * After this function is called, ILO clock can't be disabled until
 943:.\Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtUnlock() is called.
 944:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 945:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 946:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtLock(void)
 947:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 948:.\Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 949:.\Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 950:.\Generated_Source\PSoC4/CyLFClk.c **** 
 951:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = (CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK)) 
 952:.\Generated_Source\PSoC4/CyLFClk.c ****                  CY_SYS_WDT_CLK_LOCK_BITS_MASK;
 953:.\Generated_Source\PSoC4/CyLFClk.c **** 
 954:.\Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 955:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 956:.\Generated_Source\PSoC4/CyLFClk.c **** 
 957:.\Generated_Source\PSoC4/CyLFClk.c **** 
 958:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 41


 959:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLocked
 960:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 961:.\Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 962:.\Generated_Source\PSoC4/CyLFClk.c ****     * Reports the WDT lock state.
 963:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 964:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - WDT is locked, and 0 - WDT is unlocked.
 965:.\Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 966:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 967:.\Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void)
 968:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 969:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal 0 */
 970:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_SELECT_REG & (uint32)(CY_SYS_WDT_CLK_LOCK_BITS_MASK))) ? (uint32
 971:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 972:.\Generated_Source\PSoC4/CyLFClk.c **** 
 973:.\Generated_Source\PSoC4/CyLFClk.c **** 
 974:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 975:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnlock
 976:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 977:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 978:.\Generated_Source\PSoC4/CyLFClk.c ****     *  Unlocks the Watchdog Timer configuration register.
 979:.\Generated_Source\PSoC4/CyLFClk.c ****     *
 980:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 981:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnlock(void)
 982:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 983:.\Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 984:.\Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 985:.\Generated_Source\PSoC4/CyLFClk.c **** 
 986:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Removing WDT lock requires two writes */
 987:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 988:.\Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT0);
 989:.\Generated_Source\PSoC4/CyLFClk.c **** 
 990:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 991:.\Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT1);
 992:.\Generated_Source\PSoC4/CyLFClk.c **** 
 993:.\Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 994:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 995:.\Generated_Source\PSoC4/CyLFClk.c **** 
 996:.\Generated_Source\PSoC4/CyLFClk.c **** 
 997:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 998:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
 999:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1000:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1001:.\Generated_Source\PSoC4/CyLFClk.c ****     *  Reads the enabled status of one of the three WDT counters.
1002:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1003:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1004:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1005:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1006:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the counter is disabled.
1007:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the counter is enabled.
1008:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1009:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1010:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual WDT counter status from the status register. It may
1011:.\Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles for the WDT status register to contain actual data
1012:.\Generated_Source\PSoC4/CyLFClk.c ****     * after the WDT counter is enabled.
1013:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1014:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1015:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum)
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 42


1016:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1017:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
1018:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONTROL_REG >> ((CY_SYS_WDT_CNT_SHIFT * counterNum) + CY_SYS_WDT_CNT_ST
1019:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1020:.\Generated_Source\PSoC4/CyLFClk.c **** 
1021:.\Generated_Source\PSoC4/CyLFClk.c **** 
1022:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1023:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMode
1024:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1025:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1026:.\Generated_Source\PSoC4/CyLFClk.c ****     * Writes the mode of one of the three WDT counters.
1027:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1028:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1029:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1030:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
1031:.\Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_MODE_NONE - Free running.<br>
1032:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT - The interrupt generated on match for counter 0
1033:.\Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.<br>
1034:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_RESET - Reset on match (valid for counter 0 and 1 only).<br>
1035:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT_RESET - Generate an interrupt.  Generate a reset on
1036:.\Generated_Source\PSoC4/CyLFClk.c ****     * the 3rd non-handled interrupt (valid for counter 0 and counter 1 only).
1037:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1038:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1039:.\Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled to set a mode. Otherwise, this
1040:.\Generated_Source\PSoC4/CyLFClk.c ****     * function call has no effect. If the specified counter is enabled,
1041:.\Generated_Source\PSoC4/CyLFClk.c ****     * call the CySysWdtDisable() function with the corresponding parameter to
1042:.\Generated_Source\PSoC4/CyLFClk.c ****     * disable the specified counter and wait for it to stop.
1043:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1044:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1045:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMode(uint32 counterNum, uint32 mode)
1046:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1047:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1048:.\Generated_Source\PSoC4/CyLFClk.c **** 
1049:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
1050:.\Generated_Source\PSoC4/CyLFClk.c **** 
1051:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
1052:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1053:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG &
1054:.\Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
1055:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_WDT_MODE_MASK) << (counterNum * CY_SYS_WDT_CN
1056:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1057:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1058:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1059:.\Generated_Source\PSoC4/CyLFClk.c **** 
1060:.\Generated_Source\PSoC4/CyLFClk.c **** 
1061:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1062:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMode
1063:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1064:.\Generated_Source\PSoC4/CyLFClk.c ****     * 
1065:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three WDT counters.
1066:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1067:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1068:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1069:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter.  The same enumerated values as the mode 
1070:.\Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysWdtSetMode().
1071:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1072:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 43


1073:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMode(uint32 counterNum)
1074:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1075:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
1076:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1077:.\Generated_Source\PSoC4/CyLFClk.c **** 
1078:.\Generated_Source\PSoC4/CyLFClk.c **** 
1079:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1080:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetClearOnMatch
1081:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1082:.\Generated_Source\PSoC4/CyLFClk.c ****     * 
1083:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter "clear on match" setting.
1084:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1085:.\Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue
1086:.\Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
1087:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1088:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1089:.\Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1090:.\Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1091:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1092:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
1093:.\Generated_Source\PSoC4/CyLFClk.c ****     *  1 to enable appropriate counter
1094:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1095:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1096:.\Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled. Otherwise this function call
1097:.\Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysWdtDisable()
1098:.\Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
1099:.\Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three LFCLK cycles.
1100:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1101:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1102:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable)
1103:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1104:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1105:.\Generated_Source\PSoC4/CyLFClk.c **** 
1106:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1107:.\Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1108:.\Generated_Source\PSoC4/CyLFClk.c **** 
1109:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
1110:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1111:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
1112:.\Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
1113:.\Generated_Source\PSoC4/CyLFClk.c **** 
1114:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
1115:.\Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_C
1116:.\Generated_Source\PSoC4/CyLFClk.c **** 
1117:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1118:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1119:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1120:.\Generated_Source\PSoC4/CyLFClk.c **** 
1121:.\Generated_Source\PSoC4/CyLFClk.c **** 
1122:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1123:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetClearOnMatch
1124:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1125:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1126:.\Generated_Source\PSoC4/CyLFClk.c ****     * Reads the "clear on match" setting for the specified counter.
1127:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1128:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param
1129:.\Generated_Source\PSoC4/CyLFClk.c ****     * counterNum Valid range [0-1]. The number of the WDT counter. The match values
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 44


1130:.\Generated_Source\PSoC4/CyLFClk.c ****     * are not supported by counter 2.
1131:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1132:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
1133:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1134:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1135:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum)
1136:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1137:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1138:.\Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1139:.\Generated_Source\PSoC4/CyLFClk.c **** 
1140:.\Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WDT_CONFIG_REG >>
1141:.\Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
1142:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1143:.\Generated_Source\PSoC4/CyLFClk.c **** 
1144:.\Generated_Source\PSoC4/CyLFClk.c **** 
1145:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1146:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1147:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1148:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1149:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified WDT counters.
1150:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1151:.\Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are enabled.
1152:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1153:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1154:.\Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to enable.<br>
1155:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to enable.<br>
1156:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to enable.
1157:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1158:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1159:.\Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling WDT requires 3 LFCLK cycles to come into effect.
1160:.\Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the WDT enable state must not be changed more than once in
1161:.\Generated_Source\PSoC4/CyLFClk.c ****     * that period.
1162:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1163:.\Generated_Source\PSoC4/CyLFClk.c ****     * After WDT is enabled, it is illegal to write WDT configuration (WDT_CONFIG)
1164:.\Generated_Source\PSoC4/CyLFClk.c ****     * and control (WDT_CONTROL) registers. This means that all WDT functions that
1165:.\Generated_Source\PSoC4/CyLFClk.c ****     * contain 'write' in the name (with the exception of CySysWdtSetMatch()
1166:.\Generated_Source\PSoC4/CyLFClk.c ****     * function) are illegal to call if WDT is enabled.
1167:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1168:.\Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 / PSoC 4200: This function enables ILO.
1169:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1170:.\Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 BLE / PSoC 4200 BLE / PSoC4200L / PSoC 4100M 
1171:.\Generated_Source\PSoC4/CyLFClk.c ****     * / PSoC 4200M:
1172:.\Generated_Source\PSoC4/CyLFClk.c ****     * LFLCK should be configured before calling this function. The desired
1173:.\Generated_Source\PSoC4/CyLFClk.c ****     * source should be enabled and configured to be the source for LFCLK.
1174:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1175:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1176:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(uint32 counterMask)
1177:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1178:.\Generated_Source\PSoC4/CyLFClk.c ****         #if (!CY_IP_WCO)
1179:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysClkIloStart();
1180:.\Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (!CY_IP_WCO) */
1181:.\Generated_Source\PSoC4/CyLFClk.c **** 
1182:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= counterMask;
1183:.\Generated_Source\PSoC4/CyLFClk.c **** 
1184:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
1185:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1186:.\Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 45


1187:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1188:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1189:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1190:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1191:.\Generated_Source\PSoC4/CyLFClk.c **** 
1192:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
1193:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1194:.\Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1195:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1196:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1197:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1198:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1199:.\Generated_Source\PSoC4/CyLFClk.c **** 
1200:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
1201:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1202:.\Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1203:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1204:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1205:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1206:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1207:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1208:.\Generated_Source\PSoC4/CyLFClk.c **** 
1209:.\Generated_Source\PSoC4/CyLFClk.c **** 
1210:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1211:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1212:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1213:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1214:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified WDT counters.
1215:.\Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
1216:.\Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
1217:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1218:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1219:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to disable. <br>
1220:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to disable. <br>
1221:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to disable.
1222:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1223:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1224:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(uint32 counterMask)
1225:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1226:.\Generated_Source\PSoC4/CyLFClk.c ****         if (0uL == CySysWdtLocked())
1227:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1228:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= ~counterMask;
1229:.\Generated_Source\PSoC4/CyLFClk.c **** 
1230:.\Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
1231:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1232:.\Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1233:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
1234:.\Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1235:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
1236:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1237:.\Generated_Source\PSoC4/CyLFClk.c **** 
1238:.\Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
1239:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1240:.\Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1241:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
1242:.\Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1243:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 46


1244:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1245:.\Generated_Source\PSoC4/CyLFClk.c **** 
1246:.\Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
1247:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1248:.\Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1249:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
1250:.\Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1251:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
1252:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1253:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1254:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1255:.\Generated_Source\PSoC4/CyLFClk.c **** 
1256:.\Generated_Source\PSoC4/CyLFClk.c **** 
1257:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1258:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetCascade
1259:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1260:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1261:.\Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two WDT cascade values based on the combination of mask values
1262:.\Generated_Source\PSoC4/CyLFClk.c ****     * specified.
1263:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1264:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
1265:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_NONE - Neither <br>
1266:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_01 - Cascade 01 <br>
1267:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_12 - Cascade 12
1268:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1269:.\Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
1270:.\Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
1271:.\Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
1272:.\Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysWdtSetCascade() was called with ORed defines it is necessary 
1273:.\Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysWdtSetClearOnMatch(1,1). It is needed to make sure that 
1274:.\Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
1275:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1276:.\Generated_Source\PSoC4/CyLFClk.c ****     * WDT counters that are part of the specified cascade should be disabled.
1277:.\Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
1278:.\Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysWdtDisable() function with the corresponding
1279:.\Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
1280:.\Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1281:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1282:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1283:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetCascade(uint32 cascadeMask)
1284:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1285:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1286:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
1287:.\Generated_Source\PSoC4/CyLFClk.c **** 
1288:.\Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0) |
1289:.\Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
1290:.\Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2);
1291:.\Generated_Source\PSoC4/CyLFClk.c **** 
1292:.\Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
1293:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1294:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
1295:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
1296:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
1297:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1298:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1299:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1300:.\Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 47


1301:.\Generated_Source\PSoC4/CyLFClk.c **** 
1302:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1303:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCascade
1304:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1305:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1306:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two WDT cascade values returning a mask of the bits set.
1307:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1308:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
1309:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_NONE - Neither
1310:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_01 - Cascade 01
1311:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_12 - Cascade 12
1312:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1313:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1314:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCascade(void)
1315:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1316:.\Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONFIG_REG & (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12));
1317:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1318:.\Generated_Source\PSoC4/CyLFClk.c **** 
1319:.\Generated_Source\PSoC4/CyLFClk.c **** 
1320:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1321:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1322:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1323:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1324:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1325:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1326:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1327:.\Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1328:.\Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1329:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1330:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param match
1331:.\Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-65535]. The value to be used to match against the counter.
1332:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1333:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1334:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 counterNum, uint32 match)
1335:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1336:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
1337:.\Generated_Source\PSoC4/CyLFClk.c **** 
1338:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1339:.\Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1340:.\Generated_Source\PSoC4/CyLFClk.c **** 
1341:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
1342:.\Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_3LFCLK_DELAY_US);
1343:.\Generated_Source\PSoC4/CyLFClk.c **** 
1344:.\Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WDT_MATCH_REG;
1345:.\Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
1346:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
1347:.\Generated_Source\PSoC4/CyLFClk.c **** 
1348:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
1349:.\Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_1LFCLK_DELAY_US);
1350:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1351:.\Generated_Source\PSoC4/CyLFClk.c **** 
1352:.\Generated_Source\PSoC4/CyLFClk.c **** 
1353:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1354:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetToggleBit
1355:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1356:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1357:.\Generated_Source\PSoC4/CyLFClk.c ****     * Configures which bit in WDT counter 2 to monitor for a toggle.
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 48


1358:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1359:.\Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if the mode for counter 2 has
1360:.\Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
1361:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1362:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31].  Counter 2 bit to monitor for a toggle.
1363:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1364:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1365:.\Generated_Source\PSoC4/CyLFClk.c ****     * WDT Counter 2 should be disabled. Otherwise this function call has no
1366:.\Generated_Source\PSoC4/CyLFClk.c ****     * effect.
1367:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1368:.\Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysWdtDisable() function with
1369:.\Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
1370:.\Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to 3 LFCLK cycles.
1371:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1372:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1373:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetToggleBit(uint32 bits)
1374:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1375:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1376:.\Generated_Source\PSoC4/CyLFClk.c **** 
1377:.\Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1378:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1379:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
1380:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
1381:.\Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_WDT_CONFIG_BITS2_MASK) << CY_SYS_WDT_CONFIG_BITS2_POS
1382:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1383:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1384:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1385:.\Generated_Source\PSoC4/CyLFClk.c **** 
1386:.\Generated_Source\PSoC4/CyLFClk.c **** 
1387:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1388:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetToggleBit
1389:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1390:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1391:.\Generated_Source\PSoC4/CyLFClk.c ****     * Reads which bit in WDT counter 2 is monitored for a toggle.
1392:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1393:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
1394:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1395:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1396:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetToggleBit(void)
1397:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1398:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> CY_SYS_WDT_CONFIG_BITS2_POS) & CY_SYS_WDT_CONFIG_BITS2_MA
1399:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1400:.\Generated_Source\PSoC4/CyLFClk.c **** 
1401:.\Generated_Source\PSoC4/CyLFClk.c **** 
1402:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1403:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1404:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1405:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1406:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1407:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1408:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the WDT counter. The match
1409:.\Generated_Source\PSoC4/CyLFClk.c ****     * values are not supported by counter 2.
1410:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1411:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
1412:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1413:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1414:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(uint32 counterNum)
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 49


1415:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1416:.\Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1417:.\Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1418:.\Generated_Source\PSoC4/CyLFClk.c **** 
1419:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WDT_MATCH_REG >> 
1420:.\Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
1421:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1422:.\Generated_Source\PSoC4/CyLFClk.c **** 
1423:.\Generated_Source\PSoC4/CyLFClk.c **** 
1424:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1425:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1426:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1427:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1428:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1429:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1430:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the WDT counter.
1431:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1432:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.  Counter 0 and Counter 1 are 16 bit counters 
1433:.\Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
1434:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1435:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1436:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(uint32 counterNum)
1437:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1438:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
1439:.\Generated_Source\PSoC4/CyLFClk.c **** 
1440:.\Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
1441:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1442:.\Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 0 */
1443:.\Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
1444:.\Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRLOW_REG & CY_SYS_WDT_LOWER_16BITS_MASK;
1445:.\Generated_Source\PSoC4/CyLFClk.c ****             break;
1446:.\Generated_Source\PSoC4/CyLFClk.c **** 
1447:.\Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 1 */
1448:.\Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
1449:.\Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WDT_CTRLOW_REG >> CY_SYS_WDT_CNT_MATCH_SHIFT) & CY_SYS_WDT_LOWER
1450:.\Generated_Source\PSoC4/CyLFClk.c ****             break;
1451:.\Generated_Source\PSoC4/CyLFClk.c **** 
1452:.\Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 2 */
1453:.\Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
1454:.\Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRHIGH_REG;
1455:.\Generated_Source\PSoC4/CyLFClk.c ****             break;
1456:.\Generated_Source\PSoC4/CyLFClk.c **** 
1457:.\Generated_Source\PSoC4/CyLFClk.c ****             default:
1458:.\Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
1459:.\Generated_Source\PSoC4/CyLFClk.c ****             break;
1460:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1461:.\Generated_Source\PSoC4/CyLFClk.c **** 
1462:.\Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
1463:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1464:.\Generated_Source\PSoC4/CyLFClk.c **** 
1465:.\Generated_Source\PSoC4/CyLFClk.c **** 
1466:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1467:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptSource
1468:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1469:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1470:.\Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the WDT counters interrupts that are currently
1471:.\Generated_Source\PSoC4/CyLFClk.c ****     * set by the hardware, if a corresponding mode is selected.
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 50


1472:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1473:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
1474:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER0_INT - Counter 0
1475:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER1_INT - Counter 1
1476:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER2_INT - Counter 2
1477:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1478:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1479:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetInterruptSource(void)
1480:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1481:.\Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONTROL_REG & (CY_SYS_WDT_COUNTER0_INT | CY_SYS_WDT_COUNTER1_INT | CY_SY
1482:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1483:.\Generated_Source\PSoC4/CyLFClk.c **** 
1484:.\Generated_Source\PSoC4/CyLFClk.c **** 
1485:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1486:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
1487:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1488:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1489:.\Generated_Source\PSoC4/CyLFClk.c ****     * Clears all the WDT counter interrupts set in the mask.
1490:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1491:.\Generated_Source\PSoC4/CyLFClk.c ****     * Calling this function also prevents from Reset when the counter mode is set 
1492:.\Generated_Source\PSoC4/CyLFClk.c ****     * to generate 3 interrupts and then the device resets.
1493:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1494:.\Generated_Source\PSoC4/CyLFClk.c ****     * All the WDT interrupts are to be cleared by the firmware, otherwise
1495:.\Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
1496:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1497:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1498:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_INT - Clears counter 0 interrupts <br>
1499:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_INT - Clears counter 1 interrupts <br>
1500:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_INT - Clears counter 2 interrupts
1501:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1502:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1503:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function temporary removes the watchdog lock, if it was set, and
1504:.\Generated_Source\PSoC4/CyLFClk.c ****     * restores the lock state after cleaning the WDT interrupts that are set in
1505:.\Generated_Source\PSoC4/CyLFClk.c ****     * a mask.
1506:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1507:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1508:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(uint32 counterMask)
1509:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1510:.\Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
1511:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 wdtLockState;
1512:.\Generated_Source\PSoC4/CyLFClk.c **** 
1513:.\Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
1514:.\Generated_Source\PSoC4/CyLFClk.c **** 
1515:.\Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtLocked())
1516:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1517:.\Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 1u;
1518:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtUnlock();
1519:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1520:.\Generated_Source\PSoC4/CyLFClk.c ****         else
1521:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1522:.\Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 0u;
1523:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1524:.\Generated_Source\PSoC4/CyLFClk.c **** 
1525:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT control register value */
1526:.\Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_WDT_COUNTER0_INT |
1527:.\Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
1528:.\Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER2_INT);
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 51


1529:.\Generated_Source\PSoC4/CyLFClk.c **** 
1530:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG = counterMask | (CY_SYS_WDT_CONTROL_REG & ~(CY_SYS_WDT_COUNTER0_INT 
1531:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
1532:.\Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER2_INT)
1533:.\Generated_Source\PSoC4/CyLFClk.c **** 
1534:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
1535:.\Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
1536:.\Generated_Source\PSoC4/CyLFClk.c ****         */
1537:.\Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WDT_CONTROL_REG;
1538:.\Generated_Source\PSoC4/CyLFClk.c **** 
1539:.\Generated_Source\PSoC4/CyLFClk.c ****         if (1u == wdtLockState)
1540:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1541:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtLock();
1542:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1543:.\Generated_Source\PSoC4/CyLFClk.c **** 
1544:.\Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
1545:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1546:.\Generated_Source\PSoC4/CyLFClk.c **** 
1547:.\Generated_Source\PSoC4/CyLFClk.c **** 
1548:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1549:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtResetCounters
1550:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1551:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1552:.\Generated_Source\PSoC4/CyLFClk.c ****     * Resets all the WDT counters set in the mask.
1553:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1554:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
1555:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_RESET - Reset counter 0 <br>
1556:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_RESET - Reset counter 1 <br>
1557:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_RESET - Reset counter 2
1558:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1559:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1560:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function does not reset counter values if the Watchdog is locked.
1561:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
1562:.\Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1563:.\Generated_Source\PSoC4/CyLFClk.c ****     * The LFCLK source must be enabled. Otherwise, the function will never exit.
1564:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1565:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1566:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtResetCounters(uint32 countersMask)
1567:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1568:.\Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT reset value */
1569:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= (countersMask & CY_SYS_WDT_COUNTERS_RESET);
1570:.\Generated_Source\PSoC4/CyLFClk.c **** 
1571:.\Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WDT_CONTROL_REG & CY_SYS_WDT_COUNTERS_RESET))
1572:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1573:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
1574:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1575:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1576:.\Generated_Source\PSoC4/CyLFClk.c **** 
1577:.\Generated_Source\PSoC4/CyLFClk.c **** 
1578:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1579:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetInterruptCallback
1580:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1581:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1582:.\Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular WDT counter.
1583:.\Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the WDT interrupt.
1584:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1585:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 52


1586:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
1587:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1588:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the previous callback function.
1589:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
1590:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1591:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1592:.\Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function)
1593:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1594:.\Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
1595:.\Generated_Source\PSoC4/CyLFClk.c **** 
1596:.\Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1597:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1598:.\Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysWdtCallback[counterNum];
1599:.\Generated_Source\PSoC4/CyLFClk.c ****             cySysWdtCallback[counterNum] = function;
1600:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1601:.\Generated_Source\PSoC4/CyLFClk.c ****         else
1602:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1603:.\Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1604:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1605:.\Generated_Source\PSoC4/CyLFClk.c **** 
1606:.\Generated_Source\PSoC4/CyLFClk.c ****         return((cyWdtCallback)prevCallback);
1607:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1608:.\Generated_Source\PSoC4/CyLFClk.c **** 
1609:.\Generated_Source\PSoC4/CyLFClk.c **** 
1610:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1611:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptCallback
1612:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1613:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1614:.\Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the particular WDT counter.
1615:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1616:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1617:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1618:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for a particular WDT by
1619:.\Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
1620:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1621:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1622:.\Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(uint32 counterNum)
1623:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1624:.\Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback retCallback = (void *)0;
1625:.\Generated_Source\PSoC4/CyLFClk.c **** 
1626:.\Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1627:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1628:.\Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyWdtCallback)cySysWdtCallback[counterNum];
1629:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1630:.\Generated_Source\PSoC4/CyLFClk.c ****         else
1631:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1632:.\Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1633:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1634:.\Generated_Source\PSoC4/CyLFClk.c **** 
1635:.\Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
1636:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1637:.\Generated_Source\PSoC4/CyLFClk.c **** 
1638:.\Generated_Source\PSoC4/CyLFClk.c **** 
1639:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1640:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnableCounterIsr
1641:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1642:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 53


1643:.\Generated_Source\PSoC4/CyLFClk.c ****     * Enables the ISR callback servicing for the particular WDT counter
1644:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1645:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1646:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1647:.\Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate WDT counter. For example value 1 
1648:.\Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT counter.
1649:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1650:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1651:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnableCounterIsr(uint32 counterNum)
1652:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1653:.\Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1654:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1655:.\Generated_Source\PSoC4/CyLFClk.c ****             disableServicedIsr &= ~counterIntMaskTbl[counterNum];
1656:.\Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask |= counterIntMaskTbl[counterNum];
1657:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1658:.\Generated_Source\PSoC4/CyLFClk.c ****         else
1659:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1660:.\Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1661:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1662:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1663:.\Generated_Source\PSoC4/CyLFClk.c **** 
1664:.\Generated_Source\PSoC4/CyLFClk.c **** 
1665:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1666:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisableCounterIsr
1667:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1668:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1669:.\Generated_Source\PSoC4/CyLFClk.c ****     * Disables the ISR callback servicing for the particular WDT counter
1670:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1671:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1672:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1673:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1674:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisableCounterIsr(uint32 counterNum)
1675:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1676:.\Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1677:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1678:.\Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask &= ~counterIntMaskTbl[counterNum];
1679:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1680:.\Generated_Source\PSoC4/CyLFClk.c ****         else
1681:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1682:.\Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1683:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1684:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1685:.\Generated_Source\PSoC4/CyLFClk.c **** 
1686:.\Generated_Source\PSoC4/CyLFClk.c **** 
1687:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1688:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
1689:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1690:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1691:.\Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
1692:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1693:.\Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which WDT triggered in the interrupt and calls the 
1694:.\Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
1695:.\Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetIsrCallback() API.
1696:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1697:.\Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
1698:.\Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
1699:.\Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 54


1700:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1701:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
1702:.\Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
1703:.\Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
1704:.\Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
1705:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1706:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1707:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
1708:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1709:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
1710:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1711:.\Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER0_INT & wdtIsrMask))
1712:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1713:.\Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER0_INT);
1714:.\Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER0_INT;
1715:.\Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER0] != (void *) 0)
1716:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
1717:.\Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER0])();
1718:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
1719:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1720:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1721:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1722:.\Generated_Source\PSoC4/CyLFClk.c **** 
1723:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER1_INT & CY_SYS_WDT_CONTROL_REG))
1724:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1725:.\Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER1_INT & wdtIsrMask))
1726:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1727:.\Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER1_INT);
1728:.\Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER1_INT;
1729:.\Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER1] != (void *) 0)
1730:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
1731:.\Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER1])();
1732:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
1733:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1734:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1735:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1736:.\Generated_Source\PSoC4/CyLFClk.c **** 
1737:.\Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER2_INT & CY_SYS_WDT_CONTROL_REG))
1738:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1739:.\Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER2_INT & wdtIsrMask))
1740:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1741:.\Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER2] != (void *) 0)
1742:.\Generated_Source\PSoC4/CyLFClk.c ****                 {
1743:.\Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER2])();
1744:.\Generated_Source\PSoC4/CyLFClk.c ****                 }
1745:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1746:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER2_INT);
1747:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1748:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1749:.\Generated_Source\PSoC4/CyLFClk.c **** 
1750:.\Generated_Source\PSoC4/CyLFClk.c **** 
1751:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1752:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWatchdogFeed
1753:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1754:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1755:.\Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the corresponded Watchdog Counter before it causes the device reset.
1756:.\Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 55


1757:.\Generated_Source\PSoC4/CyLFClk.c ****     * Supported only for first WDT0 and second WDT1 counters in the "Watchdog" or 
1758:.\Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" modes.
1759:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1760:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1761:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0 - Feeds the Counter 0 <br>
1762:.\Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1 - Feeds the Counter 1
1763:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1764:.\Generated_Source\PSoC4/CyLFClk.c ****     * Value of counterNum corresponds to appropriate counter. For example value 1 
1765:.\Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT1 Counter.
1766:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1767:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1768:.\Generated_Source\PSoC4/CyLFClk.c ****     * Clears the WDT counter in the "Watchdog" mode or clears the WDT interrupt in
1769:.\Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" mode. Does nothing in other modes.
1770:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1771:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1772:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWatchdogFeed(uint32 counterNum)
1773:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1774:.\Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum == CY_SYS_WDT_COUNTER0)
1775:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1776:.\Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1777:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1778:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1779:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1780:.\Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1781:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1782:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER0_RESET);
1783:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1784:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1785:.\Generated_Source\PSoC4/CyLFClk.c ****             else
1786:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1787:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1788:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1789:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1790:.\Generated_Source\PSoC4/CyLFClk.c ****         else if(counterNum == CY_SYS_WDT_COUNTER1)
1791:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1792:.\Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1793:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1794:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1795:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1796:.\Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1797:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1798:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET);
1799:.\Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1800:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1801:.\Generated_Source\PSoC4/CyLFClk.c ****             else
1802:.\Generated_Source\PSoC4/CyLFClk.c ****             {
1803:.\Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1804:.\Generated_Source\PSoC4/CyLFClk.c ****             }
1805:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1806:.\Generated_Source\PSoC4/CyLFClk.c ****         else
1807:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1808:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Do nothing. */
1809:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1810:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1811:.\Generated_Source\PSoC4/CyLFClk.c **** 
1812:.\Generated_Source\PSoC4/CyLFClk.c **** 
1813:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 56


1814:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeCatch
1815:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1816:.\Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1817:.\Generated_Source\PSoC4/CyLFClk.c ****     * Returns once the LFCLK positive edge occurred.
1818:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1819:.\Generated_Source\PSoC4/CyLFClk.c ****     * CySysClkLfclkPosedgeRestore() should be called after this function
1820:.\Generated_Source\PSoC4/CyLFClk.c ****     * to restore the WDT configuration.
1821:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1822:.\Generated_Source\PSoC4/CyLFClk.c ****     * A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1823:.\Generated_Source\PSoC4/CyLFClk.c ****     * functions is expected to be called inside a critical section.
1824:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1825:.\Generated_Source\PSoC4/CyLFClk.c ****     * To ensure that the WDT counter value is read until it changes, the enabled
1826:.\Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter is used. If no counter is enabled, counter 0 is enabled.
1827:.\Generated_Source\PSoC4/CyLFClk.c ****     * And after the LFCLK source is switched, the counter 0 configuration
1828:.\Generated_Source\PSoC4/CyLFClk.c ****     * is restored.
1829:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1830:.\Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000 / PSoC4000S / PSoC 4100S / Analog 
1831:.\Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1832:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1833:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1834:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is
1835:.\Generated_Source\PSoC4/CyLFClk.c ****     * called). Call CySysWdtUnlock() to unlock WDT.
1836:.\Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1837:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1838:.\Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void)
1839:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1840:.\Generated_Source\PSoC4/CyLFClk.c ****         uint32 firstCount;
1841:.\Generated_Source\PSoC4/CyLFClk.c ****         static uint32 lfclkPosedgeEnabledWdtCounter = 0u;
1842:.\Generated_Source\PSoC4/CyLFClk.c **** 
1843:.\Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1844:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1845:.\Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1846:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1847:.\Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1848:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1849:.\Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER1;
1850:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1851:.\Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1852:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1853:.\Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER2;
1854:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1855:.\Generated_Source\PSoC4/CyLFClk.c ****         else /* All WDT counters are disabled */
1856:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1857:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Configure WDT counter # 0 */
1858:.\Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 1u;
1859:.\Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1860:.\Generated_Source\PSoC4/CyLFClk.c **** 
1861:.\Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Mode = CySysWdtGetMode(CY_SYS_WDT_COUNTER0);
1862:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
1863:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
1864:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1865:.\Generated_Source\PSoC4/CyLFClk.c **** 
1866:.\Generated_Source\PSoC4/CyLFClk.c ****         firstCount = CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter);
1867:.\Generated_Source\PSoC4/CyLFClk.c ****         while (CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter) == firstCount)
1868:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1869:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for counter to increment */
1870:.\Generated_Source\PSoC4/CyLFClk.c ****         }
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 57


1871:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1872:.\Generated_Source\PSoC4/CyLFClk.c **** 
1873:.\Generated_Source\PSoC4/CyLFClk.c **** 
1874:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1875:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeRestore
1876:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1877:.\Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1878:.\Generated_Source\PSoC4/CyLFClk.c ****     *  Restores the WDT configuration after a CySysClkLfclkPosedgeCatch() call.
1879:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1880:.\Generated_Source\PSoC4/CyLFClk.c ****     *  A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1881:.\Generated_Source\PSoC4/CyLFClk.c ****     *  functions is expected to be called inside a critical section.
1882:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1883:.\Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000/PSoC 4000S/PSoC 4100S/ Analog 
1884:.\Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1885:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1886:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
1887:.\Generated_Source\PSoC4/CyLFClk.c ****     *  This function has no effect if WDT is locked (CySysWdtLock() is
1888:.\Generated_Source\PSoC4/CyLFClk.c ****     *  called). Call CySysWdtUnlock() to unlock WDT.
1889:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1890:.\Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1891:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1892:.\Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void)
1893:.\Generated_Source\PSoC4/CyLFClk.c ****     {
1894:.\Generated_Source\PSoC4/CyLFClk.c ****         if (lfclkPosedgeWdtCounter0Enabled != 0u)
1895:.\Generated_Source\PSoC4/CyLFClk.c ****         {
1896:.\Generated_Source\PSoC4/CyLFClk.c ****             /* Restore counter # 0 configuration and force its shutdown */
1897:.\Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= (uint32)(~CY_SYS_WDT_COUNTER0_MASK);
1898:.\Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, lfclkPosedgeWdtCounter0Mode);
1899:.\Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 0u;
1900:.\Generated_Source\PSoC4/CyLFClk.c ****         }
1901:.\Generated_Source\PSoC4/CyLFClk.c ****     }
1902:.\Generated_Source\PSoC4/CyLFClk.c **** 
1903:.\Generated_Source\PSoC4/CyLFClk.c **** #else
1904:.\Generated_Source\PSoC4/CyLFClk.c **** 
1905:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1906:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1907:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1908:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1909:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of the WDT counter.
1910:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1911:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1912:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - Counter is disabled
1913:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - Counter is enabled
1914:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1915:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1916:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(void)
1917:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 635              		.loc 1 1917 0
 636              		.cfi_startproc
1918:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
 637              		.loc 1 1918 0
 638 0000 044B     		ldr	r3, .L52
 639 0002 1868     		ldr	r0, [r3]
 640 0004 044B     		ldr	r3, .L52+4
 641 0006 9C46     		mov	ip, r3
 642 0008 6044     		add	r0, r0, ip
 643 000a 431E     		sub	r3, r0, #1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 58


 644 000c 9841     		sbc	r0, r0, r3
 645 000e C0B2     		uxtb	r0, r0
1919:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 646              		.loc 1 1919 0
 647              		@ sp needed
 648 0010 7047     		bx	lr
 649              	.L53:
 650 0012 C046     		.align	2
 651              	.L52:
 652 0014 38000340 		.word	1073938488
 653 0018 9B771253 		.word	1393719195
 654              		.cfi_endproc
 655              	.LFE11:
 656              		.size	CySysWdtGetEnabledStatus, .-CySysWdtGetEnabledStatus
 657              		.section	.text.CySysWdtEnable,"ax",%progbits
 658              		.align	2
 659              		.global	CySysWdtEnable
 660              		.code	16
 661              		.thumb_func
 662              		.type	CySysWdtEnable, %function
 663              	CySysWdtEnable:
 664              	.LFB12:
1920:.\Generated_Source\PSoC4/CyLFClk.c **** 
1921:.\Generated_Source\PSoC4/CyLFClk.c **** 
1922:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1923:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1924:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1925:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1926:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1927:.\Generated_Source\PSoC4/CyLFClk.c ****     * Enables watchdog timer reset generation.
1928:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1929:.\Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtClearInterrupt() feeds the watchdog. Two unserviced interrupts lead 
1930:.\Generated_Source\PSoC4/CyLFClk.c ****     * to a system reset (i.e. at the third match).
1931:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1932:.\Generated_Source\PSoC4/CyLFClk.c ****     * ILO is enabled by the hardware once WDT is started.
1933:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1934:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1935:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(void)
1936:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 665              		.loc 1 1936 0
 666              		.cfi_startproc
1937:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
 667              		.loc 1 1937 0
 668 0000 0022     		mov	r2, #0
 669 0002 014B     		ldr	r3, .L55
 670 0004 1A60     		str	r2, [r3]
1938:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 671              		.loc 1 1938 0
 672              		@ sp needed
 673 0006 7047     		bx	lr
 674              	.L56:
 675              		.align	2
 676              	.L55:
 677 0008 38000340 		.word	1073938488
 678              		.cfi_endproc
 679              	.LFE12:
 680              		.size	CySysWdtEnable, .-CySysWdtEnable
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 59


 681              		.section	.text.CySysWdtDisable,"ax",%progbits
 682              		.align	2
 683              		.global	CySysWdtDisable
 684              		.code	16
 685              		.thumb_func
 686              		.type	CySysWdtDisable, %function
 687              	CySysWdtDisable:
 688              	.LFB13:
1939:.\Generated_Source\PSoC4/CyLFClk.c **** 
1940:.\Generated_Source\PSoC4/CyLFClk.c **** 
1941:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1942:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1943:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1944:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1945:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the WDT reset generation.
1946:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1947:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function unlocks the ENABLE bit in the CLK_ILO_CONFIG registers and
1948:.\Generated_Source\PSoC4/CyLFClk.c ****     * enables the user to disable ILO.
1949:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1950:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1951:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(void)
1952:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 689              		.loc 1 1952 0
 690              		.cfi_startproc
1953:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
 691              		.loc 1 1953 0
 692 0000 014A     		ldr	r2, .L58
 693 0002 024B     		ldr	r3, .L58+4
 694 0004 1A60     		str	r2, [r3]
1954:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 695              		.loc 1 1954 0
 696              		@ sp needed
 697 0006 7047     		bx	lr
 698              	.L59:
 699              		.align	2
 700              	.L58:
 701 0008 6588EDAC 		.word	-1393719195
 702 000c 38000340 		.word	1073938488
 703              		.cfi_endproc
 704              	.LFE13:
 705              		.size	CySysWdtDisable, .-CySysWdtDisable
 706              		.section	.text.CySysWdtSetMatch,"ax",%progbits
 707              		.align	2
 708              		.global	CySysWdtSetMatch
 709              		.code	16
 710              		.thumb_func
 711              		.type	CySysWdtSetMatch, %function
 712              	CySysWdtSetMatch:
 713              	.LFB14:
1955:.\Generated_Source\PSoC4/CyLFClk.c **** 
1956:.\Generated_Source\PSoC4/CyLFClk.c **** 
1957:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1958:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1959:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1960:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1961:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1962:.\Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 60


1963:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
1964:.\Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
1965:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1966:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1967:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 match)
1968:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 714              		.loc 1 1968 0
 715              		.cfi_startproc
 716              	.LVL51:
1969:.\Generated_Source\PSoC4/CyLFClk.c ****         match &= CY_SYS_WDT_MATCH_MASK;
 717              		.loc 1 1969 0
 718 0000 0004     		lsl	r0, r0, #16
 719              	.LVL52:
 720 0002 030C     		lsr	r3, r0, #16
 721              	.LVL53:
1970:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_MATCH_MASK)) | match;
 722              		.loc 1 1970 0
 723 0004 034A     		ldr	r2, .L61
 724 0006 1068     		ldr	r0, [r2]
 725 0008 000C     		lsr	r0, r0, #16
 726 000a 0004     		lsl	r0, r0, #16
 727 000c 1843     		orr	r0, r3
 728 000e 1060     		str	r0, [r2]
1971:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 729              		.loc 1 1971 0
 730              		@ sp needed
 731 0010 7047     		bx	lr
 732              	.L62:
 733 0012 C046     		.align	2
 734              	.L61:
 735 0014 40000340 		.word	1073938496
 736              		.cfi_endproc
 737              	.LFE14:
 738              		.size	CySysWdtSetMatch, .-CySysWdtSetMatch
 739              		.section	.text.CySysWdtGetMatch,"ax",%progbits
 740              		.align	2
 741              		.global	CySysWdtGetMatch
 742              		.code	16
 743              		.thumb_func
 744              		.type	CySysWdtGetMatch, %function
 745              	CySysWdtGetMatch:
 746              	.LFB15:
1972:.\Generated_Source\PSoC4/CyLFClk.c **** 
1973:.\Generated_Source\PSoC4/CyLFClk.c **** 
1974:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1975:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1976:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1977:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1978:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1979:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1980:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The counter match value.
1981:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1982:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1983:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(void)
1984:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 747              		.loc 1 1984 0
 748              		.cfi_startproc
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 61


1985:.\Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
 749              		.loc 1 1985 0
 750 0000 024B     		ldr	r3, .L64
 751 0002 1868     		ldr	r0, [r3]
 752 0004 0004     		lsl	r0, r0, #16
 753 0006 000C     		lsr	r0, r0, #16
1986:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 754              		.loc 1 1986 0
 755              		@ sp needed
 756 0008 7047     		bx	lr
 757              	.L65:
 758 000a C046     		.align	2
 759              	.L64:
 760 000c 40000340 		.word	1073938496
 761              		.cfi_endproc
 762              	.LFE15:
 763              		.size	CySysWdtGetMatch, .-CySysWdtGetMatch
 764              		.section	.text.CySysWdtGetCount,"ax",%progbits
 765              		.align	2
 766              		.global	CySysWdtGetCount
 767              		.code	16
 768              		.thumb_func
 769              		.type	CySysWdtGetCount, %function
 770              	CySysWdtGetCount:
 771              	.LFB16:
1987:.\Generated_Source\PSoC4/CyLFClk.c **** 
1988:.\Generated_Source\PSoC4/CyLFClk.c **** 
1989:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1990:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1991:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1992:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1993:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1994:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1995:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.
1996:.\Generated_Source\PSoC4/CyLFClk.c ****     *
1997:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1998:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(void)
1999:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 772              		.loc 1 1999 0
 773              		.cfi_startproc
2000:.\Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
 774              		.loc 1 2000 0
 775 0000 014B     		ldr	r3, .L67
 776 0002 1868     		ldr	r0, [r3]
2001:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 777              		.loc 1 2001 0
 778              		@ sp needed
 779 0004 7047     		bx	lr
 780              	.L68:
 781 0006 C046     		.align	2
 782              	.L67:
 783 0008 3C000340 		.word	1073938492
 784              		.cfi_endproc
 785              	.LFE16:
 786              		.size	CySysWdtGetCount, .-CySysWdtGetCount
 787              		.section	.text.CySysWdtSetIgnoreBits,"ax",%progbits
 788              		.align	2
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 62


 789              		.global	CySysWdtSetIgnoreBits
 790              		.code	16
 791              		.thumb_func
 792              		.type	CySysWdtSetIgnoreBits, %function
 793              	CySysWdtSetIgnoreBits:
 794              	.LFB17:
2002:.\Generated_Source\PSoC4/CyLFClk.c **** 
2003:.\Generated_Source\PSoC4/CyLFClk.c **** 
2004:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2005:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIgnoreBits
2006:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2007:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2008:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2009:.\Generated_Source\PSoC4/CyLFClk.c ****     * Configures the number of the MSB bits of the watchdog timer that are not
2010:.\Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2011:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2012:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param bitsNum Valid range [0-15]. The number of the MSB bits.
2013:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2014:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details The value of bitsNum controls the time-to-reset of the watchdog
2015:.\Generated_Source\PSoC4/CyLFClk.c ****     * (which happens after 3 successive matches).
2016:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2017:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2018:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetIgnoreBits(uint32 bitsNum)
2019:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 795              		.loc 1 2019 0
 796              		.cfi_startproc
 797              	.LVL54:
2020:.\Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
 798              		.loc 1 2020 0
 799 0000 0004     		lsl	r0, r0, #16
 800              	.LVL55:
 801 0002 F022     		mov	r2, #240
 802 0004 1203     		lsl	r2, r2, #12
 803 0006 031C     		mov	r3, r0
 804 0008 1340     		and	r3, r2
 805              	.LVL56:
2021:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_IGNORE_BITS_MASK)) | bi
 806              		.loc 1 2021 0
 807 000a 0349     		ldr	r1, .L70
 808 000c 0868     		ldr	r0, [r1]
 809 000e 034A     		ldr	r2, .L70+4
 810 0010 1040     		and	r0, r2
 811 0012 1843     		orr	r0, r3
 812 0014 0860     		str	r0, [r1]
2022:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 813              		.loc 1 2022 0
 814              		@ sp needed
 815 0016 7047     		bx	lr
 816              	.L71:
 817              		.align	2
 818              	.L70:
 819 0018 40000340 		.word	1073938496
 820 001c FFFFF0FF 		.word	-983041
 821              		.cfi_endproc
 822              	.LFE17:
 823              		.size	CySysWdtSetIgnoreBits, .-CySysWdtSetIgnoreBits
 824              		.section	.text.CySysWdtGetIgnoreBits,"ax",%progbits
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 63


 825              		.align	2
 826              		.global	CySysWdtGetIgnoreBits
 827              		.code	16
 828              		.thumb_func
 829              		.type	CySysWdtGetIgnoreBits, %function
 830              	CySysWdtGetIgnoreBits:
 831              	.LFB18:
2023:.\Generated_Source\PSoC4/CyLFClk.c **** 
2024:.\Generated_Source\PSoC4/CyLFClk.c **** 
2025:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2026:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIgnoreBits
2027:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2028:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2029:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2030:.\Generated_Source\PSoC4/CyLFClk.c ****     * Reads the number of the  MSB bits of the watchdog timer that are not
2031:.\Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2032:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2033:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The number of the MSB bits.
2034:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2035:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2036:.\Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetIgnoreBits(void)
2037:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 832              		.loc 1 2037 0
 833              		.cfi_startproc
2038:.\Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
 834              		.loc 1 2038 0
 835 0000 024B     		ldr	r3, .L73
 836 0002 1868     		ldr	r0, [r3]
 837 0004 0003     		lsl	r0, r0, #12
 838 0006 000F     		lsr	r0, r0, #28
2039:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 839              		.loc 1 2039 0
 840              		@ sp needed
 841 0008 7047     		bx	lr
 842              	.L74:
 843 000a C046     		.align	2
 844              	.L73:
 845 000c 40000340 		.word	1073938496
 846              		.cfi_endproc
 847              	.LFE18:
 848              		.size	CySysWdtGetIgnoreBits, .-CySysWdtGetIgnoreBits
 849              		.section	.text.CySysWdtClearInterrupt,"ax",%progbits
 850              		.align	2
 851              		.global	CySysWdtClearInterrupt
 852              		.code	16
 853              		.thumb_func
 854              		.type	CySysWdtClearInterrupt, %function
 855              	CySysWdtClearInterrupt:
 856              	.LFB19:
2040:.\Generated_Source\PSoC4/CyLFClk.c **** 
2041:.\Generated_Source\PSoC4/CyLFClk.c **** 
2042:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2043:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
2044:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2045:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2046:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2047:.\Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the watchdog.
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 64


2048:.\Generated_Source\PSoC4/CyLFClk.c ****     * Cleans the WDT match flag which is set every time the WDT counter reaches a 
2049:.\Generated_Source\PSoC4/CyLFClk.c ****     * WDT match value. Two unserviced interrupts lead to a system reset 
2050:.\Generated_Source\PSoC4/CyLFClk.c ****     * (i.e. at the third match).
2051:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2052:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2053:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(void)
2054:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 857              		.loc 1 2054 0
 858              		.cfi_startproc
2055:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 859              		.loc 1 2055 0
 860 0000 024A     		ldr	r2, .L76
 861 0002 1168     		ldr	r1, [r2]
 862 0004 0123     		mov	r3, #1
 863 0006 0B43     		orr	r3, r1
 864 0008 1360     		str	r3, [r2]
2056:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 865              		.loc 1 2056 0
 866              		@ sp needed
 867 000a 7047     		bx	lr
 868              	.L77:
 869              		.align	2
 870              	.L76:
 871 000c 44000340 		.word	1073938500
 872              		.cfi_endproc
 873              	.LFE19:
 874              		.size	CySysWdtClearInterrupt, .-CySysWdtClearInterrupt
 875              		.section	.text.CySysWdtMaskInterrupt,"ax",%progbits
 876              		.align	2
 877              		.global	CySysWdtMaskInterrupt
 878              		.code	16
 879              		.thumb_func
 880              		.type	CySysWdtMaskInterrupt, %function
 881              	CySysWdtMaskInterrupt:
 882              	.LFB20:
2057:.\Generated_Source\PSoC4/CyLFClk.c **** 
2058:.\Generated_Source\PSoC4/CyLFClk.c **** 
2059:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2060:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtMaskInterrupt
2061:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2062:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2063:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2064:.\Generated_Source\PSoC4/CyLFClk.c ****     * After masking interrupts from WDT, they are not passed to CPU.
2065:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function does not disable WDT reset generation.
2066:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2067:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2068:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtMaskInterrupt(void)
2069:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 883              		.loc 1 2069 0
 884              		.cfi_startproc
2070:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
 885              		.loc 1 2070 0
 886 0000 024A     		ldr	r2, .L79
 887 0002 1368     		ldr	r3, [r2]
 888 0004 0121     		mov	r1, #1
 889 0006 8B43     		bic	r3, r1
 890 0008 1360     		str	r3, [r2]
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 65


2071:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 891              		.loc 1 2071 0
 892              		@ sp needed
 893 000a 7047     		bx	lr
 894              	.L80:
 895              		.align	2
 896              	.L79:
 897 000c 4C000340 		.word	1073938508
 898              		.cfi_endproc
 899              	.LFE20:
 900              		.size	CySysWdtMaskInterrupt, .-CySysWdtMaskInterrupt
 901              		.section	.text.CySysWdtUnmaskInterrupt,"ax",%progbits
 902              		.align	2
 903              		.global	CySysWdtUnmaskInterrupt
 904              		.code	16
 905              		.thumb_func
 906              		.type	CySysWdtUnmaskInterrupt, %function
 907              	CySysWdtUnmaskInterrupt:
 908              	.LFB21:
2072:.\Generated_Source\PSoC4/CyLFClk.c **** 
2073:.\Generated_Source\PSoC4/CyLFClk.c **** 
2074:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2075:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnmaskInterrupt
2076:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2077:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2078:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2079:.\Generated_Source\PSoC4/CyLFClk.c ****     * After unmasking interrupts from WDT, they are passed to CPU.
2080:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function does not impact the reset generation.
2081:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2082:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2083:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnmaskInterrupt(void)
2084:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 909              		.loc 1 2084 0
 910              		.cfi_startproc
2085:.\Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 911              		.loc 1 2085 0
 912 0000 024A     		ldr	r2, .L82
 913 0002 1168     		ldr	r1, [r2]
 914 0004 0123     		mov	r3, #1
 915 0006 0B43     		orr	r3, r1
 916 0008 1360     		str	r3, [r2]
2086:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 917              		.loc 1 2086 0
 918              		@ sp needed
 919 000a 7047     		bx	lr
 920              	.L83:
 921              		.align	2
 922              	.L82:
 923 000c 4C000340 		.word	1073938508
 924              		.cfi_endproc
 925              	.LFE21:
 926              		.size	CySysWdtUnmaskInterrupt, .-CySysWdtUnmaskInterrupt
 927              		.section	.text.CySysWdtSetInterruptCallback,"ax",%progbits
 928              		.align	2
 929              		.global	CySysWdtSetInterruptCallback
 930              		.code	16
 931              		.thumb_func
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 66


 932              		.type	CySysWdtSetInterruptCallback, %function
 933              	CySysWdtSetInterruptCallback:
 934              	.LFB22:
2087:.\Generated_Source\PSoC4/CyLFClk.c **** 
2088:.\Generated_Source\PSoC4/CyLFClk.c **** 
2089:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2090:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIsrCallback
2091:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2092:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2093:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2094:.\Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the WDT counter
2095:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2096:.\Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2097:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2098:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to a previous callback function.
2099:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2100:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2101:.\Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function)
2102:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 935              		.loc 1 2102 0
 936              		.cfi_startproc
 937              	.LVL57:
2103:.\Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
2104:.\Generated_Source\PSoC4/CyLFClk.c **** 
2105:.\Generated_Source\PSoC4/CyLFClk.c ****         prevCallback = cySysWdtCallback;
 938              		.loc 1 2105 0
 939 0000 024B     		ldr	r3, .L85
 940 0002 5A68     		ldr	r2, [r3, #4]
 941              	.LVL58:
2106:.\Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
 942              		.loc 1 2106 0
 943 0004 5860     		str	r0, [r3, #4]
2107:.\Generated_Source\PSoC4/CyLFClk.c **** 
2108:.\Generated_Source\PSoC4/CyLFClk.c ****         return(prevCallback);
2109:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 944              		.loc 1 2109 0
 945 0006 101C     		mov	r0, r2
 946              	.LVL59:
 947              		@ sp needed
 948 0008 7047     		bx	lr
 949              	.L86:
 950 000a C046     		.align	2
 951              	.L85:
 952 000c 00000000 		.word	.LANCHOR0
 953              		.cfi_endproc
 954              	.LFE22:
 955              		.size	CySysWdtSetInterruptCallback, .-CySysWdtSetInterruptCallback
 956              		.section	.text.CySysWdtGetInterruptCallback,"ax",%progbits
 957              		.align	2
 958              		.global	CySysWdtGetInterruptCallback
 959              		.code	16
 960              		.thumb_func
 961              		.type	CySysWdtGetInterruptCallback, %function
 962              	CySysWdtGetInterruptCallback:
 963              	.LFB23:
2110:.\Generated_Source\PSoC4/CyLFClk.c **** 
2111:.\Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 67


2112:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2113:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIsrCallback
2114:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2115:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2116:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2117:.\Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the WDT counter
2118:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2119:.\Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for WDT.
2120:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2121:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2122:.\Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(void)
2123:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 964              		.loc 1 2123 0
 965              		.cfi_startproc
2124:.\Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
 966              		.loc 1 2124 0
 967 0000 014B     		ldr	r3, .L88
 968 0002 5868     		ldr	r0, [r3, #4]
2125:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 969              		.loc 1 2125 0
 970              		@ sp needed
 971 0004 7047     		bx	lr
 972              	.L89:
 973 0006 C046     		.align	2
 974              	.L88:
 975 0008 00000000 		.word	.LANCHOR0
 976              		.cfi_endproc
 977              	.LFE23:
 978              		.size	CySysWdtGetInterruptCallback, .-CySysWdtGetInterruptCallback
 979              		.section	.text.CySysWdtIsr,"ax",%progbits
 980              		.align	2
 981              		.global	CySysWdtIsr
 982              		.code	16
 983              		.thumb_func
 984              		.type	CySysWdtIsr, %function
 985              	CySysWdtIsr:
 986              	.LFB24:
2126:.\Generated_Source\PSoC4/CyLFClk.c **** 
2127:.\Generated_Source\PSoC4/CyLFClk.c **** 
2128:.\Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2129:.\Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
2130:.\Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2131:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2132:.\Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2133:.\Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
2134:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2135:.\Generated_Source\PSoC4/CyLFClk.c ****     * The handler calls the respective callback functions configured by the user 
2136:.\Generated_Source\PSoC4/CyLFClk.c ****     * by using CySysWdtSetIsrCallback() API.
2137:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2138:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2139:.\Generated_Source\PSoC4/CyLFClk.c ****     * \details
2140:.\Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
2141:.\Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
2142:.\Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
2143:.\Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
2144:.\Generated_Source\PSoC4/CyLFClk.c ****     *
2145:.\Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 68


2146:.\Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
2147:.\Generated_Source\PSoC4/CyLFClk.c ****     {
 987              		.loc 1 2147 0
 988              		.cfi_startproc
 989 0000 08B5     		push	{r3, lr}
 990              		.cfi_def_cfa_offset 8
 991              		.cfi_offset 3, -8
 992              		.cfi_offset 14, -4
2148:.\Generated_Source\PSoC4/CyLFClk.c ****         if(cySysWdtCallback != (void *) 0)
 993              		.loc 1 2148 0
 994 0002 044B     		ldr	r3, .L92
 995 0004 5B68     		ldr	r3, [r3, #4]
 996 0006 002B     		cmp	r3, #0
 997 0008 00D0     		beq	.L91
2149:.\Generated_Source\PSoC4/CyLFClk.c ****         {
2150:.\Generated_Source\PSoC4/CyLFClk.c ****             (void)(cySysWdtCallback)();
 998              		.loc 1 2150 0
 999 000a 9847     		blx	r3
 1000              	.LVL60:
 1001              	.L91:
2151:.\Generated_Source\PSoC4/CyLFClk.c ****         }
2152:.\Generated_Source\PSoC4/CyLFClk.c **** 
2153:.\Generated_Source\PSoC4/CyLFClk.c ****         CySysWdtClearInterrupt();
 1002              		.loc 1 2153 0
 1003 000c FFF7FEFF 		bl	CySysWdtClearInterrupt
 1004              	.LVL61:
2154:.\Generated_Source\PSoC4/CyLFClk.c ****     }
 1005              		.loc 1 2154 0
 1006              		@ sp needed
 1007 0010 08BD     		pop	{r3, pc}
 1008              	.L93:
 1009 0012 C046     		.align	2
 1010              	.L92:
 1011 0014 00000000 		.word	.LANCHOR0
 1012              		.cfi_endproc
 1013              	.LFE24:
 1014              		.size	CySysWdtIsr, .-CySysWdtIsr
 1015              		.bss
 1016              		.align	2
 1017              		.set	.LANCHOR0,. + 0
 1018              		.type	compensateRunningStatus.4678, %object
 1019              		.size	compensateRunningStatus.4678, 4
 1020              	compensateRunningStatus.4678:
 1021 0000 00000000 		.space	4
 1022              		.type	cySysWdtCallback, %object
 1023              		.size	cySysWdtCallback, 4
 1024              	cySysWdtCallback:
 1025 0004 00000000 		.space	4
 1026              		.text
 1027              	.Letext0:
 1028              		.file 3 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1029              		.file 4 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1030              		.section	.debug_info,"",%progbits
 1031              	.Ldebug_info0:
 1032 0000 3B040000 		.4byte	0x43b
 1033 0004 0400     		.2byte	0x4
 1034 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 69


 1035 000a 04       		.byte	0x4
 1036 000b 01       		.uleb128 0x1
 1037 000c 30040000 		.4byte	.LASF57
 1038 0010 01       		.byte	0x1
 1039 0011 39020000 		.4byte	.LASF58
 1040 0015 A4030000 		.4byte	.LASF59
 1041 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1042 001d 00000000 		.4byte	0
 1043 0021 00000000 		.4byte	.Ldebug_line0
 1044 0025 02       		.uleb128 0x2
 1045 0026 01       		.byte	0x1
 1046 0027 06       		.byte	0x6
 1047 0028 81000000 		.4byte	.LASF0
 1048 002c 02       		.uleb128 0x2
 1049 002d 01       		.byte	0x1
 1050 002e 08       		.byte	0x8
 1051 002f 0C030000 		.4byte	.LASF1
 1052 0033 02       		.uleb128 0x2
 1053 0034 02       		.byte	0x2
 1054 0035 05       		.byte	0x5
 1055 0036 32030000 		.4byte	.LASF2
 1056 003a 02       		.uleb128 0x2
 1057 003b 02       		.byte	0x2
 1058 003c 07       		.byte	0x7
 1059 003d E0010000 		.4byte	.LASF3
 1060 0041 02       		.uleb128 0x2
 1061 0042 04       		.byte	0x4
 1062 0043 05       		.byte	0x5
 1063 0044 C6000000 		.4byte	.LASF4
 1064 0048 02       		.uleb128 0x2
 1065 0049 04       		.byte	0x4
 1066 004a 07       		.byte	0x7
 1067 004b B8010000 		.4byte	.LASF5
 1068 004f 02       		.uleb128 0x2
 1069 0050 08       		.byte	0x8
 1070 0051 05       		.byte	0x5
 1071 0052 73000000 		.4byte	.LASF6
 1072 0056 02       		.uleb128 0x2
 1073 0057 08       		.byte	0x8
 1074 0058 07       		.byte	0x7
 1075 0059 2D000000 		.4byte	.LASF7
 1076 005d 03       		.uleb128 0x3
 1077 005e 04       		.byte	0x4
 1078 005f 05       		.byte	0x5
 1079 0060 696E7400 		.ascii	"int\000"
 1080 0064 02       		.uleb128 0x2
 1081 0065 04       		.byte	0x4
 1082 0066 07       		.byte	0x7
 1083 0067 88010000 		.4byte	.LASF8
 1084 006b 04       		.uleb128 0x4
 1085 006c D8000000 		.4byte	.LASF9
 1086 0070 03       		.byte	0x3
 1087 0071 9801     		.2byte	0x198
 1088 0073 2C000000 		.4byte	0x2c
 1089 0077 04       		.uleb128 0x4
 1090 0078 1C010000 		.4byte	.LASF10
 1091 007c 03       		.byte	0x3
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 70


 1092 007d 9A01     		.2byte	0x19a
 1093 007f 48000000 		.4byte	0x48
 1094 0083 02       		.uleb128 0x2
 1095 0084 04       		.byte	0x4
 1096 0085 04       		.byte	0x4
 1097 0086 DF020000 		.4byte	.LASF11
 1098 008a 02       		.uleb128 0x2
 1099 008b 08       		.byte	0x8
 1100 008c 04       		.byte	0x4
 1101 008d DE000000 		.4byte	.LASF12
 1102 0091 02       		.uleb128 0x2
 1103 0092 01       		.byte	0x1
 1104 0093 08       		.byte	0x8
 1105 0094 74030000 		.4byte	.LASF13
 1106 0098 04       		.uleb128 0x4
 1107 0099 F4030000 		.4byte	.LASF14
 1108 009d 03       		.byte	0x3
 1109 009e 3A02     		.2byte	0x23a
 1110 00a0 48000000 		.4byte	0x48
 1111 00a4 04       		.uleb128 0x4
 1112 00a5 5C020000 		.4byte	.LASF15
 1113 00a9 03       		.byte	0x3
 1114 00aa 4402     		.2byte	0x244
 1115 00ac B0000000 		.4byte	0xb0
 1116 00b0 05       		.uleb128 0x5
 1117 00b1 77000000 		.4byte	0x77
 1118 00b5 06       		.uleb128 0x6
 1119 00b6 04       		.byte	0x4
 1120 00b7 BB000000 		.4byte	0xbb
 1121 00bb 07       		.uleb128 0x7
 1122 00bc 08       		.uleb128 0x8
 1123 00bd AC000000 		.4byte	.LASF16
 1124 00c1 02       		.byte	0x2
 1125 00c2 58       		.byte	0x58
 1126 00c3 B5000000 		.4byte	0xb5
 1127 00c7 02       		.uleb128 0x2
 1128 00c8 04       		.byte	0x4
 1129 00c9 07       		.byte	0x7
 1130 00ca 9A020000 		.4byte	.LASF17
 1131 00ce 09       		.uleb128 0x9
 1132 00cf 18020000 		.4byte	.LASF18
 1133 00d3 01       		.byte	0x1
 1134 00d4 53       		.byte	0x53
 1135 00d5 00000000 		.4byte	.LFB1
 1136 00d9 14000000 		.4byte	.LFE1-.LFB1
 1137 00dd 01       		.uleb128 0x1
 1138 00de 9C       		.byte	0x9c
 1139 00df 09       		.uleb128 0x9
 1140 00e0 F7000000 		.4byte	.LASF19
 1141 00e4 01       		.byte	0x1
 1142 00e5 6C       		.byte	0x6c
 1143 00e6 00000000 		.4byte	.LFB2
 1144 00ea 10000000 		.4byte	.LFE2-.LFB2
 1145 00ee 01       		.uleb128 0x1
 1146 00ef 9C       		.byte	0x9c
 1147 00f0 09       		.uleb128 0x9
 1148 00f1 11000000 		.4byte	.LASF20
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 71


 1149 00f5 01       		.byte	0x1
 1150 00f6 A8       		.byte	0xa8
 1151 00f7 00000000 		.4byte	.LFB3
 1152 00fb 34000000 		.4byte	.LFE3-.LFB3
 1153 00ff 01       		.uleb128 0x1
 1154 0100 9C       		.byte	0x9c
 1155 0101 09       		.uleb128 0x9
 1156 0102 23010000 		.4byte	.LASF21
 1157 0106 01       		.byte	0x1
 1158 0107 C9       		.byte	0xc9
 1159 0108 00000000 		.4byte	.LFB4
 1160 010c 28000000 		.4byte	.LFE4-.LFB4
 1161 0110 01       		.uleb128 0x1
 1162 0111 9C       		.byte	0x9c
 1163 0112 0A       		.uleb128 0xa
 1164 0113 FD030000 		.4byte	.LASF31
 1165 0117 01       		.byte	0x1
 1166 0118 0A01     		.2byte	0x10a
 1167 011a 98000000 		.4byte	0x98
 1168 011e 00000000 		.4byte	.LFB5
 1169 0122 08010000 		.4byte	.LFE5-.LFB5
 1170 0126 01       		.uleb128 0x1
 1171 0127 9C       		.byte	0x9c
 1172 0128 9F010000 		.4byte	0x19f
 1173 012c 0B       		.uleb128 0xb
 1174 012d AB010000 		.4byte	.LASF22
 1175 0131 01       		.byte	0x1
 1176 0132 0A01     		.2byte	0x10a
 1177 0134 77000000 		.4byte	0x77
 1178 0138 00000000 		.4byte	.LLST0
 1179 013c 0B       		.uleb128 0xb
 1180 013d E5000000 		.4byte	.LASF23
 1181 0141 01       		.byte	0x1
 1182 0142 0A01     		.2byte	0x10a
 1183 0144 9F010000 		.4byte	0x19f
 1184 0148 E9000000 		.4byte	.LLST1
 1185 014c 0C       		.uleb128 0xc
 1186 014d 07010000 		.4byte	.LASF24
 1187 0151 01       		.byte	0x1
 1188 0152 0C01     		.2byte	0x10c
 1189 0154 77000000 		.4byte	0x77
 1190 0158 20010000 		.4byte	.LLST2
 1191 015c 0C       		.uleb128 0xc
 1192 015d 8F030000 		.4byte	.LASF25
 1193 0161 01       		.byte	0x1
 1194 0162 0D01     		.2byte	0x10d
 1195 0164 77000000 		.4byte	0x77
 1196 0168 4A010000 		.4byte	.LLST3
 1197 016c 0D       		.uleb128 0xd
 1198 016d 1A030000 		.4byte	.LASF26
 1199 0171 01       		.byte	0x1
 1200 0172 0E01     		.2byte	0x10e
 1201 0174 77000000 		.4byte	0x77
 1202 0178 05       		.uleb128 0x5
 1203 0179 03       		.byte	0x3
 1204 017a 00000000 		.4byte	compensateRunningStatus.4678
 1205 017e 0C       		.uleb128 0xc
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 72


 1206 017f BA000000 		.4byte	.LASF27
 1207 0183 01       		.byte	0x1
 1208 0184 0F01     		.2byte	0x10f
 1209 0186 77000000 		.4byte	0x77
 1210 018a 7E010000 		.4byte	.LLST4
 1211 018e 0C       		.uleb128 0xc
 1212 018f 73020000 		.4byte	.LASF28
 1213 0193 01       		.byte	0x1
 1214 0194 1001     		.2byte	0x110
 1215 0196 98000000 		.4byte	0x98
 1216 019a 9C010000 		.4byte	.LLST5
 1217 019e 00       		.byte	0
 1218 019f 06       		.uleb128 0x6
 1219 01a0 04       		.byte	0x4
 1220 01a1 77000000 		.4byte	0x77
 1221 01a5 0E       		.uleb128 0xe
 1222 01a6 57000000 		.4byte	.LASF60
 1223 01aa 02       		.byte	0x2
 1224 01ab 9002     		.2byte	0x290
 1225 01ad 03       		.byte	0x3
 1226 01ae 0F       		.uleb128 0xf
 1227 01af 62020000 		.4byte	.LASF29
 1228 01b3 01       		.byte	0x1
 1229 01b4 0103     		.2byte	0x301
 1230 01b6 00000000 		.4byte	.LFB6
 1231 01ba 40000000 		.4byte	.LFE6-.LFB6
 1232 01be 01       		.uleb128 0x1
 1233 01bf 9C       		.byte	0x9c
 1234 01c0 D5010000 		.4byte	0x1d5
 1235 01c4 10       		.uleb128 0x10
 1236 01c5 A5010000 		.4byte	0x1a5
 1237 01c9 02000000 		.4byte	.LBB4
 1238 01cd 2A000000 		.4byte	.LBE4-.LBB4
 1239 01d1 01       		.byte	0x1
 1240 01d2 0303     		.2byte	0x303
 1241 01d4 00       		.byte	0
 1242 01d5 11       		.uleb128 0x11
 1243 01d6 44000000 		.4byte	.LASF37
 1244 01da 01       		.byte	0x1
 1245 01db 3603     		.2byte	0x336
 1246 01dd 77000000 		.4byte	0x77
 1247 01e1 00000000 		.4byte	.LFB8
 1248 01e5 14000000 		.4byte	.LFE8-.LFB8
 1249 01e9 01       		.uleb128 0x1
 1250 01ea 9C       		.byte	0x9c
 1251 01eb 0F       		.uleb128 0xf
 1252 01ec 4C030000 		.4byte	.LASF30
 1253 01f0 01       		.byte	0x1
 1254 01f1 1303     		.2byte	0x313
 1255 01f3 00000000 		.4byte	.LFB7
 1256 01f7 1C000000 		.4byte	.LFE7-.LFB7
 1257 01fb 01       		.uleb128 0x1
 1258 01fc 9C       		.byte	0x9c
 1259 01fd 0B020000 		.4byte	0x20b
 1260 0201 12       		.uleb128 0x12
 1261 0202 06000000 		.4byte	.LVL35
 1262 0206 D5010000 		.4byte	0x1d5
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 73


 1263 020a 00       		.byte	0
 1264 020b 13       		.uleb128 0x13
 1265 020c 5C030000 		.4byte	.LASF32
 1266 0210 01       		.byte	0x1
 1267 0211 5103     		.2byte	0x351
 1268 0213 77000000 		.4byte	0x77
 1269 0217 00000000 		.4byte	.LFB9
 1270 021b 4C000000 		.4byte	.LFE9-.LFB9
 1271 021f 01       		.uleb128 0x1
 1272 0220 9C       		.byte	0x9c
 1273 0221 65020000 		.4byte	0x265
 1274 0225 0B       		.uleb128 0xb
 1275 0226 79030000 		.4byte	.LASF33
 1276 022a 01       		.byte	0x1
 1277 022b 5103     		.2byte	0x351
 1278 022d 77000000 		.4byte	0x77
 1279 0231 C7010000 		.4byte	.LLST6
 1280 0235 0C       		.uleb128 0xc
 1281 0236 29020000 		.4byte	.LASF34
 1282 023a 01       		.byte	0x1
 1283 023b 5303     		.2byte	0x353
 1284 023d 77000000 		.4byte	0x77
 1285 0241 27020000 		.4byte	.LLST7
 1286 0245 10       		.uleb128 0x10
 1287 0246 A5010000 		.4byte	0x1a5
 1288 024a 0E000000 		.4byte	.LBB8
 1289 024e 2C000000 		.4byte	.LBE8-.LBB8
 1290 0252 01       		.byte	0x1
 1291 0253 5A03     		.2byte	0x35a
 1292 0255 14       		.uleb128 0x14
 1293 0256 40000000 		.4byte	.LVL44
 1294 025a 31040000 		.4byte	0x431
 1295 025e 15       		.uleb128 0x15
 1296 025f 01       		.uleb128 0x1
 1297 0260 50       		.byte	0x50
 1298 0261 01       		.uleb128 0x1
 1299 0262 30       		.byte	0x30
 1300 0263 00       		.byte	0
 1301 0264 00       		.byte	0
 1302 0265 0F       		.uleb128 0xf
 1303 0266 80020000 		.4byte	.LASF35
 1304 026a 01       		.byte	0x1
 1305 026b 9403     		.2byte	0x394
 1306 026d 00000000 		.4byte	.LFB10
 1307 0271 2C000000 		.4byte	.LFE10-.LFB10
 1308 0275 01       		.uleb128 0x1
 1309 0276 9C       		.byte	0x9c
 1310 0277 A4020000 		.4byte	0x2a4
 1311 027b 0B       		.uleb128 0xb
 1312 027c CF000000 		.4byte	.LASF36
 1313 0280 01       		.byte	0x1
 1314 0281 9403     		.2byte	0x394
 1315 0283 77000000 		.4byte	0x77
 1316 0287 45020000 		.4byte	.LLST8
 1317 028b 12       		.uleb128 0x12
 1318 028c 08000000 		.4byte	.LVL47
 1319 0290 D5010000 		.4byte	0x1d5
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 74


 1320 0294 14       		.uleb128 0x14
 1321 0295 26000000 		.4byte	.LVL50
 1322 0299 31040000 		.4byte	0x431
 1323 029d 15       		.uleb128 0x15
 1324 029e 01       		.uleb128 0x1
 1325 029f 50       		.byte	0x50
 1326 02a0 01       		.uleb128 0x1
 1327 02a1 30       		.byte	0x30
 1328 02a2 00       		.byte	0
 1329 02a3 00       		.byte	0
 1330 02a4 11       		.uleb128 0x11
 1331 02a5 F3010000 		.4byte	.LASF38
 1332 02a9 01       		.byte	0x1
 1333 02aa 7C07     		.2byte	0x77c
 1334 02ac 77000000 		.4byte	0x77
 1335 02b0 00000000 		.4byte	.LFB11
 1336 02b4 1C000000 		.4byte	.LFE11-.LFB11
 1337 02b8 01       		.uleb128 0x1
 1338 02b9 9C       		.byte	0x9c
 1339 02ba 16       		.uleb128 0x16
 1340 02bb 5C010000 		.4byte	.LASF39
 1341 02bf 01       		.byte	0x1
 1342 02c0 8F07     		.2byte	0x78f
 1343 02c2 00000000 		.4byte	.LFB12
 1344 02c6 0C000000 		.4byte	.LFE12-.LFB12
 1345 02ca 01       		.uleb128 0x1
 1346 02cb 9C       		.byte	0x9c
 1347 02cc 16       		.uleb128 0x16
 1348 02cd 3C030000 		.4byte	.LASF40
 1349 02d1 01       		.byte	0x1
 1350 02d2 9F07     		.2byte	0x79f
 1351 02d4 00000000 		.4byte	.LFB13
 1352 02d8 10000000 		.4byte	.LFE13-.LFB13
 1353 02dc 01       		.uleb128 0x1
 1354 02dd 9C       		.byte	0x9c
 1355 02de 0F       		.uleb128 0xf
 1356 02df 4B010000 		.4byte	.LASF41
 1357 02e3 01       		.byte	0x1
 1358 02e4 AF07     		.2byte	0x7af
 1359 02e6 00000000 		.4byte	.LFB14
 1360 02ea 18000000 		.4byte	.LFE14-.LFB14
 1361 02ee 01       		.uleb128 0x1
 1362 02ef 9C       		.byte	0x9c
 1363 02f0 05030000 		.4byte	0x305
 1364 02f4 0B       		.uleb128 0xb
 1365 02f5 B4020000 		.4byte	.LASF42
 1366 02f9 01       		.byte	0x1
 1367 02fa AF07     		.2byte	0x7af
 1368 02fc 77000000 		.4byte	0x77
 1369 0300 8A020000 		.4byte	.LLST9
 1370 0304 00       		.byte	0
 1371 0305 11       		.uleb128 0x11
 1372 0306 A3020000 		.4byte	.LASF43
 1373 030a 01       		.byte	0x1
 1374 030b BF07     		.2byte	0x7bf
 1375 030d 77000000 		.4byte	0x77
 1376 0311 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 75


 1377 0315 10000000 		.4byte	.LFE15-.LFB15
 1378 0319 01       		.uleb128 0x1
 1379 031a 9C       		.byte	0x9c
 1380 031b 11       		.uleb128 0x11
 1381 031c 7E030000 		.4byte	.LASF44
 1382 0320 01       		.byte	0x1
 1383 0321 CE07     		.2byte	0x7ce
 1384 0323 77000000 		.4byte	0x77
 1385 0327 00000000 		.4byte	.LFB16
 1386 032b 0C000000 		.4byte	.LFE16-.LFB16
 1387 032f 01       		.uleb128 0x1
 1388 0330 9C       		.byte	0x9c
 1389 0331 0F       		.uleb128 0xf
 1390 0332 95010000 		.4byte	.LASF45
 1391 0336 01       		.byte	0x1
 1392 0337 E207     		.2byte	0x7e2
 1393 0339 00000000 		.4byte	.LFB17
 1394 033d 20000000 		.4byte	.LFE17-.LFB17
 1395 0341 01       		.uleb128 0x1
 1396 0342 9C       		.byte	0x9c
 1397 0343 58030000 		.4byte	0x358
 1398 0347 0B       		.uleb128 0xb
 1399 0348 FD020000 		.4byte	.LASF46
 1400 034c 01       		.byte	0x1
 1401 034d E207     		.2byte	0x7e2
 1402 034f 77000000 		.4byte	0x77
 1403 0353 B6020000 		.4byte	.LLST10
 1404 0357 00       		.byte	0
 1405 0358 11       		.uleb128 0x11
 1406 0359 96000000 		.4byte	.LASF47
 1407 035d 01       		.byte	0x1
 1408 035e F407     		.2byte	0x7f4
 1409 0360 77000000 		.4byte	0x77
 1410 0364 00000000 		.4byte	.LFB18
 1411 0368 10000000 		.4byte	.LFE18-.LFB18
 1412 036c 01       		.uleb128 0x1
 1413 036d 9C       		.byte	0x9c
 1414 036e 16       		.uleb128 0x16
 1415 036f C8020000 		.4byte	.LASF48
 1416 0373 01       		.byte	0x1
 1417 0374 0508     		.2byte	0x805
 1418 0376 00000000 		.4byte	.LFB19
 1419 037a 10000000 		.4byte	.LFE19-.LFB19
 1420 037e 01       		.uleb128 0x1
 1421 037f 9C       		.byte	0x9c
 1422 0380 16       		.uleb128 0x16
 1423 0381 CA010000 		.4byte	.LASF49
 1424 0385 01       		.byte	0x1
 1425 0386 1408     		.2byte	0x814
 1426 0388 00000000 		.4byte	.LFB20
 1427 038c 10000000 		.4byte	.LFE20-.LFB20
 1428 0390 01       		.uleb128 0x1
 1429 0391 9C       		.byte	0x9c
 1430 0392 16       		.uleb128 0x16
 1431 0393 E5020000 		.4byte	.LASF50
 1432 0397 01       		.byte	0x1
 1433 0398 2308     		.2byte	0x823
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 76


 1434 039a 00000000 		.4byte	.LFB21
 1435 039e 10000000 		.4byte	.LFE21-.LFB21
 1436 03a2 01       		.uleb128 0x1
 1437 03a3 9C       		.byte	0x9c
 1438 03a4 13       		.uleb128 0x13
 1439 03a5 6B010000 		.4byte	.LASF51
 1440 03a9 01       		.byte	0x1
 1441 03aa 3508     		.2byte	0x835
 1442 03ac BC000000 		.4byte	0xbc
 1443 03b0 00000000 		.4byte	.LFB22
 1444 03b4 10000000 		.4byte	.LFE22-.LFB22
 1445 03b8 01       		.uleb128 0x1
 1446 03b9 9C       		.byte	0x9c
 1447 03ba DF030000 		.4byte	0x3df
 1448 03be 0B       		.uleb128 0xb
 1449 03bf 8D000000 		.4byte	.LASF52
 1450 03c3 01       		.byte	0x1
 1451 03c4 3508     		.2byte	0x835
 1452 03c6 BC000000 		.4byte	0xbc
 1453 03ca E2020000 		.4byte	.LLST11
 1454 03ce 0C       		.uleb128 0xc
 1455 03cf 3E010000 		.4byte	.LASF53
 1456 03d3 01       		.byte	0x1
 1457 03d4 3708     		.2byte	0x837
 1458 03d6 BC000000 		.4byte	0xbc
 1459 03da 04030000 		.4byte	.LLST12
 1460 03de 00       		.byte	0
 1461 03df 11       		.uleb128 0x11
 1462 03e0 13040000 		.4byte	.LASF54
 1463 03e4 01       		.byte	0x1
 1464 03e5 4A08     		.2byte	0x84a
 1465 03e7 BC000000 		.4byte	0xbc
 1466 03eb 00000000 		.4byte	.LFB23
 1467 03ef 0C000000 		.4byte	.LFE23-.LFB23
 1468 03f3 01       		.uleb128 0x1
 1469 03f4 9C       		.byte	0x9c
 1470 03f5 17       		.uleb128 0x17
 1471 03f6 0C020000 		.4byte	.LASF55
 1472 03fa 01       		.byte	0x1
 1473 03fb 6208     		.2byte	0x862
 1474 03fd 00000000 		.4byte	.LFB24
 1475 0401 18000000 		.4byte	.LFE24-.LFB24
 1476 0405 01       		.uleb128 0x1
 1477 0406 9C       		.byte	0x9c
 1478 0407 15040000 		.4byte	0x415
 1479 040b 12       		.uleb128 0x12
 1480 040c 10000000 		.4byte	.LVL61
 1481 0410 6E030000 		.4byte	0x36e
 1482 0414 00       		.byte	0
 1483 0415 18       		.uleb128 0x18
 1484 0416 00000000 		.4byte	.LASF56
 1485 041a 01       		.byte	0x1
 1486 041b 46       		.byte	0x46
 1487 041c BC000000 		.4byte	0xbc
 1488 0420 05       		.uleb128 0x5
 1489 0421 03       		.byte	0x3
 1490 0422 04000000 		.4byte	cySysWdtCallback
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 77


 1491 0426 19       		.uleb128 0x19
 1492 0427 BA020000 		.4byte	.LASF61
 1493 042b 04       		.byte	0x4
 1494 042c D2       		.byte	0xd2
 1495 042d 77000000 		.4byte	0x77
 1496 0431 1A       		.uleb128 0x1a
 1497 0432 05030000 		.4byte	.LASF62
 1498 0436 04       		.byte	0x4
 1499 0437 E5       		.byte	0xe5
 1500 0438 1B       		.uleb128 0x1b
 1501 0439 6B000000 		.4byte	0x6b
 1502 043d 00       		.byte	0
 1503 043e 00       		.byte	0
 1504              		.section	.debug_abbrev,"",%progbits
 1505              	.Ldebug_abbrev0:
 1506 0000 01       		.uleb128 0x1
 1507 0001 11       		.uleb128 0x11
 1508 0002 01       		.byte	0x1
 1509 0003 25       		.uleb128 0x25
 1510 0004 0E       		.uleb128 0xe
 1511 0005 13       		.uleb128 0x13
 1512 0006 0B       		.uleb128 0xb
 1513 0007 03       		.uleb128 0x3
 1514 0008 0E       		.uleb128 0xe
 1515 0009 1B       		.uleb128 0x1b
 1516 000a 0E       		.uleb128 0xe
 1517 000b 55       		.uleb128 0x55
 1518 000c 17       		.uleb128 0x17
 1519 000d 11       		.uleb128 0x11
 1520 000e 01       		.uleb128 0x1
 1521 000f 10       		.uleb128 0x10
 1522 0010 17       		.uleb128 0x17
 1523 0011 00       		.byte	0
 1524 0012 00       		.byte	0
 1525 0013 02       		.uleb128 0x2
 1526 0014 24       		.uleb128 0x24
 1527 0015 00       		.byte	0
 1528 0016 0B       		.uleb128 0xb
 1529 0017 0B       		.uleb128 0xb
 1530 0018 3E       		.uleb128 0x3e
 1531 0019 0B       		.uleb128 0xb
 1532 001a 03       		.uleb128 0x3
 1533 001b 0E       		.uleb128 0xe
 1534 001c 00       		.byte	0
 1535 001d 00       		.byte	0
 1536 001e 03       		.uleb128 0x3
 1537 001f 24       		.uleb128 0x24
 1538 0020 00       		.byte	0
 1539 0021 0B       		.uleb128 0xb
 1540 0022 0B       		.uleb128 0xb
 1541 0023 3E       		.uleb128 0x3e
 1542 0024 0B       		.uleb128 0xb
 1543 0025 03       		.uleb128 0x3
 1544 0026 08       		.uleb128 0x8
 1545 0027 00       		.byte	0
 1546 0028 00       		.byte	0
 1547 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 78


 1548 002a 16       		.uleb128 0x16
 1549 002b 00       		.byte	0
 1550 002c 03       		.uleb128 0x3
 1551 002d 0E       		.uleb128 0xe
 1552 002e 3A       		.uleb128 0x3a
 1553 002f 0B       		.uleb128 0xb
 1554 0030 3B       		.uleb128 0x3b
 1555 0031 05       		.uleb128 0x5
 1556 0032 49       		.uleb128 0x49
 1557 0033 13       		.uleb128 0x13
 1558 0034 00       		.byte	0
 1559 0035 00       		.byte	0
 1560 0036 05       		.uleb128 0x5
 1561 0037 35       		.uleb128 0x35
 1562 0038 00       		.byte	0
 1563 0039 49       		.uleb128 0x49
 1564 003a 13       		.uleb128 0x13
 1565 003b 00       		.byte	0
 1566 003c 00       		.byte	0
 1567 003d 06       		.uleb128 0x6
 1568 003e 0F       		.uleb128 0xf
 1569 003f 00       		.byte	0
 1570 0040 0B       		.uleb128 0xb
 1571 0041 0B       		.uleb128 0xb
 1572 0042 49       		.uleb128 0x49
 1573 0043 13       		.uleb128 0x13
 1574 0044 00       		.byte	0
 1575 0045 00       		.byte	0
 1576 0046 07       		.uleb128 0x7
 1577 0047 15       		.uleb128 0x15
 1578 0048 00       		.byte	0
 1579 0049 27       		.uleb128 0x27
 1580 004a 19       		.uleb128 0x19
 1581 004b 00       		.byte	0
 1582 004c 00       		.byte	0
 1583 004d 08       		.uleb128 0x8
 1584 004e 16       		.uleb128 0x16
 1585 004f 00       		.byte	0
 1586 0050 03       		.uleb128 0x3
 1587 0051 0E       		.uleb128 0xe
 1588 0052 3A       		.uleb128 0x3a
 1589 0053 0B       		.uleb128 0xb
 1590 0054 3B       		.uleb128 0x3b
 1591 0055 0B       		.uleb128 0xb
 1592 0056 49       		.uleb128 0x49
 1593 0057 13       		.uleb128 0x13
 1594 0058 00       		.byte	0
 1595 0059 00       		.byte	0
 1596 005a 09       		.uleb128 0x9
 1597 005b 2E       		.uleb128 0x2e
 1598 005c 00       		.byte	0
 1599 005d 3F       		.uleb128 0x3f
 1600 005e 19       		.uleb128 0x19
 1601 005f 03       		.uleb128 0x3
 1602 0060 0E       		.uleb128 0xe
 1603 0061 3A       		.uleb128 0x3a
 1604 0062 0B       		.uleb128 0xb
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 79


 1605 0063 3B       		.uleb128 0x3b
 1606 0064 0B       		.uleb128 0xb
 1607 0065 27       		.uleb128 0x27
 1608 0066 19       		.uleb128 0x19
 1609 0067 11       		.uleb128 0x11
 1610 0068 01       		.uleb128 0x1
 1611 0069 12       		.uleb128 0x12
 1612 006a 06       		.uleb128 0x6
 1613 006b 40       		.uleb128 0x40
 1614 006c 18       		.uleb128 0x18
 1615 006d 9742     		.uleb128 0x2117
 1616 006f 19       		.uleb128 0x19
 1617 0070 00       		.byte	0
 1618 0071 00       		.byte	0
 1619 0072 0A       		.uleb128 0xa
 1620 0073 2E       		.uleb128 0x2e
 1621 0074 01       		.byte	0x1
 1622 0075 3F       		.uleb128 0x3f
 1623 0076 19       		.uleb128 0x19
 1624 0077 03       		.uleb128 0x3
 1625 0078 0E       		.uleb128 0xe
 1626 0079 3A       		.uleb128 0x3a
 1627 007a 0B       		.uleb128 0xb
 1628 007b 3B       		.uleb128 0x3b
 1629 007c 05       		.uleb128 0x5
 1630 007d 27       		.uleb128 0x27
 1631 007e 19       		.uleb128 0x19
 1632 007f 49       		.uleb128 0x49
 1633 0080 13       		.uleb128 0x13
 1634 0081 11       		.uleb128 0x11
 1635 0082 01       		.uleb128 0x1
 1636 0083 12       		.uleb128 0x12
 1637 0084 06       		.uleb128 0x6
 1638 0085 40       		.uleb128 0x40
 1639 0086 18       		.uleb128 0x18
 1640 0087 9642     		.uleb128 0x2116
 1641 0089 19       		.uleb128 0x19
 1642 008a 01       		.uleb128 0x1
 1643 008b 13       		.uleb128 0x13
 1644 008c 00       		.byte	0
 1645 008d 00       		.byte	0
 1646 008e 0B       		.uleb128 0xb
 1647 008f 05       		.uleb128 0x5
 1648 0090 00       		.byte	0
 1649 0091 03       		.uleb128 0x3
 1650 0092 0E       		.uleb128 0xe
 1651 0093 3A       		.uleb128 0x3a
 1652 0094 0B       		.uleb128 0xb
 1653 0095 3B       		.uleb128 0x3b
 1654 0096 05       		.uleb128 0x5
 1655 0097 49       		.uleb128 0x49
 1656 0098 13       		.uleb128 0x13
 1657 0099 02       		.uleb128 0x2
 1658 009a 17       		.uleb128 0x17
 1659 009b 00       		.byte	0
 1660 009c 00       		.byte	0
 1661 009d 0C       		.uleb128 0xc
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 80


 1662 009e 34       		.uleb128 0x34
 1663 009f 00       		.byte	0
 1664 00a0 03       		.uleb128 0x3
 1665 00a1 0E       		.uleb128 0xe
 1666 00a2 3A       		.uleb128 0x3a
 1667 00a3 0B       		.uleb128 0xb
 1668 00a4 3B       		.uleb128 0x3b
 1669 00a5 05       		.uleb128 0x5
 1670 00a6 49       		.uleb128 0x49
 1671 00a7 13       		.uleb128 0x13
 1672 00a8 02       		.uleb128 0x2
 1673 00a9 17       		.uleb128 0x17
 1674 00aa 00       		.byte	0
 1675 00ab 00       		.byte	0
 1676 00ac 0D       		.uleb128 0xd
 1677 00ad 34       		.uleb128 0x34
 1678 00ae 00       		.byte	0
 1679 00af 03       		.uleb128 0x3
 1680 00b0 0E       		.uleb128 0xe
 1681 00b1 3A       		.uleb128 0x3a
 1682 00b2 0B       		.uleb128 0xb
 1683 00b3 3B       		.uleb128 0x3b
 1684 00b4 05       		.uleb128 0x5
 1685 00b5 49       		.uleb128 0x49
 1686 00b6 13       		.uleb128 0x13
 1687 00b7 02       		.uleb128 0x2
 1688 00b8 18       		.uleb128 0x18
 1689 00b9 00       		.byte	0
 1690 00ba 00       		.byte	0
 1691 00bb 0E       		.uleb128 0xe
 1692 00bc 2E       		.uleb128 0x2e
 1693 00bd 00       		.byte	0
 1694 00be 03       		.uleb128 0x3
 1695 00bf 0E       		.uleb128 0xe
 1696 00c0 3A       		.uleb128 0x3a
 1697 00c1 0B       		.uleb128 0xb
 1698 00c2 3B       		.uleb128 0x3b
 1699 00c3 05       		.uleb128 0x5
 1700 00c4 27       		.uleb128 0x27
 1701 00c5 19       		.uleb128 0x19
 1702 00c6 20       		.uleb128 0x20
 1703 00c7 0B       		.uleb128 0xb
 1704 00c8 00       		.byte	0
 1705 00c9 00       		.byte	0
 1706 00ca 0F       		.uleb128 0xf
 1707 00cb 2E       		.uleb128 0x2e
 1708 00cc 01       		.byte	0x1
 1709 00cd 3F       		.uleb128 0x3f
 1710 00ce 19       		.uleb128 0x19
 1711 00cf 03       		.uleb128 0x3
 1712 00d0 0E       		.uleb128 0xe
 1713 00d1 3A       		.uleb128 0x3a
 1714 00d2 0B       		.uleb128 0xb
 1715 00d3 3B       		.uleb128 0x3b
 1716 00d4 05       		.uleb128 0x5
 1717 00d5 27       		.uleb128 0x27
 1718 00d6 19       		.uleb128 0x19
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 81


 1719 00d7 11       		.uleb128 0x11
 1720 00d8 01       		.uleb128 0x1
 1721 00d9 12       		.uleb128 0x12
 1722 00da 06       		.uleb128 0x6
 1723 00db 40       		.uleb128 0x40
 1724 00dc 18       		.uleb128 0x18
 1725 00dd 9742     		.uleb128 0x2117
 1726 00df 19       		.uleb128 0x19
 1727 00e0 01       		.uleb128 0x1
 1728 00e1 13       		.uleb128 0x13
 1729 00e2 00       		.byte	0
 1730 00e3 00       		.byte	0
 1731 00e4 10       		.uleb128 0x10
 1732 00e5 1D       		.uleb128 0x1d
 1733 00e6 00       		.byte	0
 1734 00e7 31       		.uleb128 0x31
 1735 00e8 13       		.uleb128 0x13
 1736 00e9 11       		.uleb128 0x11
 1737 00ea 01       		.uleb128 0x1
 1738 00eb 12       		.uleb128 0x12
 1739 00ec 06       		.uleb128 0x6
 1740 00ed 58       		.uleb128 0x58
 1741 00ee 0B       		.uleb128 0xb
 1742 00ef 59       		.uleb128 0x59
 1743 00f0 05       		.uleb128 0x5
 1744 00f1 00       		.byte	0
 1745 00f2 00       		.byte	0
 1746 00f3 11       		.uleb128 0x11
 1747 00f4 2E       		.uleb128 0x2e
 1748 00f5 00       		.byte	0
 1749 00f6 3F       		.uleb128 0x3f
 1750 00f7 19       		.uleb128 0x19
 1751 00f8 03       		.uleb128 0x3
 1752 00f9 0E       		.uleb128 0xe
 1753 00fa 3A       		.uleb128 0x3a
 1754 00fb 0B       		.uleb128 0xb
 1755 00fc 3B       		.uleb128 0x3b
 1756 00fd 05       		.uleb128 0x5
 1757 00fe 27       		.uleb128 0x27
 1758 00ff 19       		.uleb128 0x19
 1759 0100 49       		.uleb128 0x49
 1760 0101 13       		.uleb128 0x13
 1761 0102 11       		.uleb128 0x11
 1762 0103 01       		.uleb128 0x1
 1763 0104 12       		.uleb128 0x12
 1764 0105 06       		.uleb128 0x6
 1765 0106 40       		.uleb128 0x40
 1766 0107 18       		.uleb128 0x18
 1767 0108 9742     		.uleb128 0x2117
 1768 010a 19       		.uleb128 0x19
 1769 010b 00       		.byte	0
 1770 010c 00       		.byte	0
 1771 010d 12       		.uleb128 0x12
 1772 010e 898201   		.uleb128 0x4109
 1773 0111 00       		.byte	0
 1774 0112 11       		.uleb128 0x11
 1775 0113 01       		.uleb128 0x1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 82


 1776 0114 31       		.uleb128 0x31
 1777 0115 13       		.uleb128 0x13
 1778 0116 00       		.byte	0
 1779 0117 00       		.byte	0
 1780 0118 13       		.uleb128 0x13
 1781 0119 2E       		.uleb128 0x2e
 1782 011a 01       		.byte	0x1
 1783 011b 3F       		.uleb128 0x3f
 1784 011c 19       		.uleb128 0x19
 1785 011d 03       		.uleb128 0x3
 1786 011e 0E       		.uleb128 0xe
 1787 011f 3A       		.uleb128 0x3a
 1788 0120 0B       		.uleb128 0xb
 1789 0121 3B       		.uleb128 0x3b
 1790 0122 05       		.uleb128 0x5
 1791 0123 27       		.uleb128 0x27
 1792 0124 19       		.uleb128 0x19
 1793 0125 49       		.uleb128 0x49
 1794 0126 13       		.uleb128 0x13
 1795 0127 11       		.uleb128 0x11
 1796 0128 01       		.uleb128 0x1
 1797 0129 12       		.uleb128 0x12
 1798 012a 06       		.uleb128 0x6
 1799 012b 40       		.uleb128 0x40
 1800 012c 18       		.uleb128 0x18
 1801 012d 9742     		.uleb128 0x2117
 1802 012f 19       		.uleb128 0x19
 1803 0130 01       		.uleb128 0x1
 1804 0131 13       		.uleb128 0x13
 1805 0132 00       		.byte	0
 1806 0133 00       		.byte	0
 1807 0134 14       		.uleb128 0x14
 1808 0135 898201   		.uleb128 0x4109
 1809 0138 01       		.byte	0x1
 1810 0139 11       		.uleb128 0x11
 1811 013a 01       		.uleb128 0x1
 1812 013b 31       		.uleb128 0x31
 1813 013c 13       		.uleb128 0x13
 1814 013d 00       		.byte	0
 1815 013e 00       		.byte	0
 1816 013f 15       		.uleb128 0x15
 1817 0140 8A8201   		.uleb128 0x410a
 1818 0143 00       		.byte	0
 1819 0144 02       		.uleb128 0x2
 1820 0145 18       		.uleb128 0x18
 1821 0146 9142     		.uleb128 0x2111
 1822 0148 18       		.uleb128 0x18
 1823 0149 00       		.byte	0
 1824 014a 00       		.byte	0
 1825 014b 16       		.uleb128 0x16
 1826 014c 2E       		.uleb128 0x2e
 1827 014d 00       		.byte	0
 1828 014e 3F       		.uleb128 0x3f
 1829 014f 19       		.uleb128 0x19
 1830 0150 03       		.uleb128 0x3
 1831 0151 0E       		.uleb128 0xe
 1832 0152 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 83


 1833 0153 0B       		.uleb128 0xb
 1834 0154 3B       		.uleb128 0x3b
 1835 0155 05       		.uleb128 0x5
 1836 0156 27       		.uleb128 0x27
 1837 0157 19       		.uleb128 0x19
 1838 0158 11       		.uleb128 0x11
 1839 0159 01       		.uleb128 0x1
 1840 015a 12       		.uleb128 0x12
 1841 015b 06       		.uleb128 0x6
 1842 015c 40       		.uleb128 0x40
 1843 015d 18       		.uleb128 0x18
 1844 015e 9742     		.uleb128 0x2117
 1845 0160 19       		.uleb128 0x19
 1846 0161 00       		.byte	0
 1847 0162 00       		.byte	0
 1848 0163 17       		.uleb128 0x17
 1849 0164 2E       		.uleb128 0x2e
 1850 0165 01       		.byte	0x1
 1851 0166 3F       		.uleb128 0x3f
 1852 0167 19       		.uleb128 0x19
 1853 0168 03       		.uleb128 0x3
 1854 0169 0E       		.uleb128 0xe
 1855 016a 3A       		.uleb128 0x3a
 1856 016b 0B       		.uleb128 0xb
 1857 016c 3B       		.uleb128 0x3b
 1858 016d 05       		.uleb128 0x5
 1859 016e 27       		.uleb128 0x27
 1860 016f 19       		.uleb128 0x19
 1861 0170 11       		.uleb128 0x11
 1862 0171 01       		.uleb128 0x1
 1863 0172 12       		.uleb128 0x12
 1864 0173 06       		.uleb128 0x6
 1865 0174 40       		.uleb128 0x40
 1866 0175 18       		.uleb128 0x18
 1867 0176 9642     		.uleb128 0x2116
 1868 0178 19       		.uleb128 0x19
 1869 0179 01       		.uleb128 0x1
 1870 017a 13       		.uleb128 0x13
 1871 017b 00       		.byte	0
 1872 017c 00       		.byte	0
 1873 017d 18       		.uleb128 0x18
 1874 017e 34       		.uleb128 0x34
 1875 017f 00       		.byte	0
 1876 0180 03       		.uleb128 0x3
 1877 0181 0E       		.uleb128 0xe
 1878 0182 3A       		.uleb128 0x3a
 1879 0183 0B       		.uleb128 0xb
 1880 0184 3B       		.uleb128 0x3b
 1881 0185 0B       		.uleb128 0xb
 1882 0186 49       		.uleb128 0x49
 1883 0187 13       		.uleb128 0x13
 1884 0188 02       		.uleb128 0x2
 1885 0189 18       		.uleb128 0x18
 1886 018a 00       		.byte	0
 1887 018b 00       		.byte	0
 1888 018c 19       		.uleb128 0x19
 1889 018d 34       		.uleb128 0x34
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 84


 1890 018e 00       		.byte	0
 1891 018f 03       		.uleb128 0x3
 1892 0190 0E       		.uleb128 0xe
 1893 0191 3A       		.uleb128 0x3a
 1894 0192 0B       		.uleb128 0xb
 1895 0193 3B       		.uleb128 0x3b
 1896 0194 0B       		.uleb128 0xb
 1897 0195 49       		.uleb128 0x49
 1898 0196 13       		.uleb128 0x13
 1899 0197 3F       		.uleb128 0x3f
 1900 0198 19       		.uleb128 0x19
 1901 0199 3C       		.uleb128 0x3c
 1902 019a 19       		.uleb128 0x19
 1903 019b 00       		.byte	0
 1904 019c 00       		.byte	0
 1905 019d 1A       		.uleb128 0x1a
 1906 019e 2E       		.uleb128 0x2e
 1907 019f 01       		.byte	0x1
 1908 01a0 3F       		.uleb128 0x3f
 1909 01a1 19       		.uleb128 0x19
 1910 01a2 03       		.uleb128 0x3
 1911 01a3 0E       		.uleb128 0xe
 1912 01a4 3A       		.uleb128 0x3a
 1913 01a5 0B       		.uleb128 0xb
 1914 01a6 3B       		.uleb128 0x3b
 1915 01a7 0B       		.uleb128 0xb
 1916 01a8 27       		.uleb128 0x27
 1917 01a9 19       		.uleb128 0x19
 1918 01aa 3C       		.uleb128 0x3c
 1919 01ab 19       		.uleb128 0x19
 1920 01ac 00       		.byte	0
 1921 01ad 00       		.byte	0
 1922 01ae 1B       		.uleb128 0x1b
 1923 01af 05       		.uleb128 0x5
 1924 01b0 00       		.byte	0
 1925 01b1 49       		.uleb128 0x49
 1926 01b2 13       		.uleb128 0x13
 1927 01b3 00       		.byte	0
 1928 01b4 00       		.byte	0
 1929 01b5 00       		.byte	0
 1930              		.section	.debug_loc,"",%progbits
 1931              	.Ldebug_loc0:
 1932              	.LLST0:
 1933 0000 00000000 		.4byte	.LVL0
 1934 0004 48000000 		.4byte	.LVL3
 1935 0008 0100     		.2byte	0x1
 1936 000a 50       		.byte	0x50
 1937 000b 48000000 		.4byte	.LVL3
 1938 000f A4000000 		.4byte	.LVL18
 1939 0013 0400     		.2byte	0x4
 1940 0015 F3       		.byte	0xf3
 1941 0016 01       		.uleb128 0x1
 1942 0017 50       		.byte	0x50
 1943 0018 9F       		.byte	0x9f
 1944 0019 A4000000 		.4byte	.LVL18
 1945 001d B6000000 		.4byte	.LVL20
 1946 0021 0100     		.2byte	0x1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 85


 1947 0023 50       		.byte	0x50
 1948 0024 B6000000 		.4byte	.LVL20
 1949 0028 B8000000 		.4byte	.LVL21
 1950 002c 0400     		.2byte	0x4
 1951 002e F3       		.byte	0xf3
 1952 002f 01       		.uleb128 0x1
 1953 0030 50       		.byte	0x50
 1954 0031 9F       		.byte	0x9f
 1955 0032 B8000000 		.4byte	.LVL21
 1956 0036 BA000000 		.4byte	.LVL22
 1957 003a 0100     		.2byte	0x1
 1958 003c 50       		.byte	0x50
 1959 003d BA000000 		.4byte	.LVL22
 1960 0041 BC000000 		.4byte	.LVL23
 1961 0045 0400     		.2byte	0x4
 1962 0047 F3       		.byte	0xf3
 1963 0048 01       		.uleb128 0x1
 1964 0049 50       		.byte	0x50
 1965 004a 9F       		.byte	0x9f
 1966 004b BC000000 		.4byte	.LVL23
 1967 004f BE000000 		.4byte	.LVL24
 1968 0053 0100     		.2byte	0x1
 1969 0055 50       		.byte	0x50
 1970 0056 BE000000 		.4byte	.LVL24
 1971 005a C0000000 		.4byte	.LVL25
 1972 005e 0400     		.2byte	0x4
 1973 0060 F3       		.byte	0xf3
 1974 0061 01       		.uleb128 0x1
 1975 0062 50       		.byte	0x50
 1976 0063 9F       		.byte	0x9f
 1977 0064 C0000000 		.4byte	.LVL25
 1978 0068 C2000000 		.4byte	.LVL26
 1979 006c 0100     		.2byte	0x1
 1980 006e 50       		.byte	0x50
 1981 006f C2000000 		.4byte	.LVL26
 1982 0073 C4000000 		.4byte	.LVL27
 1983 0077 0400     		.2byte	0x4
 1984 0079 F3       		.byte	0xf3
 1985 007a 01       		.uleb128 0x1
 1986 007b 50       		.byte	0x50
 1987 007c 9F       		.byte	0x9f
 1988 007d C4000000 		.4byte	.LVL27
 1989 0081 C6000000 		.4byte	.LVL28
 1990 0085 0100     		.2byte	0x1
 1991 0087 50       		.byte	0x50
 1992 0088 C6000000 		.4byte	.LVL28
 1993 008c C8000000 		.4byte	.LVL29
 1994 0090 0400     		.2byte	0x4
 1995 0092 F3       		.byte	0xf3
 1996 0093 01       		.uleb128 0x1
 1997 0094 50       		.byte	0x50
 1998 0095 9F       		.byte	0x9f
 1999 0096 C8000000 		.4byte	.LVL29
 2000 009a CA000000 		.4byte	.LVL30
 2001 009e 0100     		.2byte	0x1
 2002 00a0 50       		.byte	0x50
 2003 00a1 CA000000 		.4byte	.LVL30
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 86


 2004 00a5 CC000000 		.4byte	.LVL31
 2005 00a9 0400     		.2byte	0x4
 2006 00ab F3       		.byte	0xf3
 2007 00ac 01       		.uleb128 0x1
 2008 00ad 50       		.byte	0x50
 2009 00ae 9F       		.byte	0x9f
 2010 00af CC000000 		.4byte	.LVL31
 2011 00b3 CE000000 		.4byte	.LVL32
 2012 00b7 0100     		.2byte	0x1
 2013 00b9 50       		.byte	0x50
 2014 00ba CE000000 		.4byte	.LVL32
 2015 00be D0000000 		.4byte	.LVL33
 2016 00c2 0400     		.2byte	0x4
 2017 00c4 F3       		.byte	0xf3
 2018 00c5 01       		.uleb128 0x1
 2019 00c6 50       		.byte	0x50
 2020 00c7 9F       		.byte	0x9f
 2021 00c8 D0000000 		.4byte	.LVL33
 2022 00cc D2000000 		.4byte	.LVL34
 2023 00d0 0100     		.2byte	0x1
 2024 00d2 50       		.byte	0x50
 2025 00d3 D2000000 		.4byte	.LVL34
 2026 00d7 08010000 		.4byte	.LFE5
 2027 00db 0400     		.2byte	0x4
 2028 00dd F3       		.byte	0xf3
 2029 00de 01       		.uleb128 0x1
 2030 00df 50       		.byte	0x50
 2031 00e0 9F       		.byte	0x9f
 2032 00e1 00000000 		.4byte	0
 2033 00e5 00000000 		.4byte	0
 2034              	.LLST1:
 2035 00e9 00000000 		.4byte	.LVL0
 2036 00ed 50000000 		.4byte	.LVL4
 2037 00f1 0100     		.2byte	0x1
 2038 00f3 51       		.byte	0x51
 2039 00f4 50000000 		.4byte	.LVL4
 2040 00f8 A4000000 		.4byte	.LVL18
 2041 00fc 0100     		.2byte	0x1
 2042 00fe 55       		.byte	0x55
 2043 00ff A4000000 		.4byte	.LVL18
 2044 0103 D2000000 		.4byte	.LVL34
 2045 0107 0100     		.2byte	0x1
 2046 0109 51       		.byte	0x51
 2047 010a D2000000 		.4byte	.LVL34
 2048 010e 08010000 		.4byte	.LFE5
 2049 0112 0400     		.2byte	0x4
 2050 0114 F3       		.byte	0xf3
 2051 0115 01       		.uleb128 0x1
 2052 0116 51       		.byte	0x51
 2053 0117 9F       		.byte	0x9f
 2054 0118 00000000 		.4byte	0
 2055 011c 00000000 		.4byte	0
 2056              	.LLST2:
 2057 0120 80000000 		.4byte	.LVL11
 2058 0124 82000000 		.4byte	.LVL12
 2059 0128 0100     		.2byte	0x1
 2060 012a 50       		.byte	0x50
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 87


 2061 012b 9A000000 		.4byte	.LVL15
 2062 012f 9E000000 		.4byte	.LVL16
 2063 0133 0100     		.2byte	0x1
 2064 0135 50       		.byte	0x50
 2065 0136 9E000000 		.4byte	.LVL16
 2066 013a A4000000 		.4byte	.LVL18
 2067 013e 0200     		.2byte	0x2
 2068 0140 75       		.byte	0x75
 2069 0141 00       		.sleb128 0
 2070 0142 00000000 		.4byte	0
 2071 0146 00000000 		.4byte	0
 2072              	.LLST3:
 2073 014a 56000000 		.4byte	.LVL6
 2074 014e 60000000 		.4byte	.LVL7
 2075 0152 0100     		.2byte	0x1
 2076 0154 50       		.byte	0x50
 2077 0155 60000000 		.4byte	.LVL7
 2078 0159 82000000 		.4byte	.LVL12
 2079 015d 0100     		.2byte	0x1
 2080 015f 54       		.byte	0x54
 2081 0160 82000000 		.4byte	.LVL12
 2082 0164 86000000 		.4byte	.LVL13
 2083 0168 0100     		.2byte	0x1
 2084 016a 50       		.byte	0x50
 2085 016b 86000000 		.4byte	.LVL13
 2086 016f A4000000 		.4byte	.LVL18
 2087 0173 0100     		.2byte	0x1
 2088 0175 54       		.byte	0x54
 2089 0176 00000000 		.4byte	0
 2090 017a 00000000 		.4byte	0
 2091              	.LLST4:
 2092 017e 0A000000 		.4byte	.LVL1
 2093 0182 14000000 		.4byte	.LVL2
 2094 0186 0100     		.2byte	0x1
 2095 0188 53       		.byte	0x53
 2096 0189 B8000000 		.4byte	.LVL21
 2097 018d BC000000 		.4byte	.LVL23
 2098 0191 0100     		.2byte	0x1
 2099 0193 53       		.byte	0x53
 2100 0194 00000000 		.4byte	0
 2101 0198 00000000 		.4byte	0
 2102              	.LLST5:
 2103 019c A2000000 		.4byte	.LVL17
 2104 01a0 A4000000 		.4byte	.LVL18
 2105 01a4 0200     		.2byte	0x2
 2106 01a6 30       		.byte	0x30
 2107 01a7 9F       		.byte	0x9f
 2108 01a8 B4000000 		.4byte	.LVL19
 2109 01ac B8000000 		.4byte	.LVL21
 2110 01b0 0200     		.2byte	0x2
 2111 01b2 37       		.byte	0x37
 2112 01b3 9F       		.byte	0x9f
 2113 01b4 D2000000 		.4byte	.LVL34
 2114 01b8 08010000 		.4byte	.LFE5
 2115 01bc 0100     		.2byte	0x1
 2116 01be 50       		.byte	0x50
 2117 01bf 00000000 		.4byte	0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 88


 2118 01c3 00000000 		.4byte	0
 2119              	.LLST6:
 2120 01c7 00000000 		.4byte	.LVL36
 2121 01cb 1C000000 		.4byte	.LVL38
 2122 01cf 0100     		.2byte	0x1
 2123 01d1 50       		.byte	0x50
 2124 01d2 1C000000 		.4byte	.LVL38
 2125 01d6 26000000 		.4byte	.LVL39
 2126 01da 0300     		.2byte	0x3
 2127 01dc 70       		.byte	0x70
 2128 01dd 7E       		.sleb128 -2
 2129 01de 9F       		.byte	0x9f
 2130 01df 26000000 		.4byte	.LVL39
 2131 01e3 2A000000 		.4byte	.LVL40
 2132 01e7 0300     		.2byte	0x3
 2133 01e9 70       		.byte	0x70
 2134 01ea 50       		.sleb128 -48
 2135 01eb 9F       		.byte	0x9f
 2136 01ec 2A000000 		.4byte	.LVL40
 2137 01f0 32000000 		.4byte	.LVL41
 2138 01f4 0300     		.2byte	0x3
 2139 01f6 70       		.byte	0x70
 2140 01f7 70       		.sleb128 -16
 2141 01f8 9F       		.byte	0x9f
 2142 01f9 32000000 		.4byte	.LVL41
 2143 01fd 3A000000 		.4byte	.LVL42
 2144 0201 0300     		.2byte	0x3
 2145 0203 70       		.byte	0x70
 2146 0204 79       		.sleb128 -7
 2147 0205 9F       		.byte	0x9f
 2148 0206 3A000000 		.4byte	.LVL42
 2149 020a 3C000000 		.4byte	.LVL43
 2150 020e 0100     		.2byte	0x1
 2151 0210 50       		.byte	0x50
 2152 0211 3C000000 		.4byte	.LVL43
 2153 0215 4C000000 		.4byte	.LFE9
 2154 0219 0400     		.2byte	0x4
 2155 021b F3       		.byte	0xf3
 2156 021c 01       		.uleb128 0x1
 2157 021d 50       		.byte	0x50
 2158 021e 9F       		.byte	0x9f
 2159 021f 00000000 		.4byte	0
 2160 0223 00000000 		.4byte	0
 2161              	.LLST7:
 2162 0227 0A000000 		.4byte	.LVL37
 2163 022b 42000000 		.4byte	.LVL45
 2164 022f 0100     		.2byte	0x1
 2165 0231 54       		.byte	0x54
 2166 0232 42000000 		.4byte	.LVL45
 2167 0236 4C000000 		.4byte	.LFE9
 2168 023a 0100     		.2byte	0x1
 2169 023c 50       		.byte	0x50
 2170 023d 00000000 		.4byte	0
 2171 0241 00000000 		.4byte	0
 2172              	.LLST8:
 2173 0245 00000000 		.4byte	.LVL46
 2174 0249 07000000 		.4byte	.LVL47-1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 89


 2175 024d 0100     		.2byte	0x1
 2176 024f 50       		.byte	0x50
 2177 0250 07000000 		.4byte	.LVL47-1
 2178 0254 1A000000 		.4byte	.LVL48
 2179 0258 0100     		.2byte	0x1
 2180 025a 54       		.byte	0x54
 2181 025b 1A000000 		.4byte	.LVL48
 2182 025f 20000000 		.4byte	.LVL49
 2183 0263 0400     		.2byte	0x4
 2184 0265 F3       		.byte	0xf3
 2185 0266 01       		.uleb128 0x1
 2186 0267 50       		.byte	0x50
 2187 0268 9F       		.byte	0x9f
 2188 0269 20000000 		.4byte	.LVL49
 2189 026d 26000000 		.4byte	.LVL50
 2190 0271 0100     		.2byte	0x1
 2191 0273 54       		.byte	0x54
 2192 0274 26000000 		.4byte	.LVL50
 2193 0278 2C000000 		.4byte	.LFE10
 2194 027c 0400     		.2byte	0x4
 2195 027e F3       		.byte	0xf3
 2196 027f 01       		.uleb128 0x1
 2197 0280 50       		.byte	0x50
 2198 0281 9F       		.byte	0x9f
 2199 0282 00000000 		.4byte	0
 2200 0286 00000000 		.4byte	0
 2201              	.LLST9:
 2202 028a 00000000 		.4byte	.LVL51
 2203 028e 02000000 		.4byte	.LVL52
 2204 0292 0100     		.2byte	0x1
 2205 0294 50       		.byte	0x50
 2206 0295 02000000 		.4byte	.LVL52
 2207 0299 04000000 		.4byte	.LVL53
 2208 029d 0400     		.2byte	0x4
 2209 029f F3       		.byte	0xf3
 2210 02a0 01       		.uleb128 0x1
 2211 02a1 50       		.byte	0x50
 2212 02a2 9F       		.byte	0x9f
 2213 02a3 04000000 		.4byte	.LVL53
 2214 02a7 18000000 		.4byte	.LFE14
 2215 02ab 0100     		.2byte	0x1
 2216 02ad 53       		.byte	0x53
 2217 02ae 00000000 		.4byte	0
 2218 02b2 00000000 		.4byte	0
 2219              	.LLST10:
 2220 02b6 00000000 		.4byte	.LVL54
 2221 02ba 02000000 		.4byte	.LVL55
 2222 02be 0100     		.2byte	0x1
 2223 02c0 50       		.byte	0x50
 2224 02c1 02000000 		.4byte	.LVL55
 2225 02c5 0A000000 		.4byte	.LVL56
 2226 02c9 0400     		.2byte	0x4
 2227 02cb F3       		.byte	0xf3
 2228 02cc 01       		.uleb128 0x1
 2229 02cd 50       		.byte	0x50
 2230 02ce 9F       		.byte	0x9f
 2231 02cf 0A000000 		.4byte	.LVL56
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 90


 2232 02d3 20000000 		.4byte	.LFE17
 2233 02d7 0100     		.2byte	0x1
 2234 02d9 53       		.byte	0x53
 2235 02da 00000000 		.4byte	0
 2236 02de 00000000 		.4byte	0
 2237              	.LLST11:
 2238 02e2 00000000 		.4byte	.LVL57
 2239 02e6 08000000 		.4byte	.LVL59
 2240 02ea 0100     		.2byte	0x1
 2241 02ec 50       		.byte	0x50
 2242 02ed 08000000 		.4byte	.LVL59
 2243 02f1 10000000 		.4byte	.LFE22
 2244 02f5 0500     		.2byte	0x5
 2245 02f7 03       		.byte	0x3
 2246 02f8 04000000 		.4byte	cySysWdtCallback
 2247 02fc 00000000 		.4byte	0
 2248 0300 00000000 		.4byte	0
 2249              	.LLST12:
 2250 0304 00000000 		.4byte	.LVL57
 2251 0308 04000000 		.4byte	.LVL58
 2252 030c 0200     		.2byte	0x2
 2253 030e 30       		.byte	0x30
 2254 030f 9F       		.byte	0x9f
 2255 0310 04000000 		.4byte	.LVL58
 2256 0314 10000000 		.4byte	.LFE22
 2257 0318 0100     		.2byte	0x1
 2258 031a 52       		.byte	0x52
 2259 031b 00000000 		.4byte	0
 2260 031f 00000000 		.4byte	0
 2261              		.section	.debug_aranges,"",%progbits
 2262 0000 D4000000 		.4byte	0xd4
 2263 0004 0200     		.2byte	0x2
 2264 0006 00000000 		.4byte	.Ldebug_info0
 2265 000a 04       		.byte	0x4
 2266 000b 00       		.byte	0
 2267 000c 0000     		.2byte	0
 2268 000e 0000     		.2byte	0
 2269 0010 00000000 		.4byte	.LFB1
 2270 0014 14000000 		.4byte	.LFE1-.LFB1
 2271 0018 00000000 		.4byte	.LFB2
 2272 001c 10000000 		.4byte	.LFE2-.LFB2
 2273 0020 00000000 		.4byte	.LFB3
 2274 0024 34000000 		.4byte	.LFE3-.LFB3
 2275 0028 00000000 		.4byte	.LFB4
 2276 002c 28000000 		.4byte	.LFE4-.LFB4
 2277 0030 00000000 		.4byte	.LFB5
 2278 0034 08010000 		.4byte	.LFE5-.LFB5
 2279 0038 00000000 		.4byte	.LFB6
 2280 003c 40000000 		.4byte	.LFE6-.LFB6
 2281 0040 00000000 		.4byte	.LFB8
 2282 0044 14000000 		.4byte	.LFE8-.LFB8
 2283 0048 00000000 		.4byte	.LFB7
 2284 004c 1C000000 		.4byte	.LFE7-.LFB7
 2285 0050 00000000 		.4byte	.LFB9
 2286 0054 4C000000 		.4byte	.LFE9-.LFB9
 2287 0058 00000000 		.4byte	.LFB10
 2288 005c 2C000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 91


 2289 0060 00000000 		.4byte	.LFB11
 2290 0064 1C000000 		.4byte	.LFE11-.LFB11
 2291 0068 00000000 		.4byte	.LFB12
 2292 006c 0C000000 		.4byte	.LFE12-.LFB12
 2293 0070 00000000 		.4byte	.LFB13
 2294 0074 10000000 		.4byte	.LFE13-.LFB13
 2295 0078 00000000 		.4byte	.LFB14
 2296 007c 18000000 		.4byte	.LFE14-.LFB14
 2297 0080 00000000 		.4byte	.LFB15
 2298 0084 10000000 		.4byte	.LFE15-.LFB15
 2299 0088 00000000 		.4byte	.LFB16
 2300 008c 0C000000 		.4byte	.LFE16-.LFB16
 2301 0090 00000000 		.4byte	.LFB17
 2302 0094 20000000 		.4byte	.LFE17-.LFB17
 2303 0098 00000000 		.4byte	.LFB18
 2304 009c 10000000 		.4byte	.LFE18-.LFB18
 2305 00a0 00000000 		.4byte	.LFB19
 2306 00a4 10000000 		.4byte	.LFE19-.LFB19
 2307 00a8 00000000 		.4byte	.LFB20
 2308 00ac 10000000 		.4byte	.LFE20-.LFB20
 2309 00b0 00000000 		.4byte	.LFB21
 2310 00b4 10000000 		.4byte	.LFE21-.LFB21
 2311 00b8 00000000 		.4byte	.LFB22
 2312 00bc 10000000 		.4byte	.LFE22-.LFB22
 2313 00c0 00000000 		.4byte	.LFB23
 2314 00c4 0C000000 		.4byte	.LFE23-.LFB23
 2315 00c8 00000000 		.4byte	.LFB24
 2316 00cc 18000000 		.4byte	.LFE24-.LFB24
 2317 00d0 00000000 		.4byte	0
 2318 00d4 00000000 		.4byte	0
 2319              		.section	.debug_ranges,"",%progbits
 2320              	.Ldebug_ranges0:
 2321 0000 00000000 		.4byte	.LFB1
 2322 0004 14000000 		.4byte	.LFE1
 2323 0008 00000000 		.4byte	.LFB2
 2324 000c 10000000 		.4byte	.LFE2
 2325 0010 00000000 		.4byte	.LFB3
 2326 0014 34000000 		.4byte	.LFE3
 2327 0018 00000000 		.4byte	.LFB4
 2328 001c 28000000 		.4byte	.LFE4
 2329 0020 00000000 		.4byte	.LFB5
 2330 0024 08010000 		.4byte	.LFE5
 2331 0028 00000000 		.4byte	.LFB6
 2332 002c 40000000 		.4byte	.LFE6
 2333 0030 00000000 		.4byte	.LFB8
 2334 0034 14000000 		.4byte	.LFE8
 2335 0038 00000000 		.4byte	.LFB7
 2336 003c 1C000000 		.4byte	.LFE7
 2337 0040 00000000 		.4byte	.LFB9
 2338 0044 4C000000 		.4byte	.LFE9
 2339 0048 00000000 		.4byte	.LFB10
 2340 004c 2C000000 		.4byte	.LFE10
 2341 0050 00000000 		.4byte	.LFB11
 2342 0054 1C000000 		.4byte	.LFE11
 2343 0058 00000000 		.4byte	.LFB12
 2344 005c 0C000000 		.4byte	.LFE12
 2345 0060 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 92


 2346 0064 10000000 		.4byte	.LFE13
 2347 0068 00000000 		.4byte	.LFB14
 2348 006c 18000000 		.4byte	.LFE14
 2349 0070 00000000 		.4byte	.LFB15
 2350 0074 10000000 		.4byte	.LFE15
 2351 0078 00000000 		.4byte	.LFB16
 2352 007c 0C000000 		.4byte	.LFE16
 2353 0080 00000000 		.4byte	.LFB17
 2354 0084 20000000 		.4byte	.LFE17
 2355 0088 00000000 		.4byte	.LFB18
 2356 008c 10000000 		.4byte	.LFE18
 2357 0090 00000000 		.4byte	.LFB19
 2358 0094 10000000 		.4byte	.LFE19
 2359 0098 00000000 		.4byte	.LFB20
 2360 009c 10000000 		.4byte	.LFE20
 2361 00a0 00000000 		.4byte	.LFB21
 2362 00a4 10000000 		.4byte	.LFE21
 2363 00a8 00000000 		.4byte	.LFB22
 2364 00ac 10000000 		.4byte	.LFE22
 2365 00b0 00000000 		.4byte	.LFB23
 2366 00b4 0C000000 		.4byte	.LFE23
 2367 00b8 00000000 		.4byte	.LFB24
 2368 00bc 18000000 		.4byte	.LFE24
 2369 00c0 00000000 		.4byte	0
 2370 00c4 00000000 		.4byte	0
 2371              		.section	.debug_line,"",%progbits
 2372              	.Ldebug_line0:
 2373 0000 82020000 		.section	.debug_str,"MS",%progbits,1
 2373      02005E00 
 2373      00000201 
 2373      FB0E0D00 
 2373      01010101 
 2374              	.LASF56:
 2375 0000 63795379 		.ascii	"cySysWdtCallback\000"
 2375      73576474 
 2375      43616C6C 
 2375      6261636B 
 2375      00
 2376              	.LASF20:
 2377 0011 43795379 		.ascii	"CySysClkIloStartMeasurement\000"
 2377      73436C6B 
 2377      496C6F53 
 2377      74617274 
 2377      4D656173 
 2378              	.LASF7:
 2379 002d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2379      206C6F6E 
 2379      6720756E 
 2379      7369676E 
 2379      65642069 
 2380              	.LASF37:
 2381 0044 43795379 		.ascii	"CySysClkWcoEnabled\000"
 2381      73436C6B 
 2381      57636F45 
 2381      6E61626C 
 2381      656400
 2382              	.LASF60:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 93


 2383 0057 43795379 		.ascii	"CySysClkWcoSetHighPowerMode\000"
 2383      73436C6B 
 2383      57636F53 
 2383      65744869 
 2383      6768506F 
 2384              	.LASF6:
 2385 0073 6C6F6E67 		.ascii	"long long int\000"
 2385      206C6F6E 
 2385      6720696E 
 2385      7400
 2386              	.LASF0:
 2387 0081 7369676E 		.ascii	"signed char\000"
 2387      65642063 
 2387      68617200 
 2388              	.LASF52:
 2389 008d 66756E63 		.ascii	"function\000"
 2389      74696F6E 
 2389      00
 2390              	.LASF47:
 2391 0096 43795379 		.ascii	"CySysWdtGetIgnoreBits\000"
 2391      73576474 
 2391      47657449 
 2391      676E6F72 
 2391      65426974 
 2392              	.LASF16:
 2393 00ac 63795764 		.ascii	"cyWdtCallback\000"
 2393      7443616C 
 2393      6C626163 
 2393      6B00
 2394              	.LASF27:
 2395 00ba 63686563 		.ascii	"checkStatus\000"
 2395      6B537461 
 2395      74757300 
 2396              	.LASF4:
 2397 00c6 6C6F6E67 		.ascii	"long int\000"
 2397      20696E74 
 2397      00
 2398              	.LASF36:
 2399 00cf 636C6F63 		.ascii	"clockSel\000"
 2399      6B53656C 
 2399      00
 2400              	.LASF9:
 2401 00d8 75696E74 		.ascii	"uint8\000"
 2401      3800
 2402              	.LASF12:
 2403 00de 646F7562 		.ascii	"double\000"
 2403      6C6500
 2404              	.LASF23:
 2405 00e5 636F6D70 		.ascii	"compensatedCycles\000"
 2405      656E7361 
 2405      74656443 
 2405      79636C65 
 2405      7300
 2406              	.LASF19:
 2407 00f7 43795379 		.ascii	"CySysClkIloStop\000"
 2407      73436C6B 
 2407      496C6F53 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 94


 2407      746F7000 
 2408              	.LASF24:
 2409 0107 696C6F43 		.ascii	"iloCompensatedCycles\000"
 2409      6F6D7065 
 2409      6E736174 
 2409      65644379 
 2409      636C6573 
 2410              	.LASF10:
 2411 011c 75696E74 		.ascii	"uint32\000"
 2411      333200
 2412              	.LASF21:
 2413 0123 43795379 		.ascii	"CySysClkIloStopMeasurement\000"
 2413      73436C6B 
 2413      496C6F53 
 2413      746F704D 
 2413      65617375 
 2414              	.LASF53:
 2415 013e 70726576 		.ascii	"prevCallback\000"
 2415      43616C6C 
 2415      6261636B 
 2415      00
 2416              	.LASF41:
 2417 014b 43795379 		.ascii	"CySysWdtSetMatch\000"
 2417      73576474 
 2417      5365744D 
 2417      61746368 
 2417      00
 2418              	.LASF39:
 2419 015c 43795379 		.ascii	"CySysWdtEnable\000"
 2419      73576474 
 2419      456E6162 
 2419      6C6500
 2420              	.LASF51:
 2421 016b 43795379 		.ascii	"CySysWdtSetInterruptCallback\000"
 2421      73576474 
 2421      53657449 
 2421      6E746572 
 2421      72757074 
 2422              	.LASF8:
 2423 0188 756E7369 		.ascii	"unsigned int\000"
 2423      676E6564 
 2423      20696E74 
 2423      00
 2424              	.LASF45:
 2425 0195 43795379 		.ascii	"CySysWdtSetIgnoreBits\000"
 2425      73576474 
 2425      53657449 
 2425      676E6F72 
 2425      65426974 
 2426              	.LASF22:
 2427 01ab 64657369 		.ascii	"desiredDelay\000"
 2427      72656444 
 2427      656C6179 
 2427      00
 2428              	.LASF5:
 2429 01b8 6C6F6E67 		.ascii	"long unsigned int\000"
 2429      20756E73 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 95


 2429      69676E65 
 2429      6420696E 
 2429      7400
 2430              	.LASF49:
 2431 01ca 43795379 		.ascii	"CySysWdtMaskInterrupt\000"
 2431      73576474 
 2431      4D61736B 
 2431      496E7465 
 2431      72727570 
 2432              	.LASF3:
 2433 01e0 73686F72 		.ascii	"short unsigned int\000"
 2433      7420756E 
 2433      7369676E 
 2433      65642069 
 2433      6E7400
 2434              	.LASF38:
 2435 01f3 43795379 		.ascii	"CySysWdtGetEnabledStatus\000"
 2435      73576474 
 2435      47657445 
 2435      6E61626C 
 2435      65645374 
 2436              	.LASF55:
 2437 020c 43795379 		.ascii	"CySysWdtIsr\000"
 2437      73576474 
 2437      49737200 
 2438              	.LASF18:
 2439 0218 43795379 		.ascii	"CySysClkIloStart\000"
 2439      73436C6B 
 2439      496C6F53 
 2439      74617274 
 2439      00
 2440              	.LASF34:
 2441 0229 706F7765 		.ascii	"powerModeStatus\000"
 2441      724D6F64 
 2441      65537461 
 2441      74757300 
 2442              	.LASF58:
 2443 0239 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyLFClk.c\000"
 2443      6E657261 
 2443      7465645F 
 2443      536F7572 
 2443      63655C50 
 2444              	.LASF15:
 2445 025c 72656733 		.ascii	"reg32\000"
 2445      3200
 2446              	.LASF29:
 2447 0262 43795379 		.ascii	"CySysClkWcoStart\000"
 2447      73436C6B 
 2447      57636F53 
 2447      74617274 
 2447      00
 2448              	.LASF28:
 2449 0273 72657475 		.ascii	"returnStatus\000"
 2449      726E5374 
 2449      61747573 
 2449      00
 2450              	.LASF35:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 96


 2451 0280 43795379 		.ascii	"CySysClkWcoClockOutSelect\000"
 2451      73436C6B 
 2451      57636F43 
 2451      6C6F636B 
 2451      4F757453 
 2452              	.LASF17:
 2453 029a 73697A65 		.ascii	"sizetype\000"
 2453      74797065 
 2453      00
 2454              	.LASF43:
 2455 02a3 43795379 		.ascii	"CySysWdtGetMatch\000"
 2455      73576474 
 2455      4765744D 
 2455      61746368 
 2455      00
 2456              	.LASF42:
 2457 02b4 6D617463 		.ascii	"match\000"
 2457      6800
 2458              	.LASF61:
 2459 02ba 63796465 		.ascii	"cydelayFreqHz\000"
 2459      6C617946 
 2459      72657148 
 2459      7A00
 2460              	.LASF48:
 2461 02c8 43795379 		.ascii	"CySysWdtClearInterrupt\000"
 2461      73576474 
 2461      436C6561 
 2461      72496E74 
 2461      65727275 
 2462              	.LASF11:
 2463 02df 666C6F61 		.ascii	"float\000"
 2463      7400
 2464              	.LASF50:
 2465 02e5 43795379 		.ascii	"CySysWdtUnmaskInterrupt\000"
 2465      73576474 
 2465      556E6D61 
 2465      736B496E 
 2465      74657272 
 2466              	.LASF46:
 2467 02fd 62697473 		.ascii	"bitsNum\000"
 2467      4E756D00 
 2468              	.LASF62:
 2469 0305 43794861 		.ascii	"CyHalt\000"
 2469      6C7400
 2470              	.LASF1:
 2471 030c 756E7369 		.ascii	"unsigned char\000"
 2471      676E6564 
 2471      20636861 
 2471      7200
 2472              	.LASF26:
 2473 031a 636F6D70 		.ascii	"compensateRunningStatus\000"
 2473      656E7361 
 2473      74655275 
 2473      6E6E696E 
 2473      67537461 
 2474              	.LASF2:
 2475 0332 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 97


 2475      7420696E 
 2475      7400
 2476              	.LASF40:
 2477 033c 43795379 		.ascii	"CySysWdtDisable\000"
 2477      73576474 
 2477      44697361 
 2477      626C6500 
 2478              	.LASF30:
 2479 034c 43795379 		.ascii	"CySysClkWcoStop\000"
 2479      73436C6B 
 2479      57636F53 
 2479      746F7000 
 2480              	.LASF32:
 2481 035c 43795379 		.ascii	"CySysClkWcoSetPowerMode\000"
 2481      73436C6B 
 2481      57636F53 
 2481      6574506F 
 2481      7765724D 
 2482              	.LASF13:
 2483 0374 63686172 		.ascii	"char\000"
 2483      00
 2484              	.LASF33:
 2485 0379 6D6F6465 		.ascii	"mode\000"
 2485      00
 2486              	.LASF44:
 2487 037e 43795379 		.ascii	"CySysWdtGetCount\000"
 2487      73576474 
 2487      47657443 
 2487      6F756E74 
 2487      00
 2488              	.LASF25:
 2489 038f 64657369 		.ascii	"desiredDelayInCounts\000"
 2489      72656444 
 2489      656C6179 
 2489      496E436F 
 2489      756E7473 
 2490              	.LASF59:
 2491 03a4 5C5C766D 		.ascii	"\\\\vmware-host\\Shared Folders\\Documents\\PSoC Cr"
 2491      77617265 
 2491      2D686F73 
 2491      745C5368 
 2491      61726564 
 2492 03d2 6561746F 		.ascii	"eator\\SmartIO\\SimpleSmartIO.cydsn\000"
 2492      725C536D 
 2492      61727449 
 2492      4F5C5369 
 2492      6D706C65 
 2493              	.LASF14:
 2494 03f4 63797374 		.ascii	"cystatus\000"
 2494      61747573 
 2494      00
 2495              	.LASF31:
 2496 03fd 43795379 		.ascii	"CySysClkIloCompensate\000"
 2496      73436C6B 
 2496      496C6F43 
 2496      6F6D7065 
 2496      6E736174 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\cc612nrj.s 			page 98


 2497              	.LASF54:
 2498 0413 43795379 		.ascii	"CySysWdtGetInterruptCallback\000"
 2498      73576474 
 2498      47657449 
 2498      6E746572 
 2498      72757074 
 2499              	.LASF57:
 2500 0430 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2500      4320342E 
 2500      392E3320 
 2500      32303135 
 2500      30333033 
 2501 0463 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 2501      20726576 
 2501      6973696F 
 2501      6E203232 
 2501      31323230 
 2502 0496 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 2502      67202D66 
 2502      66756E63 
 2502      74696F6E 
 2502      2D736563 
 2503              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
