ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_Sensing.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CapSense_IsBusy,"ax",%progbits
  18              		.align	2
  19              		.global	CapSense_IsBusy
  20              		.code	16
  21              		.thumb_func
  22              		.type	CapSense_IsBusy, %function
  23              	CapSense_IsBusy:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 3.0
   4:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods. 
   8:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense P4 v3.0 Datasheet
  10:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016), Cypress Semiconductor Corporation.
  13:.\Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
  31:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
  32:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 2


  33:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  41:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  42:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
  43:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  44:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  45:.\Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  46:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
  47:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_WIDGET_NUM_32                          (32u)
  48:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_WIDGET_NUM_32_DIV_SHIFT                (5u)
  49:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_WIDGET_NUM_32_MASK                     (0x0000001FLu)
  50:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_RESOLUTION                 (12u)
  51:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_COARSE_TRIM_THRESHOLD_1                (40u)
  52:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_COARSE_TRIM_THRESHOLD_2                (215u)
  53:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FREQUENCY_OFFSET_5                     (20u)
  54:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FREQUENCY_OFFSET_10                    (40u)
  55:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_FREQ_KHZ                   (1500u)
  56:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_MD                         (2u)
  57:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MIN_IMO_FREQ_KHZ                       (6000u)
  58:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  59:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MIN                                 (0u)
  60:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MAX                                 (65000u)
  61:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_ERROR                               (4000u)
  62:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE)
  64:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
  65:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #define CapSense_PRS_FACTOR_DIV                 (2u)
  66:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #else  
  67:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #define CapSense_PRS_FACTOR_DIV                 (1u)
  68:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
  69:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  70:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_PRS_FACTOR_DIV                     (0u)
  71:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE) */
  72:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
  73:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  74:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
  75:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  76:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  77:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  78:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
  79:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_CLK_SOURCE_PRS8 == CapSense_CSD_SNS_CLK_SOURCE) || \
  80:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) || \
  81:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
  82:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_FACTOR_FILTER_DELAY_12MHZ          (2u)
  83:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  84:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_FACTOR_FILTER_DELAY_12MHZ          (4u)
  85:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CLK_SOURCE_DIRECT != CapSense_CSD_SNS_CLK_SOURCE) */
  86:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
  87:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FACTOR_MOD_SNS                         (8u)
  88:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
  89:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 3


  90:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                               */
  91:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  92:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
  93:.\Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
  94:.\Generated_Source\PSoC4/CapSense_Sensing.c **** {
  95:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
  96:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
  97:.\Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
  98:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
  99:.\Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 100:.\Generated_Source\PSoC4/CapSense_Sensing.c **** {
 101:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 102:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 103:.\Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 104:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 105:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 107:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 108:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 109:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 110:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \if SECTION_CAPSENSE_INTERNAL
 111:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_capsense_internal
 112:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 113:.\Generated_Source\PSoC4/CapSense_Sensing.c **** */
 114:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 115:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 116:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 117:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \endif */
 118:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 119:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 120:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Define module variables
 121:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 122:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 123:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_CSX_EN) || \
 124:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ADC_EN))
 125:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 126:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_CSX_EN) || \
 127:.\Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ADC_EN))) */
 128:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 129:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 130:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /*  Module variable keep track of frequency hopping channel index   */
 131:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 132:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /*  Variable keep frequency offsets */
 133:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 134:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 135:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 136:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 137:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 138:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 139:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 140:.\Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 141:.\Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 142:.\Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint32 CapSense_curWidgetResolution = 0u;
 143:.\Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 144:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
 145:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_prescalersTuningDone = 0u;
 146:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) */
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 4


 147:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure  */
 149:.\Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 150:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 151:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 152:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN))
 153:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /*  Pointer to Flash structure holding configuration of widget to be scanned  */
 154:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 155:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 156:.\Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSX_EN))  */
 157:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) 
 158:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /*  Pointer to Flash structure holding info of sensor to be scanned  */
 159:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 160:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 161:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 162:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 163:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 164:.\Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 165:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 166:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 167:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Returns the current status of the component (scan completed or scan in
 168:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   progress).
 169:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 170:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 171:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   This API checks the status flag in the CapSense_dsRam structure
 172:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   which is set when the scanning starts. The API returns a zero value when all the
 173:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   sensors in the widget have been scanned.
 174:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   In the CSD2X mode the API returns a zero value when all the sensors in both slots
 175:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   have been scanned.
 176:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   A new scan or the widget setup change must not be made while
 177:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   the component is busy.
 178:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 179:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 180:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Returns the current status of the component (scan completed or scan in
 181:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   progress):
 182:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Zero     - Free, no scan in progress, a next scan can be initiated.
 183:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Non-zero - Busy, scan in progress, wait prior to initiating a next scan.
 184:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 185:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 186:.\Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 187:.\Generated_Source\PSoC4/CapSense_Sensing.c **** {
  26              		.loc 1 187 0
  27              		.cfi_startproc
 188:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((*(volatile uint8 *)&CapSense_dsRam.status) & CapSense_SW_STS_BUSY);
  28              		.loc 1 188 0
  29 0000 024B     		ldr	r3, .L2
  30 0002 187A     		ldrb	r0, [r3, #8]
  31 0004 7F23     		mov	r3, #127
  32 0006 9843     		bic	r0, r3
 189:.\Generated_Source\PSoC4/CapSense_Sensing.c **** }
  33              		.loc 1 189 0
  34              		@ sp needed
  35 0008 7047     		bx	lr
  36              	.L3:
  37 000a C046     		.align	2
  38              	.L2:
  39 000c 00000000 		.word	CapSense_dsRam
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 5


  40              		.cfi_endproc
  41              	.LFE1:
  42              		.size	CapSense_IsBusy, .-CapSense_IsBusy
  43              		.section	.text.CapSense_SetupWidget,"ax",%progbits
  44              		.align	2
  45              		.global	CapSense_SetupWidget
  46              		.code	16
  47              		.thumb_func
  48              		.type	CapSense_SetupWidget, %function
  49              	CapSense_SetupWidget:
  50              	.LFB2:
 190:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 191:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 192:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 193:.\Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 194:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 195:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 196:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Performs the initialization required to scan a particular widget.
 197:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 198:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 199:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   This API re-initializes the component hardware if the sensing methods used by
 200:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   the widget are different from the sensing methods used by the previous widget, 
 201:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   initializes the hardware with configurations specific to the widget. 
 202:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   This API does not start sensor scanning. This API must be called prior 
 203:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   calling CapSense_Scan() API to start the sensor scan.
 204:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * 
 205:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Note in the CSD2x mode, each widget should be set up individually with two calls to the
 206:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   CapSense_SetupWidget() API.
 207:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   This API disconnects the electrode if it was previously connected by 
 208:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   CapSense_CSDSetupWidgetExt() or CapSense_CSXSetupWidgetExt() 
 209:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   APIs. This API does not disconnect the electrode if it was connected manually or
 210:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   using CapSense_CSDConnectSns() API.
 211:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   The last widget will be configured if this API is called twice for different
 212:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   widgets. API does not break the functionality if it is called twice for the 
 213:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   same widget.
 214:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 215:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \param wdgtIndex
 216:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Specifies the ID of the widget for which the hardware tuning parameters should be
 217:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   initialized in the CapSense HW block.
 218:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 219:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \return 
 220:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Returns the status of operation:
 221:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *      - Zero     - The CapSense HW block is initialized.
 222:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *      - Non-zero - The CapSense HW block is busy and cannot be initialized.
 223:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 224:.\Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 225:.\Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 wdgtIndex)
 226:.\Generated_Source\PSoC4/CapSense_Sensing.c **** {
  51              		.loc 1 226 0
  52              		.cfi_startproc
  53              	.LVL0:
  54 0000 10B5     		push	{r4, lr}
  55              		.cfi_def_cfa_offset 8
  56              		.cfi_offset 4, -8
  57              		.cfi_offset 14, -4
 227:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 228:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 6


 229:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
  58              		.loc 1 229 0
  59 0002 104B     		ldr	r3, .L10
  60 0004 9B68     		ldr	r3, [r3, #8]
  61 0006 DB03     		lsl	r3, r3, #15
  62 0008 10D4     		bmi	.L7
 230:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 231:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 232:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 233:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 234:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /*  
 235:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 236:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 237:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.   
 238:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 239:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         else if ((CapSense_TOTAL_WIDGETS > wdgtIndex) &&
  63              		.loc 1 239 0
  64 000a 0228     		cmp	r0, #2
  65 000c 10D8     		bhi	.L8
  66 000e C304     		lsl	r3, r0, #19
  67 0010 1B0E     		lsr	r3, r3, #24
 240:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             (((uint32)CapSense_dsRam.wdgtEnable[(uint8)(wdgtIndex >> CapSense_WIDGET_NUM_32_DIV_SHI
  68              		.loc 1 240 0 discriminator 1
  69 0012 0233     		add	r3, r3, #2
  70 0014 9B00     		lsl	r3, r3, #2
  71 0016 0B4A     		ldr	r2, .L10
  72 0018 D318     		add	r3, r2, r3
  73 001a 5A68     		ldr	r2, [r3, #4]
 241:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                                                 (0x00000001Lu << (wdgtIndex & CapSense_WIDGET_NUM_3
  74              		.loc 1 241 0 discriminator 1
  75 001c 1F23     		mov	r3, #31
  76 001e 0340     		and	r3, r0
  77 0020 DA40     		lsr	r2, r2, r3
  78 0022 131C     		mov	r3, r2
 239:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             (((uint32)CapSense_dsRam.wdgtEnable[(uint8)(wdgtIndex >> CapSense_WIDGET_NUM_32_DIV_SHI
  79              		.loc 1 239 0 discriminator 1
  80 0024 DB07     		lsl	r3, r3, #31
  81 0026 05D4     		bmi	.L9
 242:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     
 243:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 244:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 245:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_DISABLE != ((uint32)CapSense_dsRam.wdgtWorking[(uint8)(wdgtIndex >> Ca
 246:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                                                  (0x00000001Lu << (wdgtIndex & CapSense_WIDGET_NUM_
 247:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 248:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     widgetStatus = CYRET_SUCCESS;
 249:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 250:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 else    
 251:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 252:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     widgetStatus = CYRET_INVALID_STATE;
 253:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 254:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
 255:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 widgetStatus = CYRET_SUCCESS;
 256:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN)) */
 257:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 258:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         else    
 259:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 260:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_BAD_PARAM;
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 7


  82              		.loc 1 260 0
  83 0028 0124     		mov	r4, #1
  84 002a 04E0     		b	.L5
  85              	.L7:
 232:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     }
  86              		.loc 1 232 0
  87 002c 1124     		mov	r4, #17
  88 002e 02E0     		b	.L5
  89              	.L8:
  90              		.loc 1 260 0
  91 0030 0124     		mov	r4, #1
  92 0032 00E0     		b	.L5
  93              	.L9:
 255:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN)) */
  94              		.loc 1 255 0
  95 0034 0024     		mov	r4, #0
  96              	.L5:
  97              	.LVL1:
 261:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 262:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     
 263:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /*  
 264:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 265:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget  
 266:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 267:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)    
  98              		.loc 1 267 0
  99 0036 002C     		cmp	r4, #0
 100 0038 01D1     		bne	.L6
 268:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 269:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /*  Check if CSD2X is enabled   */
 270:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD2X_EN)
 271:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             /******************************
 272:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             * This is the place where CapSense_SetupWidget2x(uint32 slotIndex) 
 273:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             * API should be implemented.
 274:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             * CSD2X will be implemented
 275:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             * in the next component version.
 276:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             *********************************/
 277:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 278:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "CSD2x not implemented in this version of component"
 279:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             
 280:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_CSD_CSX_EN)
 281:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
 282:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_UNDEFINED_E == CapSense_currentSenseMethod) 
 283:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 284:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Release ADC resources */
 285:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     widgetStatus = CapSense_AdcReleaseResources();
 286:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 287:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
 288:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             
 289:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             /*  Check widget sensing method is CSX and call CSX APIs    */
 290:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSX_E == 
 291:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_SENSE_METHOD_ENUM)CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[w
 292:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 293:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*  
 294:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  *  Check if CSD block is  already initialized for CSX operation
 295:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  *  If not, initialize CSD hardware block for CSX measurement   
 296:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  */
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 8


 297:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_SENSE_METHOD_CSX_E != CapSense_currentSenseMethod) 
 298:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 299:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 300:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 301:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 302:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_ADC_EN)
 303:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CYRET_SUCCESS == widgetStatus)
 304:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 305:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*  Set up widget for CSX scan  */
 306:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_CSXSetupWidget(wdgtIndex);
 307:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 308:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 309:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*  Set up widget for CSX scan  */
 310:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_CSXSetupWidget(wdgtIndex);
 311:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
 312:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 313:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             /*  Check widget sensing method is CSD and call appropriate API */
 314:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             else if (CapSense_SENSE_METHOD_CSD_E ==
 315:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_SENSE_METHOD_ENUM)CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtAr
 316:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 317:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*  
 318:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  * Check if CSD block is  already initialized for CSD operation
 319:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  * If not, initialize CSD hardware block for CSD measurement   
 320:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  */
 321:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_SENSE_METHOD_CSD_E != CapSense_currentSenseMethod)
 322:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 323:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 324:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 325:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 326:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_ADC_EN)
 327:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CYRET_SUCCESS == widgetStatus)
 328:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 329:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*  Set up widget for CSD scan  */
 330:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_CSDSetupWidget(wdgtIndex);
 331:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 332:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 333:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*  Set up widget for CSD scan  */
 334:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_CSDSetupWidget(wdgtIndex);
 335:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
 336:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 337:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             else
 338:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 339:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*  Sensing method is invalid, return error to caller  */
 340:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 widgetStatus = CYRET_UNKNOWN;
 341:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 342:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_CSD_EN)
 343:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
 344:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*  
 345:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  * Check if CSD block is  already initialized for CSD operation
 346:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  * If not, initialize CSD hardware block for CSD measurement   
 347:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  */
 348:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_SENSE_METHOD_CSD_E != CapSense_currentSenseMethod)
 349:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 350:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_UNDEFINED_E == CapSense_currentSenseMethod) 
 351:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 352:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Release ADC resources */
 353:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         widgetStatus = CapSense_AdcReleaseResources();
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 9


 354:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 355:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 356:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CYRET_SUCCESS == widgetStatus)
 357:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 358:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Initialize CSD mode to guarantee configured CSD mode after CSX calibrati
 359:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_CSDInitialize();
 360:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 361:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 362:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 363:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 
 364:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CYRET_SUCCESS == widgetStatus)
 365:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 366:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*  Set up widget for scan */
 367:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_CSDSetupWidget(wdgtIndex);  
 368:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 369:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #else    
 370:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*  Set up widget for scan */
 371:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(wdgtIndex);   
 372:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
 373:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_CSX_EN)
 374:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
 375:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*  
 376:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  *  Check if CSD block is  already initialized for CSX operation
 377:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  *  If not, initialize CSD hardware block for CSX measurement   
 378:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  */
 379:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_SENSE_METHOD_CSX_E != CapSense_currentSenseMethod) 
 380:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 381:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_UNDEFINED_E == CapSense_currentSenseMethod) 
 382:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 383:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Release ADC resources */
 384:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         widgetStatus = CapSense_AdcReleaseResources();
 385:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 386:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     
 387:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CYRET_SUCCESS == widgetStatus)
 388:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 389:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Initialize CSD hardware block for CSX measurement */
 390:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_CSXInitialize();
 391:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
 392:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 393:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 394:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 
 395:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CYRET_SUCCESS == widgetStatus)
 396:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 397:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*  Set up widgets for scan     */
 398:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_CSXSetupWidget(wdgtIndex);
 399:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 400:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
 401:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*  Set up widgets for scan     */
 402:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(wdgtIndex);
 101              		.loc 1 402 0
 102 003a FFF7FEFF 		bl	CapSense_CSXSetupWidget
 103              	.LVL2:
 104              	.L6:
 403:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
 404:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
 405:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 406:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "No sensing method enabled, component cannot work in this mode"
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 10


 407:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif  /* (CapSense_ENABLE == CapSense_CSD2X_EN) */
 408:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 409:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 410:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 411:.\Generated_Source\PSoC4/CapSense_Sensing.c **** }
 105              		.loc 1 411 0
 106 003e 201C     		mov	r0, r4
 107              		@ sp needed
 108              	.LVL3:
 109 0040 10BD     		pop	{r4, pc}
 110              	.L11:
 111 0042 C046     		.align	2
 112              	.L10:
 113 0044 00000000 		.word	CapSense_dsRam
 114              		.cfi_endproc
 115              	.LFE2:
 116              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 117              		.section	.text.CapSense_Scan,"ax",%progbits
 118              		.align	2
 119              		.global	CapSense_Scan
 120              		.code	16
 121              		.thumb_func
 122              		.type	CapSense_Scan, %function
 123              	CapSense_Scan:
 124              	.LFB3:
 412:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 413:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 414:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 415:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 416:.\Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 417:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 418:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 419:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Initiates scan for all sensors in the widget which is initialized by 
 420:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   CapSense_SetupWidget(), if the no scan is in progress
 421:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 422:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 423:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   In the CSD mode, this API initializes the widget scanning in the descending order.
 424:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   In the CSX mode, this API initializes the widget scanning in the ascending order. 
 425:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   It connects the sensor in the widget, sets up a callback for the ISR
 426:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   and starts scan of all the sensors in the widget which was set up in
 427:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   the CapSense_SetupWidget() API.
 428:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   This API returns to the caller after scanning of the sensor in the 
 429:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   widget is started, and scanning of the remaining sensors is started in the ISR. 
 430:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   The status of scanning must be checked using the CapSense_IsBusy() API  
 431:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   prior to starting next scan or setting up a widget.
 432:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 433:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Note that the CapSense HW block should be configured using  
 434:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   the CapSense_SetupWidget() API prior to calling this API.
 435:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 436:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \return 
 437:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Returns the status of operation:
 438:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *      - Zero     - The CapSense scan is started.
 439:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *      - Non-zero - The CapSense HW block is busy and scan has not started.
 440:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 441:.\Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 442:.\Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 443:.\Generated_Source\PSoC4/CapSense_Sensing.c **** {
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 11


 125              		.loc 1 443 0
 126              		.cfi_startproc
 127 0000 08B5     		push	{r3, lr}
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 3, -8
 130              		.cfi_offset 14, -4
 131              	.LVL4:
 444:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 445:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 446:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 132              		.loc 1 446 0
 133 0002 054B     		ldr	r3, .L15
 134 0004 9B68     		ldr	r3, [r3, #8]
 135 0006 DB03     		lsl	r3, r3, #15
 136 0008 03D4     		bmi	.L14
 447:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 448:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 449:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 450:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 451:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 452:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 453:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /*  If CSD2X is enabled, call CSD2X scan    */
 454:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_CSD2X_EN)
 455:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CapSense_Scan2x();
 456:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 457:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /*  If both CSD and CSX are enabled, call scan API based on widget sensing method    */
 458:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_CSX_EN)
 459:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /*  Check widget sensing method and call appropriate APIs   */
 460:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 461:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         {  
 462:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 463:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 464:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 465:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 466:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 467:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_CSDScan();
 468:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 469:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 470:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             default:
 471:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CYRET_UNKNOWN;
 472:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 473:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 474:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         
 475:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /*  If only CSD is enabled, call CSD scan   */
 476:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 477:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSDScan();
 478:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 479:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /*  If only CSX is enabled, call CSX scan   */
 480:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 481:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXScan();
 137              		.loc 1 481 0
 138 000a FFF7FEFF 		bl	CapSense_CSXScan
 139              	.LVL5:
 444:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 140              		.loc 1 444 0
 141 000e 0020     		mov	r0, #0
 142 0010 00E0     		b	.L13
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 12


 143              	.L14:
 449:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 144              		.loc 1 449 0
 145 0012 1120     		mov	r0, #17
 146              	.L13:
 147              	.LVL6:
 482:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 484:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_UNKNOWN;
 485:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, component cannot work in this mode"
 486:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif  /* (CapSense_ENABLE == CapSense_CSD2X_EN) */
 487:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 488:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 489:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 490:.\Generated_Source\PSoC4/CapSense_Sensing.c **** }
 148              		.loc 1 490 0
 149              		@ sp needed
 150 0014 08BD     		pop	{r3, pc}
 151              	.L16:
 152 0016 C046     		.align	2
 153              	.L15:
 154 0018 00000000 		.word	CapSense_dsRam
 155              		.cfi_endproc
 156              	.LFE3:
 157              		.size	CapSense_Scan, .-CapSense_Scan
 158              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 159              		.align	2
 160              		.global	CapSense_ScanAllWidgets
 161              		.code	16
 162              		.thumb_func
 163              		.type	CapSense_ScanAllWidgets, %function
 164              	CapSense_ScanAllWidgets:
 165              	.LFB4:
 491:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 492:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 493:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 494:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 495:.\Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 496:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 497:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 498:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Initializes a widget and scans all the sensors in the widget, then the same 
 499:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   process is repeated for all widgets in the component. i.e. scan all the 
 500:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   widgets in the component.
 501:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 502:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 503:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Initializes a widget and then initiates scan for the sensor in the
 504:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   widget and returns to the caller. At the end of the sensor scan, the ISR is 
 505:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   triggered and the following sensor scan is initiated in the ISR. Once all the 
 506:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   sensors are scanned, the next widget in the component is initialized and the  
 507:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   process is repeated  until all the sensors in all widgets in the component 
 508:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   are scanned.
 509:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   This function does not require the CapSense_Scan() or 
 510:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   CapSense_SetupWidget(uint32 wdgtIndex) APIs to be called to start
 511:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *    scanning.
 512:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 513:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \return 
 514:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Returns the status of operation:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 13


 515:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   - Zero        - Successfully initiated scan.
 516:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   - Non-zero    - One or more errors occurred in the initialization process.
 517:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 518:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 519:.\Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
 520:.\Generated_Source\PSoC4/CapSense_Sensing.c **** {
 166              		.loc 1 520 0
 167              		.cfi_startproc
 168 0000 08B5     		push	{r3, lr}
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 3, -8
 171              		.cfi_offset 14, -4
 172              	.LVL7:
 521:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 522:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     
 523:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSD2X_EN)
 524:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 173              		.loc 1 524 0
 174 0002 164B     		ldr	r3, .L25
 175 0004 9B68     		ldr	r3, [r3, #8]
 176 0006 1B06     		lsl	r3, r3, #24
 177 0008 26D4     		bmi	.L24
 525:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 526:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Previous widget is being scanned. Return error. */
 527:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_INVALID_STATE;
 528:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 529:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 530:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 531:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             /*  
 532:.\Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Set up widget first widget.
 533:.\Generated_Source\PSoC4/CapSense_Sensing.c ****              *  If widget returned error, set up next, continue same until widget does not return e
 534:.\Generated_Source\PSoC4/CapSense_Sensing.c ****              */
 535:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             for (CapSense_widgetIndex = 0u; 
 178              		.loc 1 535 0
 179 000a 0022     		mov	r2, #0
 180 000c 144B     		ldr	r3, .L25+4
 181 000e 1A70     		strb	r2, [r3]
 521:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 182              		.loc 1 521 0
 183 0010 0120     		mov	r0, #1
 184 0012 4042     		neg	r0, r0
 185              		.loc 1 535 0
 186 0014 1AE0     		b	.L19
 187              	.LVL8:
 188              	.L23:
 536:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_widgetIndex < CapSense_TOTAL_WIDGETS; 
 537:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_widgetIndex++)
 538:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 539:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 540:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
 189              		.loc 1 540 0
 190 0016 124B     		ldr	r3, .L25+4
 191 0018 1878     		ldrb	r0, [r3]
 192              	.LVL9:
 193 001a C0B2     		uxtb	r0, r0
 194 001c FFF7FEFF 		bl	CapSense_SetupWidget
 195              	.LVL10:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 14


 541:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 542:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CYRET_SUCCESS == scanStatus)
 196              		.loc 1 542 0
 197 0020 0028     		cmp	r0, #0
 198 0022 0ED1     		bne	.L20
 543:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 544:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 545:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* If there are more than one widget to be scanned, request callback to sca
 546:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         if ((CapSense_TOTAL_WIDGETS - 1u) > CapSense_widgetIndex)
 199              		.loc 1 546 0
 200 0024 0E4B     		ldr	r3, .L25+4
 201 0026 1B78     		ldrb	r3, [r3]
 202 0028 DBB2     		uxtb	r3, r3
 203 002a 012B     		cmp	r3, #1
 204 002c 03D8     		bhi	.L21
 547:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
 548:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                              /* Request callback to scan next widget in ISR */
 549:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                             CapSense_requestScanAllWidget = CapSense_ENABLE;
 205              		.loc 1 549 0
 206 002e 0122     		mov	r2, #1
 207 0030 0B4B     		ldr	r3, .L25+4
 208 0032 5A70     		strb	r2, [r3, #1]
 209 0034 02E0     		b	.L22
 210              	.L21:
 550:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
 551:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
 552:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
 553:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Request to exit in ISR (Do not scan the next widgets) */
 554:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                             CapSense_requestScanAllWidget = CapSense_DISABLE;
 211              		.loc 1 554 0
 212 0036 0022     		mov	r2, #0
 213 0038 094B     		ldr	r3, .L25+4
 214 003a 5A70     		strb	r2, [r3, #1]
 215              	.L22:
 555:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
 556:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else 
 557:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
 558:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Request to exit in ISR (We have only one widget) */
 559:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                             CapSense_requestScanAllWidget = CapSense_DISABLE;
 560:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
 561:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 562:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     
 563:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*  Initiate scan and quit loop */
 564:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     scanStatus = CapSense_Scan();
 216              		.loc 1 564 0
 217 003c FFF7FEFF 		bl	CapSense_Scan
 218              	.LVL11:
 565:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 566:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 219              		.loc 1 566 0
 220 0040 0BE0     		b	.L18
 221              	.L20:
 537:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 222              		.loc 1 537 0
 223 0042 074A     		ldr	r2, .L25+4
 224 0044 1378     		ldrb	r3, [r2]
 225 0046 0133     		add	r3, r3, #1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 15


 226 0048 DBB2     		uxtb	r3, r3
 227 004a 1370     		strb	r3, [r2]
 228              	.LVL12:
 229              	.L19:
 536:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_widgetIndex++)
 230              		.loc 1 536 0 discriminator 1
 231 004c 044B     		ldr	r3, .L25+4
 232 004e 1B78     		ldrb	r3, [r3]
 233 0050 DBB2     		uxtb	r3, r3
 535:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_widgetIndex < CapSense_TOTAL_WIDGETS; 
 234              		.loc 1 535 0 discriminator 1
 235 0052 022B     		cmp	r3, #2
 236 0054 DFD9     		bls	.L23
 237 0056 00E0     		b	.L18
 238              	.LVL13:
 239              	.L24:
 527:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 240              		.loc 1 527 0
 241 0058 1120     		mov	r0, #17
 242              	.LVL14:
 243              	.L18:
 567:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 } 
 568:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             } 
 569:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         }        
 570:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 571:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /******************************
 572:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         * This is the place where the Scan2x 
 573:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         * setup should be implemented.
 574:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         * Scan2x will be implemented
 575:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         * in the next component version.
 576:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         *********************************/
 577:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_DISABLE == CapSense_CSD2X_EN) */
 578:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 579:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 580:.\Generated_Source\PSoC4/CapSense_Sensing.c **** }
 244              		.loc 1 580 0
 245              		@ sp needed
 246 005a 08BD     		pop	{r3, pc}
 247              	.L26:
 248              		.align	2
 249              	.L25:
 250 005c 00000000 		.word	CapSense_dsRam
 251 0060 00000000 		.word	.LANCHOR0
 252              		.cfi_endproc
 253              	.LFE4:
 254              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
 255              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 256              		.align	2
 257              		.global	CapSense_SsInitialize
 258              		.code	16
 259              		.thumb_func
 260              		.type	CapSense_SsInitialize, %function
 261              	CapSense_SsInitialize:
 262              	.LFB5:
 581:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 582:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 583:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 16


 584:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 585:.\Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 586:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 587:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 588:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Performs hardware and firmware initialization required for proper operation
 589:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   of the CapSense component. This function is called from 
 590:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   the CapSense_Start() API prior to calling any other APIs of the component.
 591:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 592:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 593:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Performs hardware and firmware initialization required for proper operation
 594:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   of the CapSense component. This function is called from 
 595:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   the CapSense_Start() API prior to calling any other APIs of the component.
 596:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   1. The function initialises immunity offsets when the frequency hopping is 
 597:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *      enabled.
 598:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   2. Depending on the configuration, the function initialises the CSD block 
 599:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *      for the CSD2X, CSD, CSX, or CSD+CSX modes.
 600:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   3. The function updates the dsRam.wdgtWorking variable with 1 when Self Test
 601:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *      is enabled.
 602:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 603:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Calling the CapSense_Start API is the recommended method to initialize
 604:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   the CapSense component at power-up. The CapSense_SsInitialize() 
 605:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   API should not be used for initialization, resume, or wake-up operations.
 606:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   The dsRam.wdgtWorking variable is updated.
 607:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 608:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 609:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Returns status of operation:
 610:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   - Zero        - Indicates successful initialization.
 611:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   - Non-zero    - One or more errors occurred in the initialization process.
 612:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 613:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 615:.\Generated_Source\PSoC4/CapSense_Sensing.c **** {
 263              		.loc 1 615 0
 264              		.cfi_startproc
 265 0000 08B5     		push	{r3, lr}
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 3, -8
 268              		.cfi_offset 14, -4
 269              	.LVL15:
 616:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus = CYRET_SUCCESS;
 617:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 618:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 619:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 620:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_COARSE_TRIM_THRESHOLD_1 > CapSense_immunity[CapSense_FREQ_CHANNEL_0])
 621:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 622:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = 
 623:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_0] + CapSense_FREQUENCY_OFFSET_5;
 624:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = 
 625:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_0] + CapSense_FREQUENCY_OFFSET_10;
 626:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 627:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_COARSE_TRIM_THRESHOLD_2 > CapSense_immunity[CapSense_FREQ_CHANNEL_0])
 628:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 629:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = 
 630:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_0] - CapSense_FREQUENCY_OFFSET_5;
 631:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = 
 632:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_0] + CapSense_FREQUENCY_OFFSET_5;
 633:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         }
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 17


 634:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 635:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 636:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = 
 637:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_0] - CapSense_FREQUENCY_OFFSET_5;
 638:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = 
 639:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_0] - CapSense_FREQUENCY_OFFSET_10;
 640:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 641:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 642:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 643:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /*  
 644:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if CSD2X is enabled, if yes, initialize CapSense component
 645:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      *  for CSD2x operation 
 646:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 647:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_CSD2X_EN)
 648:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /*  
 649:.\Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Check if CSX or CSD enable along with CSD2X, if yes, provide the error
 650:.\Generated_Source\PSoC4/CapSense_Sensing.c ****          *  message as CSD2X can not coexist with CSD or CSX    
 651:.\Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 652:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 653:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "CSD2X and CSX can not be enabled together"
 654:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             initStatus = CYRET_UNKNOWN;
 655:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_CSD_EN)
 656:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "CSD2X and CSD can not be enabled together"
 657:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             initStatus = CYRET_UNKNOWN;
 658:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSX_EN == CapSense_ENABLE) */
 659:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 660:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize both CSD blocks for CSD2X scanning    */
 661:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSD2XInitialize();
 662:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 663:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_CSX_EN)
 664:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* 
 665:.\Generated_Source\PSoC4/CapSense_Sensing.c ****          * Do nothing, CSD hardware shall be initialized in the Setup Widget based
 666:.\Generated_Source\PSoC4/CapSense_Sensing.c ****          * on widget sensing method    
 667:.\Generated_Source\PSoC4/CapSense_Sensing.c ****          */         
 668:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;    
 669:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 670:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 671:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /*  Initialize CSD block for CSD scanning   */
 672:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSDInitialize();
 673:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 674:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 675:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /*  Initialize CSD block for CSX scanning   */
 676:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXInitialize();
 270              		.loc 1 676 0
 271 0002 FFF7FEFF 		bl	CapSense_CSXInitialize
 272              	.LVL16:
 677:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         
 678:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 679:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, component cannot work in this mode"
 680:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 681:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif  /* (CapSense_ENABLE == CapSense_CSD2X_EN) */
 682:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 683:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 684:.\Generated_Source\PSoC4/CapSense_Sensing.c **** }
 273              		.loc 1 684 0
 274 0006 0020     		mov	r0, #0
 275              		@ sp needed
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 18


 276 0008 08BD     		pop	{r3, pc}
 277              		.cfi_endproc
 278              	.LFE5:
 279              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 280              		.section	.text.CapSense_SetPinState,"ax",%progbits
 281              		.align	2
 282              		.global	CapSense_SetPinState
 283              		.code	16
 284              		.thumb_func
 285              		.type	CapSense_SetPinState, %function
 286              	CapSense_SetPinState:
 287              	.LFB6:
 685:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 686:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 687:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 688:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 689:.\Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 690:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 691:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 692:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Sets the status (drive mode and output state) of a sensor to six states
 693:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   relevant (GND, Shield,  HIgh-Z, Tx or Rx, sensor) to the CapSense operation.
 694:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   If the sensor is configured as a ganged sensor, then the API applies to the  
 695:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   dedicated pin and all ganged electrodes.
 696:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 697:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 698:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   This API disconnects port pins from AMUXBUS and sets the drive mode of a port pin
 699:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   (Rx, Tx or Sns electrode) based on an input parameter. The mode of the pin
 700:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   is set to HIgh-Z in the GPIO_PRT_PCx register.
 701:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 702:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Scanning should be completed before calling this API. 
 703:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   CapSense_SHIELD is not allowed if Enable shield electrode parameter
 704:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   is disabled.
 705:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   CapSense_TX_PIN and CapSense_RX_PIN are not allowed if there 
 706:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *    are no other CSX widgets configured in the project.
 707:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 708:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  \param wdgtIndex Specifies the ID of the widget.
 709:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   
 710:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  \param snsIndex Specifies the ID of the snsIndex.
 711:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   
 712:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  \param state Specifies the state to be set for a specified pin:
 713:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *          -   (0) CapSense_GROUND
 714:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *          -   (1) CapSense_HIGHZ
 715:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *          -   (2) CapSense_SHIELD
 716:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *          -   (3) CapSense_SENSOR
 717:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *          -   (4) CapSense_TX_PIN
 718:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *          -   (5) CapSense_RX_PIN
 719:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 720:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 721:.\Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 wdgtIndex, uint32 snsIndex, uint32 state)
 722:.\Generated_Source\PSoC4/CapSense_Sensing.c **** {
 288              		.loc 1 722 0
 289              		.cfi_startproc
 290              	.LVL17:
 291 0000 70B5     		push	{r4, r5, r6, lr}
 292              		.cfi_def_cfa_offset 16
 293              		.cfi_offset 4, -16
 294              		.cfi_offset 5, -12
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 19


 295              		.cfi_offset 6, -8
 296              		.cfi_offset 14, -4
 723:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *curSnsIOPtr;
 724:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 725:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 726:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 tempVal;
 727:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 728:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegisterValue;
 729:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 730:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 pinHSIOMShift;
 731:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 pinModeShift;
 732:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     
 733:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 734:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check ganged sns flag  */
 735:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[wdgtIndex].staticConfig & 
 736:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_GANGED_SNS_MASK))
 737:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         {             
 738:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlash;
 739:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += snsIndex;
 740:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             curSnsIOPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 741:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             
 742:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get number of ganged pins  */
 743:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             tempVal = curFlashSnsPtr->numPins;
 744:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 745:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 746:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 747:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 748:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                                     CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlash + snsIndex;
 749:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             /* There are no ganged pins */
 750:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             tempVal = 1u;                                
 751:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 752:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 753:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 754:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                                     CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlash + snsIndex;
 297              		.loc 1 754 0
 298 0002 C300     		lsl	r3, r0, #3
 299 0004 181A     		sub	r0, r3, r0
 300              	.LVL18:
 301 0006 8000     		lsl	r0, r0, #2
 302 0008 2A4B     		ldr	r3, .L34
 303 000a C458     		ldr	r4, [r0, r3]
 304 000c CB00     		lsl	r3, r1, #3
 305 000e 591A     		sub	r1, r3, r1
 306              	.LVL19:
 307 0010 8900     		lsl	r1, r1, #2
 753:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                                     CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlash + snsIndex;
 308              		.loc 1 753 0
 309 0012 6418     		add	r4, r4, r1
 310              	.LVL20:
 755:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif  /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 756:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     
 757:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 758:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reconfigure all ganged sensors  */
 759:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         do
 760:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 761:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif  /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 762:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 20


 763:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get HSIOM and port mode shifts */
 764:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             pinHSIOMShift = (uint32)curSnsIOPtr->hsiomShift;
 311              		.loc 1 764 0
 312 0014 267E     		ldrb	r6, [r4, #24]
 313              	.LVL21:
 765:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             pinModeShift = (uint32)curSnsIOPtr->shift;
 314              		.loc 1 765 0
 315 0016 A57E     		ldrb	r5, [r4, #26]
 316              	.LVL22:
 766:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             
 767:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Reset HSIOM register */
 768:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(curSnsIOPtr->hsiomPtr, CY_GET_REG32(curSnsIOPtr->hsiomPtr) & ~(CapSense_HS
 317              		.loc 1 768 0
 318 0018 2068     		ldr	r0, [r4]
 319 001a 0368     		ldr	r3, [r0]
 320 001c 0F21     		mov	r1, #15
 321 001e B140     		lsl	r1, r1, r6
 322 0020 8B43     		bic	r3, r1
 323 0022 0360     		str	r3, [r0]
 769:.\Generated_Source\PSoC4/CapSense_Sensing.c ****            
 770:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             switch (state)
 324              		.loc 1 770 0
 325 0024 012A     		cmp	r2, #1
 326 0026 1CD0     		beq	.L30
 327 0028 002A     		cmp	r2, #0
 328 002a 04D0     		beq	.L31
 329 002c 042A     		cmp	r2, #4
 330 002e 2AD0     		beq	.L32
 331 0030 052A     		cmp	r2, #5
 332 0032 30D0     		beq	.L33
 333 0034 3CE0     		b	.L28
 334              	.L31:
 771:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             {  
 772:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_GROUND:
 773:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 335              		.loc 1 773 0
 336 0036 FFF7FEFF 		bl	CyEnterCriticalSection
 337              	.LVL23:
 774:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 775:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update port configuration register (drive mode) for sensor */
 776:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 newRegisterValue = CY_GET_REG32(curSnsIOPtr->pcPtr);
 338              		.loc 1 776 0
 339 003a 6168     		ldr	r1, [r4, #4]
 340 003c 0B68     		ldr	r3, [r1]
 341              	.LVL24:
 777:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 newRegisterValue &= ~(CapSense_GPIO_PC_MASK << pinModeShift);
 342              		.loc 1 777 0
 343 003e 0722     		mov	r2, #7
 344 0040 AA40     		lsl	r2, r2, r5
 345 0042 9343     		bic	r3, r2
 346              	.LVL25:
 778:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 newRegisterValue |= (CapSense_SNS_GROUND_CONNECT << pinModeShift);
 347              		.loc 1 778 0
 348 0044 0622     		mov	r2, #6
 349 0046 AA40     		lsl	r2, r2, r5
 350 0048 151C     		mov	r5, r2
 351              	.LVL26:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 21


 352 004a 1D43     		orr	r5, r3
 353              	.LVL27:
 779:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(curSnsIOPtr->pcPtr, newRegisterValue);
 354              		.loc 1 779 0
 355 004c 0D60     		str	r5, [r1]
 780:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 781:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 356              		.loc 1 781 0
 357 004e FFF7FEFF 		bl	CyExitCriticalSection
 358              	.LVL28:
 782:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 783:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set logic 0 to port data register */
 784:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(curSnsIOPtr->drPtr, CY_GET_REG32(curSnsIOPtr->drPtr) & (uint32)~(uint3
 359              		.loc 1 784 0
 360 0052 A168     		ldr	r1, [r4, #8]
 361 0054 0B68     		ldr	r3, [r1]
 362 0056 607E     		ldrb	r0, [r4, #25]
 363 0058 0122     		mov	r2, #1
 364 005a 8240     		lsl	r2, r2, r0
 365 005c 9343     		bic	r3, r2
 366 005e 0B60     		str	r3, [r1]
 785:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 367              		.loc 1 785 0
 368 0060 26E0     		b	.L28
 369              	.LVL29:
 370              	.L30:
 786:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 
 787:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_HIGHZ:
 788:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 371              		.loc 1 788 0
 372 0062 FFF7FEFF 		bl	CyEnterCriticalSection
 373              	.LVL30:
 789:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 790:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update port configuration register (drive mode) for sensor */
 791:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 newRegisterValue = CY_GET_REG32(curSnsIOPtr->pcPtr);
 374              		.loc 1 791 0
 375 0066 6168     		ldr	r1, [r4, #4]
 376 0068 0B68     		ldr	r3, [r1]
 377              	.LVL31:
 792:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 newRegisterValue &= ~(CapSense_GPIO_PC_MASK << pinModeShift);
 378              		.loc 1 792 0
 379 006a 0722     		mov	r2, #7
 380 006c AA40     		lsl	r2, r2, r5
 381 006e 9343     		bic	r3, r2
 382              	.LVL32:
 793:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(curSnsIOPtr->pcPtr, newRegisterValue);
 383              		.loc 1 793 0
 384 0070 0B60     		str	r3, [r1]
 794:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 795:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 385              		.loc 1 795 0
 386 0072 FFF7FEFF 		bl	CyExitCriticalSection
 387              	.LVL33:
 796:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 797:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set logic 0 to port data register */
 798:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(curSnsIOPtr->drPtr, CY_GET_REG32(curSnsIOPtr->drPtr) & (uint32)~(uint3
 388              		.loc 1 798 0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 22


 389 0076 A168     		ldr	r1, [r4, #8]
 390 0078 0B68     		ldr	r3, [r1]
 391 007a 607E     		ldrb	r0, [r4, #25]
 392 007c 0122     		mov	r2, #1
 393 007e 8240     		lsl	r2, r2, r0
 394 0080 9343     		bic	r3, r2
 395 0082 0B60     		str	r3, [r1]
 799:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 396              		.loc 1 799 0
 397 0084 14E0     		b	.L28
 398              	.LVL34:
 399              	.L32:
 800:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 801:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 802:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 803:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set drive mode to Analog */
 804:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(curSnsIOPtr->pcPtr, CY_GET_REG32(curSnsIOPtr->pcPtr) &
 805:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                                ~(CapSense_GPIO_PC_MASK <<(curSnsIOPtr->shift)));
 806:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 807:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 808:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(curSnsIOPtr->hsiomPtr, CY_GET_REG32(curSnsIOPtr->hsiomPtr) | 
 809:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                                                        (CapSense_HSIOM_SEL_CSD_SHIELD << pinHSIOMSh
 810:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 811:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 812:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             
 813:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #if ((CapSense_ENABLE == CapSense_CSD_EN) || \
 814:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  (CapSense_ENABLE == CapSense_CSD_CSX_EN))
 815:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SENSOR:
 816:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Enable sensor */
 817:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_CSDConnectSns(curSnsIOPtr);
 818:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 819:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 820:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_ENABLE == CapSense_CSD_CSX_EN)) */
 821:.\Generated_Source\PSoC4/CapSense_Sensing.c ****              
 822:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 823:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  (CapSense_ENABLE == CapSense_CSD_CSX_EN))
 824:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_TX_PIN:
 825:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(curSnsIOPtr->hsiomPtr, CY_GET_REG32(curSnsIOPtr->hsiomPtr) | (CapS
 400              		.loc 1 825 0
 401 0086 2268     		ldr	r2, [r4]
 402              	.LVL35:
 403 0088 1168     		ldr	r1, [r2]
 404 008a 0423     		mov	r3, #4
 405 008c B340     		lsl	r3, r3, r6
 406 008e 1E1C     		mov	r6, r3
 407              	.LVL36:
 408 0090 0E43     		orr	r6, r1
 409 0092 1660     		str	r6, [r2]
 826:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 410              		.loc 1 826 0
 411 0094 0CE0     		b	.L28
 412              	.LVL37:
 413              	.L33:
 827:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     
 828:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_RX_PIN:
 829:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(curSnsIOPtr->hsiomPtr, CY_GET_REG32(curSnsIOPtr->hsiomPtr) | (CapS
 414              		.loc 1 829 0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 23


 415 0096 2268     		ldr	r2, [r4]
 416              	.LVL38:
 417 0098 1168     		ldr	r1, [r2]
 418 009a 0623     		mov	r3, #6
 419 009c B340     		lsl	r3, r3, r6
 420 009e 1E1C     		mov	r6, r3
 421              	.LVL39:
 422 00a0 0E43     		orr	r6, r1
 423 00a2 1660     		str	r6, [r2]
 830:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(curSnsIOPtr->pcPtr, CY_GET_REG32(curSnsIOPtr->pcPtr) & ~(CapSense_
 424              		.loc 1 830 0
 425 00a4 6168     		ldr	r1, [r4, #4]
 426 00a6 0B68     		ldr	r3, [r1]
 427 00a8 0722     		mov	r2, #7
 428 00aa AA40     		lsl	r2, r2, r5
 429 00ac 9343     		bic	r3, r2
 430 00ae 0B60     		str	r3, [r1]
 431              	.LVL40:
 432              	.L28:
 831:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 832:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 833:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_ENABLE == CapSense_CSD_CSX_EN)) */
 834:.\Generated_Source\PSoC4/CapSense_Sensing.c ****              
 835:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             default:
 836:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Wrong input */
 837:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 838:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 839:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 840:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 841:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             curSnsIOPtr++;
 842:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             tempVal--;
 843:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u != tempVal);
 844:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif  /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 845:.\Generated_Source\PSoC4/CapSense_Sensing.c **** }
 433              		.loc 1 845 0
 434              		@ sp needed
 435              	.LVL41:
 436 00b0 70BD     		pop	{r4, r5, r6, pc}
 437              	.L35:
 438 00b2 C046     		.align	2
 439              	.L34:
 440 00b4 00000000 		.word	CapSense_dsFlash
 441              		.cfi_endproc
 442              	.LFE6:
 443              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 444              		.section	.text.CapSense_PostAllWidgetsScan,"ax",%progbits
 445              		.align	2
 446              		.global	CapSense_PostAllWidgetsScan
 447              		.code	16
 448              		.thumb_func
 449              		.type	CapSense_PostAllWidgetsScan, %function
 450              	CapSense_PostAllWidgetsScan:
 451              	.LFB7:
 846:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 847:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 848:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
 849:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 24


 850:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SwitchSensingMode
 851:.\Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 852:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 853:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 854:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 855:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanned.
 856:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 857:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 858:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 859:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A
 860:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected
 861:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSD mode.
 862:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 863:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 864:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A
 865:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected
 866:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSX mode.
 867:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 868:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode Specifies the scan mode:
 869:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *           -  (1) CapSense_SENSE_METHOD_CSD_E
 870:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *           -  (2) CapSense_SENSE_METHOD_CSX_E
 871:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 872:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 873:.\Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
 874:.\Generated_Source\PSoC4/CapSense_Sensing.c **** {
 875:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
 876:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         
 877:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SENSE_METHOD_CSD_E == mode) 
 878:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 879:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /*  Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 880:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 881:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 882:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 883:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         
 884:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /*  Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 885:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 886:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 887:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 888:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 889:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 890:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
 891:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         
 892:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD mode to guarantee configured CSD mode after CSX calibration */
 893:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSDInitialize();
 894:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 895:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 896:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     else if (CapSense_SENSE_METHOD_CSX_E == mode) 
 897:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 898:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */ 
 899:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR); 
 900:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 901:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 902:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 903:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 904:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSDElectrodeCheck();
 905:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 906:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 25


 907:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 908:.\Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 909:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_CSH_HSIOM_PTR);
 910:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_CSH_TO_AMUXBUS_B_MASK << CapSense_CSH_HSIOM_
 911:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_CSH_HSIOM_PTR, newRegValue);
 912:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 913:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)) */
 914:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         
 915:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 916:.\Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 917:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DisableShieldElectrodes();
 918:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 919:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                    (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)) */
 920:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         
 921:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD hardware block for CSX measurement */
 922:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXInitialize();
 923:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
 924:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 925:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 926:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 927:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;  
 928:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 929:.\Generated_Source\PSoC4/CapSense_Sensing.c **** }
 930:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_CSD_CSX_EN)) */
 931:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 932:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 933:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
 934:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 935:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
 936:.\Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 937:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 938:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 939:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the CSDv2 HW block to 
 940:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
 941:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 942:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 943:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
 944:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
 945:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and 
 946:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
 947:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
 948:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 949:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \return 
 950:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Returns the status of operation:
 951:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   - Zero        - Resources released successfully.
 952:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   - Non-zero    - One or more errors occurred in releasing process.
 953:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
 954:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 955:.\Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
 956:.\Generated_Source\PSoC4/CapSense_Sensing.c **** {
 957:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
 958:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
 959:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 960:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 961:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 962:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 963:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 26


 964:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 965:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 966:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 967:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_CSX_EN)
 968:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /*  Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 969:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 970:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 971:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 972:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         
 973:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /*  Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 974:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 975:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 976:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 977:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 978:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 979:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
 980:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 981:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     
 982:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_CSD_EN)
 983:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */ 
 984:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR); 
 985:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 986:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 987:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
 988:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 989:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSDElectrodeCheck();
 990:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         
 991:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 992:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 993:.\Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 994:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_CSH_HSIOM_PTR);
 995:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_CSH_TO_AMUXBUS_B_MASK << CapSense_CSH_HSIOM_
 996:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_CSH_HSIOM_PTR, newRegValue);
 997:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 998:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)) */
 999:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         
1000:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
1001:.\Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
1002:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DisableShieldElectrodes();
1003:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
1004:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                    (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)) */
1005:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1006:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1007:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* 
1008:.\Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1009:.\Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1010:.\Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1011:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1012:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1013:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1014:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1015:.\Generated_Source\PSoC4/CapSense_Sensing.c **** }
1016:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1017:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1018:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1019:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1020:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_PostAllWidgetsScan
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 27


1021:.\Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1022:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1023:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1024:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   The ISR function for multiple widget scanning implementation.
1025:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1026:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1027:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   This is the function used by the CapSense ISR to implement multiple widget
1028:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   scanning.
1029:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Should not be used by the application layer.
1030:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1031:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1032:.\Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_PostAllWidgetsScan(void)
1033:.\Generated_Source\PSoC4/CapSense_Sensing.c **** {
 452              		.loc 1 1033 0
 453              		.cfi_startproc
 454 0000 10B5     		push	{r4, lr}
 455              		.cfi_def_cfa_offset 8
 456              		.cfi_offset 4, -8
 457              		.cfi_offset 14, -4
 458              	.L41:
1034:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSD2X_EN)
1035:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /*  
1036:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         *   1. Increment widget index
1037:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         *   2. Check if all widgets are scanned
1038:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         *   3. If all widgets are not scanned, set up and scan next widget  
1039:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1040:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (1u != CapSense_TOTAL_WIDGETS)  
1041:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             cystatus postScanStatus;
1042:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         
1043:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             do
1044:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1045:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_widgetIndex++;
 459              		.loc 1 1045 0
 460 0002 174A     		ldr	r2, .L42
 461 0004 1378     		ldrb	r3, [r2]
 462 0006 0133     		add	r3, r3, #1
 463 0008 DBB2     		uxtb	r3, r3
 464 000a 1370     		strb	r3, [r2]
1046:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1047:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
 465              		.loc 1 1047 0
 466 000c 1078     		ldrb	r0, [r2]
 467 000e C0B2     		uxtb	r0, r0
 468 0010 FFF7FEFF 		bl	CapSense_SetupWidget
 469              	.LVL42:
 470 0014 041E     		sub	r4, r0, #0
 471              	.LVL43:
1048:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1049:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CYRET_SUCCESS == postScanStatus)
 472              		.loc 1 1049 0
 473 0016 09D1     		bne	.L37
1050:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1051:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
 474              		.loc 1 1051 0
 475 0018 114B     		ldr	r3, .L42
 476 001a 1B78     		ldrb	r3, [r3]
 477 001c 022B     		cmp	r3, #2
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 28


 478 001e 02D1     		bne	.L38
1052:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1053:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* The last widget will be scanned. Reset flag to skip configuring the next
1054:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 479              		.loc 1 1054 0
 480 0020 0022     		mov	r2, #0
 481 0022 0F4B     		ldr	r3, .L42
 482 0024 5A70     		strb	r2, [r3, #1]
 483              	.L38:
1055:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1056:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     (void)CapSense_Scan();
 484              		.loc 1 1056 0
 485 0026 FFF7FEFF 		bl	CapSense_Scan
 486              	.LVL44:
 487 002a 15E0     		b	.L39
 488              	.LVL45:
 489              	.L37:
1057:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1058:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
 490              		.loc 1 1058 0
 491 002c 0C4B     		ldr	r3, .L42
 492 002e 1B78     		ldrb	r3, [r3]
 493 0030 022B     		cmp	r3, #2
 494 0032 0AD1     		bne	.L40
1059:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1060:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1061:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                          (CapSense_ENABLE == CapSense_CSD_EN))
1062:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_SENSE_METHOD_CSD_E ==
1063:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                              (CapSense_SENSE_METHOD_ENUM)CapSense_GET_SENSE_METHOD(&CapSense_dsFlas
1064:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1065:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*  Disable the CSD block */
1066:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                             CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1067:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1068:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1069:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                                (CapSense_ENABLE == CapSense_CSD_EN)) */
1070:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     
1071:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* All widgets are totally processed. Reset BUSY flag */
1072:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
 495              		.loc 1 1072 0
 496 0034 0B4A     		ldr	r2, .L42+4
 497 0036 7E33     		add	r3, r3, #126
 498 0038 9168     		ldr	r1, [r2, #8]
 499 003a 9943     		bic	r1, r3
1073:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     
1074:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Update status with with the failure */
1075:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;                
 500              		.loc 1 1075 0
 501 003c 0B02     		lsl	r3, r1, #8
 502 003e 1B0A     		lsr	r3, r3, #8
1076:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSen
 503              		.loc 1 1076 0
 504 0040 0406     		lsl	r4, r0, #24
 505 0042 2343     		orr	r3, r4
 506 0044 9360     		str	r3, [r2, #8]
 507              	.LVL46:
1077:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     
1078:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set postScanStatus to exit the while loop */
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 29


1079:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     postScanStatus = CYRET_SUCCESS;
 508              		.loc 1 1079 0
 509 0046 0024     		mov	r4, #0
 510 0048 06E0     		b	.L39
 511              	.LVL47:
 512              	.L40:
1080:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1081:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1082:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1083:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Update status with with the failure. Configure the next widget in while() lo
1084:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;                
 513              		.loc 1 1084 0
 514 004a 0649     		ldr	r1, .L42+4
 515 004c 8B68     		ldr	r3, [r1, #8]
 516 004e 1B02     		lsl	r3, r3, #8
 517 0050 1B0A     		lsr	r3, r3, #8
1085:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSen
 518              		.loc 1 1085 0
 519 0052 0206     		lsl	r2, r0, #24
 520 0054 1343     		orr	r3, r2
 521 0056 8B60     		str	r3, [r1, #8]
 522              	.LVL48:
 523              	.L39:
1086:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1087:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             } while (CYRET_SUCCESS != postScanStatus);
 524              		.loc 1 1087 0
 525 0058 002C     		cmp	r4, #0
 526 005a D2D1     		bne	.L41
1088:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1089:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1090:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /******************************
1091:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         * This is the place where the CSD2X 
1092:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         * postscan for 2 widgets should be implemented.
1093:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         * The CSD2X postscan will be implemented
1094:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         * in the next component version.
1095:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         *********************************/
1096:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD2X_EN == CapSense_DISABLE) */
1097:.\Generated_Source\PSoC4/CapSense_Sensing.c **** }
 527              		.loc 1 1097 0
 528              		@ sp needed
 529              	.LVL49:
 530 005c 10BD     		pop	{r4, pc}
 531              	.L43:
 532 005e C046     		.align	2
 533              	.L42:
 534 0060 00000000 		.word	.LANCHOR0
 535 0064 00000000 		.word	CapSense_dsRam
 536              		.cfi_endproc
 537              	.LFE7:
 538              		.size	CapSense_PostAllWidgetsScan, .-CapSense_PostAllWidgetsScan
 539              		.section	.text.CapSense_IsrInitialize,"ax",%progbits
 540              		.align	2
 541              		.global	CapSense_IsrInitialize
 542              		.code	16
 543              		.thumb_func
 544              		.type	CapSense_IsrInitialize, %function
 545              	CapSense_IsrInitialize:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 30


 546              	.LFB8:
1098:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1099:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1100:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1101:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsrInitialize
1102:.\Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1103:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1104:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1105:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Enables and initializes for the function pointer for a callback for the ISR.
1106:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1107:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1108:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   The  "address" is a special type cyisraddress defined by Cylib. This function
1109:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   is used by component APIs and should not be used by an application program for
1110:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   proper working of the component.
1111:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1112:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \param  address The address of the function to be called when interrupt is fired.
1113:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1114:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1115:.\Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_IsrInitialize(cyisraddress address)
1116:.\Generated_Source\PSoC4/CapSense_Sensing.c **** {
 547              		.loc 1 1116 0
 548              		.cfi_startproc
 549              	.LVL50:
 550 0000 08B5     		push	{r3, lr}
 551              		.cfi_def_cfa_offset 8
 552              		.cfi_offset 3, -8
 553              		.cfi_offset 14, -4
1117:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD2X_EN)
1118:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /******************************
1119:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     * This is the place where the CSD2X ISR 
1120:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     * Setup should be implemented.
1121:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     * The CSD2X ISR Setup will be implemented
1122:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     * in the next component version.
1123:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     *********************************/
1124:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1125:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 554              		.loc 1 1125 0
 555 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 556              	.LVL51:
1126:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD2X_EN) */
1127:.\Generated_Source\PSoC4/CapSense_Sensing.c **** }
 557              		.loc 1 1127 0
 558              		@ sp needed
 559 0006 08BD     		pop	{r3, pc}
 560              		.cfi_endproc
 561              	.LFE8:
 562              		.size	CapSense_IsrInitialize, .-CapSense_IsrInitialize
 563              		.section	.text.CapSense_ConfigureModClkClock,"ax",%progbits
 564              		.align	2
 565              		.global	CapSense_ConfigureModClkClock
 566              		.code	16
 567              		.thumb_func
 568              		.type	CapSense_ConfigureModClkClock, %function
 569              	CapSense_ConfigureModClkClock:
 570              	.LFB9:
1128:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1129:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 31


1130:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1131:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ConfigureModClkClock
1132:.\Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1133:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1134:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1135:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Sets the divider values for the modulator clock and then starts
1136:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   the modulator clock.
1137:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1138:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1139:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   It is not recommended to call this function directly by the application layer.
1140:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   It is used by initialization, widget APIs or wakeup functions to
1141:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   enable the clocks.
1142:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1143:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1144:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   modClk The divider value for the modulator clock.
1145:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1146:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1147:.\Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_ConfigureModClkClock(uint32 modClk)
1148:.\Generated_Source\PSoC4/CapSense_Sensing.c **** {
 571              		.loc 1 1148 0
 572              		.cfi_startproc
 573              	.LVL52:
1149:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1150:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /*  Stop modulator clock   */
1151:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR, 
 574              		.loc 1 1151 0
 575 0000 074A     		ldr	r2, .L47
 576 0002 084B     		ldr	r3, .L47+4
 577 0004 1A60     		str	r2, [r3]
1152:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
1153:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1154:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1155:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1156:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /*  
1157:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1158:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1159:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.  
1160:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1161:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));  
 578              		.loc 1 1161 0
 579 0006 0138     		sub	r0, r0, #1
 580              	.LVL53:
 581 0008 0002     		lsl	r0, r0, #8
 582              	.LVL54:
 583 000a 074B     		ldr	r3, .L47+8
 584 000c 1860     		str	r0, [r3]
 585              	.L46:
1162:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1163:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /*  Check whether previous modulator clock start command has finished. */
1164:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
 586              		.loc 1 1164 0 discriminator 1
 587 000e 054B     		ldr	r3, .L47+4
 588 0010 1B68     		ldr	r3, [r3]
 589 0012 002B     		cmp	r3, #0
 590 0014 FBDB     		blt	.L46
1165:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1166:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /*  Wait until previous modulator clock start command has finished. */  
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 32


1167:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1168:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     
1169:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /*  Start modulator clock, aligned to HFCLK */
1170:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR, 
 591              		.loc 1 1170 0
 592 0016 054A     		ldr	r2, .L47+12
 593 0018 024B     		ldr	r3, .L47+4
 594 001a 1A60     		str	r2, [r3]
1171:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1172:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1173:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1174:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1175:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1176:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1177:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1178:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR, 
1179:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & 
1180:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1181:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         
1182:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /* 
1183:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1184:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).  
1185:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1186:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
1187:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
1188:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1189:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     
1190:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1191:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR, 
1192:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) | 
1193:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1194:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1195:.\Generated_Source\PSoC4/CapSense_Sensing.c **** }
 595              		.loc 1 1195 0
 596              		@ sp needed
 597 001c 7047     		bx	lr
 598              	.L48:
 599 001e C046     		.align	2
 600              	.L47:
 601 0020 40000040 		.word	1073741888
 602 0024 00000140 		.word	1073807360
 603 0028 00030140 		.word	1073808128
 604 002c 40FF0080 		.word	-2147418304
 605              		.cfi_endproc
 606              	.LFE9:
 607              		.size	CapSense_ConfigureModClkClock, .-CapSense_ConfigureModClkClock
 608              		.section	.text.CapSense_ConfigureSnsClock,"ax",%progbits
 609              		.align	2
 610              		.global	CapSense_ConfigureSnsClock
 611              		.code	16
 612              		.thumb_func
 613              		.type	CapSense_ConfigureSnsClock, %function
 614              	CapSense_ConfigureSnsClock:
 615              	.LFB10:
1196:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1197:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1198:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 33


1199:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ConfigureSnsClock
1200:.\Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1201:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1202:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1203:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Sets the divider values for the sense clock and then starts
1204:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   the sense clock.
1205:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1206:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1207:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   It is not recommended to call this function directly by the application layer.
1208:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   It is used by initialization, widget APIs or wakeup functions to
1209:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   enable the clocks.
1210:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1211:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1212:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   snsClk The divider value for the sense clock.
1213:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1214:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1215:.\Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_ConfigureSnsClock(uint32 snsClk)
1216:.\Generated_Source\PSoC4/CapSense_Sensing.c **** {
 616              		.loc 1 1216 0
 617              		.cfi_startproc
 618              	.LVL55:
1217:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1218:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1219:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1220:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /*  
1221:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1222:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1223:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.  
1224:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1225:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR); 
 619              		.loc 1 1225 0
 620 0000 034A     		ldr	r2, .L50
 621 0002 1368     		ldr	r3, [r2]
 622              	.LVL56:
1226:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
 623              		.loc 1 1226 0
 624 0004 1B0B     		lsr	r3, r3, #12
 625              	.LVL57:
 626 0006 1B03     		lsl	r3, r3, #12
 627              	.LVL58:
1227:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
 628              		.loc 1 1227 0
 629 0008 0138     		sub	r0, r0, #1
 630              	.LVL59:
 631 000a 1843     		orr	r0, r3
 632              	.LVL60:
1228:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
 633              		.loc 1 1228 0
 634 000c 1060     		str	r0, [r2]
1229:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1230:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1231:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /*  Stop sense clock clock   */
1232:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR, 
1233:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1234:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1235:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1236:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 34


1237:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /*  
1238:.\Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1239:.\Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1240:.\Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.  
1241:.\Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1242:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1243:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         
1244:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /*  Check whether previous sense clock start command has finished. */
1245:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1246:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1247:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             /*  Wait until previous sense clock start command has finished. */  
1248:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         } 
1249:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         
1250:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1251:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR, 
1252:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1253:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1254:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1255:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1256:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1257:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1258:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1259:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR, 
1260:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & 
1261:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1262:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         
1263:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* 
1264:.\Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
1265:.\Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).  
1266:.\Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1267:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1268:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1269:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1270:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1271:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1272:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR, 
1273:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) | 
1274:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1275:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1276:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1277:.\Generated_Source\PSoC4/CapSense_Sensing.c **** }
 635              		.loc 1 1277 0
 636              		@ sp needed
 637 000e 7047     		bx	lr
 638              	.L51:
 639              		.align	2
 640              	.L50:
 641 0010 00020B40 		.word	1074463232
 642              		.cfi_endproc
 643              	.LFE10:
 644              		.size	CapSense_ConfigureSnsClock, .-CapSense_ConfigureSnsClock
 645              		.section	.text.CapSense_ConfigureClocks,"ax",%progbits
 646              		.align	2
 647              		.global	CapSense_ConfigureClocks
 648              		.code	16
 649              		.thumb_func
 650              		.type	CapSense_ConfigureClocks, %function
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 35


 651              	CapSense_ConfigureClocks:
 652              	.LFB11:
1278:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1279:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1280:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1281:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ConfigureClocks
1282:.\Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1283:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1284:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1285:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Sets the divider values for sense and modulator clocks and then starts
1286:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1287:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   the modulator clock.
1288:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1289:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1290:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   It is not recommended to call this function directly by the application layer.
1291:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   It is used by initialization, widget APIs or wakeup functions to
1292:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   enable the clocks.
1293:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1294:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1295:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   snsClk The divider value for the sense clock.
1296:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   modClk The divider value for the modulator clock.
1297:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1298:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1299:.\Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_ConfigureClocks(uint32 snsClk, uint32 modClk)
1300:.\Generated_Source\PSoC4/CapSense_Sensing.c **** {
 653              		.loc 1 1300 0
 654              		.cfi_startproc
 655              	.LVL61:
 656 0000 10B5     		push	{r4, lr}
 657              		.cfi_def_cfa_offset 8
 658              		.cfi_offset 4, -8
 659              		.cfi_offset 14, -4
 660 0002 041C     		mov	r4, r0
1301:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
1302:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ConfigureModClkClock(modClk);
 661              		.loc 1 1302 0
 662 0004 081C     		mov	r0, r1
 663              	.LVL62:
 664 0006 FFF7FEFF 		bl	CapSense_ConfigureModClkClock
 665              	.LVL63:
1303:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1304:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1305:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ConfigureSnsClock(snsClk);
 666              		.loc 1 1305 0
 667 000a 201C     		mov	r0, r4
 668 000c FFF7FEFF 		bl	CapSense_ConfigureSnsClock
 669              	.LVL64:
1306:.\Generated_Source\PSoC4/CapSense_Sensing.c **** }
 670              		.loc 1 1306 0
 671              		@ sp needed
 672              	.LVL65:
 673 0010 10BD     		pop	{r4, pc}
 674              		.cfi_endproc
 675              	.LFE11:
 676              		.size	CapSense_ConfigureClocks, .-CapSense_ConfigureClocks
 677 0012 C046     		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 678              		.align	2
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 36


 679              		.global	CapSense_CalibrateWidget
 680              		.code	16
 681              		.thumb_func
 682              		.type	CapSense_CalibrateWidget, %function
 683              	CapSense_CalibrateWidget:
 684              	.LFB12:
1307:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1308:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1309:.\Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) || \
1310:.\Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN))
1311:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1312:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_CalibrateWidget 
1313:.\Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1314:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1315:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1316:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  Executes the IDAC calibration for the widget.
1317:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1318:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1319:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Depending on the widget type, this function calibrates an appropriate widget: CSD or CSX.
1320:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   Before calibration, the function checks if the widget failed during the self-test  
1321:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   if it is enabled in the customizer.
1322:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1323:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \param wdgtIndex Specifies the ID of the widget for calibration.
1324:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   
1325:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status 
1326:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   - Zero     - The widget is calibrated successfully.
1327:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   - Non-zero - Calibration is failed for the widget.
1328:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1329:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1330:.\Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_CalibrateWidget(uint32 wdgtIndex)
1331:.\Generated_Source\PSoC4/CapSense_Sensing.c **** {
 685              		.loc 1 1331 0
 686              		.cfi_startproc
 687              	.LVL66:
 688 0000 08B5     		push	{r3, lr}
 689              		.cfi_def_cfa_offset 8
 690              		.cfi_offset 3, -8
 691              		.cfi_offset 14, -4
 692              	.LVL67:
1332:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus calibrateStatus = CYRET_SUCCESS;
1333:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1334:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     do
1335:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     {   
1336:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_TOTAL_WIDGETS <= wdgtIndex)
 693              		.loc 1 1336 0
 694 0002 0228     		cmp	r0, #2
 695 0004 04D8     		bhi	.L55
1337:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1338:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus = CYRET_BAD_PARAM;
1339:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1340:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1341:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     
1342:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /*  
1343:.\Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Check if widget id is valid, specified widget did not
1344:.\Generated_Source\PSoC4/CapSense_Sensing.c ****          *  detect any faults conditions if BIST is enabled.   
1345:.\Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1346:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 37


1347:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_DISABLE != ((uint32)CapSense_dsRam.wdgtWorking[(uint8)wdgtIndex >> CapSens
1348:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                                              (0x00000001Lu << (wdgtIndex & CapSense_WIDGET_NUM_32_M
1349:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1350:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_SUCCESS;
1351:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1352:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             else    
1353:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1354:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_INVALID_STATE;
1355:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*  Exit because widget is not working  */
1356:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
1357:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1358:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1359:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     
1360:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ADC_EN)
1361:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_UNDEFINED_E == CapSense_currentSenseMethod) 
1362:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1363:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
1364:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_AdcReleaseResources();
1365:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1366:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CYRET_SUCCESS != calibrateStatus)
1367:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1368:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Exit because widget is not working */
1369:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
1370:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1371:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1372:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1373:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1374:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /*  If CSD2X is enabled, calibrate CSD sensor    */
1375:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD2X_EN)
1376:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             /******************************
1377:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             * This is the place where the CSD2X mode
1378:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             * API should be implemented.
1379:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             * CSD2X will be implemented
1380:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             * in the next component version.
1381:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             *********************************/
1382:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1383:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /*  If both CSD and CSX are enabled, calibrate widget using sensing method */
1384:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1385:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1386:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             /*  Check widget sensing method and call appropriate APIs   */
1387:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #if ((CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) && (CapSense_ENABLE == CapSense_
1388:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_SS_DIS == CapSense_CSD_AUTOTUNE)
1389:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1390:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_SENSE_METHOD_ENUM)CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdg
1391:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1392:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget (when Autotune mode is disabled) */
1393:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_CSXCalibrateWidget(wdgtIndex, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1394:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1395:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     else if (CapSense_SENSE_METHOD_CSD_E ==
1396:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_SENSE_METHOD_ENUM)CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdg
1397:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1398:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*  
1399:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                          *  Check if CSD block is  already initialized for CSD operation
1400:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                          *  If not, initialize CSD hardware block for CSD measurement   
1401:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                          */
1402:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_SENSE_METHOD_CSD_E != CapSense_currentSenseMethod) 
1403:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 38


1404:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                             CapSense_SwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
1405:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1406:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         
1407:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget (when Autotune mode is disabled) */
1408:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_RAWCO
1409:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1410:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     else    
1411:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1412:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CYRET_UNKNOWN;
1413:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1414:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
1415:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1416:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_SENSE_METHOD_ENUM)CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdg
1417:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1418:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget only (when Autotune mode is enabled) */
1419:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_CSXCalibrateWidget(wdgtIndex, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1420:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1421:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_SS_DIS == CapSense_CSD_AUTOTUNE) */
1422:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1423:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_SENSE_METHOD_CSX_E ==
1424:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_SENSE_METHOD_ENUM)CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArr
1425:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1426:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Calibrate CSX widget only */
1427:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                    CapSense_CSXCalibrateWidget(wdgtIndex, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1428:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 }          
1429:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif ((CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) && (CapSense_CSD_SS_DIS == Cap
1430:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_SENSE_METHOD_CSD_E ==
1431:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_SENSE_METHOD_ENUM)CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArr
1432:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1433:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Initialize CSD mode */
1434:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_CSDInitialize();
1435:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1436:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Calibrate CSD widget only */
1437:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_RAWCOUNT_
1438:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1439:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1440:.\Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*  No calibration  */
1441:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* ((CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) && (CapSense_ENABLE == Ca
1442:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             
1443:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /*  If only CSD is enabled, calibrate CSD sensor  */
1444:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif ((CapSense_ENABLE == CapSense_CSD_EN) && (CapSense_CSD_SS_DIS == CapSense_CSD_AUTOTUN
1445:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus = CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_RAWCOUNT_CAL_LEVE
1446:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         
1447:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         /*  If only CSX is enabled, call CSX scan   */
1448:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_CSX_EN)
1449:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_CSXCalibrateWidget(wdgtIndex, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
 696              		.loc 1 1449 0
 697 0006 2821     		mov	r1, #40
 698 0008 FFF7FEFF 		bl	CapSense_CSXCalibrateWidget
 699              	.LVL68:
1332:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus calibrateStatus = CYRET_SUCCESS;
 700              		.loc 1 1332 0
 701 000c 0020     		mov	r0, #0
 702 000e 00E0     		b	.L54
 703              	.LVL69:
 704              	.L55:
1338:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 39


 705              		.loc 1 1338 0
 706 0010 0120     		mov	r0, #1
 707              	.LVL70:
 708              	.L54:
1450:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1451:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1452:.\Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus = CYRET_UNKNOWN;
1453:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif  /* (CapSense_ENABLE == CapSense_CSD2X_EN) */   
1454:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     
1455:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     } while (0u);
1456:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     
1457:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     return calibrateStatus;
1458:.\Generated_Source\PSoC4/CapSense_Sensing.c **** }
 709              		.loc 1 1458 0
 710              		@ sp needed
 711 0012 08BD     		pop	{r3, pc}
 712              		.cfi_endproc
 713              	.LFE12:
 714              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 715              		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 716              		.align	2
 717              		.global	CapSense_CalibrateAllWidgets
 718              		.code	16
 719              		.thumb_func
 720              		.type	CapSense_CalibrateAllWidgets, %function
 721              	CapSense_CalibrateAllWidgets:
 722              	.LFB13:
1459:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1460:.\Generated_Source\PSoC4/CapSense_Sensing.c **** 
1461:.\Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1462:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_CalibrateAllWidgets 
1463:.\Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1464:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1465:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1466:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *  Executes the IDAC calibration for all the widgets in the component.
1467:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1468:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1469:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   The function goes through all widgets and calls 
1470:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   CapSense_CalibrateWidget() for each widget.
1471:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   It returns a fail status if any widget has failed to calibrate or it   
1472:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   has been failed during the self-test.
1473:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1474:.\Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status: 
1475:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   - Zero     -  All the widgets are calibrated successfully.
1476:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *   - Non-zero - Calibration failed for any widget.
1477:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *
1478:.\Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1479:.\Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_CalibrateAllWidgets(void)
1480:.\Generated_Source\PSoC4/CapSense_Sensing.c **** {
 723              		.loc 1 1480 0
 724              		.cfi_startproc
 725 0000 38B5     		push	{r3, r4, r5, lr}
 726              		.cfi_def_cfa_offset 16
 727              		.cfi_offset 3, -16
 728              		.cfi_offset 4, -12
 729              		.cfi_offset 5, -8
 730              		.cfi_offset 14, -4
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 40


 731              	.LVL71:
1481:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus calibrateStatus = CYRET_SUCCESS;
1482:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
1483:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     
1484:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
 732              		.loc 1 1484 0
 733 0002 0024     		mov	r4, #0
1481:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus calibrateStatus = CYRET_SUCCESS;
 734              		.loc 1 1481 0
 735 0004 0025     		mov	r5, #0
 736              		.loc 1 1484 0
 737 0006 04E0     		b	.L57
 738              	.LVL72:
 739              	.L58:
1485:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1486:.\Generated_Source\PSoC4/CapSense_Sensing.c ****         calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex); 
 740              		.loc 1 1486 0 discriminator 3
 741 0008 201C     		mov	r0, r4
 742 000a FFF7FEFF 		bl	CapSense_CalibrateWidget
 743              	.LVL73:
 744 000e 0543     		orr	r5, r0
 745              	.LVL74:
1484:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 746              		.loc 1 1484 0 discriminator 3
 747 0010 0134     		add	r4, r4, #1
 748              	.LVL75:
 749              	.L57:
1484:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 750              		.loc 1 1484 0 is_stmt 0 discriminator 1
 751 0012 022C     		cmp	r4, #2
 752 0014 F8D9     		bls	.L58
1487:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1488:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     
1489:.\Generated_Source\PSoC4/CapSense_Sensing.c ****     return calibrateStatus;
1490:.\Generated_Source\PSoC4/CapSense_Sensing.c **** }
 753              		.loc 1 1490 0 is_stmt 1
 754 0016 281C     		mov	r0, r5
 755              		@ sp needed
 756              	.LVL76:
 757              	.LVL77:
 758 0018 38BD     		pop	{r3, r4, r5, pc}
 759              		.cfi_endproc
 760              	.LFE13:
 761              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 762              		.global	CapSense_curFlashWdgtPtr
 763              		.comm	CapSense_curRamSnsPtr,4,4
 764              		.global	CapSense_requestScanAllWidget
 765              		.global	CapSense_curWidgetResolution
 766              		.global	CapSense_sensorIndex
 767              		.global	CapSense_widgetIndex
 768              		.global	CapSense_scanFreqIndex
 769 001a C046     		.section	.rodata
 770              		.type	CapSense_scanFreqIndex, %object
 771              		.size	CapSense_scanFreqIndex, 1
 772              	CapSense_scanFreqIndex:
 773 0000 00       		.space	1
 774              		.bss
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 41


 775              		.align	2
 776              		.set	.LANCHOR0,. + 0
 777              		.type	CapSense_widgetIndex, %object
 778              		.size	CapSense_widgetIndex, 1
 779              	CapSense_widgetIndex:
 780 0000 00       		.space	1
 781              		.type	CapSense_requestScanAllWidget, %object
 782              		.size	CapSense_requestScanAllWidget, 1
 783              	CapSense_requestScanAllWidget:
 784 0001 00       		.space	1
 785 0002 0000     		.space	2
 786              		.type	CapSense_curFlashWdgtPtr, %object
 787              		.size	CapSense_curFlashWdgtPtr, 4
 788              	CapSense_curFlashWdgtPtr:
 789 0004 00000000 		.space	4
 790              		.type	CapSense_curWidgetResolution, %object
 791              		.size	CapSense_curWidgetResolution, 4
 792              	CapSense_curWidgetResolution:
 793 0008 00000000 		.space	4
 794              		.type	CapSense_sensorIndex, %object
 795              		.size	CapSense_sensorIndex, 1
 796              	CapSense_sensorIndex:
 797 000c 00       		.space	1
 798 000d 000000   		.text
 799              	.Letext0:
 800              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 801              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_Configuration.h"
 802              		.file 4 ".\\Generated_Source\\PSoC4\\CapSense_Structure.h"
 803              		.file 5 ".\\Generated_Source\\PSoC4\\CapSense_SensingCSX_LL.h"
 804              		.file 6 "Generated_Source\\PSoC4/CyLib.h"
 805              		.file 7 ".\\Generated_Source\\PSoC4\\CapSense_ISR.h"
 806              		.section	.debug_info,"",%progbits
 807              	.Ldebug_info0:
 808 0000 8B090000 		.4byte	0x98b
 809 0004 0400     		.2byte	0x4
 810 0006 00000000 		.4byte	.Ldebug_abbrev0
 811 000a 04       		.byte	0x4
 812 000b 01       		.uleb128 0x1
 813 000c A3070000 		.4byte	.LASF124
 814 0010 01       		.byte	0x1
 815 0011 02070000 		.4byte	.LASF125
 816 0015 16060000 		.4byte	.LASF126
 817 0019 00000000 		.4byte	.Ldebug_ranges0+0
 818 001d 00000000 		.4byte	0
 819 0021 00000000 		.4byte	.Ldebug_line0
 820 0025 02       		.uleb128 0x2
 821 0026 01       		.byte	0x1
 822 0027 06       		.byte	0x6
 823 0028 9B010000 		.4byte	.LASF0
 824 002c 02       		.uleb128 0x2
 825 002d 01       		.byte	0x1
 826 002e 08       		.byte	0x8
 827 002f 03050000 		.4byte	.LASF1
 828 0033 02       		.uleb128 0x2
 829 0034 02       		.byte	0x2
 830 0035 05       		.byte	0x5
 831 0036 1F050000 		.4byte	.LASF2
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 42


 832 003a 02       		.uleb128 0x2
 833 003b 02       		.byte	0x2
 834 003c 07       		.byte	0x7
 835 003d 4E030000 		.4byte	.LASF3
 836 0041 02       		.uleb128 0x2
 837 0042 04       		.byte	0x4
 838 0043 05       		.byte	0x5
 839 0044 05020000 		.4byte	.LASF4
 840 0048 02       		.uleb128 0x2
 841 0049 04       		.byte	0x4
 842 004a 07       		.byte	0x7
 843 004b 00030000 		.4byte	.LASF5
 844 004f 02       		.uleb128 0x2
 845 0050 08       		.byte	0x8
 846 0051 05       		.byte	0x5
 847 0052 8D010000 		.4byte	.LASF6
 848 0056 02       		.uleb128 0x2
 849 0057 08       		.byte	0x8
 850 0058 07       		.byte	0x7
 851 0059 BA000000 		.4byte	.LASF7
 852 005d 03       		.uleb128 0x3
 853 005e 04       		.byte	0x4
 854 005f 05       		.byte	0x5
 855 0060 696E7400 		.ascii	"int\000"
 856 0064 02       		.uleb128 0x2
 857 0065 04       		.byte	0x4
 858 0066 07       		.byte	0x7
 859 0067 E3020000 		.4byte	.LASF8
 860 006b 04       		.uleb128 0x4
 861 006c 1F020000 		.4byte	.LASF9
 862 0070 02       		.byte	0x2
 863 0071 9801     		.2byte	0x198
 864 0073 2C000000 		.4byte	0x2c
 865 0077 04       		.uleb128 0x4
 866 0078 0A000000 		.4byte	.LASF10
 867 007c 02       		.byte	0x2
 868 007d 9901     		.2byte	0x199
 869 007f 3A000000 		.4byte	0x3a
 870 0083 04       		.uleb128 0x4
 871 0084 82020000 		.4byte	.LASF11
 872 0088 02       		.byte	0x2
 873 0089 9A01     		.2byte	0x19a
 874 008b 48000000 		.4byte	0x48
 875 008f 02       		.uleb128 0x2
 876 0090 04       		.byte	0x4
 877 0091 04       		.byte	0x4
 878 0092 A4040000 		.4byte	.LASF12
 879 0096 02       		.uleb128 0x2
 880 0097 08       		.byte	0x8
 881 0098 04       		.byte	0x4
 882 0099 32020000 		.4byte	.LASF13
 883 009d 02       		.uleb128 0x2
 884 009e 01       		.byte	0x1
 885 009f 08       		.byte	0x8
 886 00a0 AC050000 		.4byte	.LASF14
 887 00a4 04       		.uleb128 0x4
 888 00a5 F9060000 		.4byte	.LASF15
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 43


 889 00a9 02       		.byte	0x2
 890 00aa 3A02     		.2byte	0x23a
 891 00ac 48000000 		.4byte	0x48
 892 00b0 05       		.uleb128 0x5
 893 00b1 6B000000 		.4byte	0x6b
 894 00b5 04       		.uleb128 0x4
 895 00b6 07040000 		.4byte	.LASF16
 896 00ba 02       		.byte	0x2
 897 00bb 4402     		.2byte	0x244
 898 00bd C1000000 		.4byte	0xc1
 899 00c1 05       		.uleb128 0x5
 900 00c2 83000000 		.4byte	0x83
 901 00c6 04       		.uleb128 0x4
 902 00c7 B1050000 		.4byte	.LASF17
 903 00cb 02       		.byte	0x2
 904 00cc 5402     		.2byte	0x254
 905 00ce D2000000 		.4byte	0xd2
 906 00d2 06       		.uleb128 0x6
 907 00d3 04       		.byte	0x4
 908 00d4 D8000000 		.4byte	0xd8
 909 00d8 07       		.uleb128 0x7
 910 00d9 02       		.uleb128 0x2
 911 00da 04       		.byte	0x4
 912 00db 07       		.byte	0x7
 913 00dc 2E040000 		.4byte	.LASF18
 914 00e0 08       		.uleb128 0x8
 915 00e1 04       		.byte	0x4
 916 00e2 09       		.uleb128 0x9
 917 00e3 58010000 		.4byte	.LASF19
 918 00e7 03       		.byte	0x3
 919 00e8 DA       		.byte	0xda
 920 00e9 77000000 		.4byte	0x77
 921 00ed 09       		.uleb128 0x9
 922 00ee FB000000 		.4byte	.LASF20
 923 00f2 03       		.byte	0x3
 924 00f3 DE       		.byte	0xde
 925 00f4 6B000000 		.4byte	0x6b
 926 00f8 0A       		.uleb128 0xa
 927 00f9 0C       		.byte	0xc
 928 00fa 04       		.byte	0x4
 929 00fb B2       		.byte	0xb2
 930 00fc 6D010000 		.4byte	0x16d
 931 0100 0B       		.uleb128 0xb
 932 0101 74050000 		.4byte	.LASF21
 933 0105 04       		.byte	0x4
 934 0106 B8       		.byte	0xb8
 935 0107 77000000 		.4byte	0x77
 936 010b 00       		.byte	0
 937 010c 0B       		.uleb128 0xb
 938 010d 2E070000 		.4byte	.LASF22
 939 0111 04       		.byte	0x4
 940 0112 BD       		.byte	0xbd
 941 0113 E2000000 		.4byte	0xe2
 942 0117 02       		.byte	0x2
 943 0118 0B       		.uleb128 0xb
 944 0119 45080000 		.4byte	.LASF23
 945 011d 04       		.byte	0x4
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 44


 946 011e C2       		.byte	0xc2
 947 011f 6B000000 		.4byte	0x6b
 948 0123 04       		.byte	0x4
 949 0124 0B       		.uleb128 0xb
 950 0125 4C040000 		.4byte	.LASF24
 951 0129 04       		.byte	0x4
 952 012a C7       		.byte	0xc7
 953 012b 6B000000 		.4byte	0x6b
 954 012f 05       		.byte	0x5
 955 0130 0B       		.uleb128 0xb
 956 0131 89020000 		.4byte	.LASF25
 957 0135 04       		.byte	0x4
 958 0136 CC       		.byte	0xcc
 959 0137 6B000000 		.4byte	0x6b
 960 013b 06       		.byte	0x6
 961 013c 0B       		.uleb128 0xb
 962 013d E8050000 		.4byte	.LASF26
 963 0141 04       		.byte	0x4
 964 0142 D1       		.byte	0xd1
 965 0143 6B000000 		.4byte	0x6b
 966 0147 07       		.byte	0x7
 967 0148 0B       		.uleb128 0xb
 968 0149 43030000 		.4byte	.LASF27
 969 014d 04       		.byte	0x4
 970 014e D7       		.byte	0xd7
 971 014f ED000000 		.4byte	0xed
 972 0153 08       		.byte	0x8
 973 0154 0B       		.uleb128 0xb
 974 0155 AA040000 		.4byte	.LASF28
 975 0159 04       		.byte	0x4
 976 015a DC       		.byte	0xdc
 977 015b 6B000000 		.4byte	0x6b
 978 015f 09       		.byte	0x9
 979 0160 0B       		.uleb128 0xb
 980 0161 C4050000 		.4byte	.LASF29
 981 0165 04       		.byte	0x4
 982 0166 E3       		.byte	0xe3
 983 0167 6B000000 		.4byte	0x6b
 984 016b 0A       		.byte	0xa
 985 016c 00       		.byte	0
 986 016d 09       		.uleb128 0x9
 987 016e B8030000 		.4byte	.LASF30
 988 0172 04       		.byte	0x4
 989 0173 E4       		.byte	0xe4
 990 0174 F8000000 		.4byte	0xf8
 991 0178 0A       		.uleb128 0xa
 992 0179 24       		.byte	0x24
 993 017a 04       		.byte	0x4
 994 017b EA       		.byte	0xea
 995 017c A5010000 		.4byte	0x1a5
 996 0180 0B       		.uleb128 0xb
 997 0181 E3010000 		.4byte	.LASF31
 998 0185 04       		.byte	0x4
 999 0186 EF       		.byte	0xef
 1000 0187 6D010000 		.4byte	0x16d
 1001 018b 00       		.byte	0
 1002 018c 0B       		.uleb128 0xb
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 45


 1003 018d EB010000 		.4byte	.LASF32
 1004 0191 04       		.byte	0x4
 1005 0192 F4       		.byte	0xf4
 1006 0193 6D010000 		.4byte	0x16d
 1007 0197 0C       		.byte	0xc
 1008 0198 0B       		.uleb128 0xb
 1009 0199 F3010000 		.4byte	.LASF33
 1010 019d 04       		.byte	0x4
 1011 019e F9       		.byte	0xf9
 1012 019f 6D010000 		.4byte	0x16d
 1013 01a3 18       		.byte	0x18
 1014 01a4 00       		.byte	0
 1015 01a5 09       		.uleb128 0x9
 1016 01a6 6A070000 		.4byte	.LASF34
 1017 01aa 04       		.byte	0x4
 1018 01ab FA       		.byte	0xfa
 1019 01ac 78010000 		.4byte	0x178
 1020 01b0 0C       		.uleb128 0xc
 1021 01b1 0A       		.byte	0xa
 1022 01b2 04       		.byte	0x4
 1023 01b3 0001     		.2byte	0x100
 1024 01b5 08020000 		.4byte	0x208
 1025 01b9 0D       		.uleb128 0xd
 1026 01ba 72617700 		.ascii	"raw\000"
 1027 01be 04       		.byte	0x4
 1028 01bf 0501     		.2byte	0x105
 1029 01c1 08020000 		.4byte	0x208
 1030 01c5 00       		.byte	0
 1031 01c6 0E       		.uleb128 0xe
 1032 01c7 DE020000 		.4byte	.LASF35
 1033 01cb 04       		.byte	0x4
 1034 01cc 0A01     		.2byte	0x10a
 1035 01ce 08020000 		.4byte	0x208
 1036 01d2 02       		.byte	0x2
 1037 01d3 0E       		.uleb128 0xe
 1038 01d4 99020000 		.4byte	.LASF36
 1039 01d8 04       		.byte	0x4
 1040 01d9 1001     		.2byte	0x110
 1041 01db 18020000 		.4byte	0x218
 1042 01df 04       		.byte	0x4
 1043 01e0 0E       		.uleb128 0xe
 1044 01e1 F3050000 		.4byte	.LASF37
 1045 01e5 04       		.byte	0x4
 1046 01e6 1601     		.2byte	0x116
 1047 01e8 18020000 		.4byte	0x218
 1048 01ec 05       		.byte	0x5
 1049 01ed 0E       		.uleb128 0xe
 1050 01ee F6000000 		.4byte	.LASF38
 1051 01f2 04       		.byte	0x4
 1052 01f3 1B01     		.2byte	0x11b
 1053 01f5 E2000000 		.4byte	0xe2
 1054 01f9 06       		.byte	0x6
 1055 01fa 0E       		.uleb128 0xe
 1056 01fb FC050000 		.4byte	.LASF39
 1057 01ff 04       		.byte	0x4
 1058 0200 2001     		.2byte	0x120
 1059 0202 28020000 		.4byte	0x228
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 46


 1060 0206 08       		.byte	0x8
 1061 0207 00       		.byte	0
 1062 0208 0F       		.uleb128 0xf
 1063 0209 77000000 		.4byte	0x77
 1064 020d 18020000 		.4byte	0x218
 1065 0211 10       		.uleb128 0x10
 1066 0212 D9000000 		.4byte	0xd9
 1067 0216 00       		.byte	0
 1068 0217 00       		.byte	0
 1069 0218 0F       		.uleb128 0xf
 1070 0219 6B000000 		.4byte	0x6b
 1071 021d 28020000 		.4byte	0x228
 1072 0221 10       		.uleb128 0x10
 1073 0222 D9000000 		.4byte	0xd9
 1074 0226 00       		.byte	0
 1075 0227 00       		.byte	0
 1076 0228 0F       		.uleb128 0xf
 1077 0229 ED000000 		.4byte	0xed
 1078 022d 38020000 		.4byte	0x238
 1079 0231 10       		.uleb128 0x10
 1080 0232 D9000000 		.4byte	0xd9
 1081 0236 00       		.byte	0
 1082 0237 00       		.byte	0
 1083 0238 04       		.uleb128 0x4
 1084 0239 A2000000 		.4byte	.LASF40
 1085 023d 04       		.byte	0x4
 1086 023e 2101     		.2byte	0x121
 1087 0240 B0010000 		.4byte	0x1b0
 1088 0244 0C       		.uleb128 0xc
 1089 0245 1E       		.byte	0x1e
 1090 0246 04       		.byte	0x4
 1091 0247 2701     		.2byte	0x127
 1092 0249 75020000 		.4byte	0x275
 1093 024d 0E       		.uleb128 0xe
 1094 024e E3010000 		.4byte	.LASF31
 1095 0252 04       		.byte	0x4
 1096 0253 2C01     		.2byte	0x12c
 1097 0255 75020000 		.4byte	0x275
 1098 0259 00       		.byte	0
 1099 025a 0E       		.uleb128 0xe
 1100 025b EB010000 		.4byte	.LASF32
 1101 025f 04       		.byte	0x4
 1102 0260 3101     		.2byte	0x131
 1103 0262 75020000 		.4byte	0x275
 1104 0266 0A       		.byte	0xa
 1105 0267 0E       		.uleb128 0xe
 1106 0268 F3010000 		.4byte	.LASF33
 1107 026c 04       		.byte	0x4
 1108 026d 3601     		.2byte	0x136
 1109 026f 75020000 		.4byte	0x275
 1110 0273 14       		.byte	0x14
 1111 0274 00       		.byte	0
 1112 0275 0F       		.uleb128 0xf
 1113 0276 38020000 		.4byte	0x238
 1114 027a 85020000 		.4byte	0x285
 1115 027e 10       		.uleb128 0x10
 1116 027f D9000000 		.4byte	0xd9
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 47


 1117 0283 00       		.byte	0
 1118 0284 00       		.byte	0
 1119 0285 04       		.uleb128 0x4
 1120 0286 B4040000 		.4byte	.LASF41
 1121 028a 04       		.byte	0x4
 1122 028b 3701     		.2byte	0x137
 1123 028d 44020000 		.4byte	0x244
 1124 0291 0C       		.uleb128 0xc
 1125 0292 64       		.byte	0x64
 1126 0293 04       		.byte	0x4
 1127 0294 3D01     		.2byte	0x13d
 1128 0296 6B030000 		.4byte	0x36b
 1129 029a 0E       		.uleb128 0xe
 1130 029b 8F030000 		.4byte	.LASF42
 1131 029f 04       		.byte	0x4
 1132 02a0 4301     		.2byte	0x143
 1133 02a2 77000000 		.4byte	0x77
 1134 02a6 00       		.byte	0
 1135 02a7 0E       		.uleb128 0xe
 1136 02a8 AF030000 		.4byte	.LASF43
 1137 02ac 04       		.byte	0x4
 1138 02ad 4801     		.2byte	0x148
 1139 02af 77000000 		.4byte	0x77
 1140 02b3 02       		.byte	0x2
 1141 02b4 0E       		.uleb128 0xe
 1142 02b5 9B040000 		.4byte	.LASF44
 1143 02b9 04       		.byte	0x4
 1144 02ba 4E01     		.2byte	0x14e
 1145 02bc 77000000 		.4byte	0x77
 1146 02c0 04       		.byte	0x4
 1147 02c1 0E       		.uleb128 0xe
 1148 02c2 5E040000 		.4byte	.LASF45
 1149 02c6 04       		.byte	0x4
 1150 02c7 5301     		.2byte	0x153
 1151 02c9 77000000 		.4byte	0x77
 1152 02cd 06       		.byte	0x6
 1153 02ce 0E       		.uleb128 0xe
 1154 02cf CB060000 		.4byte	.LASF46
 1155 02d3 04       		.byte	0x4
 1156 02d4 5801     		.2byte	0x158
 1157 02d6 83000000 		.4byte	0x83
 1158 02da 08       		.byte	0x8
 1159 02db 0E       		.uleb128 0xe
 1160 02dc 12030000 		.4byte	.LASF47
 1161 02e0 04       		.byte	0x4
 1162 02e1 5E01     		.2byte	0x15e
 1163 02e3 6B030000 		.4byte	0x36b
 1164 02e7 0C       		.byte	0xc
 1165 02e8 0E       		.uleb128 0xe
 1166 02e9 BE020000 		.4byte	.LASF48
 1167 02ed 04       		.byte	0x4
 1168 02ee 6401     		.2byte	0x164
 1169 02f0 6B030000 		.4byte	0x36b
 1170 02f4 10       		.byte	0x10
 1171 02f5 0E       		.uleb128 0xe
 1172 02f6 FB010000 		.4byte	.LASF49
 1173 02fa 04       		.byte	0x4
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 48


 1174 02fb 7201     		.2byte	0x172
 1175 02fd 7B030000 		.4byte	0x37b
 1176 0301 14       		.byte	0x14
 1177 0302 0E       		.uleb128 0xe
 1178 0303 98030000 		.4byte	.LASF50
 1179 0307 04       		.byte	0x4
 1180 0308 7701     		.2byte	0x177
 1181 030a 77000000 		.4byte	0x77
 1182 030e 18       		.byte	0x18
 1183 030f 0E       		.uleb128 0xe
 1184 0310 00000000 		.4byte	.LASF51
 1185 0314 04       		.byte	0x4
 1186 0315 7C01     		.2byte	0x17c
 1187 0317 6B000000 		.4byte	0x6b
 1188 031b 1A       		.byte	0x1a
 1189 031c 0E       		.uleb128 0xe
 1190 031d 7F050000 		.4byte	.LASF52
 1191 0321 04       		.byte	0x4
 1192 0322 8101     		.2byte	0x181
 1193 0324 A5010000 		.4byte	0x1a5
 1194 0328 1C       		.byte	0x1c
 1195 0329 0E       		.uleb128 0xe
 1196 032a 7D030000 		.4byte	.LASF53
 1197 032e 04       		.byte	0x4
 1198 032f 8601     		.2byte	0x186
 1199 0331 85020000 		.4byte	0x285
 1200 0335 40       		.byte	0x40
 1201 0336 0E       		.uleb128 0xe
 1202 0337 F0020000 		.4byte	.LASF54
 1203 033b 04       		.byte	0x4
 1204 033c 8B01     		.2byte	0x18b
 1205 033e 6B000000 		.4byte	0x6b
 1206 0342 5E       		.byte	0x5e
 1207 0343 0E       		.uleb128 0xe
 1208 0344 37010000 		.4byte	.LASF55
 1209 0348 04       		.byte	0x4
 1210 0349 9001     		.2byte	0x190
 1211 034b 6B000000 		.4byte	0x6b
 1212 034f 5F       		.byte	0x5f
 1213 0350 0E       		.uleb128 0xe
 1214 0351 86070000 		.4byte	.LASF56
 1215 0355 04       		.byte	0x4
 1216 0356 9501     		.2byte	0x195
 1217 0358 77000000 		.4byte	0x77
 1218 035c 60       		.byte	0x60
 1219 035d 0E       		.uleb128 0xe
 1220 035e 39020000 		.4byte	.LASF57
 1221 0362 04       		.byte	0x4
 1222 0363 9A01     		.2byte	0x19a
 1223 0365 08020000 		.4byte	0x208
 1224 0369 62       		.byte	0x62
 1225 036a 00       		.byte	0
 1226 036b 0F       		.uleb128 0xf
 1227 036c 83000000 		.4byte	0x83
 1228 0370 7B030000 		.4byte	0x37b
 1229 0374 10       		.uleb128 0x10
 1230 0375 D9000000 		.4byte	0xd9
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 49


 1231 0379 00       		.byte	0
 1232 037a 00       		.byte	0
 1233 037b 0F       		.uleb128 0xf
 1234 037c 6B000000 		.4byte	0x6b
 1235 0380 8B030000 		.4byte	0x38b
 1236 0384 10       		.uleb128 0x10
 1237 0385 D9000000 		.4byte	0xd9
 1238 0389 02       		.byte	0x2
 1239 038a 00       		.byte	0
 1240 038b 04       		.uleb128 0x4
 1241 038c D1040000 		.4byte	.LASF58
 1242 0390 04       		.byte	0x4
 1243 0391 9B01     		.2byte	0x19b
 1244 0393 91020000 		.4byte	0x291
 1245 0397 0C       		.uleb128 0xc
 1246 0398 1C       		.byte	0x1c
 1247 0399 04       		.byte	0x4
 1248 039a A101     		.2byte	0x1a1
 1249 039c 16040000 		.4byte	0x416
 1250 03a0 0E       		.uleb128 0xe
 1251 03a1 2E010000 		.4byte	.LASF59
 1252 03a5 04       		.byte	0x4
 1253 03a6 A601     		.2byte	0x1a6
 1254 03a8 16040000 		.4byte	0x416
 1255 03ac 00       		.byte	0
 1256 03ad 0E       		.uleb128 0xe
 1257 03ae 64070000 		.4byte	.LASF60
 1258 03b2 04       		.byte	0x4
 1259 03b3 AB01     		.2byte	0x1ab
 1260 03b5 16040000 		.4byte	0x416
 1261 03b9 04       		.byte	0x4
 1262 03ba 0E       		.uleb128 0xe
 1263 03bb BE050000 		.4byte	.LASF61
 1264 03bf 04       		.byte	0x4
 1265 03c0 B001     		.2byte	0x1b0
 1266 03c2 16040000 		.4byte	0x416
 1267 03c6 08       		.byte	0x8
 1268 03c7 0E       		.uleb128 0xe
 1269 03c8 19020000 		.4byte	.LASF62
 1270 03cc 04       		.byte	0x4
 1271 03cd B501     		.2byte	0x1b5
 1272 03cf 16040000 		.4byte	0x416
 1273 03d3 0C       		.byte	0xc
 1274 03d4 0E       		.uleb128 0xe
 1275 03d5 99070000 		.4byte	.LASF63
 1276 03d9 04       		.byte	0x4
 1277 03da BA01     		.2byte	0x1ba
 1278 03dc 83000000 		.4byte	0x83
 1279 03e0 10       		.byte	0x10
 1280 03e1 0E       		.uleb128 0xe
 1281 03e2 94020000 		.4byte	.LASF64
 1282 03e6 04       		.byte	0x4
 1283 03e7 BF01     		.2byte	0x1bf
 1284 03e9 83000000 		.4byte	0x83
 1285 03ed 14       		.byte	0x14
 1286 03ee 0E       		.uleb128 0xe
 1287 03ef 54050000 		.4byte	.LASF65
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 50


 1288 03f3 04       		.byte	0x4
 1289 03f4 C401     		.2byte	0x1c4
 1290 03f6 6B000000 		.4byte	0x6b
 1291 03fa 18       		.byte	0x18
 1292 03fb 0E       		.uleb128 0xe
 1293 03fc 7A020000 		.4byte	.LASF66
 1294 0400 04       		.byte	0x4
 1295 0401 C901     		.2byte	0x1c9
 1296 0403 6B000000 		.4byte	0x6b
 1297 0407 19       		.byte	0x19
 1298 0408 0E       		.uleb128 0xe
 1299 0409 56020000 		.4byte	.LASF67
 1300 040d 04       		.byte	0x4
 1301 040e CE01     		.2byte	0x1ce
 1302 0410 6B000000 		.4byte	0x6b
 1303 0414 1A       		.byte	0x1a
 1304 0415 00       		.byte	0
 1305 0416 06       		.uleb128 0x6
 1306 0417 04       		.byte	0x4
 1307 0418 B5000000 		.4byte	0xb5
 1308 041c 04       		.uleb128 0x4
 1309 041d 95060000 		.4byte	.LASF68
 1310 0421 04       		.byte	0x4
 1311 0422 CF01     		.2byte	0x1cf
 1312 0424 97030000 		.4byte	0x397
 1313 0428 0C       		.uleb128 0xc
 1314 0429 1C       		.byte	0x1c
 1315 042a 04       		.byte	0x4
 1316 042b FA01     		.2byte	0x1fa
 1317 042d B4040000 		.4byte	0x4b4
 1318 0431 0E       		.uleb128 0xe
 1319 0432 D1000000 		.4byte	.LASF69
 1320 0436 04       		.byte	0x4
 1321 0437 0302     		.2byte	0x203
 1322 0439 B4040000 		.4byte	0x4b4
 1323 043d 00       		.byte	0
 1324 043e 0E       		.uleb128 0xe
 1325 043f A3030000 		.4byte	.LASF70
 1326 0443 04       		.byte	0x4
 1327 0444 0902     		.2byte	0x209
 1328 0446 E0000000 		.4byte	0xe0
 1329 044a 04       		.byte	0x4
 1330 044b 0E       		.uleb128 0xe
 1331 044c 0E020000 		.4byte	.LASF71
 1332 0450 04       		.byte	0x4
 1333 0451 0F02     		.2byte	0x20f
 1334 0453 BB040000 		.4byte	0x4bb
 1335 0457 08       		.byte	0x8
 1336 0458 0E       		.uleb128 0xe
 1337 0459 34050000 		.4byte	.LASF72
 1338 045d 04       		.byte	0x4
 1339 045e 1402     		.2byte	0x214
 1340 0460 E0000000 		.4byte	0xe0
 1341 0464 0C       		.byte	0xc
 1342 0465 0E       		.uleb128 0xe
 1343 0466 6F060000 		.4byte	.LASF73
 1344 046a 04       		.byte	0x4
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 51


 1345 046b 1B02     		.2byte	0x21b
 1346 046d C1040000 		.4byte	0x4c1
 1347 0471 10       		.byte	0x10
 1348 0472 0E       		.uleb128 0xe
 1349 0473 3F040000 		.4byte	.LASF74
 1350 0477 04       		.byte	0x4
 1351 0478 2002     		.2byte	0x220
 1352 047a 77000000 		.4byte	0x77
 1353 047e 14       		.byte	0x14
 1354 047f 0E       		.uleb128 0xe
 1355 0480 0A060000 		.4byte	.LASF75
 1356 0484 04       		.byte	0x4
 1357 0485 2702     		.2byte	0x227
 1358 0487 77000000 		.4byte	0x77
 1359 048b 16       		.byte	0x16
 1360 048c 0E       		.uleb128 0xe
 1361 048d 55040000 		.4byte	.LASF76
 1362 0491 04       		.byte	0x4
 1363 0492 3202     		.2byte	0x232
 1364 0494 6B000000 		.4byte	0x6b
 1365 0498 18       		.byte	0x18
 1366 0499 0E       		.uleb128 0xe
 1367 049a 26040000 		.4byte	.LASF77
 1368 049e 04       		.byte	0x4
 1369 049f 3A02     		.2byte	0x23a
 1370 04a1 6B000000 		.4byte	0x6b
 1371 04a5 19       		.byte	0x19
 1372 04a6 0E       		.uleb128 0xe
 1373 04a7 B6020000 		.4byte	.LASF78
 1374 04ab 04       		.byte	0x4
 1375 04ac 4102     		.2byte	0x241
 1376 04ae 6B000000 		.4byte	0x6b
 1377 04b2 1A       		.byte	0x1a
 1378 04b3 00       		.byte	0
 1379 04b4 06       		.uleb128 0x6
 1380 04b5 04       		.byte	0x4
 1381 04b6 BA040000 		.4byte	0x4ba
 1382 04ba 11       		.uleb128 0x11
 1383 04bb 06       		.uleb128 0x6
 1384 04bc 04       		.byte	0x4
 1385 04bd 38020000 		.4byte	0x238
 1386 04c1 06       		.uleb128 0x6
 1387 04c2 04       		.byte	0x4
 1388 04c3 6B000000 		.4byte	0x6b
 1389 04c7 04       		.uleb128 0x4
 1390 04c8 43000000 		.4byte	.LASF79
 1391 04cc 04       		.byte	0x4
 1392 04cd 4202     		.2byte	0x242
 1393 04cf 28040000 		.4byte	0x428
 1394 04d3 0C       		.uleb128 0xc
 1395 04d4 54       		.byte	0x54
 1396 04d5 04       		.byte	0x4
 1397 04d6 4802     		.2byte	0x248
 1398 04d8 EA040000 		.4byte	0x4ea
 1399 04dc 0E       		.uleb128 0xe
 1400 04dd D2060000 		.4byte	.LASF80
 1401 04e1 04       		.byte	0x4
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 52


 1402 04e2 4D02     		.2byte	0x24d
 1403 04e4 EA040000 		.4byte	0x4ea
 1404 04e8 00       		.byte	0
 1405 04e9 00       		.byte	0
 1406 04ea 0F       		.uleb128 0xf
 1407 04eb C7040000 		.4byte	0x4c7
 1408 04ef FA040000 		.4byte	0x4fa
 1409 04f3 10       		.uleb128 0x10
 1410 04f4 D9000000 		.4byte	0xd9
 1411 04f8 02       		.byte	0x2
 1412 04f9 00       		.byte	0
 1413 04fa 04       		.uleb128 0x4
 1414 04fb 7F060000 		.4byte	.LASF81
 1415 04ff 04       		.byte	0x4
 1416 0500 4E02     		.2byte	0x24e
 1417 0502 D3040000 		.4byte	0x4d3
 1418 0506 12       		.uleb128 0x12
 1419 0507 35080000 		.4byte	.LASF127
 1420 050b 01       		.byte	0x1
 1421 050c BA       		.byte	0xba
 1422 050d 83000000 		.4byte	0x83
 1423 0511 00000000 		.4byte	.LFB1
 1424 0515 10000000 		.4byte	.LFE1-.LFB1
 1425 0519 01       		.uleb128 0x1
 1426 051a 9C       		.byte	0x9c
 1427 051b 13       		.uleb128 0x13
 1428 051c 5F050000 		.4byte	.LASF82
 1429 0520 01       		.byte	0x1
 1430 0521 E1       		.byte	0xe1
 1431 0522 A4000000 		.4byte	0xa4
 1432 0526 00000000 		.4byte	.LFB2
 1433 052a 48000000 		.4byte	.LFE2-.LFB2
 1434 052e 01       		.uleb128 0x1
 1435 052f 9C       		.byte	0x9c
 1436 0530 5C050000 		.4byte	0x55c
 1437 0534 14       		.uleb128 0x14
 1438 0535 85030000 		.4byte	.LASF89
 1439 0539 01       		.byte	0x1
 1440 053a E1       		.byte	0xe1
 1441 053b 83000000 		.4byte	0x83
 1442 053f 00000000 		.4byte	.LLST0
 1443 0543 15       		.uleb128 0x15
 1444 0544 25020000 		.4byte	.LASF84
 1445 0548 01       		.byte	0x1
 1446 0549 E3       		.byte	0xe3
 1447 054a A4000000 		.4byte	0xa4
 1448 054e 21000000 		.4byte	.LLST1
 1449 0552 16       		.uleb128 0x16
 1450 0553 3E000000 		.4byte	.LVL2
 1451 0557 30090000 		.4byte	0x930
 1452 055b 00       		.byte	0
 1453 055c 17       		.uleb128 0x17
 1454 055d 9E050000 		.4byte	.LASF83
 1455 0561 01       		.byte	0x1
 1456 0562 BA01     		.2byte	0x1ba
 1457 0564 A4000000 		.4byte	0xa4
 1458 0568 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 53


 1459 056c 1C000000 		.4byte	.LFE3-.LFB3
 1460 0570 01       		.uleb128 0x1
 1461 0571 9C       		.byte	0x9c
 1462 0572 90050000 		.4byte	0x590
 1463 0576 18       		.uleb128 0x18
 1464 0577 81040000 		.4byte	.LASF85
 1465 057b 01       		.byte	0x1
 1466 057c BC01     		.2byte	0x1bc
 1467 057e A4000000 		.4byte	0xa4
 1468 0582 3F000000 		.4byte	.LLST2
 1469 0586 16       		.uleb128 0x16
 1470 0587 0E000000 		.4byte	.LVL5
 1471 058b 41090000 		.4byte	0x941
 1472 058f 00       		.byte	0
 1473 0590 17       		.uleb128 0x17
 1474 0591 DE000000 		.4byte	.LASF86
 1475 0595 01       		.byte	0x1
 1476 0596 0702     		.2byte	0x207
 1477 0598 A4000000 		.4byte	0xa4
 1478 059c 00000000 		.4byte	.LFB4
 1479 05a0 64000000 		.4byte	.LFE4-.LFB4
 1480 05a4 01       		.uleb128 0x1
 1481 05a5 9C       		.byte	0x9c
 1482 05a6 CD050000 		.4byte	0x5cd
 1483 05aa 18       		.uleb128 0x18
 1484 05ab 81040000 		.4byte	.LASF85
 1485 05af 01       		.byte	0x1
 1486 05b0 0902     		.2byte	0x209
 1487 05b2 A4000000 		.4byte	0xa4
 1488 05b6 5E000000 		.4byte	.LLST3
 1489 05ba 16       		.uleb128 0x16
 1490 05bb 20000000 		.4byte	.LVL10
 1491 05bf 1B050000 		.4byte	0x51b
 1492 05c3 16       		.uleb128 0x16
 1493 05c4 40000000 		.4byte	.LVL11
 1494 05c8 5C050000 		.4byte	0x55c
 1495 05cc 00       		.byte	0
 1496 05cd 17       		.uleb128 0x17
 1497 05ce 37070000 		.4byte	.LASF87
 1498 05d2 01       		.byte	0x1
 1499 05d3 6602     		.2byte	0x266
 1500 05d5 A4000000 		.4byte	0xa4
 1501 05d9 00000000 		.4byte	.LFB5
 1502 05dd 0A000000 		.4byte	.LFE5-.LFB5
 1503 05e1 01       		.uleb128 0x1
 1504 05e2 9C       		.byte	0x9c
 1505 05e3 FE050000 		.4byte	0x5fe
 1506 05e7 19       		.uleb128 0x19
 1507 05e8 29050000 		.4byte	.LASF88
 1508 05ec 01       		.byte	0x1
 1509 05ed 6802     		.2byte	0x268
 1510 05ef A4000000 		.4byte	0xa4
 1511 05f3 00       		.byte	0
 1512 05f4 16       		.uleb128 0x16
 1513 05f5 06000000 		.4byte	.LVL16
 1514 05f9 48090000 		.4byte	0x948
 1515 05fd 00       		.byte	0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 54


 1516 05fe 1A       		.uleb128 0x1a
 1517 05ff A7010000 		.4byte	.LASF97
 1518 0603 01       		.byte	0x1
 1519 0604 D102     		.2byte	0x2d1
 1520 0606 00000000 		.4byte	.LFB6
 1521 060a B8000000 		.4byte	.LFE6-.LFB6
 1522 060e 01       		.uleb128 0x1
 1523 060f 9C       		.byte	0x9c
 1524 0610 B9060000 		.4byte	0x6b9
 1525 0614 1B       		.uleb128 0x1b
 1526 0615 85030000 		.4byte	.LASF89
 1527 0619 01       		.byte	0x1
 1528 061a D102     		.2byte	0x2d1
 1529 061c 83000000 		.4byte	0x83
 1530 0620 AC000000 		.4byte	.LLST4
 1531 0624 1B       		.uleb128 0x1b
 1532 0625 8A000000 		.4byte	.LASF90
 1533 0629 01       		.byte	0x1
 1534 062a D102     		.2byte	0x2d1
 1535 062c 83000000 		.4byte	0x83
 1536 0630 CD000000 		.4byte	.LLST5
 1537 0634 1B       		.uleb128 0x1b
 1538 0635 70010000 		.4byte	.LASF91
 1539 0639 01       		.byte	0x1
 1540 063a D102     		.2byte	0x2d1
 1541 063c 83000000 		.4byte	0x83
 1542 0640 EE000000 		.4byte	.LLST6
 1543 0644 18       		.uleb128 0x18
 1544 0645 DC060000 		.4byte	.LASF92
 1545 0649 01       		.byte	0x1
 1546 064a D302     		.2byte	0x2d3
 1547 064c B9060000 		.4byte	0x6b9
 1548 0650 5A010000 		.4byte	.LLST7
 1549 0654 18       		.uleb128 0x18
 1550 0655 E8060000 		.4byte	.LASF93
 1551 0659 01       		.byte	0x1
 1552 065a D802     		.2byte	0x2d8
 1553 065c 83000000 		.4byte	0x83
 1554 0660 6D010000 		.4byte	.LLST8
 1555 0664 18       		.uleb128 0x18
 1556 0665 1D030000 		.4byte	.LASF94
 1557 0669 01       		.byte	0x1
 1558 066a D902     		.2byte	0x2d9
 1559 066c 6B000000 		.4byte	0x6b
 1560 0670 96010000 		.4byte	.LLST9
 1561 0674 18       		.uleb128 0x18
 1562 0675 11050000 		.4byte	.LASF95
 1563 0679 01       		.byte	0x1
 1564 067a DA02     		.2byte	0x2da
 1565 067c 83000000 		.4byte	0x83
 1566 0680 B4010000 		.4byte	.LLST10
 1567 0684 18       		.uleb128 0x18
 1568 0685 49020000 		.4byte	.LASF96
 1569 0689 01       		.byte	0x1
 1570 068a DB02     		.2byte	0x2db
 1571 068c 83000000 		.4byte	0x83
 1572 0690 DC010000 		.4byte	.LLST11
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 55


 1573 0694 16       		.uleb128 0x16
 1574 0695 3A000000 		.4byte	.LVL23
 1575 0699 4F090000 		.4byte	0x94f
 1576 069d 16       		.uleb128 0x16
 1577 069e 52000000 		.4byte	.LVL28
 1578 06a2 5A090000 		.4byte	0x95a
 1579 06a6 16       		.uleb128 0x16
 1580 06a7 66000000 		.4byte	.LVL30
 1581 06ab 4F090000 		.4byte	0x94f
 1582 06af 16       		.uleb128 0x16
 1583 06b0 76000000 		.4byte	.LVL33
 1584 06b4 5A090000 		.4byte	0x95a
 1585 06b8 00       		.byte	0
 1586 06b9 06       		.uleb128 0x6
 1587 06ba 04       		.byte	0x4
 1588 06bb BF060000 		.4byte	0x6bf
 1589 06bf 1C       		.uleb128 0x1c
 1590 06c0 1C040000 		.4byte	0x41c
 1591 06c4 1A       		.uleb128 0x1a
 1592 06c5 61030000 		.4byte	.LASF98
 1593 06c9 01       		.byte	0x1
 1594 06ca 0804     		.2byte	0x408
 1595 06cc 00000000 		.4byte	.LFB7
 1596 06d0 68000000 		.4byte	.LFE7-.LFB7
 1597 06d4 01       		.uleb128 0x1
 1598 06d5 9C       		.byte	0x9c
 1599 06d6 FD060000 		.4byte	0x6fd
 1600 06da 18       		.uleb128 0x18
 1601 06db 93000000 		.4byte	.LASF99
 1602 06df 01       		.byte	0x1
 1603 06e0 1104     		.2byte	0x411
 1604 06e2 A4000000 		.4byte	0xa4
 1605 06e6 04020000 		.4byte	.LLST12
 1606 06ea 16       		.uleb128 0x16
 1607 06eb 14000000 		.4byte	.LVL42
 1608 06ef 1B050000 		.4byte	0x51b
 1609 06f3 16       		.uleb128 0x16
 1610 06f4 2A000000 		.4byte	.LVL44
 1611 06f8 5C050000 		.4byte	0x55c
 1612 06fc 00       		.byte	0
 1613 06fd 1A       		.uleb128 0x1a
 1614 06fe 6A040000 		.4byte	.LASF100
 1615 0702 01       		.byte	0x1
 1616 0703 5B04     		.2byte	0x45b
 1617 0705 00000000 		.4byte	.LFB8
 1618 0709 08000000 		.4byte	.LFE8-.LFB8
 1619 070d 01       		.uleb128 0x1
 1620 070e 9C       		.byte	0x9c
 1621 070f 35070000 		.4byte	0x735
 1622 0713 1B       		.uleb128 0x1b
 1623 0714 37040000 		.4byte	.LASF101
 1624 0718 01       		.byte	0x1
 1625 0719 5B04     		.2byte	0x45b
 1626 071b C6000000 		.4byte	0xc6
 1627 071f 4F020000 		.4byte	.LLST13
 1628 0723 1D       		.uleb128 0x1d
 1629 0724 06000000 		.4byte	.LVL51
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 56


 1630 0728 6B090000 		.4byte	0x96b
 1631 072c 1E       		.uleb128 0x1e
 1632 072d 01       		.uleb128 0x1
 1633 072e 50       		.byte	0x50
 1634 072f 03       		.uleb128 0x3
 1635 0730 F3       		.byte	0xf3
 1636 0731 01       		.uleb128 0x1
 1637 0732 50       		.byte	0x50
 1638 0733 00       		.byte	0
 1639 0734 00       		.byte	0
 1640 0735 1A       		.uleb128 0x1a
 1641 0736 E5040000 		.4byte	.LASF102
 1642 073a 01       		.byte	0x1
 1643 073b 7B04     		.2byte	0x47b
 1644 073d 00000000 		.4byte	.LFB9
 1645 0741 30000000 		.4byte	.LFE9-.LFB9
 1646 0745 01       		.uleb128 0x1
 1647 0746 9C       		.byte	0x9c
 1648 0747 5C070000 		.4byte	0x75c
 1649 074b 1B       		.uleb128 0x1b
 1650 074c D6030000 		.4byte	.LASF103
 1651 0750 01       		.byte	0x1
 1652 0751 7B04     		.2byte	0x47b
 1653 0753 83000000 		.4byte	0x83
 1654 0757 70020000 		.4byte	.LLST14
 1655 075b 00       		.byte	0
 1656 075c 1A       		.uleb128 0x1a
 1657 075d BC010000 		.4byte	.LASF104
 1658 0761 01       		.byte	0x1
 1659 0762 BF04     		.2byte	0x4bf
 1660 0764 00000000 		.4byte	.LFB10
 1661 0768 14000000 		.4byte	.LFE10-.LFB10
 1662 076c 01       		.uleb128 0x1
 1663 076d 9C       		.byte	0x9c
 1664 076e 93070000 		.4byte	0x793
 1665 0772 1B       		.uleb128 0x1b
 1666 0773 C4050000 		.4byte	.LASF29
 1667 0777 01       		.byte	0x1
 1668 0778 BF04     		.2byte	0x4bf
 1669 077a 83000000 		.4byte	0x83
 1670 077e 9E020000 		.4byte	.LLST15
 1671 0782 18       		.uleb128 0x18
 1672 0783 D7010000 		.4byte	.LASF105
 1673 0787 01       		.byte	0x1
 1674 0788 C204     		.2byte	0x4c2
 1675 078a 83000000 		.4byte	0x83
 1676 078e CC020000 		.4byte	.LLST16
 1677 0792 00       		.byte	0
 1678 0793 1A       		.uleb128 0x1a
 1679 0794 5C000000 		.4byte	.LASF106
 1680 0798 01       		.byte	0x1
 1681 0799 1305     		.2byte	0x513
 1682 079b 00000000 		.4byte	.LFB11
 1683 079f 12000000 		.4byte	.LFE11-.LFB11
 1684 07a3 01       		.uleb128 0x1
 1685 07a4 9C       		.byte	0x9c
 1686 07a5 EF070000 		.4byte	0x7ef
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 57


 1687 07a9 1B       		.uleb128 0x1b
 1688 07aa C4050000 		.4byte	.LASF29
 1689 07ae 01       		.byte	0x1
 1690 07af 1305     		.2byte	0x513
 1691 07b1 83000000 		.4byte	0x83
 1692 07b5 F5020000 		.4byte	.LLST17
 1693 07b9 1B       		.uleb128 0x1b
 1694 07ba D6030000 		.4byte	.LASF103
 1695 07be 01       		.byte	0x1
 1696 07bf 1305     		.2byte	0x513
 1697 07c1 83000000 		.4byte	0x83
 1698 07c5 21030000 		.4byte	.LLST18
 1699 07c9 1F       		.uleb128 0x1f
 1700 07ca 0A000000 		.4byte	.LVL63
 1701 07ce 35070000 		.4byte	0x735
 1702 07d2 DE070000 		.4byte	0x7de
 1703 07d6 1E       		.uleb128 0x1e
 1704 07d7 01       		.uleb128 0x1
 1705 07d8 50       		.byte	0x50
 1706 07d9 03       		.uleb128 0x3
 1707 07da F3       		.byte	0xf3
 1708 07db 01       		.uleb128 0x1
 1709 07dc 51       		.byte	0x51
 1710 07dd 00       		.byte	0
 1711 07de 1D       		.uleb128 0x1d
 1712 07df 10000000 		.4byte	.LVL64
 1713 07e3 5C070000 		.4byte	0x75c
 1714 07e7 1E       		.uleb128 0x1e
 1715 07e8 01       		.uleb128 0x1
 1716 07e9 50       		.byte	0x50
 1717 07ea 02       		.uleb128 0x2
 1718 07eb 74       		.byte	0x74
 1719 07ec 00       		.sleb128 0
 1720 07ed 00       		.byte	0
 1721 07ee 00       		.byte	0
 1722 07ef 17       		.uleb128 0x17
 1723 07f0 DD030000 		.4byte	.LASF107
 1724 07f4 01       		.byte	0x1
 1725 07f5 3205     		.2byte	0x532
 1726 07f7 A4000000 		.4byte	0xa4
 1727 07fb 00000000 		.4byte	.LFB12
 1728 07ff 14000000 		.4byte	.LFE12-.LFB12
 1729 0803 01       		.uleb128 0x1
 1730 0804 9C       		.byte	0x9c
 1731 0805 41080000 		.4byte	0x841
 1732 0809 1B       		.uleb128 0x1b
 1733 080a 85030000 		.4byte	.LASF89
 1734 080e 01       		.byte	0x1
 1735 080f 3205     		.2byte	0x532
 1736 0811 83000000 		.4byte	0x83
 1737 0815 42030000 		.4byte	.LLST19
 1738 0819 18       		.uleb128 0x18
 1739 081a 44050000 		.4byte	.LASF108
 1740 081e 01       		.byte	0x1
 1741 081f 3405     		.2byte	0x534
 1742 0821 A4000000 		.4byte	0xa4
 1743 0825 7C030000 		.4byte	.LLST20
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 58


 1744 0829 1D       		.uleb128 0x1d
 1745 082a 0C000000 		.4byte	.LVL68
 1746 082e 7C090000 		.4byte	0x97c
 1747 0832 1E       		.uleb128 0x1e
 1748 0833 01       		.uleb128 0x1
 1749 0834 51       		.byte	0x51
 1750 0835 02       		.uleb128 0x2
 1751 0836 08       		.byte	0x8
 1752 0837 28       		.byte	0x28
 1753 0838 1E       		.uleb128 0x1e
 1754 0839 01       		.uleb128 0x1
 1755 083a 50       		.byte	0x50
 1756 083b 03       		.uleb128 0x3
 1757 083c F3       		.byte	0xf3
 1758 083d 01       		.uleb128 0x1
 1759 083e 50       		.byte	0x50
 1760 083f 00       		.byte	0
 1761 0840 00       		.byte	0
 1762 0841 17       		.uleb128 0x17
 1763 0842 AE060000 		.4byte	.LASF109
 1764 0846 01       		.byte	0x1
 1765 0847 C705     		.2byte	0x5c7
 1766 0849 A4000000 		.4byte	0xa4
 1767 084d 00000000 		.4byte	.LFB13
 1768 0851 1A000000 		.4byte	.LFE13-.LFB13
 1769 0855 01       		.uleb128 0x1
 1770 0856 9C       		.byte	0x9c
 1771 0857 8C080000 		.4byte	0x88c
 1772 085b 18       		.uleb128 0x18
 1773 085c 44050000 		.4byte	.LASF108
 1774 0860 01       		.byte	0x1
 1775 0861 C905     		.2byte	0x5c9
 1776 0863 A4000000 		.4byte	0xa4
 1777 0867 9B030000 		.4byte	.LLST21
 1778 086b 18       		.uleb128 0x18
 1779 086c 85030000 		.4byte	.LASF89
 1780 0870 01       		.byte	0x1
 1781 0871 CA05     		.2byte	0x5ca
 1782 0873 83000000 		.4byte	0x83
 1783 0877 C5030000 		.4byte	.LLST22
 1784 087b 1D       		.uleb128 0x1d
 1785 087c 0E000000 		.4byte	.LVL73
 1786 0880 EF070000 		.4byte	0x7ef
 1787 0884 1E       		.uleb128 0x1e
 1788 0885 01       		.uleb128 0x1
 1789 0886 50       		.byte	0x50
 1790 0887 02       		.uleb128 0x2
 1791 0888 74       		.byte	0x74
 1792 0889 00       		.sleb128 0
 1793 088a 00       		.byte	0
 1794 088b 00       		.byte	0
 1795 088c 20       		.uleb128 0x20
 1796 088d 8C040000 		.4byte	.LASF110
 1797 0891 04       		.byte	0x4
 1798 0892 7703     		.2byte	0x377
 1799 0894 8B030000 		.4byte	0x38b
 1800 0898 20       		.uleb128 0x20
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 59


 1801 0899 47010000 		.4byte	.LASF111
 1802 089d 04       		.byte	0x4
 1803 089e 7803     		.2byte	0x378
 1804 08a0 A4080000 		.4byte	0x8a4
 1805 08a4 1C       		.uleb128 0x1c
 1806 08a5 FA040000 		.4byte	0x4fa
 1807 08a9 21       		.uleb128 0x21
 1808 08aa 76010000 		.4byte	.LASF112
 1809 08ae 01       		.byte	0x1
 1810 08af 88       		.byte	0x88
 1811 08b0 BA080000 		.4byte	0x8ba
 1812 08b4 05       		.uleb128 0x5
 1813 08b5 03       		.byte	0x3
 1814 08b6 00000000 		.4byte	CapSense_scanFreqIndex
 1815 08ba 1C       		.uleb128 0x1c
 1816 08bb 6B000000 		.4byte	0x6b
 1817 08bf 21       		.uleb128 0x21
 1818 08c0 75000000 		.4byte	.LASF113
 1819 08c4 01       		.byte	0x1
 1820 08c5 8C       		.byte	0x8c
 1821 08c6 B0000000 		.4byte	0xb0
 1822 08ca 05       		.uleb128 0x5
 1823 08cb 03       		.byte	0x3
 1824 08cc 00000000 		.4byte	CapSense_widgetIndex
 1825 08d0 21       		.uleb128 0x21
 1826 08d1 C9020000 		.4byte	.LASF114
 1827 08d5 01       		.byte	0x1
 1828 08d6 8D       		.byte	0x8d
 1829 08d7 B0000000 		.4byte	0xb0
 1830 08db 05       		.uleb128 0x5
 1831 08dc 03       		.byte	0x3
 1832 08dd 00000000 		.4byte	CapSense_sensorIndex
 1833 08e1 21       		.uleb128 0x21
 1834 08e2 CB050000 		.4byte	.LASF115
 1835 08e6 01       		.byte	0x1
 1836 08e7 8E       		.byte	0x8e
 1837 08e8 C1000000 		.4byte	0xc1
 1838 08ec 05       		.uleb128 0x5
 1839 08ed 03       		.byte	0x3
 1840 08ee 00000000 		.4byte	CapSense_curWidgetResolution
 1841 08f2 21       		.uleb128 0x21
 1842 08f3 5C020000 		.4byte	.LASF116
 1843 08f7 01       		.byte	0x1
 1844 08f8 8F       		.byte	0x8f
 1845 08f9 6B000000 		.4byte	0x6b
 1846 08fd 05       		.uleb128 0x5
 1847 08fe 03       		.byte	0x3
 1848 08ff 00000000 		.4byte	CapSense_requestScanAllWidget
 1849 0903 21       		.uleb128 0x21
 1850 0904 88050000 		.4byte	.LASF117
 1851 0908 01       		.byte	0x1
 1852 0909 95       		.byte	0x95
 1853 090a BB040000 		.4byte	0x4bb
 1854 090e 05       		.uleb128 0x5
 1855 090f 03       		.byte	0x3
 1856 0910 00000000 		.4byte	CapSense_curRamSnsPtr
 1857 0914 21       		.uleb128 0x21
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 60


 1858 0915 0D040000 		.4byte	.LASF118
 1859 0919 01       		.byte	0x1
 1860 091a 9A       		.byte	0x9a
 1861 091b 25090000 		.4byte	0x925
 1862 091f 05       		.uleb128 0x5
 1863 0920 03       		.byte	0x3
 1864 0921 00000000 		.4byte	CapSense_curFlashWdgtPtr
 1865 0925 06       		.uleb128 0x6
 1866 0926 04       		.byte	0x4
 1867 0927 2B090000 		.4byte	0x92b
 1868 092b 1C       		.uleb128 0x1c
 1869 092c C7040000 		.4byte	0x4c7
 1870 0930 22       		.uleb128 0x22
 1871 0931 16010000 		.4byte	.LASF121
 1872 0935 05       		.byte	0x5
 1873 0936 76       		.byte	0x76
 1874 0937 41090000 		.4byte	0x941
 1875 093b 23       		.uleb128 0x23
 1876 093c 83000000 		.4byte	0x83
 1877 0940 00       		.byte	0
 1878 0941 24       		.uleb128 0x24
 1879 0942 F6030000 		.4byte	.LASF119
 1880 0946 05       		.byte	0x5
 1881 0947 78       		.byte	0x78
 1882 0948 24       		.uleb128 0x24
 1883 0949 4D070000 		.4byte	.LASF120
 1884 094d 05       		.byte	0x5
 1885 094e 75       		.byte	0x75
 1886 094f 25       		.uleb128 0x25
 1887 0950 2C030000 		.4byte	.LASF128
 1888 0954 06       		.byte	0x6
 1889 0955 E3       		.byte	0xe3
 1890 0956 6B000000 		.4byte	0x6b
 1891 095a 22       		.uleb128 0x22
 1892 095b 11000000 		.4byte	.LASF122
 1893 095f 06       		.byte	0x6
 1894 0960 E4       		.byte	0xe4
 1895 0961 6B090000 		.4byte	0x96b
 1896 0965 23       		.uleb128 0x23
 1897 0966 6B000000 		.4byte	0x6b
 1898 096a 00       		.byte	0
 1899 096b 22       		.uleb128 0x22
 1900 096c A1020000 		.4byte	.LASF123
 1901 0970 07       		.byte	0x7
 1902 0971 18       		.byte	0x18
 1903 0972 7C090000 		.4byte	0x97c
 1904 0976 23       		.uleb128 0x23
 1905 0977 C6000000 		.4byte	0xc6
 1906 097b 00       		.byte	0
 1907 097c 26       		.uleb128 0x26
 1908 097d 27000000 		.4byte	.LASF129
 1909 0981 05       		.byte	0x5
 1910 0982 7C       		.byte	0x7c
 1911 0983 23       		.uleb128 0x23
 1912 0984 83000000 		.4byte	0x83
 1913 0988 23       		.uleb128 0x23
 1914 0989 77000000 		.4byte	0x77
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 61


 1915 098d 00       		.byte	0
 1916 098e 00       		.byte	0
 1917              		.section	.debug_abbrev,"",%progbits
 1918              	.Ldebug_abbrev0:
 1919 0000 01       		.uleb128 0x1
 1920 0001 11       		.uleb128 0x11
 1921 0002 01       		.byte	0x1
 1922 0003 25       		.uleb128 0x25
 1923 0004 0E       		.uleb128 0xe
 1924 0005 13       		.uleb128 0x13
 1925 0006 0B       		.uleb128 0xb
 1926 0007 03       		.uleb128 0x3
 1927 0008 0E       		.uleb128 0xe
 1928 0009 1B       		.uleb128 0x1b
 1929 000a 0E       		.uleb128 0xe
 1930 000b 55       		.uleb128 0x55
 1931 000c 17       		.uleb128 0x17
 1932 000d 11       		.uleb128 0x11
 1933 000e 01       		.uleb128 0x1
 1934 000f 10       		.uleb128 0x10
 1935 0010 17       		.uleb128 0x17
 1936 0011 00       		.byte	0
 1937 0012 00       		.byte	0
 1938 0013 02       		.uleb128 0x2
 1939 0014 24       		.uleb128 0x24
 1940 0015 00       		.byte	0
 1941 0016 0B       		.uleb128 0xb
 1942 0017 0B       		.uleb128 0xb
 1943 0018 3E       		.uleb128 0x3e
 1944 0019 0B       		.uleb128 0xb
 1945 001a 03       		.uleb128 0x3
 1946 001b 0E       		.uleb128 0xe
 1947 001c 00       		.byte	0
 1948 001d 00       		.byte	0
 1949 001e 03       		.uleb128 0x3
 1950 001f 24       		.uleb128 0x24
 1951 0020 00       		.byte	0
 1952 0021 0B       		.uleb128 0xb
 1953 0022 0B       		.uleb128 0xb
 1954 0023 3E       		.uleb128 0x3e
 1955 0024 0B       		.uleb128 0xb
 1956 0025 03       		.uleb128 0x3
 1957 0026 08       		.uleb128 0x8
 1958 0027 00       		.byte	0
 1959 0028 00       		.byte	0
 1960 0029 04       		.uleb128 0x4
 1961 002a 16       		.uleb128 0x16
 1962 002b 00       		.byte	0
 1963 002c 03       		.uleb128 0x3
 1964 002d 0E       		.uleb128 0xe
 1965 002e 3A       		.uleb128 0x3a
 1966 002f 0B       		.uleb128 0xb
 1967 0030 3B       		.uleb128 0x3b
 1968 0031 05       		.uleb128 0x5
 1969 0032 49       		.uleb128 0x49
 1970 0033 13       		.uleb128 0x13
 1971 0034 00       		.byte	0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 62


 1972 0035 00       		.byte	0
 1973 0036 05       		.uleb128 0x5
 1974 0037 35       		.uleb128 0x35
 1975 0038 00       		.byte	0
 1976 0039 49       		.uleb128 0x49
 1977 003a 13       		.uleb128 0x13
 1978 003b 00       		.byte	0
 1979 003c 00       		.byte	0
 1980 003d 06       		.uleb128 0x6
 1981 003e 0F       		.uleb128 0xf
 1982 003f 00       		.byte	0
 1983 0040 0B       		.uleb128 0xb
 1984 0041 0B       		.uleb128 0xb
 1985 0042 49       		.uleb128 0x49
 1986 0043 13       		.uleb128 0x13
 1987 0044 00       		.byte	0
 1988 0045 00       		.byte	0
 1989 0046 07       		.uleb128 0x7
 1990 0047 15       		.uleb128 0x15
 1991 0048 00       		.byte	0
 1992 0049 27       		.uleb128 0x27
 1993 004a 19       		.uleb128 0x19
 1994 004b 00       		.byte	0
 1995 004c 00       		.byte	0
 1996 004d 08       		.uleb128 0x8
 1997 004e 0F       		.uleb128 0xf
 1998 004f 00       		.byte	0
 1999 0050 0B       		.uleb128 0xb
 2000 0051 0B       		.uleb128 0xb
 2001 0052 00       		.byte	0
 2002 0053 00       		.byte	0
 2003 0054 09       		.uleb128 0x9
 2004 0055 16       		.uleb128 0x16
 2005 0056 00       		.byte	0
 2006 0057 03       		.uleb128 0x3
 2007 0058 0E       		.uleb128 0xe
 2008 0059 3A       		.uleb128 0x3a
 2009 005a 0B       		.uleb128 0xb
 2010 005b 3B       		.uleb128 0x3b
 2011 005c 0B       		.uleb128 0xb
 2012 005d 49       		.uleb128 0x49
 2013 005e 13       		.uleb128 0x13
 2014 005f 00       		.byte	0
 2015 0060 00       		.byte	0
 2016 0061 0A       		.uleb128 0xa
 2017 0062 13       		.uleb128 0x13
 2018 0063 01       		.byte	0x1
 2019 0064 0B       		.uleb128 0xb
 2020 0065 0B       		.uleb128 0xb
 2021 0066 3A       		.uleb128 0x3a
 2022 0067 0B       		.uleb128 0xb
 2023 0068 3B       		.uleb128 0x3b
 2024 0069 0B       		.uleb128 0xb
 2025 006a 01       		.uleb128 0x1
 2026 006b 13       		.uleb128 0x13
 2027 006c 00       		.byte	0
 2028 006d 00       		.byte	0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 63


 2029 006e 0B       		.uleb128 0xb
 2030 006f 0D       		.uleb128 0xd
 2031 0070 00       		.byte	0
 2032 0071 03       		.uleb128 0x3
 2033 0072 0E       		.uleb128 0xe
 2034 0073 3A       		.uleb128 0x3a
 2035 0074 0B       		.uleb128 0xb
 2036 0075 3B       		.uleb128 0x3b
 2037 0076 0B       		.uleb128 0xb
 2038 0077 49       		.uleb128 0x49
 2039 0078 13       		.uleb128 0x13
 2040 0079 38       		.uleb128 0x38
 2041 007a 0B       		.uleb128 0xb
 2042 007b 00       		.byte	0
 2043 007c 00       		.byte	0
 2044 007d 0C       		.uleb128 0xc
 2045 007e 13       		.uleb128 0x13
 2046 007f 01       		.byte	0x1
 2047 0080 0B       		.uleb128 0xb
 2048 0081 0B       		.uleb128 0xb
 2049 0082 3A       		.uleb128 0x3a
 2050 0083 0B       		.uleb128 0xb
 2051 0084 3B       		.uleb128 0x3b
 2052 0085 05       		.uleb128 0x5
 2053 0086 01       		.uleb128 0x1
 2054 0087 13       		.uleb128 0x13
 2055 0088 00       		.byte	0
 2056 0089 00       		.byte	0
 2057 008a 0D       		.uleb128 0xd
 2058 008b 0D       		.uleb128 0xd
 2059 008c 00       		.byte	0
 2060 008d 03       		.uleb128 0x3
 2061 008e 08       		.uleb128 0x8
 2062 008f 3A       		.uleb128 0x3a
 2063 0090 0B       		.uleb128 0xb
 2064 0091 3B       		.uleb128 0x3b
 2065 0092 05       		.uleb128 0x5
 2066 0093 49       		.uleb128 0x49
 2067 0094 13       		.uleb128 0x13
 2068 0095 38       		.uleb128 0x38
 2069 0096 0B       		.uleb128 0xb
 2070 0097 00       		.byte	0
 2071 0098 00       		.byte	0
 2072 0099 0E       		.uleb128 0xe
 2073 009a 0D       		.uleb128 0xd
 2074 009b 00       		.byte	0
 2075 009c 03       		.uleb128 0x3
 2076 009d 0E       		.uleb128 0xe
 2077 009e 3A       		.uleb128 0x3a
 2078 009f 0B       		.uleb128 0xb
 2079 00a0 3B       		.uleb128 0x3b
 2080 00a1 05       		.uleb128 0x5
 2081 00a2 49       		.uleb128 0x49
 2082 00a3 13       		.uleb128 0x13
 2083 00a4 38       		.uleb128 0x38
 2084 00a5 0B       		.uleb128 0xb
 2085 00a6 00       		.byte	0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 64


 2086 00a7 00       		.byte	0
 2087 00a8 0F       		.uleb128 0xf
 2088 00a9 01       		.uleb128 0x1
 2089 00aa 01       		.byte	0x1
 2090 00ab 49       		.uleb128 0x49
 2091 00ac 13       		.uleb128 0x13
 2092 00ad 01       		.uleb128 0x1
 2093 00ae 13       		.uleb128 0x13
 2094 00af 00       		.byte	0
 2095 00b0 00       		.byte	0
 2096 00b1 10       		.uleb128 0x10
 2097 00b2 21       		.uleb128 0x21
 2098 00b3 00       		.byte	0
 2099 00b4 49       		.uleb128 0x49
 2100 00b5 13       		.uleb128 0x13
 2101 00b6 2F       		.uleb128 0x2f
 2102 00b7 0B       		.uleb128 0xb
 2103 00b8 00       		.byte	0
 2104 00b9 00       		.byte	0
 2105 00ba 11       		.uleb128 0x11
 2106 00bb 26       		.uleb128 0x26
 2107 00bc 00       		.byte	0
 2108 00bd 00       		.byte	0
 2109 00be 00       		.byte	0
 2110 00bf 12       		.uleb128 0x12
 2111 00c0 2E       		.uleb128 0x2e
 2112 00c1 00       		.byte	0
 2113 00c2 3F       		.uleb128 0x3f
 2114 00c3 19       		.uleb128 0x19
 2115 00c4 03       		.uleb128 0x3
 2116 00c5 0E       		.uleb128 0xe
 2117 00c6 3A       		.uleb128 0x3a
 2118 00c7 0B       		.uleb128 0xb
 2119 00c8 3B       		.uleb128 0x3b
 2120 00c9 0B       		.uleb128 0xb
 2121 00ca 27       		.uleb128 0x27
 2122 00cb 19       		.uleb128 0x19
 2123 00cc 49       		.uleb128 0x49
 2124 00cd 13       		.uleb128 0x13
 2125 00ce 11       		.uleb128 0x11
 2126 00cf 01       		.uleb128 0x1
 2127 00d0 12       		.uleb128 0x12
 2128 00d1 06       		.uleb128 0x6
 2129 00d2 40       		.uleb128 0x40
 2130 00d3 18       		.uleb128 0x18
 2131 00d4 9742     		.uleb128 0x2117
 2132 00d6 19       		.uleb128 0x19
 2133 00d7 00       		.byte	0
 2134 00d8 00       		.byte	0
 2135 00d9 13       		.uleb128 0x13
 2136 00da 2E       		.uleb128 0x2e
 2137 00db 01       		.byte	0x1
 2138 00dc 3F       		.uleb128 0x3f
 2139 00dd 19       		.uleb128 0x19
 2140 00de 03       		.uleb128 0x3
 2141 00df 0E       		.uleb128 0xe
 2142 00e0 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 65


 2143 00e1 0B       		.uleb128 0xb
 2144 00e2 3B       		.uleb128 0x3b
 2145 00e3 0B       		.uleb128 0xb
 2146 00e4 27       		.uleb128 0x27
 2147 00e5 19       		.uleb128 0x19
 2148 00e6 49       		.uleb128 0x49
 2149 00e7 13       		.uleb128 0x13
 2150 00e8 11       		.uleb128 0x11
 2151 00e9 01       		.uleb128 0x1
 2152 00ea 12       		.uleb128 0x12
 2153 00eb 06       		.uleb128 0x6
 2154 00ec 40       		.uleb128 0x40
 2155 00ed 18       		.uleb128 0x18
 2156 00ee 9742     		.uleb128 0x2117
 2157 00f0 19       		.uleb128 0x19
 2158 00f1 01       		.uleb128 0x1
 2159 00f2 13       		.uleb128 0x13
 2160 00f3 00       		.byte	0
 2161 00f4 00       		.byte	0
 2162 00f5 14       		.uleb128 0x14
 2163 00f6 05       		.uleb128 0x5
 2164 00f7 00       		.byte	0
 2165 00f8 03       		.uleb128 0x3
 2166 00f9 0E       		.uleb128 0xe
 2167 00fa 3A       		.uleb128 0x3a
 2168 00fb 0B       		.uleb128 0xb
 2169 00fc 3B       		.uleb128 0x3b
 2170 00fd 0B       		.uleb128 0xb
 2171 00fe 49       		.uleb128 0x49
 2172 00ff 13       		.uleb128 0x13
 2173 0100 02       		.uleb128 0x2
 2174 0101 17       		.uleb128 0x17
 2175 0102 00       		.byte	0
 2176 0103 00       		.byte	0
 2177 0104 15       		.uleb128 0x15
 2178 0105 34       		.uleb128 0x34
 2179 0106 00       		.byte	0
 2180 0107 03       		.uleb128 0x3
 2181 0108 0E       		.uleb128 0xe
 2182 0109 3A       		.uleb128 0x3a
 2183 010a 0B       		.uleb128 0xb
 2184 010b 3B       		.uleb128 0x3b
 2185 010c 0B       		.uleb128 0xb
 2186 010d 49       		.uleb128 0x49
 2187 010e 13       		.uleb128 0x13
 2188 010f 02       		.uleb128 0x2
 2189 0110 17       		.uleb128 0x17
 2190 0111 00       		.byte	0
 2191 0112 00       		.byte	0
 2192 0113 16       		.uleb128 0x16
 2193 0114 898201   		.uleb128 0x4109
 2194 0117 00       		.byte	0
 2195 0118 11       		.uleb128 0x11
 2196 0119 01       		.uleb128 0x1
 2197 011a 31       		.uleb128 0x31
 2198 011b 13       		.uleb128 0x13
 2199 011c 00       		.byte	0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 66


 2200 011d 00       		.byte	0
 2201 011e 17       		.uleb128 0x17
 2202 011f 2E       		.uleb128 0x2e
 2203 0120 01       		.byte	0x1
 2204 0121 3F       		.uleb128 0x3f
 2205 0122 19       		.uleb128 0x19
 2206 0123 03       		.uleb128 0x3
 2207 0124 0E       		.uleb128 0xe
 2208 0125 3A       		.uleb128 0x3a
 2209 0126 0B       		.uleb128 0xb
 2210 0127 3B       		.uleb128 0x3b
 2211 0128 05       		.uleb128 0x5
 2212 0129 27       		.uleb128 0x27
 2213 012a 19       		.uleb128 0x19
 2214 012b 49       		.uleb128 0x49
 2215 012c 13       		.uleb128 0x13
 2216 012d 11       		.uleb128 0x11
 2217 012e 01       		.uleb128 0x1
 2218 012f 12       		.uleb128 0x12
 2219 0130 06       		.uleb128 0x6
 2220 0131 40       		.uleb128 0x40
 2221 0132 18       		.uleb128 0x18
 2222 0133 9742     		.uleb128 0x2117
 2223 0135 19       		.uleb128 0x19
 2224 0136 01       		.uleb128 0x1
 2225 0137 13       		.uleb128 0x13
 2226 0138 00       		.byte	0
 2227 0139 00       		.byte	0
 2228 013a 18       		.uleb128 0x18
 2229 013b 34       		.uleb128 0x34
 2230 013c 00       		.byte	0
 2231 013d 03       		.uleb128 0x3
 2232 013e 0E       		.uleb128 0xe
 2233 013f 3A       		.uleb128 0x3a
 2234 0140 0B       		.uleb128 0xb
 2235 0141 3B       		.uleb128 0x3b
 2236 0142 05       		.uleb128 0x5
 2237 0143 49       		.uleb128 0x49
 2238 0144 13       		.uleb128 0x13
 2239 0145 02       		.uleb128 0x2
 2240 0146 17       		.uleb128 0x17
 2241 0147 00       		.byte	0
 2242 0148 00       		.byte	0
 2243 0149 19       		.uleb128 0x19
 2244 014a 34       		.uleb128 0x34
 2245 014b 00       		.byte	0
 2246 014c 03       		.uleb128 0x3
 2247 014d 0E       		.uleb128 0xe
 2248 014e 3A       		.uleb128 0x3a
 2249 014f 0B       		.uleb128 0xb
 2250 0150 3B       		.uleb128 0x3b
 2251 0151 05       		.uleb128 0x5
 2252 0152 49       		.uleb128 0x49
 2253 0153 13       		.uleb128 0x13
 2254 0154 1C       		.uleb128 0x1c
 2255 0155 0B       		.uleb128 0xb
 2256 0156 00       		.byte	0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 67


 2257 0157 00       		.byte	0
 2258 0158 1A       		.uleb128 0x1a
 2259 0159 2E       		.uleb128 0x2e
 2260 015a 01       		.byte	0x1
 2261 015b 3F       		.uleb128 0x3f
 2262 015c 19       		.uleb128 0x19
 2263 015d 03       		.uleb128 0x3
 2264 015e 0E       		.uleb128 0xe
 2265 015f 3A       		.uleb128 0x3a
 2266 0160 0B       		.uleb128 0xb
 2267 0161 3B       		.uleb128 0x3b
 2268 0162 05       		.uleb128 0x5
 2269 0163 27       		.uleb128 0x27
 2270 0164 19       		.uleb128 0x19
 2271 0165 11       		.uleb128 0x11
 2272 0166 01       		.uleb128 0x1
 2273 0167 12       		.uleb128 0x12
 2274 0168 06       		.uleb128 0x6
 2275 0169 40       		.uleb128 0x40
 2276 016a 18       		.uleb128 0x18
 2277 016b 9742     		.uleb128 0x2117
 2278 016d 19       		.uleb128 0x19
 2279 016e 01       		.uleb128 0x1
 2280 016f 13       		.uleb128 0x13
 2281 0170 00       		.byte	0
 2282 0171 00       		.byte	0
 2283 0172 1B       		.uleb128 0x1b
 2284 0173 05       		.uleb128 0x5
 2285 0174 00       		.byte	0
 2286 0175 03       		.uleb128 0x3
 2287 0176 0E       		.uleb128 0xe
 2288 0177 3A       		.uleb128 0x3a
 2289 0178 0B       		.uleb128 0xb
 2290 0179 3B       		.uleb128 0x3b
 2291 017a 05       		.uleb128 0x5
 2292 017b 49       		.uleb128 0x49
 2293 017c 13       		.uleb128 0x13
 2294 017d 02       		.uleb128 0x2
 2295 017e 17       		.uleb128 0x17
 2296 017f 00       		.byte	0
 2297 0180 00       		.byte	0
 2298 0181 1C       		.uleb128 0x1c
 2299 0182 26       		.uleb128 0x26
 2300 0183 00       		.byte	0
 2301 0184 49       		.uleb128 0x49
 2302 0185 13       		.uleb128 0x13
 2303 0186 00       		.byte	0
 2304 0187 00       		.byte	0
 2305 0188 1D       		.uleb128 0x1d
 2306 0189 898201   		.uleb128 0x4109
 2307 018c 01       		.byte	0x1
 2308 018d 11       		.uleb128 0x11
 2309 018e 01       		.uleb128 0x1
 2310 018f 31       		.uleb128 0x31
 2311 0190 13       		.uleb128 0x13
 2312 0191 00       		.byte	0
 2313 0192 00       		.byte	0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 68


 2314 0193 1E       		.uleb128 0x1e
 2315 0194 8A8201   		.uleb128 0x410a
 2316 0197 00       		.byte	0
 2317 0198 02       		.uleb128 0x2
 2318 0199 18       		.uleb128 0x18
 2319 019a 9142     		.uleb128 0x2111
 2320 019c 18       		.uleb128 0x18
 2321 019d 00       		.byte	0
 2322 019e 00       		.byte	0
 2323 019f 1F       		.uleb128 0x1f
 2324 01a0 898201   		.uleb128 0x4109
 2325 01a3 01       		.byte	0x1
 2326 01a4 11       		.uleb128 0x11
 2327 01a5 01       		.uleb128 0x1
 2328 01a6 31       		.uleb128 0x31
 2329 01a7 13       		.uleb128 0x13
 2330 01a8 01       		.uleb128 0x1
 2331 01a9 13       		.uleb128 0x13
 2332 01aa 00       		.byte	0
 2333 01ab 00       		.byte	0
 2334 01ac 20       		.uleb128 0x20
 2335 01ad 34       		.uleb128 0x34
 2336 01ae 00       		.byte	0
 2337 01af 03       		.uleb128 0x3
 2338 01b0 0E       		.uleb128 0xe
 2339 01b1 3A       		.uleb128 0x3a
 2340 01b2 0B       		.uleb128 0xb
 2341 01b3 3B       		.uleb128 0x3b
 2342 01b4 05       		.uleb128 0x5
 2343 01b5 49       		.uleb128 0x49
 2344 01b6 13       		.uleb128 0x13
 2345 01b7 3F       		.uleb128 0x3f
 2346 01b8 19       		.uleb128 0x19
 2347 01b9 3C       		.uleb128 0x3c
 2348 01ba 19       		.uleb128 0x19
 2349 01bb 00       		.byte	0
 2350 01bc 00       		.byte	0
 2351 01bd 21       		.uleb128 0x21
 2352 01be 34       		.uleb128 0x34
 2353 01bf 00       		.byte	0
 2354 01c0 03       		.uleb128 0x3
 2355 01c1 0E       		.uleb128 0xe
 2356 01c2 3A       		.uleb128 0x3a
 2357 01c3 0B       		.uleb128 0xb
 2358 01c4 3B       		.uleb128 0x3b
 2359 01c5 0B       		.uleb128 0xb
 2360 01c6 49       		.uleb128 0x49
 2361 01c7 13       		.uleb128 0x13
 2362 01c8 3F       		.uleb128 0x3f
 2363 01c9 19       		.uleb128 0x19
 2364 01ca 02       		.uleb128 0x2
 2365 01cb 18       		.uleb128 0x18
 2366 01cc 00       		.byte	0
 2367 01cd 00       		.byte	0
 2368 01ce 22       		.uleb128 0x22
 2369 01cf 2E       		.uleb128 0x2e
 2370 01d0 01       		.byte	0x1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 69


 2371 01d1 3F       		.uleb128 0x3f
 2372 01d2 19       		.uleb128 0x19
 2373 01d3 03       		.uleb128 0x3
 2374 01d4 0E       		.uleb128 0xe
 2375 01d5 3A       		.uleb128 0x3a
 2376 01d6 0B       		.uleb128 0xb
 2377 01d7 3B       		.uleb128 0x3b
 2378 01d8 0B       		.uleb128 0xb
 2379 01d9 27       		.uleb128 0x27
 2380 01da 19       		.uleb128 0x19
 2381 01db 3C       		.uleb128 0x3c
 2382 01dc 19       		.uleb128 0x19
 2383 01dd 01       		.uleb128 0x1
 2384 01de 13       		.uleb128 0x13
 2385 01df 00       		.byte	0
 2386 01e0 00       		.byte	0
 2387 01e1 23       		.uleb128 0x23
 2388 01e2 05       		.uleb128 0x5
 2389 01e3 00       		.byte	0
 2390 01e4 49       		.uleb128 0x49
 2391 01e5 13       		.uleb128 0x13
 2392 01e6 00       		.byte	0
 2393 01e7 00       		.byte	0
 2394 01e8 24       		.uleb128 0x24
 2395 01e9 2E       		.uleb128 0x2e
 2396 01ea 00       		.byte	0
 2397 01eb 3F       		.uleb128 0x3f
 2398 01ec 19       		.uleb128 0x19
 2399 01ed 03       		.uleb128 0x3
 2400 01ee 0E       		.uleb128 0xe
 2401 01ef 3A       		.uleb128 0x3a
 2402 01f0 0B       		.uleb128 0xb
 2403 01f1 3B       		.uleb128 0x3b
 2404 01f2 0B       		.uleb128 0xb
 2405 01f3 27       		.uleb128 0x27
 2406 01f4 19       		.uleb128 0x19
 2407 01f5 3C       		.uleb128 0x3c
 2408 01f6 19       		.uleb128 0x19
 2409 01f7 00       		.byte	0
 2410 01f8 00       		.byte	0
 2411 01f9 25       		.uleb128 0x25
 2412 01fa 2E       		.uleb128 0x2e
 2413 01fb 00       		.byte	0
 2414 01fc 3F       		.uleb128 0x3f
 2415 01fd 19       		.uleb128 0x19
 2416 01fe 03       		.uleb128 0x3
 2417 01ff 0E       		.uleb128 0xe
 2418 0200 3A       		.uleb128 0x3a
 2419 0201 0B       		.uleb128 0xb
 2420 0202 3B       		.uleb128 0x3b
 2421 0203 0B       		.uleb128 0xb
 2422 0204 27       		.uleb128 0x27
 2423 0205 19       		.uleb128 0x19
 2424 0206 49       		.uleb128 0x49
 2425 0207 13       		.uleb128 0x13
 2426 0208 3C       		.uleb128 0x3c
 2427 0209 19       		.uleb128 0x19
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 70


 2428 020a 00       		.byte	0
 2429 020b 00       		.byte	0
 2430 020c 26       		.uleb128 0x26
 2431 020d 2E       		.uleb128 0x2e
 2432 020e 01       		.byte	0x1
 2433 020f 3F       		.uleb128 0x3f
 2434 0210 19       		.uleb128 0x19
 2435 0211 03       		.uleb128 0x3
 2436 0212 0E       		.uleb128 0xe
 2437 0213 3A       		.uleb128 0x3a
 2438 0214 0B       		.uleb128 0xb
 2439 0215 3B       		.uleb128 0x3b
 2440 0216 0B       		.uleb128 0xb
 2441 0217 27       		.uleb128 0x27
 2442 0218 19       		.uleb128 0x19
 2443 0219 3C       		.uleb128 0x3c
 2444 021a 19       		.uleb128 0x19
 2445 021b 00       		.byte	0
 2446 021c 00       		.byte	0
 2447 021d 00       		.byte	0
 2448              		.section	.debug_loc,"",%progbits
 2449              	.Ldebug_loc0:
 2450              	.LLST0:
 2451 0000 00000000 		.4byte	.LVL0
 2452 0004 3D000000 		.4byte	.LVL2-1
 2453 0008 0100     		.2byte	0x1
 2454 000a 50       		.byte	0x50
 2455 000b 3D000000 		.4byte	.LVL2-1
 2456 000f 48000000 		.4byte	.LFE2
 2457 0013 0400     		.2byte	0x4
 2458 0015 F3       		.byte	0xf3
 2459 0016 01       		.uleb128 0x1
 2460 0017 50       		.byte	0x50
 2461 0018 9F       		.byte	0x9f
 2462 0019 00000000 		.4byte	0
 2463 001d 00000000 		.4byte	0
 2464              	.LLST1:
 2465 0021 36000000 		.4byte	.LVL1
 2466 0025 40000000 		.4byte	.LVL3
 2467 0029 0100     		.2byte	0x1
 2468 002b 54       		.byte	0x54
 2469 002c 40000000 		.4byte	.LVL3
 2470 0030 48000000 		.4byte	.LFE2
 2471 0034 0100     		.2byte	0x1
 2472 0036 50       		.byte	0x50
 2473 0037 00000000 		.4byte	0
 2474 003b 00000000 		.4byte	0
 2475              	.LLST2:
 2476 003f 02000000 		.4byte	.LVL4
 2477 0043 14000000 		.4byte	.LVL6
 2478 0047 0200     		.2byte	0x2
 2479 0049 30       		.byte	0x30
 2480 004a 9F       		.byte	0x9f
 2481 004b 14000000 		.4byte	.LVL6
 2482 004f 1C000000 		.4byte	.LFE3
 2483 0053 0100     		.2byte	0x1
 2484 0055 50       		.byte	0x50
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 71


 2485 0056 00000000 		.4byte	0
 2486 005a 00000000 		.4byte	0
 2487              	.LLST3:
 2488 005e 02000000 		.4byte	.LVL7
 2489 0062 16000000 		.4byte	.LVL8
 2490 0066 0300     		.2byte	0x3
 2491 0068 09       		.byte	0x9
 2492 0069 FF       		.byte	0xff
 2493 006a 9F       		.byte	0x9f
 2494 006b 16000000 		.4byte	.LVL8
 2495 006f 1A000000 		.4byte	.LVL9
 2496 0073 0100     		.2byte	0x1
 2497 0075 50       		.byte	0x50
 2498 0076 20000000 		.4byte	.LVL10
 2499 007a 3F000000 		.4byte	.LVL11-1
 2500 007e 0100     		.2byte	0x1
 2501 0080 50       		.byte	0x50
 2502 0081 40000000 		.4byte	.LVL11
 2503 0085 58000000 		.4byte	.LVL13
 2504 0089 0100     		.2byte	0x1
 2505 008b 50       		.byte	0x50
 2506 008c 58000000 		.4byte	.LVL13
 2507 0090 5A000000 		.4byte	.LVL14
 2508 0094 0300     		.2byte	0x3
 2509 0096 09       		.byte	0x9
 2510 0097 FF       		.byte	0xff
 2511 0098 9F       		.byte	0x9f
 2512 0099 5A000000 		.4byte	.LVL14
 2513 009d 64000000 		.4byte	.LFE4
 2514 00a1 0100     		.2byte	0x1
 2515 00a3 50       		.byte	0x50
 2516 00a4 00000000 		.4byte	0
 2517 00a8 00000000 		.4byte	0
 2518              	.LLST4:
 2519 00ac 00000000 		.4byte	.LVL17
 2520 00b0 06000000 		.4byte	.LVL18
 2521 00b4 0100     		.2byte	0x1
 2522 00b6 50       		.byte	0x50
 2523 00b7 06000000 		.4byte	.LVL18
 2524 00bb B8000000 		.4byte	.LFE6
 2525 00bf 0400     		.2byte	0x4
 2526 00c1 F3       		.byte	0xf3
 2527 00c2 01       		.uleb128 0x1
 2528 00c3 50       		.byte	0x50
 2529 00c4 9F       		.byte	0x9f
 2530 00c5 00000000 		.4byte	0
 2531 00c9 00000000 		.4byte	0
 2532              	.LLST5:
 2533 00cd 00000000 		.4byte	.LVL17
 2534 00d1 10000000 		.4byte	.LVL19
 2535 00d5 0100     		.2byte	0x1
 2536 00d7 51       		.byte	0x51
 2537 00d8 10000000 		.4byte	.LVL19
 2538 00dc B8000000 		.4byte	.LFE6
 2539 00e0 0400     		.2byte	0x4
 2540 00e2 F3       		.byte	0xf3
 2541 00e3 01       		.uleb128 0x1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 72


 2542 00e4 51       		.byte	0x51
 2543 00e5 9F       		.byte	0x9f
 2544 00e6 00000000 		.4byte	0
 2545 00ea 00000000 		.4byte	0
 2546              	.LLST6:
 2547 00ee 00000000 		.4byte	.LVL17
 2548 00f2 39000000 		.4byte	.LVL23-1
 2549 00f6 0100     		.2byte	0x1
 2550 00f8 52       		.byte	0x52
 2551 00f9 39000000 		.4byte	.LVL23-1
 2552 00fd 62000000 		.4byte	.LVL29
 2553 0101 0400     		.2byte	0x4
 2554 0103 F3       		.byte	0xf3
 2555 0104 01       		.uleb128 0x1
 2556 0105 52       		.byte	0x52
 2557 0106 9F       		.byte	0x9f
 2558 0107 62000000 		.4byte	.LVL29
 2559 010b 65000000 		.4byte	.LVL30-1
 2560 010f 0100     		.2byte	0x1
 2561 0111 52       		.byte	0x52
 2562 0112 65000000 		.4byte	.LVL30-1
 2563 0116 86000000 		.4byte	.LVL34
 2564 011a 0400     		.2byte	0x4
 2565 011c F3       		.byte	0xf3
 2566 011d 01       		.uleb128 0x1
 2567 011e 52       		.byte	0x52
 2568 011f 9F       		.byte	0x9f
 2569 0120 86000000 		.4byte	.LVL34
 2570 0124 88000000 		.4byte	.LVL35
 2571 0128 0100     		.2byte	0x1
 2572 012a 52       		.byte	0x52
 2573 012b 88000000 		.4byte	.LVL35
 2574 012f 96000000 		.4byte	.LVL37
 2575 0133 0400     		.2byte	0x4
 2576 0135 F3       		.byte	0xf3
 2577 0136 01       		.uleb128 0x1
 2578 0137 52       		.byte	0x52
 2579 0138 9F       		.byte	0x9f
 2580 0139 96000000 		.4byte	.LVL37
 2581 013d 98000000 		.4byte	.LVL38
 2582 0141 0100     		.2byte	0x1
 2583 0143 52       		.byte	0x52
 2584 0144 98000000 		.4byte	.LVL38
 2585 0148 B8000000 		.4byte	.LFE6
 2586 014c 0400     		.2byte	0x4
 2587 014e F3       		.byte	0xf3
 2588 014f 01       		.uleb128 0x1
 2589 0150 52       		.byte	0x52
 2590 0151 9F       		.byte	0x9f
 2591 0152 00000000 		.4byte	0
 2592 0156 00000000 		.4byte	0
 2593              	.LLST7:
 2594 015a 14000000 		.4byte	.LVL20
 2595 015e B0000000 		.4byte	.LVL41
 2596 0162 0100     		.2byte	0x1
 2597 0164 54       		.byte	0x54
 2598 0165 00000000 		.4byte	0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 73


 2599 0169 00000000 		.4byte	0
 2600              	.LLST8:
 2601 016d 3E000000 		.4byte	.LVL24
 2602 0171 4C000000 		.4byte	.LVL27
 2603 0175 0100     		.2byte	0x1
 2604 0177 53       		.byte	0x53
 2605 0178 4C000000 		.4byte	.LVL27
 2606 017c 62000000 		.4byte	.LVL29
 2607 0180 0100     		.2byte	0x1
 2608 0182 55       		.byte	0x55
 2609 0183 6A000000 		.4byte	.LVL31
 2610 0187 75000000 		.4byte	.LVL33-1
 2611 018b 0100     		.2byte	0x1
 2612 018d 53       		.byte	0x53
 2613 018e 00000000 		.4byte	0
 2614 0192 00000000 		.4byte	0
 2615              	.LLST9:
 2616 0196 3A000000 		.4byte	.LVL23
 2617 019a 51000000 		.4byte	.LVL28-1
 2618 019e 0100     		.2byte	0x1
 2619 01a0 50       		.byte	0x50
 2620 01a1 66000000 		.4byte	.LVL30
 2621 01a5 75000000 		.4byte	.LVL33-1
 2622 01a9 0100     		.2byte	0x1
 2623 01ab 50       		.byte	0x50
 2624 01ac 00000000 		.4byte	0
 2625 01b0 00000000 		.4byte	0
 2626              	.LLST10:
 2627 01b4 16000000 		.4byte	.LVL21
 2628 01b8 90000000 		.4byte	.LVL36
 2629 01bc 0600     		.2byte	0x6
 2630 01be 76       		.byte	0x76
 2631 01bf 00       		.sleb128 0
 2632 01c0 08       		.byte	0x8
 2633 01c1 FF       		.byte	0xff
 2634 01c2 1A       		.byte	0x1a
 2635 01c3 9F       		.byte	0x9f
 2636 01c4 96000000 		.4byte	.LVL37
 2637 01c8 A0000000 		.4byte	.LVL39
 2638 01cc 0600     		.2byte	0x6
 2639 01ce 76       		.byte	0x76
 2640 01cf 00       		.sleb128 0
 2641 01d0 08       		.byte	0x8
 2642 01d1 FF       		.byte	0xff
 2643 01d2 1A       		.byte	0x1a
 2644 01d3 9F       		.byte	0x9f
 2645 01d4 00000000 		.4byte	0
 2646 01d8 00000000 		.4byte	0
 2647              	.LLST11:
 2648 01dc 18000000 		.4byte	.LVL22
 2649 01e0 4A000000 		.4byte	.LVL26
 2650 01e4 0600     		.2byte	0x6
 2651 01e6 75       		.byte	0x75
 2652 01e7 00       		.sleb128 0
 2653 01e8 08       		.byte	0x8
 2654 01e9 FF       		.byte	0xff
 2655 01ea 1A       		.byte	0x1a
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 74


 2656 01eb 9F       		.byte	0x9f
 2657 01ec 62000000 		.4byte	.LVL29
 2658 01f0 B0000000 		.4byte	.LVL40
 2659 01f4 0600     		.2byte	0x6
 2660 01f6 75       		.byte	0x75
 2661 01f7 00       		.sleb128 0
 2662 01f8 08       		.byte	0x8
 2663 01f9 FF       		.byte	0xff
 2664 01fa 1A       		.byte	0x1a
 2665 01fb 9F       		.byte	0x9f
 2666 01fc 00000000 		.4byte	0
 2667 0200 00000000 		.4byte	0
 2668              	.LLST12:
 2669 0204 16000000 		.4byte	.LVL43
 2670 0208 29000000 		.4byte	.LVL44-1
 2671 020c 0100     		.2byte	0x1
 2672 020e 50       		.byte	0x50
 2673 020f 29000000 		.4byte	.LVL44-1
 2674 0213 2C000000 		.4byte	.LVL45
 2675 0217 0100     		.2byte	0x1
 2676 0219 54       		.byte	0x54
 2677 021a 2C000000 		.4byte	.LVL45
 2678 021e 46000000 		.4byte	.LVL46
 2679 0222 0100     		.2byte	0x1
 2680 0224 50       		.byte	0x50
 2681 0225 46000000 		.4byte	.LVL46
 2682 0229 4A000000 		.4byte	.LVL47
 2683 022d 0200     		.2byte	0x2
 2684 022f 30       		.byte	0x30
 2685 0230 9F       		.byte	0x9f
 2686 0231 4A000000 		.4byte	.LVL47
 2687 0235 58000000 		.4byte	.LVL48
 2688 0239 0100     		.2byte	0x1
 2689 023b 50       		.byte	0x50
 2690 023c 58000000 		.4byte	.LVL48
 2691 0240 5C000000 		.4byte	.LVL49
 2692 0244 0100     		.2byte	0x1
 2693 0246 54       		.byte	0x54
 2694 0247 00000000 		.4byte	0
 2695 024b 00000000 		.4byte	0
 2696              	.LLST13:
 2697 024f 00000000 		.4byte	.LVL50
 2698 0253 05000000 		.4byte	.LVL51-1
 2699 0257 0100     		.2byte	0x1
 2700 0259 50       		.byte	0x50
 2701 025a 05000000 		.4byte	.LVL51-1
 2702 025e 08000000 		.4byte	.LFE8
 2703 0262 0400     		.2byte	0x4
 2704 0264 F3       		.byte	0xf3
 2705 0265 01       		.uleb128 0x1
 2706 0266 50       		.byte	0x50
 2707 0267 9F       		.byte	0x9f
 2708 0268 00000000 		.4byte	0
 2709 026c 00000000 		.4byte	0
 2710              	.LLST14:
 2711 0270 00000000 		.4byte	.LVL52
 2712 0274 08000000 		.4byte	.LVL53
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 75


 2713 0278 0100     		.2byte	0x1
 2714 027a 50       		.byte	0x50
 2715 027b 08000000 		.4byte	.LVL53
 2716 027f 0A000000 		.4byte	.LVL54
 2717 0283 0300     		.2byte	0x3
 2718 0285 70       		.byte	0x70
 2719 0286 01       		.sleb128 1
 2720 0287 9F       		.byte	0x9f
 2721 0288 0A000000 		.4byte	.LVL54
 2722 028c 30000000 		.4byte	.LFE9
 2723 0290 0400     		.2byte	0x4
 2724 0292 F3       		.byte	0xf3
 2725 0293 01       		.uleb128 0x1
 2726 0294 50       		.byte	0x50
 2727 0295 9F       		.byte	0x9f
 2728 0296 00000000 		.4byte	0
 2729 029a 00000000 		.4byte	0
 2730              	.LLST15:
 2731 029e 00000000 		.4byte	.LVL55
 2732 02a2 0A000000 		.4byte	.LVL59
 2733 02a6 0100     		.2byte	0x1
 2734 02a8 50       		.byte	0x50
 2735 02a9 0A000000 		.4byte	.LVL59
 2736 02ad 0C000000 		.4byte	.LVL60
 2737 02b1 0300     		.2byte	0x3
 2738 02b3 70       		.byte	0x70
 2739 02b4 01       		.sleb128 1
 2740 02b5 9F       		.byte	0x9f
 2741 02b6 0C000000 		.4byte	.LVL60
 2742 02ba 14000000 		.4byte	.LFE10
 2743 02be 0400     		.2byte	0x4
 2744 02c0 F3       		.byte	0xf3
 2745 02c1 01       		.uleb128 0x1
 2746 02c2 50       		.byte	0x50
 2747 02c3 9F       		.byte	0x9f
 2748 02c4 00000000 		.4byte	0
 2749 02c8 00000000 		.4byte	0
 2750              	.LLST16:
 2751 02cc 04000000 		.4byte	.LVL56
 2752 02d0 06000000 		.4byte	.LVL57
 2753 02d4 0100     		.2byte	0x1
 2754 02d6 53       		.byte	0x53
 2755 02d7 08000000 		.4byte	.LVL58
 2756 02db 0C000000 		.4byte	.LVL60
 2757 02df 0100     		.2byte	0x1
 2758 02e1 53       		.byte	0x53
 2759 02e2 0C000000 		.4byte	.LVL60
 2760 02e6 14000000 		.4byte	.LFE10
 2761 02ea 0100     		.2byte	0x1
 2762 02ec 50       		.byte	0x50
 2763 02ed 00000000 		.4byte	0
 2764 02f1 00000000 		.4byte	0
 2765              	.LLST17:
 2766 02f5 00000000 		.4byte	.LVL61
 2767 02f9 06000000 		.4byte	.LVL62
 2768 02fd 0100     		.2byte	0x1
 2769 02ff 50       		.byte	0x50
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 76


 2770 0300 06000000 		.4byte	.LVL62
 2771 0304 10000000 		.4byte	.LVL65
 2772 0308 0100     		.2byte	0x1
 2773 030a 54       		.byte	0x54
 2774 030b 10000000 		.4byte	.LVL65
 2775 030f 12000000 		.4byte	.LFE11
 2776 0313 0400     		.2byte	0x4
 2777 0315 F3       		.byte	0xf3
 2778 0316 01       		.uleb128 0x1
 2779 0317 50       		.byte	0x50
 2780 0318 9F       		.byte	0x9f
 2781 0319 00000000 		.4byte	0
 2782 031d 00000000 		.4byte	0
 2783              	.LLST18:
 2784 0321 00000000 		.4byte	.LVL61
 2785 0325 09000000 		.4byte	.LVL63-1
 2786 0329 0100     		.2byte	0x1
 2787 032b 51       		.byte	0x51
 2788 032c 09000000 		.4byte	.LVL63-1
 2789 0330 12000000 		.4byte	.LFE11
 2790 0334 0400     		.2byte	0x4
 2791 0336 F3       		.byte	0xf3
 2792 0337 01       		.uleb128 0x1
 2793 0338 51       		.byte	0x51
 2794 0339 9F       		.byte	0x9f
 2795 033a 00000000 		.4byte	0
 2796 033e 00000000 		.4byte	0
 2797              	.LLST19:
 2798 0342 00000000 		.4byte	.LVL66
 2799 0346 0B000000 		.4byte	.LVL68-1
 2800 034a 0100     		.2byte	0x1
 2801 034c 50       		.byte	0x50
 2802 034d 0B000000 		.4byte	.LVL68-1
 2803 0351 10000000 		.4byte	.LVL69
 2804 0355 0400     		.2byte	0x4
 2805 0357 F3       		.byte	0xf3
 2806 0358 01       		.uleb128 0x1
 2807 0359 50       		.byte	0x50
 2808 035a 9F       		.byte	0x9f
 2809 035b 10000000 		.4byte	.LVL69
 2810 035f 12000000 		.4byte	.LVL70
 2811 0363 0100     		.2byte	0x1
 2812 0365 50       		.byte	0x50
 2813 0366 12000000 		.4byte	.LVL70
 2814 036a 14000000 		.4byte	.LFE12
 2815 036e 0400     		.2byte	0x4
 2816 0370 F3       		.byte	0xf3
 2817 0371 01       		.uleb128 0x1
 2818 0372 50       		.byte	0x50
 2819 0373 9F       		.byte	0x9f
 2820 0374 00000000 		.4byte	0
 2821 0378 00000000 		.4byte	0
 2822              	.LLST20:
 2823 037c 02000000 		.4byte	.LVL67
 2824 0380 12000000 		.4byte	.LVL70
 2825 0384 0200     		.2byte	0x2
 2826 0386 30       		.byte	0x30
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 77


 2827 0387 9F       		.byte	0x9f
 2828 0388 12000000 		.4byte	.LVL70
 2829 038c 14000000 		.4byte	.LFE12
 2830 0390 0100     		.2byte	0x1
 2831 0392 50       		.byte	0x50
 2832 0393 00000000 		.4byte	0
 2833 0397 00000000 		.4byte	0
 2834              	.LLST21:
 2835 039b 02000000 		.4byte	.LVL71
 2836 039f 08000000 		.4byte	.LVL72
 2837 03a3 0200     		.2byte	0x2
 2838 03a5 30       		.byte	0x30
 2839 03a6 9F       		.byte	0x9f
 2840 03a7 08000000 		.4byte	.LVL72
 2841 03ab 18000000 		.4byte	.LVL77
 2842 03af 0100     		.2byte	0x1
 2843 03b1 55       		.byte	0x55
 2844 03b2 18000000 		.4byte	.LVL77
 2845 03b6 1A000000 		.4byte	.LFE13
 2846 03ba 0100     		.2byte	0x1
 2847 03bc 50       		.byte	0x50
 2848 03bd 00000000 		.4byte	0
 2849 03c1 00000000 		.4byte	0
 2850              	.LLST22:
 2851 03c5 02000000 		.4byte	.LVL71
 2852 03c9 08000000 		.4byte	.LVL72
 2853 03cd 0200     		.2byte	0x2
 2854 03cf 30       		.byte	0x30
 2855 03d0 9F       		.byte	0x9f
 2856 03d1 08000000 		.4byte	.LVL72
 2857 03d5 18000000 		.4byte	.LVL76
 2858 03d9 0100     		.2byte	0x1
 2859 03db 54       		.byte	0x54
 2860 03dc 00000000 		.4byte	0
 2861 03e0 00000000 		.4byte	0
 2862              		.section	.debug_aranges,"",%progbits
 2863 0000 7C000000 		.4byte	0x7c
 2864 0004 0200     		.2byte	0x2
 2865 0006 00000000 		.4byte	.Ldebug_info0
 2866 000a 04       		.byte	0x4
 2867 000b 00       		.byte	0
 2868 000c 0000     		.2byte	0
 2869 000e 0000     		.2byte	0
 2870 0010 00000000 		.4byte	.LFB1
 2871 0014 10000000 		.4byte	.LFE1-.LFB1
 2872 0018 00000000 		.4byte	.LFB2
 2873 001c 48000000 		.4byte	.LFE2-.LFB2
 2874 0020 00000000 		.4byte	.LFB3
 2875 0024 1C000000 		.4byte	.LFE3-.LFB3
 2876 0028 00000000 		.4byte	.LFB4
 2877 002c 64000000 		.4byte	.LFE4-.LFB4
 2878 0030 00000000 		.4byte	.LFB5
 2879 0034 0A000000 		.4byte	.LFE5-.LFB5
 2880 0038 00000000 		.4byte	.LFB6
 2881 003c B8000000 		.4byte	.LFE6-.LFB6
 2882 0040 00000000 		.4byte	.LFB7
 2883 0044 68000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 78


 2884 0048 00000000 		.4byte	.LFB8
 2885 004c 08000000 		.4byte	.LFE8-.LFB8
 2886 0050 00000000 		.4byte	.LFB9
 2887 0054 30000000 		.4byte	.LFE9-.LFB9
 2888 0058 00000000 		.4byte	.LFB10
 2889 005c 14000000 		.4byte	.LFE10-.LFB10
 2890 0060 00000000 		.4byte	.LFB11
 2891 0064 12000000 		.4byte	.LFE11-.LFB11
 2892 0068 00000000 		.4byte	.LFB12
 2893 006c 14000000 		.4byte	.LFE12-.LFB12
 2894 0070 00000000 		.4byte	.LFB13
 2895 0074 1A000000 		.4byte	.LFE13-.LFB13
 2896 0078 00000000 		.4byte	0
 2897 007c 00000000 		.4byte	0
 2898              		.section	.debug_ranges,"",%progbits
 2899              	.Ldebug_ranges0:
 2900 0000 00000000 		.4byte	.LFB1
 2901 0004 10000000 		.4byte	.LFE1
 2902 0008 00000000 		.4byte	.LFB2
 2903 000c 48000000 		.4byte	.LFE2
 2904 0010 00000000 		.4byte	.LFB3
 2905 0014 1C000000 		.4byte	.LFE3
 2906 0018 00000000 		.4byte	.LFB4
 2907 001c 64000000 		.4byte	.LFE4
 2908 0020 00000000 		.4byte	.LFB5
 2909 0024 0A000000 		.4byte	.LFE5
 2910 0028 00000000 		.4byte	.LFB6
 2911 002c B8000000 		.4byte	.LFE6
 2912 0030 00000000 		.4byte	.LFB7
 2913 0034 68000000 		.4byte	.LFE7
 2914 0038 00000000 		.4byte	.LFB8
 2915 003c 08000000 		.4byte	.LFE8
 2916 0040 00000000 		.4byte	.LFB9
 2917 0044 30000000 		.4byte	.LFE9
 2918 0048 00000000 		.4byte	.LFB10
 2919 004c 14000000 		.4byte	.LFE10
 2920 0050 00000000 		.4byte	.LFB11
 2921 0054 12000000 		.4byte	.LFE11
 2922 0058 00000000 		.4byte	.LFB12
 2923 005c 14000000 		.4byte	.LFE12
 2924 0060 00000000 		.4byte	.LFB13
 2925 0064 1A000000 		.4byte	.LFE13
 2926 0068 00000000 		.4byte	0
 2927 006c 00000000 		.4byte	0
 2928              		.section	.debug_line,"",%progbits
 2929              	.Ldebug_line0:
 2930 0000 7E020000 		.section	.debug_str,"MS",%progbits,1
 2930      0200D300 
 2930      00000201 
 2930      FB0E0D00 
 2930      01010101 
 2931              	.LASF51:
 2932 0000 6D6F6443 		.ascii	"modCsxClk\000"
 2932      7378436C 
 2932      6B00
 2933              	.LASF10:
 2934 000a 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 79


 2934      313600
 2935              	.LASF122:
 2936 0011 43794578 		.ascii	"CyExitCriticalSection\000"
 2936      69744372 
 2936      69746963 
 2936      616C5365 
 2936      6374696F 
 2937              	.LASF129:
 2938 0027 43617053 		.ascii	"CapSense_CSXCalibrateWidget\000"
 2938      656E7365 
 2938      5F435358 
 2938      43616C69 
 2938      62726174 
 2939              	.LASF79:
 2940 0043 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 2940      656E7365 
 2940      5F464C41 
 2940      53485F57 
 2940      445F5354 
 2941              	.LASF106:
 2942 005c 43617053 		.ascii	"CapSense_ConfigureClocks\000"
 2942      656E7365 
 2942      5F436F6E 
 2942      66696775 
 2942      7265436C 
 2943              	.LASF113:
 2944 0075 43617053 		.ascii	"CapSense_widgetIndex\000"
 2944      656E7365 
 2944      5F776964 
 2944      67657449 
 2944      6E646578 
 2945              	.LASF90:
 2946 008a 736E7349 		.ascii	"snsIndex\000"
 2946      6E646578 
 2946      00
 2947              	.LASF99:
 2948 0093 706F7374 		.ascii	"postScanStatus\000"
 2948      5363616E 
 2948      53746174 
 2948      757300
 2949              	.LASF40:
 2950 00a2 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 2950      656E7365 
 2950      5F52414D 
 2950      5F534E53 
 2950      5F535452 
 2951              	.LASF7:
 2952 00ba 6C6F6E67 		.ascii	"long long unsigned int\000"
 2952      206C6F6E 
 2952      6720756E 
 2952      7369676E 
 2952      65642069 
 2953              	.LASF69:
 2954 00d1 70747232 		.ascii	"ptr2SnsFlash\000"
 2954      536E7346 
 2954      6C617368 
 2954      00
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 80


 2955              	.LASF86:
 2956 00de 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 2956      656E7365 
 2956      5F536361 
 2956      6E416C6C 
 2956      57696467 
 2957              	.LASF38:
 2958 00f6 64696666 		.ascii	"diff\000"
 2958      00
 2959              	.LASF20:
 2960 00fb 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 2960      656E7365 
 2960      5F4C4F57 
 2960      5F42534C 
 2960      4E5F5253 
 2961              	.LASF121:
 2962 0116 43617053 		.ascii	"CapSense_CSXSetupWidget\000"
 2962      656E7365 
 2962      5F435358 
 2962      53657475 
 2962      70576964 
 2963              	.LASF59:
 2964 012e 6873696F 		.ascii	"hsiomPtr\000"
 2964      6D507472 
 2964      00
 2965              	.LASF55:
 2966 0137 736E7254 		.ascii	"snrTestSensorId\000"
 2966      65737453 
 2966      656E736F 
 2966      72496400 
 2967              	.LASF111:
 2968 0147 43617053 		.ascii	"CapSense_dsFlash\000"
 2968      656E7365 
 2968      5F647346 
 2968      6C617368 
 2968      00
 2969              	.LASF19:
 2970 0158 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 2970      656E7365 
 2970      5F544852 
 2970      4553484F 
 2970      4C445F54 
 2971              	.LASF91:
 2972 0170 73746174 		.ascii	"state\000"
 2972      6500
 2973              	.LASF112:
 2974 0176 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 2974      656E7365 
 2974      5F736361 
 2974      6E467265 
 2974      71496E64 
 2975              	.LASF6:
 2976 018d 6C6F6E67 		.ascii	"long long int\000"
 2976      206C6F6E 
 2976      6720696E 
 2976      7400
 2977              	.LASF0:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 81


 2978 019b 7369676E 		.ascii	"signed char\000"
 2978      65642063 
 2978      68617200 
 2979              	.LASF97:
 2980 01a7 43617053 		.ascii	"CapSense_SetPinState\000"
 2980      656E7365 
 2980      5F536574 
 2980      50696E53 
 2980      74617465 
 2981              	.LASF104:
 2982 01bc 43617053 		.ascii	"CapSense_ConfigureSnsClock\000"
 2982      656E7365 
 2982      5F436F6E 
 2982      66696775 
 2982      7265536E 
 2983              	.LASF105:
 2984 01d7 6E657752 		.ascii	"newRegValue\000"
 2984      65675661 
 2984      6C756500 
 2985              	.LASF31:
 2986 01e3 62757474 		.ascii	"button0\000"
 2986      6F6E3000 
 2987              	.LASF32:
 2988 01eb 62757474 		.ascii	"button1\000"
 2988      6F6E3100 
 2989              	.LASF33:
 2990 01f3 62757474 		.ascii	"button2\000"
 2990      6F6E3200 
 2991              	.LASF49:
 2992 01fb 736E7353 		.ascii	"snsStatus\000"
 2992      74617475 
 2992      7300
 2993              	.LASF4:
 2994 0205 6C6F6E67 		.ascii	"long int\000"
 2994      20696E74 
 2994      00
 2995              	.LASF71:
 2996 020e 70747232 		.ascii	"ptr2SnsRam\000"
 2996      536E7352 
 2996      616D00
 2997              	.LASF62:
 2998 0219 70735074 		.ascii	"psPtr\000"
 2998      7200
 2999              	.LASF9:
 3000 021f 75696E74 		.ascii	"uint8\000"
 3000      3800
 3001              	.LASF84:
 3002 0225 77696467 		.ascii	"widgetStatus\000"
 3002      65745374 
 3002      61747573 
 3002      00
 3003              	.LASF13:
 3004 0232 646F7562 		.ascii	"double\000"
 3004      6C6500
 3005              	.LASF57:
 3006 0239 736E7254 		.ascii	"snrTestRawCount\000"
 3006      65737452 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 82


 3006      6177436F 
 3006      756E7400 
 3007              	.LASF96:
 3008 0249 70696E4D 		.ascii	"pinModeShift\000"
 3008      6F646553 
 3008      68696674 
 3008      00
 3009              	.LASF67:
 3010 0256 73686966 		.ascii	"shift\000"
 3010      7400
 3011              	.LASF116:
 3012 025c 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 3012      656E7365 
 3012      5F726571 
 3012      75657374 
 3012      5363616E 
 3013              	.LASF66:
 3014 027a 64725368 		.ascii	"drShift\000"
 3014      69667400 
 3015              	.LASF11:
 3016 0282 75696E74 		.ascii	"uint32\000"
 3016      333200
 3017              	.LASF25:
 3018 0289 68797374 		.ascii	"hysteresis\000"
 3018      65726573 
 3018      697300
 3019              	.LASF64:
 3020 0294 6D61736B 		.ascii	"mask\000"
 3020      00
 3021              	.LASF36:
 3022 0299 62736C6E 		.ascii	"bslnExt\000"
 3022      45787400 
 3023              	.LASF123:
 3024 02a1 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 3024      656E7365 
 3024      5F495352 
 3024      5F537461 
 3024      72744578 
 3025              	.LASF78:
 3026 02b6 6E756D52 		.ascii	"numRows\000"
 3026      6F777300 
 3027              	.LASF48:
 3028 02be 77646774 		.ascii	"wdgtStatus\000"
 3028      53746174 
 3028      757300
 3029              	.LASF114:
 3030 02c9 43617053 		.ascii	"CapSense_sensorIndex\000"
 3030      656E7365 
 3030      5F73656E 
 3030      736F7249 
 3030      6E646578 
 3031              	.LASF35:
 3032 02de 62736C6E 		.ascii	"bsln\000"
 3032      00
 3033              	.LASF8:
 3034 02e3 756E7369 		.ascii	"unsigned int\000"
 3034      676E6564 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 83


 3034      20696E74 
 3034      00
 3035              	.LASF54:
 3036 02f0 736E7254 		.ascii	"snrTestWidgetId\000"
 3036      65737457 
 3036      69646765 
 3036      74496400 
 3037              	.LASF5:
 3038 0300 6C6F6E67 		.ascii	"long unsigned int\000"
 3038      20756E73 
 3038      69676E65 
 3038      6420696E 
 3038      7400
 3039              	.LASF47:
 3040 0312 77646774 		.ascii	"wdgtEnable\000"
 3040      456E6162 
 3040      6C6500
 3041              	.LASF94:
 3042 031d 696E7465 		.ascii	"interruptState\000"
 3042      72727570 
 3042      74537461 
 3042      746500
 3043              	.LASF128:
 3044 032c 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3044      74657243 
 3044      72697469 
 3044      63616C53 
 3044      65637469 
 3045              	.LASF27:
 3046 0343 6C6F7742 		.ascii	"lowBslnRst\000"
 3046      736C6E52 
 3046      737400
 3047              	.LASF3:
 3048 034e 73686F72 		.ascii	"short unsigned int\000"
 3048      7420756E 
 3048      7369676E 
 3048      65642069 
 3048      6E7400
 3049              	.LASF98:
 3050 0361 43617053 		.ascii	"CapSense_PostAllWidgetsScan\000"
 3050      656E7365 
 3050      5F506F73 
 3050      74416C6C 
 3050      57696467 
 3051              	.LASF53:
 3052 037d 736E734C 		.ascii	"snsList\000"
 3052      69737400 
 3053              	.LASF89:
 3054 0385 77646774 		.ascii	"wdgtIndex\000"
 3054      496E6465 
 3054      7800
 3055              	.LASF42:
 3056 038f 636F6E66 		.ascii	"configId\000"
 3056      69674964 
 3056      00
 3057              	.LASF50:
 3058 0398 63736430 		.ascii	"csd0Config\000"
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 84


 3058      436F6E66 
 3058      696700
 3059              	.LASF70:
 3060 03a3 70747232 		.ascii	"ptr2WdgtRam\000"
 3060      57646774 
 3060      52616D00 
 3061              	.LASF43:
 3062 03af 64657669 		.ascii	"deviceId\000"
 3062      63654964 
 3062      00
 3063              	.LASF30:
 3064 03b8 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 3064      656E7365 
 3064      5F52414D 
 3064      5F57445F 
 3064      42555454 
 3065              	.LASF103:
 3066 03d6 6D6F6443 		.ascii	"modClk\000"
 3066      6C6B00
 3067              	.LASF107:
 3068 03dd 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 3068      656E7365 
 3068      5F43616C 
 3068      69627261 
 3068      74655769 
 3069              	.LASF119:
 3070 03f6 43617053 		.ascii	"CapSense_CSXScan\000"
 3070      656E7365 
 3070      5F435358 
 3070      5363616E 
 3070      00
 3071              	.LASF16:
 3072 0407 72656733 		.ascii	"reg32\000"
 3072      3200
 3073              	.LASF118:
 3074 040d 43617053 		.ascii	"CapSense_curFlashWdgtPtr\000"
 3074      656E7365 
 3074      5F637572 
 3074      466C6173 
 3074      68576467 
 3075              	.LASF77:
 3076 0426 6E756D43 		.ascii	"numCols\000"
 3076      6F6C7300 
 3077              	.LASF18:
 3078 042e 73697A65 		.ascii	"sizetype\000"
 3078      74797065 
 3078      00
 3079              	.LASF101:
 3080 0437 61646472 		.ascii	"address\000"
 3080      65737300 
 3081              	.LASF74:
 3082 043f 73746174 		.ascii	"staticConfig\000"
 3082      6963436F 
 3082      6E666967 
 3082      00
 3083              	.LASF24:
 3084 044c 6E4E6F69 		.ascii	"nNoiseTh\000"
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 85


 3084      73655468 
 3084      00
 3085              	.LASF76:
 3086 0455 77646774 		.ascii	"wdgtType\000"
 3086      54797065 
 3086      00
 3087              	.LASF45:
 3088 045e 7363616E 		.ascii	"scanCounter\000"
 3088      436F756E 
 3088      74657200 
 3089              	.LASF100:
 3090 046a 43617053 		.ascii	"CapSense_IsrInitialize\000"
 3090      656E7365 
 3090      5F497372 
 3090      496E6974 
 3090      69616C69 
 3091              	.LASF85:
 3092 0481 7363616E 		.ascii	"scanStatus\000"
 3092      53746174 
 3092      757300
 3093              	.LASF110:
 3094 048c 43617053 		.ascii	"CapSense_dsRam\000"
 3094      656E7365 
 3094      5F647352 
 3094      616D00
 3095              	.LASF44:
 3096 049b 74756E65 		.ascii	"tunerCmd\000"
 3096      72436D64 
 3096      00
 3097              	.LASF12:
 3098 04a4 666C6F61 		.ascii	"float\000"
 3098      7400
 3099              	.LASF28:
 3100 04aa 62736C6E 		.ascii	"bslnCoeff\000"
 3100      436F6566 
 3100      6600
 3101              	.LASF41:
 3102 04b4 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 3102      656E7365 
 3102      5F52414D 
 3102      5F534E53 
 3102      5F4C4953 
 3103              	.LASF58:
 3104 04d1 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 3104      656E7365 
 3104      5F52414D 
 3104      5F535452 
 3104      55435400 
 3105              	.LASF102:
 3106 04e5 43617053 		.ascii	"CapSense_ConfigureModClkClock\000"
 3106      656E7365 
 3106      5F436F6E 
 3106      66696775 
 3106      72654D6F 
 3107              	.LASF1:
 3108 0503 756E7369 		.ascii	"unsigned char\000"
 3108      676E6564 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 86


 3108      20636861 
 3108      7200
 3109              	.LASF95:
 3110 0511 70696E48 		.ascii	"pinHSIOMShift\000"
 3110      53494F4D 
 3110      53686966 
 3110      7400
 3111              	.LASF2:
 3112 051f 73686F72 		.ascii	"short int\000"
 3112      7420696E 
 3112      7400
 3113              	.LASF88:
 3114 0529 696E6974 		.ascii	"initStatus\000"
 3114      53746174 
 3114      757300
 3115              	.LASF72:
 3116 0534 70747232 		.ascii	"ptr2FltrHistory\000"
 3116      466C7472 
 3116      48697374 
 3116      6F727900 
 3117              	.LASF108:
 3118 0544 63616C69 		.ascii	"calibrateStatus\000"
 3118      62726174 
 3118      65537461 
 3118      74757300 
 3119              	.LASF65:
 3120 0554 6873696F 		.ascii	"hsiomShift\000"
 3120      6D536869 
 3120      667400
 3121              	.LASF82:
 3122 055f 43617053 		.ascii	"CapSense_SetupWidget\000"
 3122      656E7365 
 3122      5F536574 
 3122      75705769 
 3122      64676574 
 3123              	.LASF21:
 3124 0574 7265736F 		.ascii	"resolution\000"
 3124      6C757469 
 3124      6F6E00
 3125              	.LASF52:
 3126 057f 77646774 		.ascii	"wdgtList\000"
 3126      4C697374 
 3126      00
 3127              	.LASF117:
 3128 0588 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 3128      656E7365 
 3128      5F637572 
 3128      52616D53 
 3128      6E735074 
 3129              	.LASF83:
 3130 059e 43617053 		.ascii	"CapSense_Scan\000"
 3130      656E7365 
 3130      5F536361 
 3130      6E00
 3131              	.LASF14:
 3132 05ac 63686172 		.ascii	"char\000"
 3132      00
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 87


 3133              	.LASF17:
 3134 05b1 63796973 		.ascii	"cyisraddress\000"
 3134      72616464 
 3134      72657373 
 3134      00
 3135              	.LASF61:
 3136 05be 64725074 		.ascii	"drPtr\000"
 3136      7200
 3137              	.LASF29:
 3138 05c4 736E7343 		.ascii	"snsClk\000"
 3138      6C6B00
 3139              	.LASF115:
 3140 05cb 43617053 		.ascii	"CapSense_curWidgetResolution\000"
 3140      656E7365 
 3140      5F637572 
 3140      57696467 
 3140      65745265 
 3141              	.LASF26:
 3142 05e8 6F6E4465 		.ascii	"onDebounce\000"
 3142      626F756E 
 3142      636500
 3143              	.LASF37:
 3144 05f3 69646163 		.ascii	"idacComp\000"
 3144      436F6D70 
 3144      00
 3145              	.LASF39:
 3146 05fc 6E656742 		.ascii	"negBslnRstCnt\000"
 3146      736C6E52 
 3146      7374436E 
 3146      7400
 3147              	.LASF75:
 3148 060a 746F7461 		.ascii	"totalNumSns\000"
 3148      6C4E756D 
 3148      536E7300 
 3149              	.LASF126:
 3150 0616 5C5C766D 		.ascii	"\\\\vmware-host\\Shared Folders\\Documents\\PSoC Cr"
 3150      77617265 
 3150      2D686F73 
 3150      745C5368 
 3150      61726564 
 3151 0644 6561746F 		.ascii	"eator\\SmartIO\\SmartIOCountUpExtClock.cydsn\000"
 3151      725C536D 
 3151      61727449 
 3151      4F5C536D 
 3151      61727449 
 3152              	.LASF73:
 3153 066f 70747232 		.ascii	"ptr2DebounceArr\000"
 3153      4465626F 
 3153      756E6365 
 3153      41727200 
 3154              	.LASF81:
 3155 067f 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 3155      656E7365 
 3155      5F464C41 
 3155      53485F53 
 3155      54525543 
 3156              	.LASF68:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 88


 3157 0695 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 3157      656E7365 
 3157      5F464C41 
 3157      53485F49 
 3157      4F5F5354 
 3158              	.LASF109:
 3159 06ae 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 3159      656E7365 
 3159      5F43616C 
 3159      69627261 
 3159      7465416C 
 3160              	.LASF46:
 3161 06cb 73746174 		.ascii	"status\000"
 3161      757300
 3162              	.LASF80:
 3163 06d2 77646774 		.ascii	"wdgtArray\000"
 3163      41727261 
 3163      7900
 3164              	.LASF92:
 3165 06dc 63757253 		.ascii	"curSnsIOPtr\000"
 3165      6E73494F 
 3165      50747200 
 3166              	.LASF93:
 3167 06e8 6E657752 		.ascii	"newRegisterValue\000"
 3167      65676973 
 3167      74657256 
 3167      616C7565 
 3167      00
 3168              	.LASF15:
 3169 06f9 63797374 		.ascii	"cystatus\000"
 3169      61747573 
 3169      00
 3170              	.LASF125:
 3171 0702 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 3171      6E657261 
 3171      7465645F 
 3171      536F7572 
 3171      63655C50 
 3172              	.LASF22:
 3173 072e 66696E67 		.ascii	"fingerTh\000"
 3173      65725468 
 3173      00
 3174              	.LASF87:
 3175 0737 43617053 		.ascii	"CapSense_SsInitialize\000"
 3175      656E7365 
 3175      5F537349 
 3175      6E697469 
 3175      616C697A 
 3176              	.LASF120:
 3177 074d 43617053 		.ascii	"CapSense_CSXInitialize\000"
 3177      656E7365 
 3177      5F435358 
 3177      496E6974 
 3177      69616C69 
 3178              	.LASF60:
 3179 0764 70635074 		.ascii	"pcPtr\000"
 3179      7200
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccvIRKlS.s 			page 89


 3180              	.LASF34:
 3181 076a 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 3181      656E7365 
 3181      5F52414D 
 3181      5F57445F 
 3181      4C495354 
 3182              	.LASF56:
 3183 0786 736E7254 		.ascii	"snrTestScanCounter\000"
 3183      65737453 
 3183      63616E43 
 3183      6F756E74 
 3183      657200
 3184              	.LASF63:
 3185 0799 6873696F 		.ascii	"hsiomMask\000"
 3185      6D4D6173 
 3185      6B00
 3186              	.LASF124:
 3187 07a3 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3187      4320342E 
 3187      392E3320 
 3187      32303135 
 3187      30333033 
 3188 07d6 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 3188      20726576 
 3188      6973696F 
 3188      6E203232 
 3188      31323230 
 3189 0809 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 3189      67202D66 
 3189      66756E63 
 3189      74696F6E 
 3189      2D736563 
 3190              	.LASF127:
 3191 0835 43617053 		.ascii	"CapSense_IsBusy\000"
 3191      656E7365 
 3191      5F497342 
 3191      75737900 
 3192              	.LASF23:
 3193 0845 6E6F6973 		.ascii	"noiseTh\000"
 3193      65546800 
 3194              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
