ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"uart_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.uart_UartInit,"ax",%progbits
  18              		.align	2
  19              		.global	uart_UartInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	uart_UartInit, %function
  23              	uart_UartInit:
  24              	.LFB2:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\uart_UART.c"
   1:.\Generated_Source\PSoC4/uart_UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/uart_UART.c **** * File Name: uart_UART.c
   3:.\Generated_Source\PSoC4/uart_UART.c **** * Version 3.20
   4:.\Generated_Source\PSoC4/uart_UART.c **** *
   5:.\Generated_Source\PSoC4/uart_UART.c **** * Description:
   6:.\Generated_Source\PSoC4/uart_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:.\Generated_Source\PSoC4/uart_UART.c **** *  UART mode.
   8:.\Generated_Source\PSoC4/uart_UART.c **** *
   9:.\Generated_Source\PSoC4/uart_UART.c **** * Note:
  10:.\Generated_Source\PSoC4/uart_UART.c **** *
  11:.\Generated_Source\PSoC4/uart_UART.c **** *******************************************************************************
  12:.\Generated_Source\PSoC4/uart_UART.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/uart_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/uart_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/uart_UART.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/uart_UART.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/uart_UART.c **** 
  18:.\Generated_Source\PSoC4/uart_UART.c **** #include "uart_PVT.h"
  19:.\Generated_Source\PSoC4/uart_UART.c **** #include "uart_SPI_UART_PVT.h"
  20:.\Generated_Source\PSoC4/uart_UART.c **** #include "cyapicallbacks.h"
  21:.\Generated_Source\PSoC4/uart_UART.c **** 
  22:.\Generated_Source\PSoC4/uart_UART.c **** #if(uart_SCB_MODE_UNCONFIG_CONST_CFG)
  23:.\Generated_Source\PSoC4/uart_UART.c **** 
  24:.\Generated_Source\PSoC4/uart_UART.c ****     /***************************************
  25:.\Generated_Source\PSoC4/uart_UART.c ****     *  Configuration Structure Initialization
  26:.\Generated_Source\PSoC4/uart_UART.c ****     ***************************************/
  27:.\Generated_Source\PSoC4/uart_UART.c **** 
  28:.\Generated_Source\PSoC4/uart_UART.c ****     const uart_UART_INIT_STRUCT uart_configUart =
  29:.\Generated_Source\PSoC4/uart_UART.c ****     {
  30:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_SUB_MODE,
  31:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_DIRECTION,
  32:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_DATA_BITS_NUM,
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 2


  33:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_PARITY_TYPE,
  34:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_STOP_BITS_NUM,
  35:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_OVS_FACTOR,
  36:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_IRDA_LOW_POWER,
  37:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_MEDIAN_FILTER_ENABLE,
  38:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_RETRY_ON_NACK,
  39:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_IRDA_POLARITY,
  40:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_DROP_ON_PARITY_ERR,
  41:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_DROP_ON_FRAME_ERR,
  42:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_WAKE_ENABLE,
  43:.\Generated_Source\PSoC4/uart_UART.c ****         0u,
  44:.\Generated_Source\PSoC4/uart_UART.c ****         NULL,
  45:.\Generated_Source\PSoC4/uart_UART.c ****         0u,
  46:.\Generated_Source\PSoC4/uart_UART.c ****         NULL,
  47:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_MP_MODE_ENABLE,
  48:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_MP_ACCEPT_ADDRESS,
  49:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_MP_RX_ADDRESS,
  50:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_MP_RX_ADDRESS_MASK,
  51:.\Generated_Source\PSoC4/uart_UART.c ****         (uint32) uart_SCB_IRQ_INTERNAL,
  52:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_INTR_RX_MASK,
  53:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_RX_TRIGGER_LEVEL,
  54:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_INTR_TX_MASK,
  55:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_TX_TRIGGER_LEVEL,
  56:.\Generated_Source\PSoC4/uart_UART.c ****         (uint8) uart_UART_BYTE_MODE_ENABLE,
  57:.\Generated_Source\PSoC4/uart_UART.c ****         (uint8) uart_UART_CTS_ENABLE,
  58:.\Generated_Source\PSoC4/uart_UART.c ****         (uint8) uart_UART_CTS_POLARITY,
  59:.\Generated_Source\PSoC4/uart_UART.c ****         (uint8) uart_UART_RTS_POLARITY,
  60:.\Generated_Source\PSoC4/uart_UART.c ****         (uint8) uart_UART_RTS_FIFO_LEVEL
  61:.\Generated_Source\PSoC4/uart_UART.c ****     };
  62:.\Generated_Source\PSoC4/uart_UART.c **** 
  63:.\Generated_Source\PSoC4/uart_UART.c **** 
  64:.\Generated_Source\PSoC4/uart_UART.c ****     /*******************************************************************************
  65:.\Generated_Source\PSoC4/uart_UART.c ****     * Function Name: uart_UartInit
  66:.\Generated_Source\PSoC4/uart_UART.c ****     ********************************************************************************
  67:.\Generated_Source\PSoC4/uart_UART.c ****     *
  68:.\Generated_Source\PSoC4/uart_UART.c ****     * Summary:
  69:.\Generated_Source\PSoC4/uart_UART.c ****     *  Configures the SCB for the UART operation.
  70:.\Generated_Source\PSoC4/uart_UART.c ****     *
  71:.\Generated_Source\PSoC4/uart_UART.c ****     * Parameters:
  72:.\Generated_Source\PSoC4/uart_UART.c ****     *  config:  Pointer to a structure that contains the following ordered list of
  73:.\Generated_Source\PSoC4/uart_UART.c ****     *           fields. These fields match the selections available in the
  74:.\Generated_Source\PSoC4/uart_UART.c ****     *           customizer.
  75:.\Generated_Source\PSoC4/uart_UART.c ****     *
  76:.\Generated_Source\PSoC4/uart_UART.c ****     * Return:
  77:.\Generated_Source\PSoC4/uart_UART.c ****     *  None
  78:.\Generated_Source\PSoC4/uart_UART.c ****     *
  79:.\Generated_Source\PSoC4/uart_UART.c ****     *******************************************************************************/
  80:.\Generated_Source\PSoC4/uart_UART.c ****     void uart_UartInit(const uart_UART_INIT_STRUCT *config)
  81:.\Generated_Source\PSoC4/uart_UART.c ****     {
  82:.\Generated_Source\PSoC4/uart_UART.c ****         uint32 pinsConfig;
  83:.\Generated_Source\PSoC4/uart_UART.c **** 
  84:.\Generated_Source\PSoC4/uart_UART.c ****         if (NULL == config)
  85:.\Generated_Source\PSoC4/uart_UART.c ****         {
  86:.\Generated_Source\PSoC4/uart_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
  87:.\Generated_Source\PSoC4/uart_UART.c ****         }
  88:.\Generated_Source\PSoC4/uart_UART.c ****         else
  89:.\Generated_Source\PSoC4/uart_UART.c ****         {
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 3


  90:.\Generated_Source\PSoC4/uart_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
  91:.\Generated_Source\PSoC4/uart_UART.c ****             pinsConfig  = config->direction;
  92:.\Generated_Source\PSoC4/uart_UART.c **** 
  93:.\Generated_Source\PSoC4/uart_UART.c ****         #if !(uart_CY_SCBIP_V0 || uart_CY_SCBIP_V1)
  94:.\Generated_Source\PSoC4/uart_UART.c ****             /* Add RTS and CTS pins to configure */
  95:.\Generated_Source\PSoC4/uart_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (uart_UART_RTS_PIN_ENABLE) : (0u);
  96:.\Generated_Source\PSoC4/uart_UART.c ****             pinsConfig |= (0u != config->enableCts)      ? (uart_UART_CTS_PIN_ENABLE) : (0u);
  97:.\Generated_Source\PSoC4/uart_UART.c ****         #endif /* !(uart_CY_SCBIP_V0 || uart_CY_SCBIP_V1) */
  98:.\Generated_Source\PSoC4/uart_UART.c **** 
  99:.\Generated_Source\PSoC4/uart_UART.c ****             /* Configure pins */
 100:.\Generated_Source\PSoC4/uart_UART.c ****             uart_SetPins(uart_SCB_MODE_UART, config->mode, pinsConfig);
 101:.\Generated_Source\PSoC4/uart_UART.c **** 
 102:.\Generated_Source\PSoC4/uart_UART.c ****             /* Store internal configuration */
 103:.\Generated_Source\PSoC4/uart_UART.c ****             uart_scbMode       = (uint8) uart_SCB_MODE_UART;
 104:.\Generated_Source\PSoC4/uart_UART.c ****             uart_scbEnableWake = (uint8) config->enableWake;
 105:.\Generated_Source\PSoC4/uart_UART.c ****             uart_scbEnableIntr = (uint8) config->enableInterrupt;
 106:.\Generated_Source\PSoC4/uart_UART.c **** 
 107:.\Generated_Source\PSoC4/uart_UART.c ****             /* Set RX direction internal variables */
 108:.\Generated_Source\PSoC4/uart_UART.c ****             uart_rxBuffer      =         config->rxBuffer;
 109:.\Generated_Source\PSoC4/uart_UART.c ****             uart_rxDataBits    = (uint8) config->dataBits;
 110:.\Generated_Source\PSoC4/uart_UART.c ****             uart_rxBufferSize  = (uint8) config->rxBufferSize;
 111:.\Generated_Source\PSoC4/uart_UART.c **** 
 112:.\Generated_Source\PSoC4/uart_UART.c ****             /* Set TX direction internal variables */
 113:.\Generated_Source\PSoC4/uart_UART.c ****             uart_txBuffer      =         config->txBuffer;
 114:.\Generated_Source\PSoC4/uart_UART.c ****             uart_txDataBits    = (uint8) config->dataBits;
 115:.\Generated_Source\PSoC4/uart_UART.c ****             uart_txBufferSize  = (uint8) config->txBufferSize;
 116:.\Generated_Source\PSoC4/uart_UART.c **** 
 117:.\Generated_Source\PSoC4/uart_UART.c ****             /* Configure UART interface */
 118:.\Generated_Source\PSoC4/uart_UART.c ****             if(uart_UART_MODE_IRDA == config->mode)
 119:.\Generated_Source\PSoC4/uart_UART.c ****             {
 120:.\Generated_Source\PSoC4/uart_UART.c ****                 /* OVS settings: IrDA */
 121:.\Generated_Source\PSoC4/uart_UART.c ****                 uart_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 122:.\Generated_Source\PSoC4/uart_UART.c ****                                                 (uart_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 123:.\Generated_Source\PSoC4/uart_UART.c ****                                                 (uart_CTRL_OVS_IRDA_OVS16));
 124:.\Generated_Source\PSoC4/uart_UART.c ****             }
 125:.\Generated_Source\PSoC4/uart_UART.c ****             else
 126:.\Generated_Source\PSoC4/uart_UART.c ****             {
 127:.\Generated_Source\PSoC4/uart_UART.c ****                 /* OVS settings: UART and SmartCard */
 128:.\Generated_Source\PSoC4/uart_UART.c ****                 uart_CTRL_REG  = uart_GET_CTRL_OVS(config->oversample);
 129:.\Generated_Source\PSoC4/uart_UART.c ****             }
 130:.\Generated_Source\PSoC4/uart_UART.c **** 
 131:.\Generated_Source\PSoC4/uart_UART.c ****             uart_CTRL_REG     |= uart_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 132:.\Generated_Source\PSoC4/uart_UART.c ****                                              uart_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAddr)
 133:.\Generated_Source\PSoC4/uart_UART.c ****                                              uart_CTRL_UART;
 134:.\Generated_Source\PSoC4/uart_UART.c **** 
 135:.\Generated_Source\PSoC4/uart_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 136:.\Generated_Source\PSoC4/uart_UART.c ****             uart_UART_CTRL_REG = uart_GET_UART_CTRL_MODE(config->mode);
 137:.\Generated_Source\PSoC4/uart_UART.c **** 
 138:.\Generated_Source\PSoC4/uart_UART.c ****             /* Configure RX direction */
 139:.\Generated_Source\PSoC4/uart_UART.c ****             uart_UART_RX_CTRL_REG = uart_GET_UART_RX_CTRL_MODE(config->stopBits)              |
 140:.\Generated_Source\PSoC4/uart_UART.c ****                                         uart_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx)   
 141:.\Generated_Source\PSoC4/uart_UART.c ****                                         uart_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)     
 142:.\Generated_Source\PSoC4/uart_UART.c ****                                         uart_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnPari
 143:.\Generated_Source\PSoC4/uart_UART.c ****                                         uart_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFrame
 144:.\Generated_Source\PSoC4/uart_UART.c **** 
 145:.\Generated_Source\PSoC4/uart_UART.c ****             if(uart_UART_PARITY_NONE != config->parity)
 146:.\Generated_Source\PSoC4/uart_UART.c ****             {
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 4


 147:.\Generated_Source\PSoC4/uart_UART.c ****                uart_UART_RX_CTRL_REG |= uart_GET_UART_RX_CTRL_PARITY(config->parity) |
 148:.\Generated_Source\PSoC4/uart_UART.c ****                                                     uart_UART_RX_CTRL_PARITY_ENABLED;
 149:.\Generated_Source\PSoC4/uart_UART.c ****             }
 150:.\Generated_Source\PSoC4/uart_UART.c **** 
 151:.\Generated_Source\PSoC4/uart_UART.c ****             uart_RX_CTRL_REG      = uart_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 152:.\Generated_Source\PSoC4/uart_UART.c ****                                                 uart_GET_RX_CTRL_MEDIAN(config->enableMedianFilter)
 153:.\Generated_Source\PSoC4/uart_UART.c ****                                                 uart_GET_UART_RX_CTRL_ENABLED(config->direction);
 154:.\Generated_Source\PSoC4/uart_UART.c **** 
 155:.\Generated_Source\PSoC4/uart_UART.c ****             uart_RX_FIFO_CTRL_REG = uart_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLevel);
 156:.\Generated_Source\PSoC4/uart_UART.c **** 
 157:.\Generated_Source\PSoC4/uart_UART.c ****             /* Configure MP address */
 158:.\Generated_Source\PSoC4/uart_UART.c ****             uart_RX_MATCH_REG     = uart_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 159:.\Generated_Source\PSoC4/uart_UART.c ****                                                 uart_GET_RX_MATCH_MASK(config->multiprocAddrMask);
 160:.\Generated_Source\PSoC4/uart_UART.c **** 
 161:.\Generated_Source\PSoC4/uart_UART.c ****             /* Configure RX direction */
 162:.\Generated_Source\PSoC4/uart_UART.c ****             uart_UART_TX_CTRL_REG = uart_GET_UART_TX_CTRL_MODE(config->stopBits) |
 163:.\Generated_Source\PSoC4/uart_UART.c ****                                                 uart_GET_UART_TX_CTRL_RETRY_NACK(config->enableRetr
 164:.\Generated_Source\PSoC4/uart_UART.c **** 
 165:.\Generated_Source\PSoC4/uart_UART.c ****             if(uart_UART_PARITY_NONE != config->parity)
 166:.\Generated_Source\PSoC4/uart_UART.c ****             {
 167:.\Generated_Source\PSoC4/uart_UART.c ****                uart_UART_TX_CTRL_REG |= uart_GET_UART_TX_CTRL_PARITY(config->parity) |
 168:.\Generated_Source\PSoC4/uart_UART.c ****                                                     uart_UART_TX_CTRL_PARITY_ENABLED;
 169:.\Generated_Source\PSoC4/uart_UART.c ****             }
 170:.\Generated_Source\PSoC4/uart_UART.c **** 
 171:.\Generated_Source\PSoC4/uart_UART.c ****             uart_TX_CTRL_REG      = uart_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 172:.\Generated_Source\PSoC4/uart_UART.c ****                                                 uart_GET_UART_TX_CTRL_ENABLED(config->direction);
 173:.\Generated_Source\PSoC4/uart_UART.c **** 
 174:.\Generated_Source\PSoC4/uart_UART.c ****             uart_TX_FIFO_CTRL_REG = uart_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLevel);
 175:.\Generated_Source\PSoC4/uart_UART.c **** 
 176:.\Generated_Source\PSoC4/uart_UART.c ****         #if !(uart_CY_SCBIP_V0 || uart_CY_SCBIP_V1)
 177:.\Generated_Source\PSoC4/uart_UART.c ****             uart_UART_FLOW_CTRL_REG = uart_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) | \
 178:.\Generated_Source\PSoC4/uart_UART.c ****                                             uart_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPolari
 179:.\Generated_Source\PSoC4/uart_UART.c ****                                             uart_GET_UART_FLOW_CTRL_RTS_POLARITY (config->rtsPolari
 180:.\Generated_Source\PSoC4/uart_UART.c ****                                             uart_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxFifo
 181:.\Generated_Source\PSoC4/uart_UART.c ****         #endif /* !(uart_CY_SCBIP_V0 || uart_CY_SCBIP_V1) */
 182:.\Generated_Source\PSoC4/uart_UART.c **** 
 183:.\Generated_Source\PSoC4/uart_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 184:.\Generated_Source\PSoC4/uart_UART.c ****             CyIntDisable    (uart_ISR_NUMBER);
 185:.\Generated_Source\PSoC4/uart_UART.c ****             CyIntSetPriority(uart_ISR_NUMBER, uart_ISR_PRIORITY);
 186:.\Generated_Source\PSoC4/uart_UART.c ****             (void) CyIntSetVector(uart_ISR_NUMBER, &uart_SPI_UART_ISR);
 187:.\Generated_Source\PSoC4/uart_UART.c **** 
 188:.\Generated_Source\PSoC4/uart_UART.c ****             /* Configure WAKE interrupt */
 189:.\Generated_Source\PSoC4/uart_UART.c ****         #if(uart_UART_RX_WAKEUP_IRQ)
 190:.\Generated_Source\PSoC4/uart_UART.c ****             CyIntDisable    (uart_RX_WAKE_ISR_NUMBER);
 191:.\Generated_Source\PSoC4/uart_UART.c ****             CyIntSetPriority(uart_RX_WAKE_ISR_NUMBER, uart_RX_WAKE_ISR_PRIORITY);
 192:.\Generated_Source\PSoC4/uart_UART.c ****             (void) CyIntSetVector(uart_RX_WAKE_ISR_NUMBER, &uart_UART_WAKEUP_ISR);
 193:.\Generated_Source\PSoC4/uart_UART.c ****         #endif /* (uart_UART_RX_WAKEUP_IRQ) */
 194:.\Generated_Source\PSoC4/uart_UART.c **** 
 195:.\Generated_Source\PSoC4/uart_UART.c ****             /* Configure interrupt sources */
 196:.\Generated_Source\PSoC4/uart_UART.c ****             uart_INTR_I2C_EC_MASK_REG = uart_NO_INTR_SOURCES;
 197:.\Generated_Source\PSoC4/uart_UART.c ****             uart_INTR_SPI_EC_MASK_REG = uart_NO_INTR_SOURCES;
 198:.\Generated_Source\PSoC4/uart_UART.c ****             uart_INTR_SLAVE_MASK_REG  = uart_NO_INTR_SOURCES;
 199:.\Generated_Source\PSoC4/uart_UART.c ****             uart_INTR_MASTER_MASK_REG = uart_NO_INTR_SOURCES;
 200:.\Generated_Source\PSoC4/uart_UART.c ****             uart_INTR_RX_MASK_REG     = config->rxInterruptMask;
 201:.\Generated_Source\PSoC4/uart_UART.c ****             uart_INTR_TX_MASK_REG     = config->txInterruptMask;
 202:.\Generated_Source\PSoC4/uart_UART.c **** 
 203:.\Generated_Source\PSoC4/uart_UART.c ****             /* Clear RX buffer indexes */
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 5


 204:.\Generated_Source\PSoC4/uart_UART.c ****             uart_rxBufferHead     = 0u;
 205:.\Generated_Source\PSoC4/uart_UART.c ****             uart_rxBufferTail     = 0u;
 206:.\Generated_Source\PSoC4/uart_UART.c ****             uart_rxBufferOverflow = 0u;
 207:.\Generated_Source\PSoC4/uart_UART.c **** 
 208:.\Generated_Source\PSoC4/uart_UART.c ****             /* Clear TX buffer indexes */
 209:.\Generated_Source\PSoC4/uart_UART.c ****             uart_txBufferHead = 0u;
 210:.\Generated_Source\PSoC4/uart_UART.c ****             uart_txBufferTail = 0u;
 211:.\Generated_Source\PSoC4/uart_UART.c ****         }
 212:.\Generated_Source\PSoC4/uart_UART.c ****     }
 213:.\Generated_Source\PSoC4/uart_UART.c **** 
 214:.\Generated_Source\PSoC4/uart_UART.c **** #else
 215:.\Generated_Source\PSoC4/uart_UART.c **** 
 216:.\Generated_Source\PSoC4/uart_UART.c ****     /*******************************************************************************
 217:.\Generated_Source\PSoC4/uart_UART.c ****     * Function Name: uart_UartInit
 218:.\Generated_Source\PSoC4/uart_UART.c ****     ********************************************************************************
 219:.\Generated_Source\PSoC4/uart_UART.c ****     *
 220:.\Generated_Source\PSoC4/uart_UART.c ****     * Summary:
 221:.\Generated_Source\PSoC4/uart_UART.c ****     *  Configures the SCB for the UART operation.
 222:.\Generated_Source\PSoC4/uart_UART.c ****     *
 223:.\Generated_Source\PSoC4/uart_UART.c ****     * Parameters:
 224:.\Generated_Source\PSoC4/uart_UART.c ****     *  None
 225:.\Generated_Source\PSoC4/uart_UART.c ****     *
 226:.\Generated_Source\PSoC4/uart_UART.c ****     * Return:
 227:.\Generated_Source\PSoC4/uart_UART.c ****     *  None
 228:.\Generated_Source\PSoC4/uart_UART.c ****     *
 229:.\Generated_Source\PSoC4/uart_UART.c ****     *******************************************************************************/
 230:.\Generated_Source\PSoC4/uart_UART.c ****     void uart_UartInit(void)
 231:.\Generated_Source\PSoC4/uart_UART.c ****     {
  26              		.loc 1 231 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 00AF     		add	r7, sp, #0
  33              		.cfi_def_cfa_register 7
 232:.\Generated_Source\PSoC4/uart_UART.c ****         /* Configure UART interface */
 233:.\Generated_Source\PSoC4/uart_UART.c ****         uart_CTRL_REG = uart_UART_DEFAULT_CTRL;
  34              		.loc 1 233 0
  35 0004 184B     		ldr	r3, .L2
  36 0006 194A     		ldr	r2, .L2+4
  37 0008 1A60     		str	r2, [r3]
 234:.\Generated_Source\PSoC4/uart_UART.c **** 
 235:.\Generated_Source\PSoC4/uart_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
 236:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_CTRL_REG = uart_UART_DEFAULT_UART_CTRL;
  38              		.loc 1 236 0
  39 000a 194B     		ldr	r3, .L2+8
  40 000c 0022     		mov	r2, #0
  41 000e 1A60     		str	r2, [r3]
 237:.\Generated_Source\PSoC4/uart_UART.c **** 
 238:.\Generated_Source\PSoC4/uart_UART.c ****         /* Configure RX direction */
 239:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_RX_CTRL_REG = uart_UART_DEFAULT_UART_RX_CTRL;
  42              		.loc 1 239 0
  43 0010 184B     		ldr	r3, .L2+12
  44 0012 0122     		mov	r2, #1
  45 0014 1A60     		str	r2, [r3]
 240:.\Generated_Source\PSoC4/uart_UART.c ****         uart_RX_CTRL_REG      = uart_UART_DEFAULT_RX_CTRL;
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 6


  46              		.loc 1 240 0
  47 0016 184B     		ldr	r3, .L2+16
  48 0018 184A     		ldr	r2, .L2+20
  49 001a 1A60     		str	r2, [r3]
 241:.\Generated_Source\PSoC4/uart_UART.c ****         uart_RX_FIFO_CTRL_REG = uart_UART_DEFAULT_RX_FIFO_CTRL;
  50              		.loc 1 241 0
  51 001c 184B     		ldr	r3, .L2+24
  52 001e 0722     		mov	r2, #7
  53 0020 1A60     		str	r2, [r3]
 242:.\Generated_Source\PSoC4/uart_UART.c ****         uart_RX_MATCH_REG     = uart_UART_DEFAULT_RX_MATCH_REG;
  54              		.loc 1 242 0
  55 0022 184B     		ldr	r3, .L2+28
  56 0024 0022     		mov	r2, #0
  57 0026 1A60     		str	r2, [r3]
 243:.\Generated_Source\PSoC4/uart_UART.c **** 
 244:.\Generated_Source\PSoC4/uart_UART.c ****         /* Configure TX direction */
 245:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_TX_CTRL_REG = uart_UART_DEFAULT_UART_TX_CTRL;
  58              		.loc 1 245 0
  59 0028 174B     		ldr	r3, .L2+32
  60 002a 0122     		mov	r2, #1
  61 002c 1A60     		str	r2, [r3]
 246:.\Generated_Source\PSoC4/uart_UART.c ****         uart_TX_CTRL_REG      = uart_UART_DEFAULT_TX_CTRL;
  62              		.loc 1 246 0
  63 002e 174B     		ldr	r3, .L2+36
  64 0030 124A     		ldr	r2, .L2+20
  65 0032 1A60     		str	r2, [r3]
 247:.\Generated_Source\PSoC4/uart_UART.c ****         uart_TX_FIFO_CTRL_REG = uart_UART_DEFAULT_TX_FIFO_CTRL;
  66              		.loc 1 247 0
  67 0034 164B     		ldr	r3, .L2+40
  68 0036 0022     		mov	r2, #0
  69 0038 1A60     		str	r2, [r3]
 248:.\Generated_Source\PSoC4/uart_UART.c **** 
 249:.\Generated_Source\PSoC4/uart_UART.c ****     #if !(uart_CY_SCBIP_V0 || uart_CY_SCBIP_V1)
 250:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UART_FLOW_CTRL_REG = uart_UART_DEFAULT_FLOW_CTRL;
  70              		.loc 1 250 0
  71 003a 164B     		ldr	r3, .L2+44
  72 003c 0422     		mov	r2, #4
  73 003e 1A60     		str	r2, [r3]
 251:.\Generated_Source\PSoC4/uart_UART.c ****     #endif /* !(uart_CY_SCBIP_V0 || uart_CY_SCBIP_V1) */
 252:.\Generated_Source\PSoC4/uart_UART.c **** 
 253:.\Generated_Source\PSoC4/uart_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 254:.\Generated_Source\PSoC4/uart_UART.c ****     #if(uart_SCB_IRQ_INTERNAL)
 255:.\Generated_Source\PSoC4/uart_UART.c ****         CyIntDisable    (uart_ISR_NUMBER);
 256:.\Generated_Source\PSoC4/uart_UART.c ****         CyIntSetPriority(uart_ISR_NUMBER, uart_ISR_PRIORITY);
 257:.\Generated_Source\PSoC4/uart_UART.c ****         (void) CyIntSetVector(uart_ISR_NUMBER, &uart_SPI_UART_ISR);
 258:.\Generated_Source\PSoC4/uart_UART.c ****     #endif /* (uart_SCB_IRQ_INTERNAL) */
 259:.\Generated_Source\PSoC4/uart_UART.c **** 
 260:.\Generated_Source\PSoC4/uart_UART.c ****         /* Configure WAKE interrupt */
 261:.\Generated_Source\PSoC4/uart_UART.c ****     #if(uart_UART_RX_WAKEUP_IRQ)
 262:.\Generated_Source\PSoC4/uart_UART.c ****         CyIntDisable    (uart_RX_WAKE_ISR_NUMBER);
 263:.\Generated_Source\PSoC4/uart_UART.c ****         CyIntSetPriority(uart_RX_WAKE_ISR_NUMBER, uart_RX_WAKE_ISR_PRIORITY);
 264:.\Generated_Source\PSoC4/uart_UART.c ****         (void) CyIntSetVector(uart_RX_WAKE_ISR_NUMBER, &uart_UART_WAKEUP_ISR);
 265:.\Generated_Source\PSoC4/uart_UART.c ****     #endif /* (uart_UART_RX_WAKEUP_IRQ) */
 266:.\Generated_Source\PSoC4/uart_UART.c **** 
 267:.\Generated_Source\PSoC4/uart_UART.c ****         /* Configure interrupt sources */
 268:.\Generated_Source\PSoC4/uart_UART.c ****         uart_INTR_I2C_EC_MASK_REG = uart_UART_DEFAULT_INTR_I2C_EC_MASK;
  74              		.loc 1 268 0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 7


  75 0040 154B     		ldr	r3, .L2+48
  76 0042 0022     		mov	r2, #0
  77 0044 1A60     		str	r2, [r3]
 269:.\Generated_Source\PSoC4/uart_UART.c ****         uart_INTR_SPI_EC_MASK_REG = uart_UART_DEFAULT_INTR_SPI_EC_MASK;
  78              		.loc 1 269 0
  79 0046 154B     		ldr	r3, .L2+52
  80 0048 0022     		mov	r2, #0
  81 004a 1A60     		str	r2, [r3]
 270:.\Generated_Source\PSoC4/uart_UART.c ****         uart_INTR_SLAVE_MASK_REG  = uart_UART_DEFAULT_INTR_SLAVE_MASK;
  82              		.loc 1 270 0
  83 004c 144B     		ldr	r3, .L2+56
  84 004e 0022     		mov	r2, #0
  85 0050 1A60     		str	r2, [r3]
 271:.\Generated_Source\PSoC4/uart_UART.c ****         uart_INTR_MASTER_MASK_REG = uart_UART_DEFAULT_INTR_MASTER_MASK;
  86              		.loc 1 271 0
  87 0052 144B     		ldr	r3, .L2+60
  88 0054 0022     		mov	r2, #0
  89 0056 1A60     		str	r2, [r3]
 272:.\Generated_Source\PSoC4/uart_UART.c ****         uart_INTR_RX_MASK_REG     = uart_UART_DEFAULT_INTR_RX_MASK;
  90              		.loc 1 272 0
  91 0058 134B     		ldr	r3, .L2+64
  92 005a 0022     		mov	r2, #0
  93 005c 1A60     		str	r2, [r3]
 273:.\Generated_Source\PSoC4/uart_UART.c ****         uart_INTR_TX_MASK_REG     = uart_UART_DEFAULT_INTR_TX_MASK;
  94              		.loc 1 273 0
  95 005e 134B     		ldr	r3, .L2+68
  96 0060 0022     		mov	r2, #0
  97 0062 1A60     		str	r2, [r3]
 274:.\Generated_Source\PSoC4/uart_UART.c **** 
 275:.\Generated_Source\PSoC4/uart_UART.c ****     #if(uart_INTERNAL_RX_SW_BUFFER_CONST)
 276:.\Generated_Source\PSoC4/uart_UART.c ****         uart_rxBufferHead     = 0u;
 277:.\Generated_Source\PSoC4/uart_UART.c ****         uart_rxBufferTail     = 0u;
 278:.\Generated_Source\PSoC4/uart_UART.c ****         uart_rxBufferOverflow = 0u;
 279:.\Generated_Source\PSoC4/uart_UART.c ****     #endif /* (uart_INTERNAL_RX_SW_BUFFER_CONST) */
 280:.\Generated_Source\PSoC4/uart_UART.c **** 
 281:.\Generated_Source\PSoC4/uart_UART.c ****     #if(uart_INTERNAL_TX_SW_BUFFER_CONST)
 282:.\Generated_Source\PSoC4/uart_UART.c ****         uart_txBufferHead = 0u;
 283:.\Generated_Source\PSoC4/uart_UART.c ****         uart_txBufferTail = 0u;
 284:.\Generated_Source\PSoC4/uart_UART.c ****     #endif /* (uart_INTERNAL_TX_SW_BUFFER_CONST) */
 285:.\Generated_Source\PSoC4/uart_UART.c ****     }
  98              		.loc 1 285 0
  99 0064 BD46     		mov	sp, r7
 100              		@ sp needed
 101 0066 80BD     		pop	{r7, pc}
 102              	.L3:
 103              		.align	2
 104              	.L2:
 105 0068 00002440 		.word	1076101120
 106 006c 0B000002 		.word	33554443
 107 0070 40002440 		.word	1076101184
 108 0074 48002440 		.word	1076101192
 109 0078 00032440 		.word	1076101888
 110 007c 07000080 		.word	-2147483641
 111 0080 04032440 		.word	1076101892
 112 0084 10032440 		.word	1076101904
 113 0088 44002440 		.word	1076101188
 114 008c 00022440 		.word	1076101632
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 8


 115 0090 04022440 		.word	1076101636
 116 0094 50002440 		.word	1076101200
 117 0098 880E2440 		.word	1076104840
 118 009c C80E2440 		.word	1076104904
 119 00a0 480F2440 		.word	1076105032
 120 00a4 080F2440 		.word	1076104968
 121 00a8 C80F2440 		.word	1076105160
 122 00ac 880F2440 		.word	1076105096
 123              		.cfi_endproc
 124              	.LFE2:
 125              		.size	uart_UartInit, .-uart_UartInit
 126              		.section	.text.uart_UartPostEnable,"ax",%progbits
 127              		.align	2
 128              		.global	uart_UartPostEnable
 129              		.code	16
 130              		.thumb_func
 131              		.type	uart_UartPostEnable, %function
 132              	uart_UartPostEnable:
 133              	.LFB3:
 286:.\Generated_Source\PSoC4/uart_UART.c **** #endif /* (uart_SCB_MODE_UNCONFIG_CONST_CFG) */
 287:.\Generated_Source\PSoC4/uart_UART.c **** 
 288:.\Generated_Source\PSoC4/uart_UART.c **** 
 289:.\Generated_Source\PSoC4/uart_UART.c **** /*******************************************************************************
 290:.\Generated_Source\PSoC4/uart_UART.c **** * Function Name: uart_UartPostEnable
 291:.\Generated_Source\PSoC4/uart_UART.c **** ********************************************************************************
 292:.\Generated_Source\PSoC4/uart_UART.c **** *
 293:.\Generated_Source\PSoC4/uart_UART.c **** * Summary:
 294:.\Generated_Source\PSoC4/uart_UART.c **** *  Restores HSIOM settings for the UART output pins (TX and/or RTS) to be 
 295:.\Generated_Source\PSoC4/uart_UART.c **** *  controlled by the SCB UART.
 296:.\Generated_Source\PSoC4/uart_UART.c **** *
 297:.\Generated_Source\PSoC4/uart_UART.c **** * Parameters:
 298:.\Generated_Source\PSoC4/uart_UART.c **** *  None
 299:.\Generated_Source\PSoC4/uart_UART.c **** *
 300:.\Generated_Source\PSoC4/uart_UART.c **** * Return:
 301:.\Generated_Source\PSoC4/uart_UART.c **** *  None
 302:.\Generated_Source\PSoC4/uart_UART.c **** *
 303:.\Generated_Source\PSoC4/uart_UART.c **** *******************************************************************************/
 304:.\Generated_Source\PSoC4/uart_UART.c **** void uart_UartPostEnable(void)
 305:.\Generated_Source\PSoC4/uart_UART.c **** {
 134              		.loc 1 305 0
 135              		.cfi_startproc
 136 0000 80B5     		push	{r7, lr}
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 7, -8
 139              		.cfi_offset 14, -4
 140 0002 00AF     		add	r7, sp, #0
 141              		.cfi_def_cfa_register 7
 306:.\Generated_Source\PSoC4/uart_UART.c **** #if (uart_SCB_MODE_UNCONFIG_CONST_CFG)
 307:.\Generated_Source\PSoC4/uart_UART.c ****     #if (uart_TX_SCL_MISO_PIN)
 308:.\Generated_Source\PSoC4/uart_UART.c ****         if (uart_CHECK_TX_SCL_MISO_PIN_USED)
 309:.\Generated_Source\PSoC4/uart_UART.c ****         {
 310:.\Generated_Source\PSoC4/uart_UART.c ****             /* Set SCB UART to drive the output pin */
 311:.\Generated_Source\PSoC4/uart_UART.c ****             uart_SET_HSIOM_SEL(uart_TX_SCL_MISO_HSIOM_REG, uart_TX_SCL_MISO_HSIOM_MASK,
 312:.\Generated_Source\PSoC4/uart_UART.c ****                                            uart_TX_SCL_MISO_HSIOM_POS, uart_TX_SCL_MISO_HSIOM_SEL_U
 313:.\Generated_Source\PSoC4/uart_UART.c ****         }
 314:.\Generated_Source\PSoC4/uart_UART.c ****     #endif /* (uart_TX_SCL_MISO_PIN_PIN) */
 315:.\Generated_Source\PSoC4/uart_UART.c **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 9


 316:.\Generated_Source\PSoC4/uart_UART.c ****     #if !(uart_CY_SCBIP_V0 || uart_CY_SCBIP_V1)
 317:.\Generated_Source\PSoC4/uart_UART.c ****         #if (uart_RTS_SS0_PIN)
 318:.\Generated_Source\PSoC4/uart_UART.c ****             if (uart_CHECK_RTS_SS0_PIN_USED)
 319:.\Generated_Source\PSoC4/uart_UART.c ****             {
 320:.\Generated_Source\PSoC4/uart_UART.c ****                 /* Set SCB UART to drive the output pin */
 321:.\Generated_Source\PSoC4/uart_UART.c ****                 uart_SET_HSIOM_SEL(uart_RTS_SS0_HSIOM_REG, uart_RTS_SS0_HSIOM_MASK,
 322:.\Generated_Source\PSoC4/uart_UART.c ****                                                uart_RTS_SS0_HSIOM_POS, uart_RTS_SS0_HSIOM_SEL_UART)
 323:.\Generated_Source\PSoC4/uart_UART.c ****             }
 324:.\Generated_Source\PSoC4/uart_UART.c ****         #endif /* (uart_RTS_SS0_PIN) */
 325:.\Generated_Source\PSoC4/uart_UART.c ****     #endif /* !(uart_CY_SCBIP_V0 || uart_CY_SCBIP_V1) */
 326:.\Generated_Source\PSoC4/uart_UART.c ****     
 327:.\Generated_Source\PSoC4/uart_UART.c **** #else    
 328:.\Generated_Source\PSoC4/uart_UART.c ****     #if (uart_UART_TX_PIN)
 329:.\Generated_Source\PSoC4/uart_UART.c ****          /* Set SCB UART to drive the output pin */
 330:.\Generated_Source\PSoC4/uart_UART.c ****         uart_SET_HSIOM_SEL(uart_TX_HSIOM_REG, uart_TX_HSIOM_MASK,
 142              		.loc 1 330 0
 143 0004 054B     		ldr	r3, .L5
 144 0006 054A     		ldr	r2, .L5
 145 0008 1268     		ldr	r2, [r2]
 146 000a 0549     		ldr	r1, .L5+4
 147 000c 0A40     		and	r2, r1
 148 000e 9021     		mov	r1, #144
 149 0010 0904     		lsl	r1, r1, #16
 150 0012 0A43     		orr	r2, r1
 151 0014 1A60     		str	r2, [r3]
 331:.\Generated_Source\PSoC4/uart_UART.c ****                                        uart_TX_HSIOM_POS, uart_TX_HSIOM_SEL_UART);
 332:.\Generated_Source\PSoC4/uart_UART.c ****     #endif /* (uart_UART_TX_PIN) */
 333:.\Generated_Source\PSoC4/uart_UART.c **** 
 334:.\Generated_Source\PSoC4/uart_UART.c ****     #if (uart_UART_RTS_PIN)
 335:.\Generated_Source\PSoC4/uart_UART.c ****         /* Set SCB UART to drive the output pin */
 336:.\Generated_Source\PSoC4/uart_UART.c ****         uart_SET_HSIOM_SEL(uart_RTS_HSIOM_REG, uart_RTS_HSIOM_MASK,
 337:.\Generated_Source\PSoC4/uart_UART.c ****                                        uart_RTS_HSIOM_POS, uart_RTS_HSIOM_SEL_UART);
 338:.\Generated_Source\PSoC4/uart_UART.c ****     #endif /* (uart_UART_RTS_PIN) */
 339:.\Generated_Source\PSoC4/uart_UART.c **** 
 340:.\Generated_Source\PSoC4/uart_UART.c **** #endif /* (uart_SCB_MODE_UNCONFIG_CONST_CFG) */
 341:.\Generated_Source\PSoC4/uart_UART.c **** }
 152              		.loc 1 341 0
 153 0016 BD46     		mov	sp, r7
 154              		@ sp needed
 155 0018 80BD     		pop	{r7, pc}
 156              	.L6:
 157 001a C046     		.align	2
 158              	.L5:
 159 001c 00010240 		.word	1073873152
 160 0020 FFFF0FFF 		.word	-15728641
 161              		.cfi_endproc
 162              	.LFE3:
 163              		.size	uart_UartPostEnable, .-uart_UartPostEnable
 164              		.section	.text.uart_UartStop,"ax",%progbits
 165              		.align	2
 166              		.global	uart_UartStop
 167              		.code	16
 168              		.thumb_func
 169              		.type	uart_UartStop, %function
 170              	uart_UartStop:
 171              	.LFB4:
 342:.\Generated_Source\PSoC4/uart_UART.c **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 10


 343:.\Generated_Source\PSoC4/uart_UART.c **** 
 344:.\Generated_Source\PSoC4/uart_UART.c **** /*******************************************************************************
 345:.\Generated_Source\PSoC4/uart_UART.c **** * Function Name: uart_UartStop
 346:.\Generated_Source\PSoC4/uart_UART.c **** ********************************************************************************
 347:.\Generated_Source\PSoC4/uart_UART.c **** *
 348:.\Generated_Source\PSoC4/uart_UART.c **** * Summary:
 349:.\Generated_Source\PSoC4/uart_UART.c **** *  Changes the HSIOM settings for the UART output pins (TX and/or RTS) to keep
 350:.\Generated_Source\PSoC4/uart_UART.c **** *  them inactive after the block is disabled. The output pins are controlled by
 351:.\Generated_Source\PSoC4/uart_UART.c **** *  the GPIO data register. Also, the function disables the skip start feature to
 352:.\Generated_Source\PSoC4/uart_UART.c **** *  not cause it to trigger after the component is enabled.
 353:.\Generated_Source\PSoC4/uart_UART.c **** *
 354:.\Generated_Source\PSoC4/uart_UART.c **** * Parameters:
 355:.\Generated_Source\PSoC4/uart_UART.c **** *  None
 356:.\Generated_Source\PSoC4/uart_UART.c **** *
 357:.\Generated_Source\PSoC4/uart_UART.c **** * Return:
 358:.\Generated_Source\PSoC4/uart_UART.c **** *  None
 359:.\Generated_Source\PSoC4/uart_UART.c **** *
 360:.\Generated_Source\PSoC4/uart_UART.c **** *******************************************************************************/
 361:.\Generated_Source\PSoC4/uart_UART.c **** void uart_UartStop(void)
 362:.\Generated_Source\PSoC4/uart_UART.c **** {
 172              		.loc 1 362 0
 173              		.cfi_startproc
 174 0000 80B5     		push	{r7, lr}
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 7, -8
 177              		.cfi_offset 14, -4
 178 0002 00AF     		add	r7, sp, #0
 179              		.cfi_def_cfa_register 7
 363:.\Generated_Source\PSoC4/uart_UART.c **** #if(uart_SCB_MODE_UNCONFIG_CONST_CFG)
 364:.\Generated_Source\PSoC4/uart_UART.c ****     #if (uart_TX_SCL_MISO_PIN)
 365:.\Generated_Source\PSoC4/uart_UART.c ****         if (uart_CHECK_TX_SCL_MISO_PIN_USED)
 366:.\Generated_Source\PSoC4/uart_UART.c ****         {
 367:.\Generated_Source\PSoC4/uart_UART.c ****             /* Set GPIO to drive output pin */
 368:.\Generated_Source\PSoC4/uart_UART.c ****             uart_SET_HSIOM_SEL(uart_TX_SCL_MISO_HSIOM_REG, uart_TX_SCL_MISO_HSIOM_MASK,
 369:.\Generated_Source\PSoC4/uart_UART.c ****                                            uart_TX_SCL_MISO_HSIOM_POS, uart_TX_SCL_MISO_HSIOM_SEL_G
 370:.\Generated_Source\PSoC4/uart_UART.c ****         }
 371:.\Generated_Source\PSoC4/uart_UART.c ****     #endif /* (uart_TX_SCL_MISO_PIN_PIN) */
 372:.\Generated_Source\PSoC4/uart_UART.c **** 
 373:.\Generated_Source\PSoC4/uart_UART.c ****     #if !(uart_CY_SCBIP_V0 || uart_CY_SCBIP_V1)
 374:.\Generated_Source\PSoC4/uart_UART.c ****         #if (uart_RTS_SS0_PIN)
 375:.\Generated_Source\PSoC4/uart_UART.c ****             if (uart_CHECK_RTS_SS0_PIN_USED)
 376:.\Generated_Source\PSoC4/uart_UART.c ****             {
 377:.\Generated_Source\PSoC4/uart_UART.c ****                 /* Set output pin state after block is disabled */
 378:.\Generated_Source\PSoC4/uart_UART.c ****                 uart_uart_rts_spi_ss0_Write(uart_GET_UART_RTS_INACTIVE);
 379:.\Generated_Source\PSoC4/uart_UART.c **** 
 380:.\Generated_Source\PSoC4/uart_UART.c ****                 /* Set GPIO to drive output pin */
 381:.\Generated_Source\PSoC4/uart_UART.c ****                 uart_SET_HSIOM_SEL(uart_RTS_SS0_HSIOM_REG, uart_RTS_SS0_HSIOM_MASK,
 382:.\Generated_Source\PSoC4/uart_UART.c ****                                                uart_RTS_SS0_HSIOM_POS, uart_RTS_SS0_HSIOM_SEL_GPIO)
 383:.\Generated_Source\PSoC4/uart_UART.c ****             }
 384:.\Generated_Source\PSoC4/uart_UART.c ****         #endif /* (uart_RTS_SS0_PIN) */
 385:.\Generated_Source\PSoC4/uart_UART.c ****     #endif /* !(uart_CY_SCBIP_V0 || uart_CY_SCBIP_V1) */
 386:.\Generated_Source\PSoC4/uart_UART.c **** 
 387:.\Generated_Source\PSoC4/uart_UART.c **** #else
 388:.\Generated_Source\PSoC4/uart_UART.c ****     #if (uart_UART_TX_PIN)
 389:.\Generated_Source\PSoC4/uart_UART.c ****         /* Set GPIO to drive output pin */
 390:.\Generated_Source\PSoC4/uart_UART.c ****         uart_SET_HSIOM_SEL(uart_TX_HSIOM_REG, uart_TX_HSIOM_MASK,
 180              		.loc 1 390 0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 11


 181 0004 034B     		ldr	r3, .L8
 182 0006 034A     		ldr	r2, .L8
 183 0008 1268     		ldr	r2, [r2]
 184 000a 0349     		ldr	r1, .L8+4
 185 000c 0A40     		and	r2, r1
 186 000e 1A60     		str	r2, [r3]
 391:.\Generated_Source\PSoC4/uart_UART.c ****                                        uart_TX_HSIOM_POS, uart_TX_HSIOM_SEL_GPIO);
 392:.\Generated_Source\PSoC4/uart_UART.c ****     #endif /* (uart_UART_TX_PIN) */
 393:.\Generated_Source\PSoC4/uart_UART.c **** 
 394:.\Generated_Source\PSoC4/uart_UART.c ****     #if (uart_UART_RTS_PIN)
 395:.\Generated_Source\PSoC4/uart_UART.c ****         /* Set output pin state after block is disabled */
 396:.\Generated_Source\PSoC4/uart_UART.c ****         uart_rts_Write(uart_GET_UART_RTS_INACTIVE);
 397:.\Generated_Source\PSoC4/uart_UART.c **** 
 398:.\Generated_Source\PSoC4/uart_UART.c ****         /* Set GPIO to drive output pin */
 399:.\Generated_Source\PSoC4/uart_UART.c ****         uart_SET_HSIOM_SEL(uart_RTS_HSIOM_REG, uart_RTS_HSIOM_MASK,
 400:.\Generated_Source\PSoC4/uart_UART.c ****                                        uart_RTS_HSIOM_POS, uart_RTS_HSIOM_SEL_GPIO);
 401:.\Generated_Source\PSoC4/uart_UART.c ****     #endif /* (uart_UART_RTS_PIN) */
 402:.\Generated_Source\PSoC4/uart_UART.c **** 
 403:.\Generated_Source\PSoC4/uart_UART.c **** #endif /* (uart_SCB_MODE_UNCONFIG_CONST_CFG) */
 404:.\Generated_Source\PSoC4/uart_UART.c **** 
 405:.\Generated_Source\PSoC4/uart_UART.c **** #if (uart_UART_WAKE_ENABLE_CONST)
 406:.\Generated_Source\PSoC4/uart_UART.c ****     /* Disable skip start feature used for wakeup */
 407:.\Generated_Source\PSoC4/uart_UART.c ****     uart_UART_RX_CTRL_REG &= (uint32) ~uart_UART_RX_CTRL_SKIP_START;
 408:.\Generated_Source\PSoC4/uart_UART.c **** #endif /* (uart_UART_WAKE_ENABLE_CONST) */
 409:.\Generated_Source\PSoC4/uart_UART.c **** }
 187              		.loc 1 409 0
 188 0010 BD46     		mov	sp, r7
 189              		@ sp needed
 190 0012 80BD     		pop	{r7, pc}
 191              	.L9:
 192              		.align	2
 193              	.L8:
 194 0014 00010240 		.word	1073873152
 195 0018 FFFF0FFF 		.word	-15728641
 196              		.cfi_endproc
 197              	.LFE4:
 198              		.size	uart_UartStop, .-uart_UartStop
 199              		.section	.text.uart_UartSetRxAddress,"ax",%progbits
 200              		.align	2
 201              		.global	uart_UartSetRxAddress
 202              		.code	16
 203              		.thumb_func
 204              		.type	uart_UartSetRxAddress, %function
 205              	uart_UartSetRxAddress:
 206              	.LFB5:
 410:.\Generated_Source\PSoC4/uart_UART.c **** 
 411:.\Generated_Source\PSoC4/uart_UART.c **** 
 412:.\Generated_Source\PSoC4/uart_UART.c **** /*******************************************************************************
 413:.\Generated_Source\PSoC4/uart_UART.c **** * Function Name: uart_UartSetRxAddress
 414:.\Generated_Source\PSoC4/uart_UART.c **** ********************************************************************************
 415:.\Generated_Source\PSoC4/uart_UART.c **** *
 416:.\Generated_Source\PSoC4/uart_UART.c **** * Summary:
 417:.\Generated_Source\PSoC4/uart_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 418:.\Generated_Source\PSoC4/uart_UART.c **** *  Multiprocessor mode.
 419:.\Generated_Source\PSoC4/uart_UART.c **** *
 420:.\Generated_Source\PSoC4/uart_UART.c **** * Parameters:
 421:.\Generated_Source\PSoC4/uart_UART.c **** *  address: Address for hardware address detection.
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 12


 422:.\Generated_Source\PSoC4/uart_UART.c **** *
 423:.\Generated_Source\PSoC4/uart_UART.c **** * Return:
 424:.\Generated_Source\PSoC4/uart_UART.c **** *  None
 425:.\Generated_Source\PSoC4/uart_UART.c **** *
 426:.\Generated_Source\PSoC4/uart_UART.c **** *******************************************************************************/
 427:.\Generated_Source\PSoC4/uart_UART.c **** void uart_UartSetRxAddress(uint32 address)
 428:.\Generated_Source\PSoC4/uart_UART.c **** {
 207              		.loc 1 428 0
 208              		.cfi_startproc
 209 0000 80B5     		push	{r7, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 0002 84B0     		sub	sp, sp, #16
 214              		.cfi_def_cfa_offset 24
 215 0004 00AF     		add	r7, sp, #0
 216              		.cfi_def_cfa_register 7
 217 0006 7860     		str	r0, [r7, #4]
 429:.\Generated_Source\PSoC4/uart_UART.c ****      uint32 matchReg;
 430:.\Generated_Source\PSoC4/uart_UART.c **** 
 431:.\Generated_Source\PSoC4/uart_UART.c ****     matchReg = uart_RX_MATCH_REG;
 218              		.loc 1 431 0
 219 0008 094B     		ldr	r3, .L11
 220 000a 1B68     		ldr	r3, [r3]
 221 000c FB60     		str	r3, [r7, #12]
 432:.\Generated_Source\PSoC4/uart_UART.c **** 
 433:.\Generated_Source\PSoC4/uart_UART.c ****     matchReg &= ((uint32) ~uart_RX_MATCH_ADDR_MASK); /* Clear address bits */
 222              		.loc 1 433 0
 223 000e FB68     		ldr	r3, [r7, #12]
 224 0010 FF22     		mov	r2, #255
 225 0012 9343     		bic	r3, r2
 226 0014 FB60     		str	r3, [r7, #12]
 434:.\Generated_Source\PSoC4/uart_UART.c ****     matchReg |= ((uint32)  (address & uart_RX_MATCH_ADDR_MASK)); /* Set address  */
 227              		.loc 1 434 0
 228 0016 7B68     		ldr	r3, [r7, #4]
 229 0018 FF22     		mov	r2, #255
 230 001a 1340     		and	r3, r2
 231 001c FA68     		ldr	r2, [r7, #12]
 232 001e 1343     		orr	r3, r2
 233 0020 FB60     		str	r3, [r7, #12]
 435:.\Generated_Source\PSoC4/uart_UART.c **** 
 436:.\Generated_Source\PSoC4/uart_UART.c ****     uart_RX_MATCH_REG = matchReg;
 234              		.loc 1 436 0
 235 0022 034B     		ldr	r3, .L11
 236 0024 FA68     		ldr	r2, [r7, #12]
 237 0026 1A60     		str	r2, [r3]
 437:.\Generated_Source\PSoC4/uart_UART.c **** }
 238              		.loc 1 437 0
 239 0028 BD46     		mov	sp, r7
 240 002a 04B0     		add	sp, sp, #16
 241              		@ sp needed
 242 002c 80BD     		pop	{r7, pc}
 243              	.L12:
 244 002e C046     		.align	2
 245              	.L11:
 246 0030 10032440 		.word	1076101904
 247              		.cfi_endproc
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 13


 248              	.LFE5:
 249              		.size	uart_UartSetRxAddress, .-uart_UartSetRxAddress
 250              		.section	.text.uart_UartSetRxAddressMask,"ax",%progbits
 251              		.align	2
 252              		.global	uart_UartSetRxAddressMask
 253              		.code	16
 254              		.thumb_func
 255              		.type	uart_UartSetRxAddressMask, %function
 256              	uart_UartSetRxAddressMask:
 257              	.LFB6:
 438:.\Generated_Source\PSoC4/uart_UART.c **** 
 439:.\Generated_Source\PSoC4/uart_UART.c **** 
 440:.\Generated_Source\PSoC4/uart_UART.c **** /*******************************************************************************
 441:.\Generated_Source\PSoC4/uart_UART.c **** * Function Name: uart_UartSetRxAddressMask
 442:.\Generated_Source\PSoC4/uart_UART.c **** ********************************************************************************
 443:.\Generated_Source\PSoC4/uart_UART.c **** *
 444:.\Generated_Source\PSoC4/uart_UART.c **** * Summary:
 445:.\Generated_Source\PSoC4/uart_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 446:.\Generated_Source\PSoC4/uart_UART.c **** *
 447:.\Generated_Source\PSoC4/uart_UART.c **** * Parameters:
 448:.\Generated_Source\PSoC4/uart_UART.c **** *  addressMask: Address mask.
 449:.\Generated_Source\PSoC4/uart_UART.c **** *   0 - address bit does not care while comparison.
 450:.\Generated_Source\PSoC4/uart_UART.c **** *   1 - address bit is significant while comparison.
 451:.\Generated_Source\PSoC4/uart_UART.c **** *
 452:.\Generated_Source\PSoC4/uart_UART.c **** * Return:
 453:.\Generated_Source\PSoC4/uart_UART.c **** *  None
 454:.\Generated_Source\PSoC4/uart_UART.c **** *
 455:.\Generated_Source\PSoC4/uart_UART.c **** *******************************************************************************/
 456:.\Generated_Source\PSoC4/uart_UART.c **** void uart_UartSetRxAddressMask(uint32 addressMask)
 457:.\Generated_Source\PSoC4/uart_UART.c **** {
 258              		.loc 1 457 0
 259              		.cfi_startproc
 260 0000 80B5     		push	{r7, lr}
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 7, -8
 263              		.cfi_offset 14, -4
 264 0002 84B0     		sub	sp, sp, #16
 265              		.cfi_def_cfa_offset 24
 266 0004 00AF     		add	r7, sp, #0
 267              		.cfi_def_cfa_register 7
 268 0006 7860     		str	r0, [r7, #4]
 458:.\Generated_Source\PSoC4/uart_UART.c ****     uint32 matchReg;
 459:.\Generated_Source\PSoC4/uart_UART.c **** 
 460:.\Generated_Source\PSoC4/uart_UART.c ****     matchReg = uart_RX_MATCH_REG;
 269              		.loc 1 460 0
 270 0008 084B     		ldr	r3, .L14
 271 000a 1B68     		ldr	r3, [r3]
 272 000c FB60     		str	r3, [r7, #12]
 461:.\Generated_Source\PSoC4/uart_UART.c **** 
 462:.\Generated_Source\PSoC4/uart_UART.c ****     matchReg &= ((uint32) ~uart_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 273              		.loc 1 462 0
 274 000e FB68     		ldr	r3, [r7, #12]
 275 0010 074A     		ldr	r2, .L14+4
 276 0012 1340     		and	r3, r2
 277 0014 FB60     		str	r3, [r7, #12]
 463:.\Generated_Source\PSoC4/uart_UART.c ****     matchReg |= ((uint32) (addressMask << uart_RX_MATCH_MASK_POS));
 278              		.loc 1 463 0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 14


 279 0016 7B68     		ldr	r3, [r7, #4]
 280 0018 1B04     		lsl	r3, r3, #16
 281 001a FA68     		ldr	r2, [r7, #12]
 282 001c 1343     		orr	r3, r2
 283 001e FB60     		str	r3, [r7, #12]
 464:.\Generated_Source\PSoC4/uart_UART.c **** 
 465:.\Generated_Source\PSoC4/uart_UART.c ****     uart_RX_MATCH_REG = matchReg;
 284              		.loc 1 465 0
 285 0020 024B     		ldr	r3, .L14
 286 0022 FA68     		ldr	r2, [r7, #12]
 287 0024 1A60     		str	r2, [r3]
 466:.\Generated_Source\PSoC4/uart_UART.c **** }
 288              		.loc 1 466 0
 289 0026 BD46     		mov	sp, r7
 290 0028 04B0     		add	sp, sp, #16
 291              		@ sp needed
 292 002a 80BD     		pop	{r7, pc}
 293              	.L15:
 294              		.align	2
 295              	.L14:
 296 002c 10032440 		.word	1076101904
 297 0030 FFFF00FF 		.word	-16711681
 298              		.cfi_endproc
 299              	.LFE6:
 300              		.size	uart_UartSetRxAddressMask, .-uart_UartSetRxAddressMask
 301              		.section	.text.uart_UartGetChar,"ax",%progbits
 302              		.align	2
 303              		.global	uart_UartGetChar
 304              		.code	16
 305              		.thumb_func
 306              		.type	uart_UartGetChar, %function
 307              	uart_UartGetChar:
 308              	.LFB7:
 467:.\Generated_Source\PSoC4/uart_UART.c **** 
 468:.\Generated_Source\PSoC4/uart_UART.c **** 
 469:.\Generated_Source\PSoC4/uart_UART.c **** #if(uart_UART_RX_DIRECTION)
 470:.\Generated_Source\PSoC4/uart_UART.c ****     /*******************************************************************************
 471:.\Generated_Source\PSoC4/uart_UART.c ****     * Function Name: uart_UartGetChar
 472:.\Generated_Source\PSoC4/uart_UART.c ****     ********************************************************************************
 473:.\Generated_Source\PSoC4/uart_UART.c ****     *
 474:.\Generated_Source\PSoC4/uart_UART.c ****     * Summary:
 475:.\Generated_Source\PSoC4/uart_UART.c ****     *  Retrieves the next data element from the receive buffer.
 476:.\Generated_Source\PSoC4/uart_UART.c ****     *  This function is designed for ASCII characters and returns a char
 477:.\Generated_Source\PSoC4/uart_UART.c ****     *  where 1 to 255 are valid characters and 0 indicates an error occurred or
 478:.\Generated_Source\PSoC4/uart_UART.c ****     *  no data present.
 479:.\Generated_Source\PSoC4/uart_UART.c ****     *  - The RX software buffer is disabled: returns the data element
 480:.\Generated_Source\PSoC4/uart_UART.c ****     *    retrieved from the RX FIFO.
 481:.\Generated_Source\PSoC4/uart_UART.c ****     *    Undefined data will be returned if the RX FIFO is empty.
 482:.\Generated_Source\PSoC4/uart_UART.c ****     *  - The RX software buffer is enabled: returns the data element from
 483:.\Generated_Source\PSoC4/uart_UART.c ****     *    the software receive buffer.
 484:.\Generated_Source\PSoC4/uart_UART.c ****     *
 485:.\Generated_Source\PSoC4/uart_UART.c ****     * Parameters:
 486:.\Generated_Source\PSoC4/uart_UART.c ****     *  None
 487:.\Generated_Source\PSoC4/uart_UART.c ****     *
 488:.\Generated_Source\PSoC4/uart_UART.c ****     * Return:
 489:.\Generated_Source\PSoC4/uart_UART.c ****     *  The next data element from the receive buffer.
 490:.\Generated_Source\PSoC4/uart_UART.c ****     *  ASCII character values from 1 to 255 are valid.
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 15


 491:.\Generated_Source\PSoC4/uart_UART.c ****     *  A returned zero signifies an error condition or no data available.
 492:.\Generated_Source\PSoC4/uart_UART.c ****     *
 493:.\Generated_Source\PSoC4/uart_UART.c ****     * Side Effects:
 494:.\Generated_Source\PSoC4/uart_UART.c ****     *  The errors bits may not correspond with reading characters due to RX FIFO
 495:.\Generated_Source\PSoC4/uart_UART.c ****     *  and software buffer usage.
 496:.\Generated_Source\PSoC4/uart_UART.c ****     *  RX software buffer is enabled: The internal software buffer overflow
 497:.\Generated_Source\PSoC4/uart_UART.c ****     *  does not treat as an error condition.
 498:.\Generated_Source\PSoC4/uart_UART.c ****     *  Check SCB_rxBufferOverflow to capture that error condition.
 499:.\Generated_Source\PSoC4/uart_UART.c ****     *
 500:.\Generated_Source\PSoC4/uart_UART.c ****     *******************************************************************************/
 501:.\Generated_Source\PSoC4/uart_UART.c ****     uint32 uart_UartGetChar(void)
 502:.\Generated_Source\PSoC4/uart_UART.c ****     {
 309              		.loc 1 502 0
 310              		.cfi_startproc
 311 0000 80B5     		push	{r7, lr}
 312              		.cfi_def_cfa_offset 8
 313              		.cfi_offset 7, -8
 314              		.cfi_offset 14, -4
 315 0002 82B0     		sub	sp, sp, #8
 316              		.cfi_def_cfa_offset 16
 317 0004 00AF     		add	r7, sp, #0
 318              		.cfi_def_cfa_register 7
 503:.\Generated_Source\PSoC4/uart_UART.c ****         uint32 rxData = 0u;
 319              		.loc 1 503 0
 320 0006 0023     		mov	r3, #0
 321 0008 7B60     		str	r3, [r7, #4]
 504:.\Generated_Source\PSoC4/uart_UART.c **** 
 505:.\Generated_Source\PSoC4/uart_UART.c ****         /* Reads data only if there is data to read */
 506:.\Generated_Source\PSoC4/uart_UART.c ****         if (0u != uart_SpiUartGetRxBufferSize())
 322              		.loc 1 506 0
 323 000a FFF7FEFF 		bl	uart_SpiUartGetRxBufferSize
 324 000e 031E     		sub	r3, r0, #0
 325 0010 03D0     		beq	.L17
 507:.\Generated_Source\PSoC4/uart_UART.c ****         {
 508:.\Generated_Source\PSoC4/uart_UART.c ****             rxData = uart_SpiUartReadRxData();
 326              		.loc 1 508 0
 327 0012 FFF7FEFF 		bl	uart_SpiUartReadRxData
 328 0016 031C     		mov	r3, r0
 329 0018 7B60     		str	r3, [r7, #4]
 330              	.L17:
 509:.\Generated_Source\PSoC4/uart_UART.c ****         }
 510:.\Generated_Source\PSoC4/uart_UART.c **** 
 511:.\Generated_Source\PSoC4/uart_UART.c ****         if (uart_CHECK_INTR_RX(uart_INTR_RX_ERR))
 331              		.loc 1 511 0
 332 001a 084B     		ldr	r3, .L20
 333 001c 1A68     		ldr	r2, [r3]
 334 001e D823     		mov	r3, #216
 335 0020 9B00     		lsl	r3, r3, #2
 336 0022 1340     		and	r3, r2
 337 0024 05D0     		beq	.L18
 512:.\Generated_Source\PSoC4/uart_UART.c ****         {
 513:.\Generated_Source\PSoC4/uart_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 338              		.loc 1 513 0
 339 0026 0023     		mov	r3, #0
 340 0028 7B60     		str	r3, [r7, #4]
 514:.\Generated_Source\PSoC4/uart_UART.c ****             uart_ClearRxInterruptSource(uart_INTR_RX_ERR);
 341              		.loc 1 514 0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 16


 342 002a 044B     		ldr	r3, .L20
 343 002c D822     		mov	r2, #216
 344 002e 9200     		lsl	r2, r2, #2
 345 0030 1A60     		str	r2, [r3]
 346              	.L18:
 515:.\Generated_Source\PSoC4/uart_UART.c ****         }
 516:.\Generated_Source\PSoC4/uart_UART.c **** 
 517:.\Generated_Source\PSoC4/uart_UART.c ****         return (rxData);
 347              		.loc 1 517 0
 348 0032 7B68     		ldr	r3, [r7, #4]
 518:.\Generated_Source\PSoC4/uart_UART.c ****     }
 349              		.loc 1 518 0
 350 0034 181C     		mov	r0, r3
 351 0036 BD46     		mov	sp, r7
 352 0038 02B0     		add	sp, sp, #8
 353              		@ sp needed
 354 003a 80BD     		pop	{r7, pc}
 355              	.L21:
 356              		.align	2
 357              	.L20:
 358 003c C00F2440 		.word	1076105152
 359              		.cfi_endproc
 360              	.LFE7:
 361              		.size	uart_UartGetChar, .-uart_UartGetChar
 362              		.section	.text.uart_UartGetByte,"ax",%progbits
 363              		.align	2
 364              		.global	uart_UartGetByte
 365              		.code	16
 366              		.thumb_func
 367              		.type	uart_UartGetByte, %function
 368              	uart_UartGetByte:
 369              	.LFB8:
 519:.\Generated_Source\PSoC4/uart_UART.c **** 
 520:.\Generated_Source\PSoC4/uart_UART.c **** 
 521:.\Generated_Source\PSoC4/uart_UART.c ****     /*******************************************************************************
 522:.\Generated_Source\PSoC4/uart_UART.c ****     * Function Name: uart_UartGetByte
 523:.\Generated_Source\PSoC4/uart_UART.c ****     ********************************************************************************
 524:.\Generated_Source\PSoC4/uart_UART.c ****     *
 525:.\Generated_Source\PSoC4/uart_UART.c ****     * Summary:
 526:.\Generated_Source\PSoC4/uart_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 527:.\Generated_Source\PSoC4/uart_UART.c ****     *  received byte and error condition.
 528:.\Generated_Source\PSoC4/uart_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 529:.\Generated_Source\PSoC4/uart_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 530:.\Generated_Source\PSoC4/uart_UART.c ****     *     empty.
 531:.\Generated_Source\PSoC4/uart_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 532:.\Generated_Source\PSoC4/uart_UART.c ****     *     software receive buffer.
 533:.\Generated_Source\PSoC4/uart_UART.c ****     *
 534:.\Generated_Source\PSoC4/uart_UART.c ****     * Parameters:
 535:.\Generated_Source\PSoC4/uart_UART.c ****     *  None
 536:.\Generated_Source\PSoC4/uart_UART.c ****     *
 537:.\Generated_Source\PSoC4/uart_UART.c ****     * Return:
 538:.\Generated_Source\PSoC4/uart_UART.c ****     *  Bits 7-0 contain the next data element from the receive buffer and
 539:.\Generated_Source\PSoC4/uart_UART.c ****     *  other bits contain the error condition.
 540:.\Generated_Source\PSoC4/uart_UART.c ****     *
 541:.\Generated_Source\PSoC4/uart_UART.c ****     * Side Effects:
 542:.\Generated_Source\PSoC4/uart_UART.c ****     *  The errors bits may not correspond with reading characters due to RX FIFO
 543:.\Generated_Source\PSoC4/uart_UART.c ****     *  and software buffer usage.
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 17


 544:.\Generated_Source\PSoC4/uart_UART.c ****     *  RX software buffer is disabled: The internal software buffer overflow
 545:.\Generated_Source\PSoC4/uart_UART.c ****     *  is not returned as status by this function.
 546:.\Generated_Source\PSoC4/uart_UART.c ****     *  Check SCB_rxBufferOverflow to capture that error condition.
 547:.\Generated_Source\PSoC4/uart_UART.c ****     *
 548:.\Generated_Source\PSoC4/uart_UART.c ****     *******************************************************************************/
 549:.\Generated_Source\PSoC4/uart_UART.c ****     uint32 uart_UartGetByte(void)
 550:.\Generated_Source\PSoC4/uart_UART.c ****     {
 370              		.loc 1 550 0
 371              		.cfi_startproc
 372 0000 80B5     		push	{r7, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 82B0     		sub	sp, sp, #8
 377              		.cfi_def_cfa_offset 16
 378 0004 00AF     		add	r7, sp, #0
 379              		.cfi_def_cfa_register 7
 551:.\Generated_Source\PSoC4/uart_UART.c ****         uint32 rxData;
 552:.\Generated_Source\PSoC4/uart_UART.c ****         uint32 tmpStatus;
 553:.\Generated_Source\PSoC4/uart_UART.c **** 
 554:.\Generated_Source\PSoC4/uart_UART.c ****         #if (uart_CHECK_RX_SW_BUFFER)
 555:.\Generated_Source\PSoC4/uart_UART.c ****         {
 556:.\Generated_Source\PSoC4/uart_UART.c ****             uart_DisableInt();
 557:.\Generated_Source\PSoC4/uart_UART.c ****         }
 558:.\Generated_Source\PSoC4/uart_UART.c ****         #endif
 559:.\Generated_Source\PSoC4/uart_UART.c **** 
 560:.\Generated_Source\PSoC4/uart_UART.c ****         if (0u != uart_SpiUartGetRxBufferSize())
 380              		.loc 1 560 0
 381 0006 FFF7FEFF 		bl	uart_SpiUartGetRxBufferSize
 382 000a 031E     		sub	r3, r0, #0
 383 000c 04D0     		beq	.L23
 561:.\Generated_Source\PSoC4/uart_UART.c ****         {
 562:.\Generated_Source\PSoC4/uart_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 563:.\Generated_Source\PSoC4/uart_UART.c ****             * buffer.
 564:.\Generated_Source\PSoC4/uart_UART.c ****             */
 565:.\Generated_Source\PSoC4/uart_UART.c ****             #if (uart_CHECK_RX_SW_BUFFER)
 566:.\Generated_Source\PSoC4/uart_UART.c ****             {            
 567:.\Generated_Source\PSoC4/uart_UART.c ****                 uart_EnableInt();
 568:.\Generated_Source\PSoC4/uart_UART.c ****             }
 569:.\Generated_Source\PSoC4/uart_UART.c ****             #endif
 570:.\Generated_Source\PSoC4/uart_UART.c **** 
 571:.\Generated_Source\PSoC4/uart_UART.c ****             /* Get received byte */
 572:.\Generated_Source\PSoC4/uart_UART.c ****             rxData = uart_SpiUartReadRxData();
 384              		.loc 1 572 0
 385 000e FFF7FEFF 		bl	uart_SpiUartReadRxData
 386 0012 031C     		mov	r3, r0
 387 0014 7B60     		str	r3, [r7, #4]
 388 0016 02E0     		b	.L24
 389              	.L23:
 573:.\Generated_Source\PSoC4/uart_UART.c ****         }
 574:.\Generated_Source\PSoC4/uart_UART.c ****         else
 575:.\Generated_Source\PSoC4/uart_UART.c ****         {
 576:.\Generated_Source\PSoC4/uart_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the case
 577:.\Generated_Source\PSoC4/uart_UART.c ****             * of empty. Otherwise the first received byte will be read.
 578:.\Generated_Source\PSoC4/uart_UART.c ****             */
 579:.\Generated_Source\PSoC4/uart_UART.c ****             rxData = uart_RX_FIFO_RD_REG;
 390              		.loc 1 579 0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 18


 391 0018 0B4B     		ldr	r3, .L26
 392 001a 1B68     		ldr	r3, [r3]
 393 001c 7B60     		str	r3, [r7, #4]
 394              	.L24:
 580:.\Generated_Source\PSoC4/uart_UART.c **** 
 581:.\Generated_Source\PSoC4/uart_UART.c ****             /* Enables interrupt to receive more bytes.
 582:.\Generated_Source\PSoC4/uart_UART.c ****             * The RX_NOT_EMPTY interrupt is cleared by the interrupt routine
 583:.\Generated_Source\PSoC4/uart_UART.c ****             * in case the byte was received and read by code above.
 584:.\Generated_Source\PSoC4/uart_UART.c ****             */
 585:.\Generated_Source\PSoC4/uart_UART.c ****             #if (uart_CHECK_RX_SW_BUFFER)
 586:.\Generated_Source\PSoC4/uart_UART.c ****             {
 587:.\Generated_Source\PSoC4/uart_UART.c ****                 uart_EnableInt();
 588:.\Generated_Source\PSoC4/uart_UART.c ****             }
 589:.\Generated_Source\PSoC4/uart_UART.c ****             #endif
 590:.\Generated_Source\PSoC4/uart_UART.c ****         }
 591:.\Generated_Source\PSoC4/uart_UART.c **** 
 592:.\Generated_Source\PSoC4/uart_UART.c ****         /* Get and clear RX error mask */
 593:.\Generated_Source\PSoC4/uart_UART.c ****         tmpStatus = (uart_GetRxInterruptSource() & uart_INTR_RX_ERR);
 395              		.loc 1 593 0
 396 001e 0B4B     		ldr	r3, .L26+4
 397 0020 1A68     		ldr	r2, [r3]
 398 0022 D823     		mov	r3, #216
 399 0024 9B00     		lsl	r3, r3, #2
 400 0026 1340     		and	r3, r2
 401 0028 3B60     		str	r3, [r7]
 594:.\Generated_Source\PSoC4/uart_UART.c ****         uart_ClearRxInterruptSource(uart_INTR_RX_ERR);
 402              		.loc 1 594 0
 403 002a 084B     		ldr	r3, .L26+4
 404 002c D822     		mov	r2, #216
 405 002e 9200     		lsl	r2, r2, #2
 406 0030 1A60     		str	r2, [r3]
 595:.\Generated_Source\PSoC4/uart_UART.c **** 
 596:.\Generated_Source\PSoC4/uart_UART.c ****         /* Puts together data and error status:
 597:.\Generated_Source\PSoC4/uart_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 598:.\Generated_Source\PSoC4/uart_UART.c ****         */
 599:.\Generated_Source\PSoC4/uart_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 407              		.loc 1 599 0
 408 0032 3B68     		ldr	r3, [r7]
 409 0034 1B02     		lsl	r3, r3, #8
 410 0036 7A68     		ldr	r2, [r7, #4]
 411 0038 1343     		orr	r3, r2
 412 003a 7B60     		str	r3, [r7, #4]
 600:.\Generated_Source\PSoC4/uart_UART.c **** 
 601:.\Generated_Source\PSoC4/uart_UART.c ****         return (rxData);
 413              		.loc 1 601 0
 414 003c 7B68     		ldr	r3, [r7, #4]
 602:.\Generated_Source\PSoC4/uart_UART.c ****     }
 415              		.loc 1 602 0
 416 003e 181C     		mov	r0, r3
 417 0040 BD46     		mov	sp, r7
 418 0042 02B0     		add	sp, sp, #8
 419              		@ sp needed
 420 0044 80BD     		pop	{r7, pc}
 421              	.L27:
 422 0046 C046     		.align	2
 423              	.L26:
 424 0048 40032440 		.word	1076101952
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 19


 425 004c C00F2440 		.word	1076105152
 426              		.cfi_endproc
 427              	.LFE8:
 428              		.size	uart_UartGetByte, .-uart_UartGetByte
 429              		.section	.text.uart_UartSetRtsPolarity,"ax",%progbits
 430              		.align	2
 431              		.global	uart_UartSetRtsPolarity
 432              		.code	16
 433              		.thumb_func
 434              		.type	uart_UartSetRtsPolarity, %function
 435              	uart_UartSetRtsPolarity:
 436              	.LFB9:
 603:.\Generated_Source\PSoC4/uart_UART.c **** 
 604:.\Generated_Source\PSoC4/uart_UART.c **** 
 605:.\Generated_Source\PSoC4/uart_UART.c ****     #if !(uart_CY_SCBIP_V0 || uart_CY_SCBIP_V1)
 606:.\Generated_Source\PSoC4/uart_UART.c ****         /*******************************************************************************
 607:.\Generated_Source\PSoC4/uart_UART.c ****         * Function Name: uart_UartSetRtsPolarity
 608:.\Generated_Source\PSoC4/uart_UART.c ****         ********************************************************************************
 609:.\Generated_Source\PSoC4/uart_UART.c ****         *
 610:.\Generated_Source\PSoC4/uart_UART.c ****         * Summary:
 611:.\Generated_Source\PSoC4/uart_UART.c ****         *  Sets active polarity of RTS output signal.
 612:.\Generated_Source\PSoC4/uart_UART.c ****         *
 613:.\Generated_Source\PSoC4/uart_UART.c ****         * Parameters:
 614:.\Generated_Source\PSoC4/uart_UART.c ****         *  polarity: Active polarity of RTS output signal.
 615:.\Generated_Source\PSoC4/uart_UART.c ****         *   uart_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
 616:.\Generated_Source\PSoC4/uart_UART.c ****         *   uart_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 617:.\Generated_Source\PSoC4/uart_UART.c ****         *
 618:.\Generated_Source\PSoC4/uart_UART.c ****         * Return:
 619:.\Generated_Source\PSoC4/uart_UART.c ****         *  None
 620:.\Generated_Source\PSoC4/uart_UART.c ****         *
 621:.\Generated_Source\PSoC4/uart_UART.c ****         *******************************************************************************/
 622:.\Generated_Source\PSoC4/uart_UART.c ****         void uart_UartSetRtsPolarity(uint32 polarity)
 623:.\Generated_Source\PSoC4/uart_UART.c ****         {
 437              		.loc 1 623 0
 438              		.cfi_startproc
 439 0000 80B5     		push	{r7, lr}
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 7, -8
 442              		.cfi_offset 14, -4
 443 0002 82B0     		sub	sp, sp, #8
 444              		.cfi_def_cfa_offset 16
 445 0004 00AF     		add	r7, sp, #0
 446              		.cfi_def_cfa_register 7
 447 0006 7860     		str	r0, [r7, #4]
 624:.\Generated_Source\PSoC4/uart_UART.c ****             if(0u != polarity)
 448              		.loc 1 624 0
 449 0008 7B68     		ldr	r3, [r7, #4]
 450 000a 002B     		cmp	r3, #0
 451 000c 07D0     		beq	.L29
 625:.\Generated_Source\PSoC4/uart_UART.c ****             {
 626:.\Generated_Source\PSoC4/uart_UART.c ****                 uart_UART_FLOW_CTRL_REG |= (uint32)  uart_UART_FLOW_CTRL_RTS_POLARITY;
 452              		.loc 1 626 0
 453 000e 084B     		ldr	r3, .L31
 454 0010 074A     		ldr	r2, .L31
 455 0012 1268     		ldr	r2, [r2]
 456 0014 8021     		mov	r1, #128
 457 0016 4902     		lsl	r1, r1, #9
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 20


 458 0018 0A43     		orr	r2, r1
 459 001a 1A60     		str	r2, [r3]
 460 001c 05E0     		b	.L28
 461              	.L29:
 627:.\Generated_Source\PSoC4/uart_UART.c ****             }
 628:.\Generated_Source\PSoC4/uart_UART.c ****             else
 629:.\Generated_Source\PSoC4/uart_UART.c ****             {
 630:.\Generated_Source\PSoC4/uart_UART.c ****                 uart_UART_FLOW_CTRL_REG &= (uint32) ~uart_UART_FLOW_CTRL_RTS_POLARITY;
 462              		.loc 1 630 0
 463 001e 044B     		ldr	r3, .L31
 464 0020 034A     		ldr	r2, .L31
 465 0022 1268     		ldr	r2, [r2]
 466 0024 0349     		ldr	r1, .L31+4
 467 0026 0A40     		and	r2, r1
 468 0028 1A60     		str	r2, [r3]
 469              	.L28:
 631:.\Generated_Source\PSoC4/uart_UART.c ****             }
 632:.\Generated_Source\PSoC4/uart_UART.c ****         }
 470              		.loc 1 632 0
 471 002a BD46     		mov	sp, r7
 472 002c 02B0     		add	sp, sp, #8
 473              		@ sp needed
 474 002e 80BD     		pop	{r7, pc}
 475              	.L32:
 476              		.align	2
 477              	.L31:
 478 0030 50002440 		.word	1076101200
 479 0034 FFFFFEFF 		.word	-65537
 480              		.cfi_endproc
 481              	.LFE9:
 482              		.size	uart_UartSetRtsPolarity, .-uart_UartSetRtsPolarity
 483              		.section	.text.uart_UartSetRtsFifoLevel,"ax",%progbits
 484              		.align	2
 485              		.global	uart_UartSetRtsFifoLevel
 486              		.code	16
 487              		.thumb_func
 488              		.type	uart_UartSetRtsFifoLevel, %function
 489              	uart_UartSetRtsFifoLevel:
 490              	.LFB10:
 633:.\Generated_Source\PSoC4/uart_UART.c **** 
 634:.\Generated_Source\PSoC4/uart_UART.c **** 
 635:.\Generated_Source\PSoC4/uart_UART.c ****         /*******************************************************************************
 636:.\Generated_Source\PSoC4/uart_UART.c ****         * Function Name: uart_UartSetRtsFifoLevel
 637:.\Generated_Source\PSoC4/uart_UART.c ****         ********************************************************************************
 638:.\Generated_Source\PSoC4/uart_UART.c ****         *
 639:.\Generated_Source\PSoC4/uart_UART.c ****         * Summary:
 640:.\Generated_Source\PSoC4/uart_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 641:.\Generated_Source\PSoC4/uart_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 642:.\Generated_Source\PSoC4/uart_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 643:.\Generated_Source\PSoC4/uart_UART.c ****         *
 644:.\Generated_Source\PSoC4/uart_UART.c ****         * Parameters:
 645:.\Generated_Source\PSoC4/uart_UART.c ****         *  level: Level in the RX FIFO for RTS signal activation.
 646:.\Generated_Source\PSoC4/uart_UART.c ****         *         The range of valid level values is between 0 and RX FIFO depth - 1.
 647:.\Generated_Source\PSoC4/uart_UART.c ****         *         Setting level value to 0 disables RTS signal activation.
 648:.\Generated_Source\PSoC4/uart_UART.c ****         *
 649:.\Generated_Source\PSoC4/uart_UART.c ****         * Return:
 650:.\Generated_Source\PSoC4/uart_UART.c ****         *  None
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 21


 651:.\Generated_Source\PSoC4/uart_UART.c ****         *
 652:.\Generated_Source\PSoC4/uart_UART.c ****         *******************************************************************************/
 653:.\Generated_Source\PSoC4/uart_UART.c ****         void uart_UartSetRtsFifoLevel(uint32 level)
 654:.\Generated_Source\PSoC4/uart_UART.c ****         {
 491              		.loc 1 654 0
 492              		.cfi_startproc
 493 0000 80B5     		push	{r7, lr}
 494              		.cfi_def_cfa_offset 8
 495              		.cfi_offset 7, -8
 496              		.cfi_offset 14, -4
 497 0002 84B0     		sub	sp, sp, #16
 498              		.cfi_def_cfa_offset 24
 499 0004 00AF     		add	r7, sp, #0
 500              		.cfi_def_cfa_register 7
 501 0006 7860     		str	r0, [r7, #4]
 655:.\Generated_Source\PSoC4/uart_UART.c ****             uint32 uartFlowCtrl;
 656:.\Generated_Source\PSoC4/uart_UART.c **** 
 657:.\Generated_Source\PSoC4/uart_UART.c ****             uartFlowCtrl = uart_UART_FLOW_CTRL_REG;
 502              		.loc 1 657 0
 503 0008 094B     		ldr	r3, .L34
 504 000a 1B68     		ldr	r3, [r3]
 505 000c FB60     		str	r3, [r7, #12]
 658:.\Generated_Source\PSoC4/uart_UART.c **** 
 659:.\Generated_Source\PSoC4/uart_UART.c ****             uartFlowCtrl &= ((uint32) ~uart_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask
 506              		.loc 1 659 0
 507 000e FB68     		ldr	r3, [r7, #12]
 508 0010 0F22     		mov	r2, #15
 509 0012 9343     		bic	r3, r2
 510 0014 FB60     		str	r3, [r7, #12]
 660:.\Generated_Source\PSoC4/uart_UART.c ****             uartFlowCtrl |= ((uint32) (uart_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 511              		.loc 1 660 0
 512 0016 7B68     		ldr	r3, [r7, #4]
 513 0018 0F22     		mov	r2, #15
 514 001a 1340     		and	r3, r2
 515 001c FA68     		ldr	r2, [r7, #12]
 516 001e 1343     		orr	r3, r2
 517 0020 FB60     		str	r3, [r7, #12]
 661:.\Generated_Source\PSoC4/uart_UART.c **** 
 662:.\Generated_Source\PSoC4/uart_UART.c ****             uart_UART_FLOW_CTRL_REG = uartFlowCtrl;
 518              		.loc 1 662 0
 519 0022 034B     		ldr	r3, .L34
 520 0024 FA68     		ldr	r2, [r7, #12]
 521 0026 1A60     		str	r2, [r3]
 663:.\Generated_Source\PSoC4/uart_UART.c ****         }
 522              		.loc 1 663 0
 523 0028 BD46     		mov	sp, r7
 524 002a 04B0     		add	sp, sp, #16
 525              		@ sp needed
 526 002c 80BD     		pop	{r7, pc}
 527              	.L35:
 528 002e C046     		.align	2
 529              	.L34:
 530 0030 50002440 		.word	1076101200
 531              		.cfi_endproc
 532              	.LFE10:
 533              		.size	uart_UartSetRtsFifoLevel, .-uart_UartSetRtsFifoLevel
 534              		.section	.text.uart_UartPutString,"ax",%progbits
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 22


 535              		.align	2
 536              		.global	uart_UartPutString
 537              		.code	16
 538              		.thumb_func
 539              		.type	uart_UartPutString, %function
 540              	uart_UartPutString:
 541              	.LFB11:
 664:.\Generated_Source\PSoC4/uart_UART.c ****     #endif /* !(uart_CY_SCBIP_V0 || uart_CY_SCBIP_V1) */
 665:.\Generated_Source\PSoC4/uart_UART.c **** 
 666:.\Generated_Source\PSoC4/uart_UART.c **** #endif /* (uart_UART_RX_DIRECTION) */
 667:.\Generated_Source\PSoC4/uart_UART.c **** 
 668:.\Generated_Source\PSoC4/uart_UART.c **** 
 669:.\Generated_Source\PSoC4/uart_UART.c **** #if(uart_UART_TX_DIRECTION)
 670:.\Generated_Source\PSoC4/uart_UART.c ****     /*******************************************************************************
 671:.\Generated_Source\PSoC4/uart_UART.c ****     * Function Name: uart_UartPutString
 672:.\Generated_Source\PSoC4/uart_UART.c ****     ********************************************************************************
 673:.\Generated_Source\PSoC4/uart_UART.c ****     *
 674:.\Generated_Source\PSoC4/uart_UART.c ****     * Summary:
 675:.\Generated_Source\PSoC4/uart_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 676:.\Generated_Source\PSoC4/uart_UART.c ****     *  next available bus time.
 677:.\Generated_Source\PSoC4/uart_UART.c ****     *  This function is blocking and waits until there is space available to put
 678:.\Generated_Source\PSoC4/uart_UART.c ****     *  all the requested data into the  transmit buffer.
 679:.\Generated_Source\PSoC4/uart_UART.c ****     *
 680:.\Generated_Source\PSoC4/uart_UART.c ****     * Parameters:
 681:.\Generated_Source\PSoC4/uart_UART.c ****     *  string: pointer to the null terminated string array to be placed in the
 682:.\Generated_Source\PSoC4/uart_UART.c ****     *          transmit buffer.
 683:.\Generated_Source\PSoC4/uart_UART.c ****     *
 684:.\Generated_Source\PSoC4/uart_UART.c ****     * Return:
 685:.\Generated_Source\PSoC4/uart_UART.c ****     *  None
 686:.\Generated_Source\PSoC4/uart_UART.c ****     *
 687:.\Generated_Source\PSoC4/uart_UART.c ****     *******************************************************************************/
 688:.\Generated_Source\PSoC4/uart_UART.c ****     void uart_UartPutString(const char8 string[])
 689:.\Generated_Source\PSoC4/uart_UART.c ****     {
 542              		.loc 1 689 0
 543              		.cfi_startproc
 544 0000 80B5     		push	{r7, lr}
 545              		.cfi_def_cfa_offset 8
 546              		.cfi_offset 7, -8
 547              		.cfi_offset 14, -4
 548 0002 84B0     		sub	sp, sp, #16
 549              		.cfi_def_cfa_offset 24
 550 0004 00AF     		add	r7, sp, #0
 551              		.cfi_def_cfa_register 7
 552 0006 7860     		str	r0, [r7, #4]
 690:.\Generated_Source\PSoC4/uart_UART.c ****         uint32 bufIndex;
 691:.\Generated_Source\PSoC4/uart_UART.c **** 
 692:.\Generated_Source\PSoC4/uart_UART.c ****         bufIndex = 0u;
 553              		.loc 1 692 0
 554 0008 0023     		mov	r3, #0
 555 000a FB60     		str	r3, [r7, #12]
 693:.\Generated_Source\PSoC4/uart_UART.c **** 
 694:.\Generated_Source\PSoC4/uart_UART.c ****         /* Blocks the control flow until all data has been sent */
 695:.\Generated_Source\PSoC4/uart_UART.c ****         while(string[bufIndex] != ((char8) 0))
 556              		.loc 1 695 0
 557 000c 09E0     		b	.L37
 558              	.L38:
 696:.\Generated_Source\PSoC4/uart_UART.c ****         {
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 23


 697:.\Generated_Source\PSoC4/uart_UART.c ****             uart_UartPutChar((uint32) string[bufIndex]);
 559              		.loc 1 697 0
 560 000e 7A68     		ldr	r2, [r7, #4]
 561 0010 FB68     		ldr	r3, [r7, #12]
 562 0012 D318     		add	r3, r2, r3
 563 0014 1B78     		ldrb	r3, [r3]
 564 0016 181C     		mov	r0, r3
 565 0018 FFF7FEFF 		bl	uart_SpiUartWriteTxData
 698:.\Generated_Source\PSoC4/uart_UART.c ****             bufIndex++;
 566              		.loc 1 698 0
 567 001c FB68     		ldr	r3, [r7, #12]
 568 001e 0133     		add	r3, r3, #1
 569 0020 FB60     		str	r3, [r7, #12]
 570              	.L37:
 695:.\Generated_Source\PSoC4/uart_UART.c ****         {
 571              		.loc 1 695 0
 572 0022 7A68     		ldr	r2, [r7, #4]
 573 0024 FB68     		ldr	r3, [r7, #12]
 574 0026 D318     		add	r3, r2, r3
 575 0028 1B78     		ldrb	r3, [r3]
 576 002a 002B     		cmp	r3, #0
 577 002c EFD1     		bne	.L38
 699:.\Generated_Source\PSoC4/uart_UART.c ****         }
 700:.\Generated_Source\PSoC4/uart_UART.c ****     }
 578              		.loc 1 700 0
 579 002e BD46     		mov	sp, r7
 580 0030 04B0     		add	sp, sp, #16
 581              		@ sp needed
 582 0032 80BD     		pop	{r7, pc}
 583              		.cfi_endproc
 584              	.LFE11:
 585              		.size	uart_UartPutString, .-uart_UartPutString
 586              		.section	.text.uart_UartPutCRLF,"ax",%progbits
 587              		.align	2
 588              		.global	uart_UartPutCRLF
 589              		.code	16
 590              		.thumb_func
 591              		.type	uart_UartPutCRLF, %function
 592              	uart_UartPutCRLF:
 593              	.LFB12:
 701:.\Generated_Source\PSoC4/uart_UART.c **** 
 702:.\Generated_Source\PSoC4/uart_UART.c **** 
 703:.\Generated_Source\PSoC4/uart_UART.c ****     /*******************************************************************************
 704:.\Generated_Source\PSoC4/uart_UART.c ****     * Function Name: uart_UartPutCRLF
 705:.\Generated_Source\PSoC4/uart_UART.c ****     ********************************************************************************
 706:.\Generated_Source\PSoC4/uart_UART.c ****     *
 707:.\Generated_Source\PSoC4/uart_UART.c ****     * Summary:
 708:.\Generated_Source\PSoC4/uart_UART.c ****     *  Places a byte of data followed by a carriage return (0x0D) and
 709:.\Generated_Source\PSoC4/uart_UART.c ****     *  line feed (0x0A) into the transmit buffer.
 710:.\Generated_Source\PSoC4/uart_UART.c ****     *  This function is blocking and waits until there is space available to put
 711:.\Generated_Source\PSoC4/uart_UART.c ****     *  all the requested data into the  transmit buffer.
 712:.\Generated_Source\PSoC4/uart_UART.c ****     *
 713:.\Generated_Source\PSoC4/uart_UART.c ****     * Parameters:
 714:.\Generated_Source\PSoC4/uart_UART.c ****     *  txDataByte : the data to be transmitted.
 715:.\Generated_Source\PSoC4/uart_UART.c ****     *
 716:.\Generated_Source\PSoC4/uart_UART.c ****     * Return:
 717:.\Generated_Source\PSoC4/uart_UART.c ****     *  None
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 24


 718:.\Generated_Source\PSoC4/uart_UART.c ****     *
 719:.\Generated_Source\PSoC4/uart_UART.c ****     *******************************************************************************/
 720:.\Generated_Source\PSoC4/uart_UART.c ****     void uart_UartPutCRLF(uint32 txDataByte)
 721:.\Generated_Source\PSoC4/uart_UART.c ****     {
 594              		.loc 1 721 0
 595              		.cfi_startproc
 596 0000 80B5     		push	{r7, lr}
 597              		.cfi_def_cfa_offset 8
 598              		.cfi_offset 7, -8
 599              		.cfi_offset 14, -4
 600 0002 82B0     		sub	sp, sp, #8
 601              		.cfi_def_cfa_offset 16
 602 0004 00AF     		add	r7, sp, #0
 603              		.cfi_def_cfa_register 7
 604 0006 7860     		str	r0, [r7, #4]
 722:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
 605              		.loc 1 722 0
 606 0008 7B68     		ldr	r3, [r7, #4]
 607 000a 181C     		mov	r0, r3
 608 000c FFF7FEFF 		bl	uart_SpiUartWriteTxData
 723:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 609              		.loc 1 723 0
 610 0010 0D20     		mov	r0, #13
 611 0012 FFF7FEFF 		bl	uart_SpiUartWriteTxData
 724:.\Generated_Source\PSoC4/uart_UART.c ****         uart_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 612              		.loc 1 724 0
 613 0016 0A20     		mov	r0, #10
 614 0018 FFF7FEFF 		bl	uart_SpiUartWriteTxData
 725:.\Generated_Source\PSoC4/uart_UART.c ****     }
 615              		.loc 1 725 0
 616 001c BD46     		mov	sp, r7
 617 001e 02B0     		add	sp, sp, #8
 618              		@ sp needed
 619 0020 80BD     		pop	{r7, pc}
 620              		.cfi_endproc
 621              	.LFE12:
 622              		.size	uart_UartPutCRLF, .-uart_UartPutCRLF
 623 0022 C046     		.section	.text.uart_UartEnableCts,"ax",%progbits
 624              		.align	2
 625              		.global	uart_UartEnableCts
 626              		.code	16
 627              		.thumb_func
 628              		.type	uart_UartEnableCts, %function
 629              	uart_UartEnableCts:
 630              	.LFB13:
 726:.\Generated_Source\PSoC4/uart_UART.c **** 
 727:.\Generated_Source\PSoC4/uart_UART.c **** 
 728:.\Generated_Source\PSoC4/uart_UART.c ****     #if !(uart_CY_SCBIP_V0 || uart_CY_SCBIP_V1)
 729:.\Generated_Source\PSoC4/uart_UART.c ****         /*******************************************************************************
 730:.\Generated_Source\PSoC4/uart_UART.c ****         * Function Name: uartSCB_UartEnableCts
 731:.\Generated_Source\PSoC4/uart_UART.c ****         ********************************************************************************
 732:.\Generated_Source\PSoC4/uart_UART.c ****         *
 733:.\Generated_Source\PSoC4/uart_UART.c ****         * Summary:
 734:.\Generated_Source\PSoC4/uart_UART.c ****         *  Enables usage of CTS input signal by the UART transmitter.
 735:.\Generated_Source\PSoC4/uart_UART.c ****         *
 736:.\Generated_Source\PSoC4/uart_UART.c ****         * Parameters:
 737:.\Generated_Source\PSoC4/uart_UART.c ****         *  None
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 25


 738:.\Generated_Source\PSoC4/uart_UART.c ****         *
 739:.\Generated_Source\PSoC4/uart_UART.c ****         * Return:
 740:.\Generated_Source\PSoC4/uart_UART.c ****         *  None
 741:.\Generated_Source\PSoC4/uart_UART.c ****         *
 742:.\Generated_Source\PSoC4/uart_UART.c ****         *******************************************************************************/
 743:.\Generated_Source\PSoC4/uart_UART.c ****         void uart_UartEnableCts(void)
 744:.\Generated_Source\PSoC4/uart_UART.c ****         {
 631              		.loc 1 744 0
 632              		.cfi_startproc
 633 0000 80B5     		push	{r7, lr}
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 7, -8
 636              		.cfi_offset 14, -4
 637 0002 00AF     		add	r7, sp, #0
 638              		.cfi_def_cfa_register 7
 745:.\Generated_Source\PSoC4/uart_UART.c ****             uart_UART_FLOW_CTRL_REG |= (uint32)  uart_UART_FLOW_CTRL_CTS_ENABLE;
 639              		.loc 1 745 0
 640 0004 044B     		ldr	r3, .L41
 641 0006 044A     		ldr	r2, .L41
 642 0008 1268     		ldr	r2, [r2]
 643 000a 8021     		mov	r1, #128
 644 000c 8904     		lsl	r1, r1, #18
 645 000e 0A43     		orr	r2, r1
 646 0010 1A60     		str	r2, [r3]
 746:.\Generated_Source\PSoC4/uart_UART.c ****         }
 647              		.loc 1 746 0
 648 0012 BD46     		mov	sp, r7
 649              		@ sp needed
 650 0014 80BD     		pop	{r7, pc}
 651              	.L42:
 652 0016 C046     		.align	2
 653              	.L41:
 654 0018 50002440 		.word	1076101200
 655              		.cfi_endproc
 656              	.LFE13:
 657              		.size	uart_UartEnableCts, .-uart_UartEnableCts
 658              		.section	.text.uart_UartDisableCts,"ax",%progbits
 659              		.align	2
 660              		.global	uart_UartDisableCts
 661              		.code	16
 662              		.thumb_func
 663              		.type	uart_UartDisableCts, %function
 664              	uart_UartDisableCts:
 665              	.LFB14:
 747:.\Generated_Source\PSoC4/uart_UART.c **** 
 748:.\Generated_Source\PSoC4/uart_UART.c **** 
 749:.\Generated_Source\PSoC4/uart_UART.c ****         /*******************************************************************************
 750:.\Generated_Source\PSoC4/uart_UART.c ****         * Function Name: uart_UartDisableCts
 751:.\Generated_Source\PSoC4/uart_UART.c ****         ********************************************************************************
 752:.\Generated_Source\PSoC4/uart_UART.c ****         *
 753:.\Generated_Source\PSoC4/uart_UART.c ****         * Summary:
 754:.\Generated_Source\PSoC4/uart_UART.c ****         *  Disables usage of CTS input signal by the UART transmitter.
 755:.\Generated_Source\PSoC4/uart_UART.c ****         *
 756:.\Generated_Source\PSoC4/uart_UART.c ****         * Parameters:
 757:.\Generated_Source\PSoC4/uart_UART.c ****         *  None
 758:.\Generated_Source\PSoC4/uart_UART.c ****         *
 759:.\Generated_Source\PSoC4/uart_UART.c ****         * Return:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 26


 760:.\Generated_Source\PSoC4/uart_UART.c ****         *  None
 761:.\Generated_Source\PSoC4/uart_UART.c ****         *
 762:.\Generated_Source\PSoC4/uart_UART.c ****         *******************************************************************************/
 763:.\Generated_Source\PSoC4/uart_UART.c ****         void uart_UartDisableCts(void)
 764:.\Generated_Source\PSoC4/uart_UART.c ****         {
 666              		.loc 1 764 0
 667              		.cfi_startproc
 668 0000 80B5     		push	{r7, lr}
 669              		.cfi_def_cfa_offset 8
 670              		.cfi_offset 7, -8
 671              		.cfi_offset 14, -4
 672 0002 00AF     		add	r7, sp, #0
 673              		.cfi_def_cfa_register 7
 765:.\Generated_Source\PSoC4/uart_UART.c ****             uart_UART_FLOW_CTRL_REG &= (uint32) ~uart_UART_FLOW_CTRL_CTS_ENABLE;
 674              		.loc 1 765 0
 675 0004 034B     		ldr	r3, .L44
 676 0006 034A     		ldr	r2, .L44
 677 0008 1268     		ldr	r2, [r2]
 678 000a 0349     		ldr	r1, .L44+4
 679 000c 0A40     		and	r2, r1
 680 000e 1A60     		str	r2, [r3]
 766:.\Generated_Source\PSoC4/uart_UART.c ****         }
 681              		.loc 1 766 0
 682 0010 BD46     		mov	sp, r7
 683              		@ sp needed
 684 0012 80BD     		pop	{r7, pc}
 685              	.L45:
 686              		.align	2
 687              	.L44:
 688 0014 50002440 		.word	1076101200
 689 0018 FFFFFFFD 		.word	-33554433
 690              		.cfi_endproc
 691              	.LFE14:
 692              		.size	uart_UartDisableCts, .-uart_UartDisableCts
 693              		.section	.text.uart_UartSetCtsPolarity,"ax",%progbits
 694              		.align	2
 695              		.global	uart_UartSetCtsPolarity
 696              		.code	16
 697              		.thumb_func
 698              		.type	uart_UartSetCtsPolarity, %function
 699              	uart_UartSetCtsPolarity:
 700              	.LFB15:
 767:.\Generated_Source\PSoC4/uart_UART.c **** 
 768:.\Generated_Source\PSoC4/uart_UART.c **** 
 769:.\Generated_Source\PSoC4/uart_UART.c ****         /*******************************************************************************
 770:.\Generated_Source\PSoC4/uart_UART.c ****         * Function Name: uart_UartSetCtsPolarity
 771:.\Generated_Source\PSoC4/uart_UART.c ****         ********************************************************************************
 772:.\Generated_Source\PSoC4/uart_UART.c ****         *
 773:.\Generated_Source\PSoC4/uart_UART.c ****         * Summary:
 774:.\Generated_Source\PSoC4/uart_UART.c ****         *  Sets active polarity of CTS input signal.
 775:.\Generated_Source\PSoC4/uart_UART.c ****         *
 776:.\Generated_Source\PSoC4/uart_UART.c ****         * Parameters:
 777:.\Generated_Source\PSoC4/uart_UART.c ****         *  polarity: Active polarity of CTS output signal.
 778:.\Generated_Source\PSoC4/uart_UART.c ****         *   uart_UART_CTS_ACTIVE_LOW  - CTS signal is active low.
 779:.\Generated_Source\PSoC4/uart_UART.c ****         *   uart_UART_CTS_ACTIVE_HIGH - CTS signal is active high.
 780:.\Generated_Source\PSoC4/uart_UART.c ****         *
 781:.\Generated_Source\PSoC4/uart_UART.c ****         * Return:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 27


 782:.\Generated_Source\PSoC4/uart_UART.c ****         *  None
 783:.\Generated_Source\PSoC4/uart_UART.c ****         *
 784:.\Generated_Source\PSoC4/uart_UART.c ****         *******************************************************************************/
 785:.\Generated_Source\PSoC4/uart_UART.c ****         void uart_UartSetCtsPolarity(uint32 polarity)
 786:.\Generated_Source\PSoC4/uart_UART.c ****         {
 701              		.loc 1 786 0
 702              		.cfi_startproc
 703 0000 80B5     		push	{r7, lr}
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 7, -8
 706              		.cfi_offset 14, -4
 707 0002 82B0     		sub	sp, sp, #8
 708              		.cfi_def_cfa_offset 16
 709 0004 00AF     		add	r7, sp, #0
 710              		.cfi_def_cfa_register 7
 711 0006 7860     		str	r0, [r7, #4]
 787:.\Generated_Source\PSoC4/uart_UART.c ****             if (0u != polarity)
 712              		.loc 1 787 0
 713 0008 7B68     		ldr	r3, [r7, #4]
 714 000a 002B     		cmp	r3, #0
 715 000c 07D0     		beq	.L47
 788:.\Generated_Source\PSoC4/uart_UART.c ****             {
 789:.\Generated_Source\PSoC4/uart_UART.c ****                 uart_UART_FLOW_CTRL_REG |= (uint32)  uart_UART_FLOW_CTRL_CTS_POLARITY;
 716              		.loc 1 789 0
 717 000e 084B     		ldr	r3, .L49
 718 0010 074A     		ldr	r2, .L49
 719 0012 1268     		ldr	r2, [r2]
 720 0014 8021     		mov	r1, #128
 721 0016 4904     		lsl	r1, r1, #17
 722 0018 0A43     		orr	r2, r1
 723 001a 1A60     		str	r2, [r3]
 724 001c 05E0     		b	.L46
 725              	.L47:
 790:.\Generated_Source\PSoC4/uart_UART.c ****             }
 791:.\Generated_Source\PSoC4/uart_UART.c ****             else
 792:.\Generated_Source\PSoC4/uart_UART.c ****             {
 793:.\Generated_Source\PSoC4/uart_UART.c ****                 uart_UART_FLOW_CTRL_REG &= (uint32) ~uart_UART_FLOW_CTRL_CTS_POLARITY;
 726              		.loc 1 793 0
 727 001e 044B     		ldr	r3, .L49
 728 0020 034A     		ldr	r2, .L49
 729 0022 1268     		ldr	r2, [r2]
 730 0024 0349     		ldr	r1, .L49+4
 731 0026 0A40     		and	r2, r1
 732 0028 1A60     		str	r2, [r3]
 733              	.L46:
 794:.\Generated_Source\PSoC4/uart_UART.c ****             }
 795:.\Generated_Source\PSoC4/uart_UART.c ****         }
 734              		.loc 1 795 0
 735 002a BD46     		mov	sp, r7
 736 002c 02B0     		add	sp, sp, #8
 737              		@ sp needed
 738 002e 80BD     		pop	{r7, pc}
 739              	.L50:
 740              		.align	2
 741              	.L49:
 742 0030 50002440 		.word	1076101200
 743 0034 FFFFFFFE 		.word	-16777217
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 28


 744              		.cfi_endproc
 745              	.LFE15:
 746              		.size	uart_UartSetCtsPolarity, .-uart_UartSetCtsPolarity
 747              		.text
 748              	.Letext0:
 749              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 750              		.section	.debug_info,"",%progbits
 751              	.Ldebug_info0:
 752 0000 B6020000 		.4byte	0x2b6
 753 0004 0400     		.2byte	0x4
 754 0006 00000000 		.4byte	.Ldebug_abbrev0
 755 000a 04       		.byte	0x4
 756 000b 01       		.uleb128 0x1
 757 000c 75010000 		.4byte	.LASF40
 758 0010 01       		.byte	0x1
 759 0011 CE020000 		.4byte	.LASF41
 760 0015 AC000000 		.4byte	.LASF42
 761 0019 00000000 		.4byte	.Ldebug_ranges0+0
 762 001d 00000000 		.4byte	0
 763 0021 00000000 		.4byte	.Ldebug_line0
 764 0025 02       		.uleb128 0x2
 765 0026 01       		.byte	0x1
 766 0027 06       		.byte	0x6
 767 0028 2A030000 		.4byte	.LASF0
 768 002c 02       		.uleb128 0x2
 769 002d 01       		.byte	0x1
 770 002e 08       		.byte	0x8
 771 002f 8B000000 		.4byte	.LASF1
 772 0033 02       		.uleb128 0x2
 773 0034 02       		.byte	0x2
 774 0035 05       		.byte	0x5
 775 0036 F3020000 		.4byte	.LASF2
 776 003a 02       		.uleb128 0x2
 777 003b 02       		.byte	0x2
 778 003c 07       		.byte	0x7
 779 003d 21010000 		.4byte	.LASF3
 780 0041 02       		.uleb128 0x2
 781 0042 04       		.byte	0x4
 782 0043 05       		.byte	0x5
 783 0044 FD020000 		.4byte	.LASF4
 784 0048 02       		.uleb128 0x2
 785 0049 04       		.byte	0x4
 786 004a 07       		.byte	0x7
 787 004b 0F010000 		.4byte	.LASF5
 788 004f 02       		.uleb128 0x2
 789 0050 08       		.byte	0x8
 790 0051 05       		.byte	0x5
 791 0052 00000000 		.4byte	.LASF6
 792 0056 02       		.uleb128 0x2
 793 0057 08       		.byte	0x8
 794 0058 07       		.byte	0x7
 795 0059 43020000 		.4byte	.LASF7
 796 005d 03       		.uleb128 0x3
 797 005e 04       		.byte	0x4
 798 005f 05       		.byte	0x5
 799 0060 696E7400 		.ascii	"int\000"
 800 0064 02       		.uleb128 0x2
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 29


 801 0065 04       		.byte	0x4
 802 0066 07       		.byte	0x7
 803 0067 20020000 		.4byte	.LASF8
 804 006b 04       		.uleb128 0x4
 805 006c 19020000 		.4byte	.LASF11
 806 0070 02       		.byte	0x2
 807 0071 9401     		.2byte	0x194
 808 0073 48000000 		.4byte	0x48
 809 0077 02       		.uleb128 0x2
 810 0078 04       		.byte	0x4
 811 0079 04       		.byte	0x4
 812 007a 71000000 		.4byte	.LASF9
 813 007e 02       		.uleb128 0x2
 814 007f 08       		.byte	0x8
 815 0080 04       		.byte	0x4
 816 0081 6E010000 		.4byte	.LASF10
 817 0085 04       		.uleb128 0x4
 818 0086 8F020000 		.4byte	.LASF12
 819 008a 02       		.byte	0x2
 820 008b A301     		.2byte	0x1a3
 821 008d 91000000 		.4byte	0x91
 822 0091 02       		.uleb128 0x2
 823 0092 01       		.byte	0x1
 824 0093 08       		.byte	0x8
 825 0094 B8020000 		.4byte	.LASF13
 826 0098 04       		.uleb128 0x4
 827 0099 0E000000 		.4byte	.LASF14
 828 009d 02       		.byte	0x2
 829 009e 3E02     		.2byte	0x23e
 830 00a0 A4000000 		.4byte	0xa4
 831 00a4 05       		.uleb128 0x5
 832 00a5 6B000000 		.4byte	0x6b
 833 00a9 02       		.uleb128 0x2
 834 00aa 04       		.byte	0x4
 835 00ab 07       		.byte	0x7
 836 00ac 86020000 		.4byte	.LASF15
 837 00b0 06       		.uleb128 0x6
 838 00b1 63000000 		.4byte	.LASF16
 839 00b5 01       		.byte	0x1
 840 00b6 E6       		.byte	0xe6
 841 00b7 00000000 		.4byte	.LFB2
 842 00bb B0000000 		.4byte	.LFE2-.LFB2
 843 00bf 01       		.uleb128 0x1
 844 00c0 9C       		.byte	0x9c
 845 00c1 07       		.uleb128 0x7
 846 00c2 77000000 		.4byte	.LASF17
 847 00c6 01       		.byte	0x1
 848 00c7 3001     		.2byte	0x130
 849 00c9 00000000 		.4byte	.LFB3
 850 00cd 24000000 		.4byte	.LFE3-.LFB3
 851 00d1 01       		.uleb128 0x1
 852 00d2 9C       		.byte	0x9c
 853 00d3 07       		.uleb128 0x7
 854 00d4 2D020000 		.4byte	.LASF18
 855 00d8 01       		.byte	0x1
 856 00d9 6901     		.2byte	0x169
 857 00db 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 30


 858 00df 1C000000 		.4byte	.LFE4-.LFB4
 859 00e3 01       		.uleb128 0x1
 860 00e4 9C       		.byte	0x9c
 861 00e5 08       		.uleb128 0x8
 862 00e6 03020000 		.4byte	.LASF19
 863 00ea 01       		.byte	0x1
 864 00eb AB01     		.2byte	0x1ab
 865 00ed 00000000 		.4byte	.LFB5
 866 00f1 34000000 		.4byte	.LFE5-.LFB5
 867 00f5 01       		.uleb128 0x1
 868 00f6 9C       		.byte	0x9c
 869 00f7 1A010000 		.4byte	0x11a
 870 00fb 09       		.uleb128 0x9
 871 00fc 3B020000 		.4byte	.LASF21
 872 0100 01       		.byte	0x1
 873 0101 AB01     		.2byte	0x1ab
 874 0103 6B000000 		.4byte	0x6b
 875 0107 02       		.uleb128 0x2
 876 0108 91       		.byte	0x91
 877 0109 6C       		.sleb128 -20
 878 010a 0A       		.uleb128 0xa
 879 010b 10030000 		.4byte	.LASF23
 880 010f 01       		.byte	0x1
 881 0110 AD01     		.2byte	0x1ad
 882 0112 6B000000 		.4byte	0x6b
 883 0116 02       		.uleb128 0x2
 884 0117 91       		.byte	0x91
 885 0118 74       		.sleb128 -12
 886 0119 00       		.byte	0
 887 011a 08       		.uleb128 0x8
 888 011b 6C020000 		.4byte	.LASF20
 889 011f 01       		.byte	0x1
 890 0120 C801     		.2byte	0x1c8
 891 0122 00000000 		.4byte	.LFB6
 892 0126 34000000 		.4byte	.LFE6-.LFB6
 893 012a 01       		.uleb128 0x1
 894 012b 9C       		.byte	0x9c
 895 012c 4F010000 		.4byte	0x14f
 896 0130 09       		.uleb128 0x9
 897 0131 4F010000 		.4byte	.LASF22
 898 0135 01       		.byte	0x1
 899 0136 C801     		.2byte	0x1c8
 900 0138 6B000000 		.4byte	0x6b
 901 013c 02       		.uleb128 0x2
 902 013d 91       		.byte	0x91
 903 013e 6C       		.sleb128 -20
 904 013f 0A       		.uleb128 0xa
 905 0140 10030000 		.4byte	.LASF23
 906 0144 01       		.byte	0x1
 907 0145 CA01     		.2byte	0x1ca
 908 0147 6B000000 		.4byte	0x6b
 909 014b 02       		.uleb128 0x2
 910 014c 91       		.byte	0x91
 911 014d 74       		.sleb128 -12
 912 014e 00       		.byte	0
 913 014f 0B       		.uleb128 0xb
 914 0150 4B000000 		.4byte	.LASF25
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 31


 915 0154 01       		.byte	0x1
 916 0155 F501     		.2byte	0x1f5
 917 0157 6B000000 		.4byte	0x6b
 918 015b 00000000 		.4byte	.LFB7
 919 015f 40000000 		.4byte	.LFE7-.LFB7
 920 0163 01       		.uleb128 0x1
 921 0164 9C       		.byte	0x9c
 922 0165 79010000 		.4byte	0x179
 923 0169 0A       		.uleb128 0xa
 924 016a 48010000 		.4byte	.LASF24
 925 016e 01       		.byte	0x1
 926 016f F701     		.2byte	0x1f7
 927 0171 6B000000 		.4byte	0x6b
 928 0175 02       		.uleb128 0x2
 929 0176 91       		.byte	0x91
 930 0177 74       		.sleb128 -12
 931 0178 00       		.byte	0
 932 0179 0B       		.uleb128 0xb
 933 017a BD020000 		.4byte	.LASF26
 934 017e 01       		.byte	0x1
 935 017f 2502     		.2byte	0x225
 936 0181 6B000000 		.4byte	0x6b
 937 0185 00000000 		.4byte	.LFB8
 938 0189 50000000 		.4byte	.LFE8-.LFB8
 939 018d 01       		.uleb128 0x1
 940 018e 9C       		.byte	0x9c
 941 018f B2010000 		.4byte	0x1b2
 942 0193 0A       		.uleb128 0xa
 943 0194 48010000 		.4byte	.LASF24
 944 0198 01       		.byte	0x1
 945 0199 2702     		.2byte	0x227
 946 019b 6B000000 		.4byte	0x6b
 947 019f 02       		.uleb128 0x2
 948 01a0 91       		.byte	0x91
 949 01a1 74       		.sleb128 -12
 950 01a2 0A       		.uleb128 0xa
 951 01a3 06030000 		.4byte	.LASF27
 952 01a7 01       		.byte	0x1
 953 01a8 2802     		.2byte	0x228
 954 01aa 6B000000 		.4byte	0x6b
 955 01ae 02       		.uleb128 0x2
 956 01af 91       		.byte	0x91
 957 01b0 70       		.sleb128 -16
 958 01b1 00       		.byte	0
 959 01b2 08       		.uleb128 0x8
 960 01b3 2D000000 		.4byte	.LASF28
 961 01b7 01       		.byte	0x1
 962 01b8 6E02     		.2byte	0x26e
 963 01ba 00000000 		.4byte	.LFB9
 964 01be 38000000 		.4byte	.LFE9-.LFB9
 965 01c2 01       		.uleb128 0x1
 966 01c3 9C       		.byte	0x9c
 967 01c4 D8010000 		.4byte	0x1d8
 968 01c8 09       		.uleb128 0x9
 969 01c9 5A020000 		.4byte	.LASF29
 970 01cd 01       		.byte	0x1
 971 01ce 6E02     		.2byte	0x26e
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 32


 972 01d0 6B000000 		.4byte	0x6b
 973 01d4 02       		.uleb128 0x2
 974 01d5 91       		.byte	0x91
 975 01d6 74       		.sleb128 -12
 976 01d7 00       		.byte	0
 977 01d8 08       		.uleb128 0x8
 978 01d9 14000000 		.4byte	.LASF30
 979 01dd 01       		.byte	0x1
 980 01de 8D02     		.2byte	0x28d
 981 01e0 00000000 		.4byte	.LFB10
 982 01e4 34000000 		.4byte	.LFE10-.LFB10
 983 01e8 01       		.uleb128 0x1
 984 01e9 9C       		.byte	0x9c
 985 01ea 0D020000 		.4byte	0x20d
 986 01ee 09       		.uleb128 0x9
 987 01ef 45000000 		.4byte	.LASF31
 988 01f3 01       		.byte	0x1
 989 01f4 8D02     		.2byte	0x28d
 990 01f6 6B000000 		.4byte	0x6b
 991 01fa 02       		.uleb128 0x2
 992 01fb 91       		.byte	0x91
 993 01fc 6C       		.sleb128 -20
 994 01fd 0A       		.uleb128 0xa
 995 01fe 36030000 		.4byte	.LASF32
 996 0202 01       		.byte	0x1
 997 0203 8F02     		.2byte	0x28f
 998 0205 6B000000 		.4byte	0x6b
 999 0209 02       		.uleb128 0x2
 1000 020a 91       		.byte	0x91
 1001 020b 74       		.sleb128 -12
 1002 020c 00       		.byte	0
 1003 020d 0C       		.uleb128 0xc
 1004 020e 5B010000 		.4byte	.LASF33
 1005 0212 01       		.byte	0x1
 1006 0213 B002     		.2byte	0x2b0
 1007 0215 00000000 		.4byte	.LFB11
 1008 0219 34000000 		.4byte	.LFE11-.LFB11
 1009 021d 01       		.uleb128 0x1
 1010 021e 9C       		.byte	0x9c
 1011 021f 42020000 		.4byte	0x242
 1012 0223 09       		.uleb128 0x9
 1013 0224 5C000000 		.4byte	.LASF34
 1014 0228 01       		.byte	0x1
 1015 0229 B002     		.2byte	0x2b0
 1016 022b 42020000 		.4byte	0x242
 1017 022f 02       		.uleb128 0x2
 1018 0230 91       		.byte	0x91
 1019 0231 6C       		.sleb128 -20
 1020 0232 0A       		.uleb128 0xa
 1021 0233 63020000 		.4byte	.LASF35
 1022 0237 01       		.byte	0x1
 1023 0238 B202     		.2byte	0x2b2
 1024 023a 6B000000 		.4byte	0x6b
 1025 023e 02       		.uleb128 0x2
 1026 023f 91       		.byte	0x91
 1027 0240 74       		.sleb128 -12
 1028 0241 00       		.byte	0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 33


 1029 0242 0D       		.uleb128 0xd
 1030 0243 04       		.byte	0x4
 1031 0244 48020000 		.4byte	0x248
 1032 0248 0E       		.uleb128 0xe
 1033 0249 85000000 		.4byte	0x85
 1034 024d 0C       		.uleb128 0xc
 1035 024e 19030000 		.4byte	.LASF36
 1036 0252 01       		.byte	0x1
 1037 0253 D002     		.2byte	0x2d0
 1038 0255 00000000 		.4byte	.LFB12
 1039 0259 22000000 		.4byte	.LFE12-.LFB12
 1040 025d 01       		.uleb128 0x1
 1041 025e 9C       		.byte	0x9c
 1042 025f 73020000 		.4byte	0x273
 1043 0263 09       		.uleb128 0x9
 1044 0264 95020000 		.4byte	.LASF37
 1045 0268 01       		.byte	0x1
 1046 0269 D002     		.2byte	0x2d0
 1047 026b 6B000000 		.4byte	0x6b
 1048 026f 02       		.uleb128 0x2
 1049 0270 91       		.byte	0x91
 1050 0271 74       		.sleb128 -12
 1051 0272 00       		.byte	0
 1052 0273 07       		.uleb128 0x7
 1053 0274 99000000 		.4byte	.LASF38
 1054 0278 01       		.byte	0x1
 1055 0279 E702     		.2byte	0x2e7
 1056 027b 00000000 		.4byte	.LFB13
 1057 027f 1C000000 		.4byte	.LFE13-.LFB13
 1058 0283 01       		.uleb128 0x1
 1059 0284 9C       		.byte	0x9c
 1060 0285 07       		.uleb128 0x7
 1061 0286 34010000 		.4byte	.LASF39
 1062 028a 01       		.byte	0x1
 1063 028b FB02     		.2byte	0x2fb
 1064 028d 00000000 		.4byte	.LFB14
 1065 0291 1C000000 		.4byte	.LFE14-.LFB14
 1066 0295 01       		.uleb128 0x1
 1067 0296 9C       		.byte	0x9c
 1068 0297 0F       		.uleb128 0xf
 1069 0298 A0020000 		.4byte	.LASF43
 1070 029c 01       		.byte	0x1
 1071 029d 1103     		.2byte	0x311
 1072 029f 00000000 		.4byte	.LFB15
 1073 02a3 38000000 		.4byte	.LFE15-.LFB15
 1074 02a7 01       		.uleb128 0x1
 1075 02a8 9C       		.byte	0x9c
 1076 02a9 09       		.uleb128 0x9
 1077 02aa 5A020000 		.4byte	.LASF29
 1078 02ae 01       		.byte	0x1
 1079 02af 1103     		.2byte	0x311
 1080 02b1 6B000000 		.4byte	0x6b
 1081 02b5 02       		.uleb128 0x2
 1082 02b6 91       		.byte	0x91
 1083 02b7 74       		.sleb128 -12
 1084 02b8 00       		.byte	0
 1085 02b9 00       		.byte	0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 34


 1086              		.section	.debug_abbrev,"",%progbits
 1087              	.Ldebug_abbrev0:
 1088 0000 01       		.uleb128 0x1
 1089 0001 11       		.uleb128 0x11
 1090 0002 01       		.byte	0x1
 1091 0003 25       		.uleb128 0x25
 1092 0004 0E       		.uleb128 0xe
 1093 0005 13       		.uleb128 0x13
 1094 0006 0B       		.uleb128 0xb
 1095 0007 03       		.uleb128 0x3
 1096 0008 0E       		.uleb128 0xe
 1097 0009 1B       		.uleb128 0x1b
 1098 000a 0E       		.uleb128 0xe
 1099 000b 55       		.uleb128 0x55
 1100 000c 17       		.uleb128 0x17
 1101 000d 11       		.uleb128 0x11
 1102 000e 01       		.uleb128 0x1
 1103 000f 10       		.uleb128 0x10
 1104 0010 17       		.uleb128 0x17
 1105 0011 00       		.byte	0
 1106 0012 00       		.byte	0
 1107 0013 02       		.uleb128 0x2
 1108 0014 24       		.uleb128 0x24
 1109 0015 00       		.byte	0
 1110 0016 0B       		.uleb128 0xb
 1111 0017 0B       		.uleb128 0xb
 1112 0018 3E       		.uleb128 0x3e
 1113 0019 0B       		.uleb128 0xb
 1114 001a 03       		.uleb128 0x3
 1115 001b 0E       		.uleb128 0xe
 1116 001c 00       		.byte	0
 1117 001d 00       		.byte	0
 1118 001e 03       		.uleb128 0x3
 1119 001f 24       		.uleb128 0x24
 1120 0020 00       		.byte	0
 1121 0021 0B       		.uleb128 0xb
 1122 0022 0B       		.uleb128 0xb
 1123 0023 3E       		.uleb128 0x3e
 1124 0024 0B       		.uleb128 0xb
 1125 0025 03       		.uleb128 0x3
 1126 0026 08       		.uleb128 0x8
 1127 0027 00       		.byte	0
 1128 0028 00       		.byte	0
 1129 0029 04       		.uleb128 0x4
 1130 002a 16       		.uleb128 0x16
 1131 002b 00       		.byte	0
 1132 002c 03       		.uleb128 0x3
 1133 002d 0E       		.uleb128 0xe
 1134 002e 3A       		.uleb128 0x3a
 1135 002f 0B       		.uleb128 0xb
 1136 0030 3B       		.uleb128 0x3b
 1137 0031 05       		.uleb128 0x5
 1138 0032 49       		.uleb128 0x49
 1139 0033 13       		.uleb128 0x13
 1140 0034 00       		.byte	0
 1141 0035 00       		.byte	0
 1142 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 35


 1143 0037 35       		.uleb128 0x35
 1144 0038 00       		.byte	0
 1145 0039 49       		.uleb128 0x49
 1146 003a 13       		.uleb128 0x13
 1147 003b 00       		.byte	0
 1148 003c 00       		.byte	0
 1149 003d 06       		.uleb128 0x6
 1150 003e 2E       		.uleb128 0x2e
 1151 003f 00       		.byte	0
 1152 0040 3F       		.uleb128 0x3f
 1153 0041 19       		.uleb128 0x19
 1154 0042 03       		.uleb128 0x3
 1155 0043 0E       		.uleb128 0xe
 1156 0044 3A       		.uleb128 0x3a
 1157 0045 0B       		.uleb128 0xb
 1158 0046 3B       		.uleb128 0x3b
 1159 0047 0B       		.uleb128 0xb
 1160 0048 27       		.uleb128 0x27
 1161 0049 19       		.uleb128 0x19
 1162 004a 11       		.uleb128 0x11
 1163 004b 01       		.uleb128 0x1
 1164 004c 12       		.uleb128 0x12
 1165 004d 06       		.uleb128 0x6
 1166 004e 40       		.uleb128 0x40
 1167 004f 18       		.uleb128 0x18
 1168 0050 9742     		.uleb128 0x2117
 1169 0052 19       		.uleb128 0x19
 1170 0053 00       		.byte	0
 1171 0054 00       		.byte	0
 1172 0055 07       		.uleb128 0x7
 1173 0056 2E       		.uleb128 0x2e
 1174 0057 00       		.byte	0
 1175 0058 3F       		.uleb128 0x3f
 1176 0059 19       		.uleb128 0x19
 1177 005a 03       		.uleb128 0x3
 1178 005b 0E       		.uleb128 0xe
 1179 005c 3A       		.uleb128 0x3a
 1180 005d 0B       		.uleb128 0xb
 1181 005e 3B       		.uleb128 0x3b
 1182 005f 05       		.uleb128 0x5
 1183 0060 27       		.uleb128 0x27
 1184 0061 19       		.uleb128 0x19
 1185 0062 11       		.uleb128 0x11
 1186 0063 01       		.uleb128 0x1
 1187 0064 12       		.uleb128 0x12
 1188 0065 06       		.uleb128 0x6
 1189 0066 40       		.uleb128 0x40
 1190 0067 18       		.uleb128 0x18
 1191 0068 9742     		.uleb128 0x2117
 1192 006a 19       		.uleb128 0x19
 1193 006b 00       		.byte	0
 1194 006c 00       		.byte	0
 1195 006d 08       		.uleb128 0x8
 1196 006e 2E       		.uleb128 0x2e
 1197 006f 01       		.byte	0x1
 1198 0070 3F       		.uleb128 0x3f
 1199 0071 19       		.uleb128 0x19
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 36


 1200 0072 03       		.uleb128 0x3
 1201 0073 0E       		.uleb128 0xe
 1202 0074 3A       		.uleb128 0x3a
 1203 0075 0B       		.uleb128 0xb
 1204 0076 3B       		.uleb128 0x3b
 1205 0077 05       		.uleb128 0x5
 1206 0078 27       		.uleb128 0x27
 1207 0079 19       		.uleb128 0x19
 1208 007a 11       		.uleb128 0x11
 1209 007b 01       		.uleb128 0x1
 1210 007c 12       		.uleb128 0x12
 1211 007d 06       		.uleb128 0x6
 1212 007e 40       		.uleb128 0x40
 1213 007f 18       		.uleb128 0x18
 1214 0080 9742     		.uleb128 0x2117
 1215 0082 19       		.uleb128 0x19
 1216 0083 01       		.uleb128 0x1
 1217 0084 13       		.uleb128 0x13
 1218 0085 00       		.byte	0
 1219 0086 00       		.byte	0
 1220 0087 09       		.uleb128 0x9
 1221 0088 05       		.uleb128 0x5
 1222 0089 00       		.byte	0
 1223 008a 03       		.uleb128 0x3
 1224 008b 0E       		.uleb128 0xe
 1225 008c 3A       		.uleb128 0x3a
 1226 008d 0B       		.uleb128 0xb
 1227 008e 3B       		.uleb128 0x3b
 1228 008f 05       		.uleb128 0x5
 1229 0090 49       		.uleb128 0x49
 1230 0091 13       		.uleb128 0x13
 1231 0092 02       		.uleb128 0x2
 1232 0093 18       		.uleb128 0x18
 1233 0094 00       		.byte	0
 1234 0095 00       		.byte	0
 1235 0096 0A       		.uleb128 0xa
 1236 0097 34       		.uleb128 0x34
 1237 0098 00       		.byte	0
 1238 0099 03       		.uleb128 0x3
 1239 009a 0E       		.uleb128 0xe
 1240 009b 3A       		.uleb128 0x3a
 1241 009c 0B       		.uleb128 0xb
 1242 009d 3B       		.uleb128 0x3b
 1243 009e 05       		.uleb128 0x5
 1244 009f 49       		.uleb128 0x49
 1245 00a0 13       		.uleb128 0x13
 1246 00a1 02       		.uleb128 0x2
 1247 00a2 18       		.uleb128 0x18
 1248 00a3 00       		.byte	0
 1249 00a4 00       		.byte	0
 1250 00a5 0B       		.uleb128 0xb
 1251 00a6 2E       		.uleb128 0x2e
 1252 00a7 01       		.byte	0x1
 1253 00a8 3F       		.uleb128 0x3f
 1254 00a9 19       		.uleb128 0x19
 1255 00aa 03       		.uleb128 0x3
 1256 00ab 0E       		.uleb128 0xe
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 37


 1257 00ac 3A       		.uleb128 0x3a
 1258 00ad 0B       		.uleb128 0xb
 1259 00ae 3B       		.uleb128 0x3b
 1260 00af 05       		.uleb128 0x5
 1261 00b0 27       		.uleb128 0x27
 1262 00b1 19       		.uleb128 0x19
 1263 00b2 49       		.uleb128 0x49
 1264 00b3 13       		.uleb128 0x13
 1265 00b4 11       		.uleb128 0x11
 1266 00b5 01       		.uleb128 0x1
 1267 00b6 12       		.uleb128 0x12
 1268 00b7 06       		.uleb128 0x6
 1269 00b8 40       		.uleb128 0x40
 1270 00b9 18       		.uleb128 0x18
 1271 00ba 9642     		.uleb128 0x2116
 1272 00bc 19       		.uleb128 0x19
 1273 00bd 01       		.uleb128 0x1
 1274 00be 13       		.uleb128 0x13
 1275 00bf 00       		.byte	0
 1276 00c0 00       		.byte	0
 1277 00c1 0C       		.uleb128 0xc
 1278 00c2 2E       		.uleb128 0x2e
 1279 00c3 01       		.byte	0x1
 1280 00c4 3F       		.uleb128 0x3f
 1281 00c5 19       		.uleb128 0x19
 1282 00c6 03       		.uleb128 0x3
 1283 00c7 0E       		.uleb128 0xe
 1284 00c8 3A       		.uleb128 0x3a
 1285 00c9 0B       		.uleb128 0xb
 1286 00ca 3B       		.uleb128 0x3b
 1287 00cb 05       		.uleb128 0x5
 1288 00cc 27       		.uleb128 0x27
 1289 00cd 19       		.uleb128 0x19
 1290 00ce 11       		.uleb128 0x11
 1291 00cf 01       		.uleb128 0x1
 1292 00d0 12       		.uleb128 0x12
 1293 00d1 06       		.uleb128 0x6
 1294 00d2 40       		.uleb128 0x40
 1295 00d3 18       		.uleb128 0x18
 1296 00d4 9642     		.uleb128 0x2116
 1297 00d6 19       		.uleb128 0x19
 1298 00d7 01       		.uleb128 0x1
 1299 00d8 13       		.uleb128 0x13
 1300 00d9 00       		.byte	0
 1301 00da 00       		.byte	0
 1302 00db 0D       		.uleb128 0xd
 1303 00dc 0F       		.uleb128 0xf
 1304 00dd 00       		.byte	0
 1305 00de 0B       		.uleb128 0xb
 1306 00df 0B       		.uleb128 0xb
 1307 00e0 49       		.uleb128 0x49
 1308 00e1 13       		.uleb128 0x13
 1309 00e2 00       		.byte	0
 1310 00e3 00       		.byte	0
 1311 00e4 0E       		.uleb128 0xe
 1312 00e5 26       		.uleb128 0x26
 1313 00e6 00       		.byte	0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 38


 1314 00e7 49       		.uleb128 0x49
 1315 00e8 13       		.uleb128 0x13
 1316 00e9 00       		.byte	0
 1317 00ea 00       		.byte	0
 1318 00eb 0F       		.uleb128 0xf
 1319 00ec 2E       		.uleb128 0x2e
 1320 00ed 01       		.byte	0x1
 1321 00ee 3F       		.uleb128 0x3f
 1322 00ef 19       		.uleb128 0x19
 1323 00f0 03       		.uleb128 0x3
 1324 00f1 0E       		.uleb128 0xe
 1325 00f2 3A       		.uleb128 0x3a
 1326 00f3 0B       		.uleb128 0xb
 1327 00f4 3B       		.uleb128 0x3b
 1328 00f5 05       		.uleb128 0x5
 1329 00f6 27       		.uleb128 0x27
 1330 00f7 19       		.uleb128 0x19
 1331 00f8 11       		.uleb128 0x11
 1332 00f9 01       		.uleb128 0x1
 1333 00fa 12       		.uleb128 0x12
 1334 00fb 06       		.uleb128 0x6
 1335 00fc 40       		.uleb128 0x40
 1336 00fd 18       		.uleb128 0x18
 1337 00fe 9742     		.uleb128 0x2117
 1338 0100 19       		.uleb128 0x19
 1339 0101 00       		.byte	0
 1340 0102 00       		.byte	0
 1341 0103 00       		.byte	0
 1342              		.section	.debug_aranges,"",%progbits
 1343 0000 84000000 		.4byte	0x84
 1344 0004 0200     		.2byte	0x2
 1345 0006 00000000 		.4byte	.Ldebug_info0
 1346 000a 04       		.byte	0x4
 1347 000b 00       		.byte	0
 1348 000c 0000     		.2byte	0
 1349 000e 0000     		.2byte	0
 1350 0010 00000000 		.4byte	.LFB2
 1351 0014 B0000000 		.4byte	.LFE2-.LFB2
 1352 0018 00000000 		.4byte	.LFB3
 1353 001c 24000000 		.4byte	.LFE3-.LFB3
 1354 0020 00000000 		.4byte	.LFB4
 1355 0024 1C000000 		.4byte	.LFE4-.LFB4
 1356 0028 00000000 		.4byte	.LFB5
 1357 002c 34000000 		.4byte	.LFE5-.LFB5
 1358 0030 00000000 		.4byte	.LFB6
 1359 0034 34000000 		.4byte	.LFE6-.LFB6
 1360 0038 00000000 		.4byte	.LFB7
 1361 003c 40000000 		.4byte	.LFE7-.LFB7
 1362 0040 00000000 		.4byte	.LFB8
 1363 0044 50000000 		.4byte	.LFE8-.LFB8
 1364 0048 00000000 		.4byte	.LFB9
 1365 004c 38000000 		.4byte	.LFE9-.LFB9
 1366 0050 00000000 		.4byte	.LFB10
 1367 0054 34000000 		.4byte	.LFE10-.LFB10
 1368 0058 00000000 		.4byte	.LFB11
 1369 005c 34000000 		.4byte	.LFE11-.LFB11
 1370 0060 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 39


 1371 0064 22000000 		.4byte	.LFE12-.LFB12
 1372 0068 00000000 		.4byte	.LFB13
 1373 006c 1C000000 		.4byte	.LFE13-.LFB13
 1374 0070 00000000 		.4byte	.LFB14
 1375 0074 1C000000 		.4byte	.LFE14-.LFB14
 1376 0078 00000000 		.4byte	.LFB15
 1377 007c 38000000 		.4byte	.LFE15-.LFB15
 1378 0080 00000000 		.4byte	0
 1379 0084 00000000 		.4byte	0
 1380              		.section	.debug_ranges,"",%progbits
 1381              	.Ldebug_ranges0:
 1382 0000 00000000 		.4byte	.LFB2
 1383 0004 B0000000 		.4byte	.LFE2
 1384 0008 00000000 		.4byte	.LFB3
 1385 000c 24000000 		.4byte	.LFE3
 1386 0010 00000000 		.4byte	.LFB4
 1387 0014 1C000000 		.4byte	.LFE4
 1388 0018 00000000 		.4byte	.LFB5
 1389 001c 34000000 		.4byte	.LFE5
 1390 0020 00000000 		.4byte	.LFB6
 1391 0024 34000000 		.4byte	.LFE6
 1392 0028 00000000 		.4byte	.LFB7
 1393 002c 40000000 		.4byte	.LFE7
 1394 0030 00000000 		.4byte	.LFB8
 1395 0034 50000000 		.4byte	.LFE8
 1396 0038 00000000 		.4byte	.LFB9
 1397 003c 38000000 		.4byte	.LFE9
 1398 0040 00000000 		.4byte	.LFB10
 1399 0044 34000000 		.4byte	.LFE10
 1400 0048 00000000 		.4byte	.LFB11
 1401 004c 34000000 		.4byte	.LFE11
 1402 0050 00000000 		.4byte	.LFB12
 1403 0054 22000000 		.4byte	.LFE12
 1404 0058 00000000 		.4byte	.LFB13
 1405 005c 1C000000 		.4byte	.LFE13
 1406 0060 00000000 		.4byte	.LFB14
 1407 0064 1C000000 		.4byte	.LFE14
 1408 0068 00000000 		.4byte	.LFB15
 1409 006c 38000000 		.4byte	.LFE15
 1410 0070 00000000 		.4byte	0
 1411 0074 00000000 		.4byte	0
 1412              		.section	.debug_line,"",%progbits
 1413              	.Ldebug_line0:
 1414 0000 A1010000 		.section	.debug_str,"MS",%progbits,1
 1414      02005F00 
 1414      00000201 
 1414      FB0E0D00 
 1414      01010101 
 1415              	.LASF6:
 1416 0000 6C6F6E67 		.ascii	"long long int\000"
 1416      206C6F6E 
 1416      6720696E 
 1416      7400
 1417              	.LASF14:
 1418 000e 72656733 		.ascii	"reg32\000"
 1418      3200
 1419              	.LASF30:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 40


 1420 0014 75617274 		.ascii	"uart_UartSetRtsFifoLevel\000"
 1420      5F556172 
 1420      74536574 
 1420      52747346 
 1420      69666F4C 
 1421              	.LASF28:
 1422 002d 75617274 		.ascii	"uart_UartSetRtsPolarity\000"
 1422      5F556172 
 1422      74536574 
 1422      52747350 
 1422      6F6C6172 
 1423              	.LASF31:
 1424 0045 6C657665 		.ascii	"level\000"
 1424      6C00
 1425              	.LASF25:
 1426 004b 75617274 		.ascii	"uart_UartGetChar\000"
 1426      5F556172 
 1426      74476574 
 1426      43686172 
 1426      00
 1427              	.LASF34:
 1428 005c 73747269 		.ascii	"string\000"
 1428      6E6700
 1429              	.LASF16:
 1430 0063 75617274 		.ascii	"uart_UartInit\000"
 1430      5F556172 
 1430      74496E69 
 1430      7400
 1431              	.LASF9:
 1432 0071 666C6F61 		.ascii	"float\000"
 1432      7400
 1433              	.LASF17:
 1434 0077 75617274 		.ascii	"uart_UartPostEnable\000"
 1434      5F556172 
 1434      74506F73 
 1434      74456E61 
 1434      626C6500 
 1435              	.LASF1:
 1436 008b 756E7369 		.ascii	"unsigned char\000"
 1436      676E6564 
 1436      20636861 
 1436      7200
 1437              	.LASF38:
 1438 0099 75617274 		.ascii	"uart_UartEnableCts\000"
 1438      5F556172 
 1438      74456E61 
 1438      626C6543 
 1438      747300
 1439              	.LASF42:
 1440 00ac 5C5C766D 		.ascii	"\\\\vmware-host\\Shared Folders\\Documents\\BLEIOSA"
 1440      77617265 
 1440      2D686F73 
 1440      745C5368 
 1440      61726564 
 1441 00da 50505C50 		.ascii	"PP\\PSoC_Creator\\capsenseled\\145capsenseled-ble.c"
 1441      536F435F 
 1441      43726561 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 41


 1441      746F725C 
 1441      63617073 
 1442 010a 7964736E 		.ascii	"ydsn\000"
 1442      00
 1443              	.LASF5:
 1444 010f 6C6F6E67 		.ascii	"long unsigned int\000"
 1444      20756E73 
 1444      69676E65 
 1444      6420696E 
 1444      7400
 1445              	.LASF3:
 1446 0121 73686F72 		.ascii	"short unsigned int\000"
 1446      7420756E 
 1446      7369676E 
 1446      65642069 
 1446      6E7400
 1447              	.LASF39:
 1448 0134 75617274 		.ascii	"uart_UartDisableCts\000"
 1448      5F556172 
 1448      74446973 
 1448      61626C65 
 1448      43747300 
 1449              	.LASF24:
 1450 0148 72784461 		.ascii	"rxData\000"
 1450      746100
 1451              	.LASF22:
 1452 014f 61646472 		.ascii	"addressMask\000"
 1452      6573734D 
 1452      61736B00 
 1453              	.LASF33:
 1454 015b 75617274 		.ascii	"uart_UartPutString\000"
 1454      5F556172 
 1454      74507574 
 1454      53747269 
 1454      6E6700
 1455              	.LASF10:
 1456 016e 646F7562 		.ascii	"double\000"
 1456      6C6500
 1457              	.LASF40:
 1458 0175 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1458      4320342E 
 1458      392E3320 
 1458      32303135 
 1458      30333033 
 1459 01a8 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1459      20726576 
 1459      6973696F 
 1459      6E203232 
 1459      31323230 
 1460 01db 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1460      66756E63 
 1460      74696F6E 
 1460      2D736563 
 1460      74696F6E 
 1461              	.LASF19:
 1462 0203 75617274 		.ascii	"uart_UartSetRxAddress\000"
 1462      5F556172 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 42


 1462      74536574 
 1462      52784164 
 1462      64726573 
 1463              	.LASF11:
 1464 0219 75696E74 		.ascii	"uint32\000"
 1464      333200
 1465              	.LASF8:
 1466 0220 756E7369 		.ascii	"unsigned int\000"
 1466      676E6564 
 1466      20696E74 
 1466      00
 1467              	.LASF18:
 1468 022d 75617274 		.ascii	"uart_UartStop\000"
 1468      5F556172 
 1468      7453746F 
 1468      7000
 1469              	.LASF21:
 1470 023b 61646472 		.ascii	"address\000"
 1470      65737300 
 1471              	.LASF7:
 1472 0243 6C6F6E67 		.ascii	"long long unsigned int\000"
 1472      206C6F6E 
 1472      6720756E 
 1472      7369676E 
 1472      65642069 
 1473              	.LASF29:
 1474 025a 706F6C61 		.ascii	"polarity\000"
 1474      72697479 
 1474      00
 1475              	.LASF35:
 1476 0263 62756649 		.ascii	"bufIndex\000"
 1476      6E646578 
 1476      00
 1477              	.LASF20:
 1478 026c 75617274 		.ascii	"uart_UartSetRxAddressMask\000"
 1478      5F556172 
 1478      74536574 
 1478      52784164 
 1478      64726573 
 1479              	.LASF15:
 1480 0286 73697A65 		.ascii	"sizetype\000"
 1480      74797065 
 1480      00
 1481              	.LASF12:
 1482 028f 63686172 		.ascii	"char8\000"
 1482      3800
 1483              	.LASF37:
 1484 0295 74784461 		.ascii	"txDataByte\000"
 1484      74614279 
 1484      746500
 1485              	.LASF43:
 1486 02a0 75617274 		.ascii	"uart_UartSetCtsPolarity\000"
 1486      5F556172 
 1486      74536574 
 1486      43747350 
 1486      6F6C6172 
 1487              	.LASF13:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccYAmleK.s 			page 43


 1488 02b8 63686172 		.ascii	"char\000"
 1488      00
 1489              	.LASF26:
 1490 02bd 75617274 		.ascii	"uart_UartGetByte\000"
 1490      5F556172 
 1490      74476574 
 1490      42797465 
 1490      00
 1491              	.LASF41:
 1492 02ce 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\uart_UART.c\000"
 1492      6E657261 
 1492      7465645F 
 1492      536F7572 
 1492      63655C50 
 1493              	.LASF2:
 1494 02f3 73686F72 		.ascii	"short int\000"
 1494      7420696E 
 1494      7400
 1495              	.LASF4:
 1496 02fd 6C6F6E67 		.ascii	"long int\000"
 1496      20696E74 
 1496      00
 1497              	.LASF27:
 1498 0306 746D7053 		.ascii	"tmpStatus\000"
 1498      74617475 
 1498      7300
 1499              	.LASF23:
 1500 0310 6D617463 		.ascii	"matchReg\000"
 1500      68526567 
 1500      00
 1501              	.LASF36:
 1502 0319 75617274 		.ascii	"uart_UartPutCRLF\000"
 1502      5F556172 
 1502      74507574 
 1502      43524C46 
 1502      00
 1503              	.LASF0:
 1504 032a 7369676E 		.ascii	"signed char\000"
 1504      65642063 
 1504      68617200 
 1505              	.LASF32:
 1506 0336 75617274 		.ascii	"uartFlowCtrl\000"
 1506      466C6F77 
 1506      4374726C 
 1506      00
 1507              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
