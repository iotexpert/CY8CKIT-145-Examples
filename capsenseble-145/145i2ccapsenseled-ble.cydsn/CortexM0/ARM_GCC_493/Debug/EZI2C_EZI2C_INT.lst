ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"EZI2C_EZI2C_INT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.EZI2C_EZI2C_STRETCH_ISR,"ax",%progbits
  18              		.align	2
  19              		.global	EZI2C_EZI2C_STRETCH_ISR
  20              		.code	16
  21              		.thumb_func
  22              		.type	EZI2C_EZI2C_STRETCH_ISR, %function
  23              	EZI2C_EZI2C_STRETCH_ISR:
  24              	.LFB2:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\EZI2C_EZI2C_INT.c"
   1:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * File Name: EZI2C_EZI2C_INT.c
   3:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * Version 3.20
   4:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *
   5:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * Description:
   6:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *  This file provides the source code to the Interrupt Service Routine for
   7:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *  the SCB Component in EZI2C mode.
   8:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *
   9:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * Note:
  10:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *
  11:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  18:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** #include "EZI2C_PVT.h"
  19:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** #include "EZI2C_EZI2C_PVT.h"
  20:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** #include "cyapicallbacks.h"
  21:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  22:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** #if(EZI2C_EZI2C_SCL_STRETCH_ENABLE_CONST)
  23:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     /*******************************************************************************
  24:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     * Function Name: EZI2C_EZI2C_STRETCH_ISR
  25:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     ********************************************************************************
  26:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *
  27:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     * Summary:
  28:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *  Handles the Interrupt Service Routine for the SCB EZI2C mode. The clock stretching is
  29:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *  used during operation.
  30:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *
  31:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     * Parameters:
  32:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *  None
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 2


  33:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *
  34:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     * Return:
  35:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *  None
  36:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *
  37:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *******************************************************************************/
  38:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     CY_ISR_PROTO(EZI2C_EZI2C_STRETCH_ISR)
  39:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     {
  26              		.loc 1 39 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 88B0     		sub	sp, sp, #32
  33              		.cfi_def_cfa_offset 40
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  40:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static uint16 locBufSize;
  41:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locIndex;
  42:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locStatus;
  43:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  44:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 endTransfer;
  45:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 fifoIndex;
  46:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locByte;
  47:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  48:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locIntrCause;
  49:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locIntrSlave;
  50:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         
  51:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #ifdef EZI2C_EZI2C_STRETCH_ISR_ENTRY_CALLBACK
  52:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         EZI2C_EZI2C_STRETCH_ISR_EntryCallback();
  53:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #endif /* EZI2C_EZI2C_STRETCH_ISR_ENTRY_CALLBACK */
  54:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  55:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #if(EZI2C_SECONDARY_ADDRESS_ENABLE_CONST)
  56:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Variable intended to be used with either buffer */
  57:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static volatile uint8 * EZI2C_dataBuffer; /* Pointer to data buffer              */
  58:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static uint16 EZI2C_bufSizeBuf;           /* Size of buffer in bytes             */
  59:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static uint16 EZI2C_protectBuf;           /* Start index of write protected area */
  60:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  61:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static uint8 activeAddress;
  62:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 ackResponse;
  63:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  64:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         ackResponse = EZI2C_EZI2C_ACK_RECEIVED_ADDRESS;
  65:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #endif /* (EZI2C_SECONDARY_ADDRESS_ENABLE_CONST) */
  66:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  67:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #if !defined (CY_REMOVE_EZI2C_CUSTOM_INTR_HANDLER)
  68:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         if(NULL != EZI2C_customIntrHandler)
  36              		.loc 1 68 0
  37 0006 C74B     		ldr	r3, .L40
  38 0008 1B68     		ldr	r3, [r3]
  39 000a 002B     		cmp	r3, #0
  40 000c 02D0     		beq	.L2
  69:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         {
  70:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_customIntrHandler();
  41              		.loc 1 70 0
  42 000e C54B     		ldr	r3, .L40
  43 0010 1B68     		ldr	r3, [r3]
  44 0012 9847     		blx	r3
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 3


  45              	.L2:
  71:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         }
  72:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #else
  73:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         CY_EZI2C_CUSTOM_INTR_HANDLER();
  74:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #endif /* !defined (CY_REMOVE_EZI2C_CUSTOM_INTR_HANDLER) */
  75:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  76:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Make local copy of global variable */
  77:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         locIndex = EZI2C_EZI2C_GET_INDEX(activeAddress);
  46              		.loc 1 77 0
  47 0014 C44B     		ldr	r3, .L40+4
  48 0016 1B88     		ldrh	r3, [r3]
  49 0018 FB61     		str	r3, [r7, #28]
  78:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  79:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Get interrupt sources */
  80:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         locIntrSlave = EZI2C_GetSlaveInterruptSource();
  50              		.loc 1 80 0
  51 001a C44B     		ldr	r3, .L40+8
  52 001c 1B68     		ldr	r3, [r3]
  53 001e FB60     		str	r3, [r7, #12]
  81:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         locIntrCause = EZI2C_GetInterruptCause();
  54              		.loc 1 81 0
  55 0020 C34B     		ldr	r3, .L40+12
  56 0022 1B68     		ldr	r3, [r3]
  57 0024 BB60     		str	r3, [r7, #8]
  82:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  83:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* INTR_SLAVE.I2C_ARB_LOST and INTR_SLAVE_I2C.BUS_ERROR */
  84:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Handles errors on the bus. There are cases when both bits are set.
  85:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         * The error recovery is common: re-enable the scb IP. The content of the RX FIFO is lost.
  86:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         */
  87:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         if(0u != (locIntrSlave & (EZI2C_INTR_SLAVE_I2C_ARB_LOST |
  58              		.loc 1 87 0
  59 0026 FA68     		ldr	r2, [r7, #12]
  60 0028 0223     		mov	r3, #2
  61 002a FF33     		add	r3, r3, #255
  62 002c 1340     		and	r3, r2
  63 002e 49D0     		beq	.L3
  88:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                   EZI2C_INTR_SLAVE_I2C_BUS_ERROR)))
  89:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         {
  90:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_CTRL_REG &= (uint32) ~EZI2C_CTRL_ENABLED; /* Disable SCB block */
  64              		.loc 1 90 0
  65 0030 C04B     		ldr	r3, .L40+16
  66 0032 C04A     		ldr	r2, .L40+16
  67 0034 1268     		ldr	r2, [r2]
  68 0036 5200     		lsl	r2, r2, #1
  69 0038 5208     		lsr	r2, r2, #1
  70 003a 1A60     		str	r2, [r3]
  91:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  92:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         #if(EZI2C_CY_SCBIP_V0)
  93:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != ((uint8) EZI2C_EZI2C_STATUS_BUSY & EZI2C_curStatus))
  94:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         #endif /* (EZI2C_CY_SCBIP_V0) */
  95:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
  96:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_curStatus &= (uint8) ~EZI2C_EZI2C_STATUS_BUSY;
  71              		.loc 1 96 0
  72 003c BE4B     		ldr	r3, .L40+20
  73 003e 1B78     		ldrb	r3, [r3]
  74 0040 DBB2     		uxtb	r3, r3
  75 0042 2022     		mov	r2, #32
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 4


  76 0044 9343     		bic	r3, r2
  77 0046 DAB2     		uxtb	r2, r3
  78 0048 BB4B     		ldr	r3, .L40+20
  79 004a 1A70     		strb	r2, [r3]
  97:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_curStatus |= (uint8)  EZI2C_EZI2C_STATUS_ERR;
  80              		.loc 1 97 0
  81 004c BA4B     		ldr	r3, .L40+20
  82 004e 1B78     		ldrb	r3, [r3]
  83 0050 DBB2     		uxtb	r3, r3
  84 0052 1022     		mov	r2, #16
  85 0054 1343     		orr	r3, r2
  86 0056 DAB2     		uxtb	r2, r3
  87 0058 B74B     		ldr	r3, .L40+20
  88 005a 1A70     		strb	r2, [r3]
  98:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  99:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_TX_EMPTY is enabled in the address phase to receive data */
 100:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if(0u == (EZI2C_GetTxInterruptMode() & EZI2C_INTR_TX_EMPTY))
  89              		.loc 1 100 0
  90 005c B74B     		ldr	r3, .L40+24
  91 005e 1B68     		ldr	r3, [r3]
  92 0060 1022     		mov	r2, #16
  93 0062 1340     		and	r3, r2
  94 0064 0FD1     		bne	.L4
 101:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 102:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Write complete */
 103:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(EZI2C_indexBuf1 != EZI2C_offsetBuf1)
  95              		.loc 1 103 0
  96 0066 B64B     		ldr	r3, .L40+28
  97 0068 1B78     		ldrb	r3, [r3]
  98 006a 9AB2     		uxth	r2, r3
  99 006c AE4B     		ldr	r3, .L40+4
 100 006e 1B88     		ldrh	r3, [r3]
 101 0070 9A42     		cmp	r2, r3
 102 0072 10D0     		beq	.L6
 104:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 105:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_curStatus |= (uint8) EZI2C_INTR_SLAVE_I2C_WRITE_STOP;
 103              		.loc 1 105 0
 104 0074 B04B     		ldr	r3, .L40+20
 105 0076 1B78     		ldrb	r3, [r3]
 106 0078 DBB2     		uxtb	r3, r3
 107 007a 0822     		mov	r2, #8
 108 007c 1343     		orr	r3, r2
 109 007e DAB2     		uxtb	r2, r3
 110 0080 AD4B     		ldr	r3, .L40+20
 111 0082 1A70     		strb	r2, [r3]
 112 0084 07E0     		b	.L6
 113              	.L4:
 106:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 107:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 108:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 else
 109:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 110:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Read complete */
 111:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_curStatus |= (uint8) EZI2C_INTR_SLAVE_I2C_NACK;
 114              		.loc 1 111 0
 115 0086 AC4B     		ldr	r3, .L40+20
 116 0088 1B78     		ldrb	r3, [r3]
 117 008a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 5


 118 008c 0222     		mov	r2, #2
 119 008e 1343     		orr	r3, r2
 120 0090 DAB2     		uxtb	r2, r3
 121 0092 A94B     		ldr	r3, .L40+20
 122 0094 1A70     		strb	r2, [r3]
 123              	.L6:
 112:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 113:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 114:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 115:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_DISABLE_SLAVE_AUTO_DATA;
 124              		.loc 1 115 0
 125 0096 AB4B     		ldr	r3, .L40+32
 126 0098 AA4A     		ldr	r2, .L40+32
 127 009a 1268     		ldr	r2, [r2]
 128 009c AA49     		ldr	r1, .L40+36
 129 009e 0A40     		and	r2, r1
 130 00a0 1A60     		str	r2, [r3]
 116:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 117:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* Disable TX and RX interrupt sources */
 118:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 131              		.loc 1 118 0
 132 00a2 AA4B     		ldr	r3, .L40+40
 133 00a4 0022     		mov	r2, #0
 134 00a6 1A60     		str	r2, [r3]
 119:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_SetTxInterruptMode(EZI2C_NO_INTR_SOURCES);
 135              		.loc 1 119 0
 136 00a8 A44B     		ldr	r3, .L40+24
 137 00aa 0022     		mov	r2, #0
 138 00ac 1A60     		str	r2, [r3]
 120:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 121:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         #if(EZI2C_CY_SCBIP_V0)
 122:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* Clear interrupt sources as they are not automatically cleared after SCB is disabled 
 123:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_ClearRxInterruptSource(EZI2C_INTR_RX_ALL);
 124:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_ClearSlaveInterruptSource(EZI2C_INTR_SLAVE_ALL);
 125:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         #endif /* (EZI2C_CY_SCBIP_V0) */
 126:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 127:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_fsmState = EZI2C_EZI2C_FSM_IDLE;
 139              		.loc 1 127 0
 140 00ae A84B     		ldr	r3, .L40+44
 141 00b0 0022     		mov	r2, #0
 142 00b2 1A70     		strb	r2, [r3]
 128:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 129:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_CTRL_REG |= (uint32) EZI2C_CTRL_ENABLED;  /* Enable SCB block */
 143              		.loc 1 129 0
 144 00b4 9F4B     		ldr	r3, .L40+16
 145 00b6 9F4A     		ldr	r2, .L40+16
 146 00b8 1268     		ldr	r2, [r2]
 147 00ba 8021     		mov	r1, #128
 148 00bc 0906     		lsl	r1, r1, #24
 149 00be 0A43     		orr	r2, r1
 150 00c0 1A60     		str	r2, [r3]
 151 00c2 9DE1     		b	.L7
 152              	.L3:
 130:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         }
 131:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         else
 132:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         {
 133:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* INTR_I2C_EC_WAKE_UP */
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 6


 134:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* Wakes up device from deep sleep */
 135:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != (locIntrCause & EZI2C_INTR_CAUSE_I2C_EC))
 153              		.loc 1 135 0
 154 00c4 BB68     		ldr	r3, [r7, #8]
 155 00c6 1022     		mov	r2, #16
 156 00c8 1340     		and	r3, r2
 157 00ca 02D0     		beq	.L8
 136:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
 137:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Disables wakeup interrupt source but does not clear it. It is cleared in INTR_SL
 138:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_SetI2CExtClkInterruptMode(EZI2C_NO_INTR_SOURCES);
 158              		.loc 1 138 0
 159 00cc A14B     		ldr	r3, .L40+48
 160 00ce 0022     		mov	r2, #0
 161 00d0 1A60     		str	r2, [r3]
 162              	.L8:
 139:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 140:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 141:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != (locIntrCause & (EZI2C_INTR_CAUSE_RX | EZI2C_INTR_CAUSE_SLAVE)))
 163              		.loc 1 141 0
 164 00d2 BB68     		ldr	r3, [r7, #8]
 165 00d4 0A22     		mov	r2, #10
 166 00d6 1340     		and	r3, r2
 167 00d8 00D1     		bne	.LCB133
 168 00da C5E0     		b	.L9	@long jump
 169              	.LCB133:
 142:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
 143:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_RX.NOT_EMPTY */
 144:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Receives data byte-by-byte. Does not use RX FIFO capabilities */
 145:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if (0u != (EZI2C_GetRxInterruptSourceMasked() & EZI2C_INTR_RX_NOT_EMPTY))
 170              		.loc 1 145 0
 171 00dc 9E4B     		ldr	r3, .L40+52
 172 00de 1B68     		ldr	r3, [r3]
 173 00e0 0422     		mov	r2, #4
 174 00e2 1340     		and	r3, r2
 175 00e4 00D1     		bne	.LCB139
 176 00e6 71E0     		b	.L10	@long jump
 177              	.LCB139:
 146:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 147:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 #if(EZI2C_SECONDARY_ADDRESS_ENABLE_CONST)
 148:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* If I2C_STOP service is delayed to I2C_ADDR_MATCH the address byte is in the 
 149:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * RX_NOT_EMPTY is enabled. The address byte has to stay into RX FIFO therefore
 150:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * RX.NOT_EMPTY service has to be skipped. The address byte has to be read by I2
 151:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     */
 152:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if (0u == (locIntrCause & EZI2C_INTR_CAUSE_SLAVE))
 153:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 #endif /* (EZI2C_SECONDARY_ADDRESS_ENABLE_CONST) */
 154:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 155:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locByte = EZI2C_RX_FIFO_RD_REG;
 178              		.loc 1 155 0
 179 00e8 9C4B     		ldr	r3, .L40+56
 180 00ea 1B68     		ldr	r3, [r3]
 181 00ec 7B60     		str	r3, [r7, #4]
 156:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 157:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         switch(EZI2C_fsmState)
 182              		.loc 1 157 0
 183 00ee 984B     		ldr	r3, .L40+44
 184 00f0 1B78     		ldrb	r3, [r3]
 185 00f2 002B     		cmp	r3, #0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 7


 186 00f4 1DD0     		beq	.L12
 187 00f6 012B     		cmp	r3, #1
 188 00f8 60D1     		bne	.L39
 158:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 159:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         case EZI2C_EZI2C_FSM_BYTE_WRITE:
 160:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             if(0u != locBufSize)
 189              		.loc 1 160 0
 190 00fa 994B     		ldr	r3, .L40+60
 191 00fc 1B88     		ldrh	r3, [r3]
 192 00fe 002B     		cmp	r3, #0
 193 0100 13D0     		beq	.L14
 161:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 162:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Store data byte and ACK */
 163:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_ACK;
 194              		.loc 1 163 0
 195 0102 984B     		ldr	r3, .L40+64
 196 0104 0122     		mov	r2, #1
 197 0106 1A60     		str	r2, [r3]
 164:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 165:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_dataBuffer1[locIndex] = (uint8) locByte;
 198              		.loc 1 165 0
 199 0108 974B     		ldr	r3, .L40+68
 200 010a 1A68     		ldr	r2, [r3]
 201 010c FB69     		ldr	r3, [r7, #28]
 202 010e D318     		add	r3, r2, r3
 203 0110 7A68     		ldr	r2, [r7, #4]
 204 0112 D2B2     		uxtb	r2, r2
 205 0114 1A70     		strb	r2, [r3]
 166:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locIndex++;
 206              		.loc 1 166 0
 207 0116 FB69     		ldr	r3, [r7, #28]
 208 0118 0133     		add	r3, r3, #1
 209 011a FB61     		str	r3, [r7, #28]
 167:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locBufSize--;
 210              		.loc 1 167 0
 211 011c 904B     		ldr	r3, .L40+60
 212 011e 1B88     		ldrh	r3, [r3]
 213 0120 013B     		sub	r3, r3, #1
 214 0122 9AB2     		uxth	r2, r3
 215 0124 8E4B     		ldr	r3, .L40+60
 216 0126 1A80     		strh	r2, [r3]
 168:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 169:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             else
 170:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 171:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Discard data byte and NACK */
 172:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_NACK;
 173:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 174:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             break;
 217              		.loc 1 174 0
 218 0128 4CE0     		b	.L16
 219              	.L14:
 172:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 220              		.loc 1 172 0
 221 012a 8E4B     		ldr	r3, .L40+64
 222 012c 0222     		mov	r2, #2
 223 012e 1A60     		str	r2, [r3]
 224              		.loc 1 174 0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 8


 225 0130 48E0     		b	.L16
 226              	.L12:
 175:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 176:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(EZI2C_SUB_ADDRESS_SIZE16_CONST)
 177:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         case EZI2C_EZI2C_FSM_OFFSET_HI8:
 178:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 179:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_I2C_SLAVE_GENERATE_ACK;
 180:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 181:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Store offset most significant byre */
 182:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             locBufSize = (uint16) ((uint8) locByte);
 183:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 184:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_fsmState = EZI2C_EZI2C_FSM_OFFSET_LO8;
 185:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 186:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             break;
 187:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif /* (EZI2C_SUB_ADDRESS_SIZE16_CONST) */
 188:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 189:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         case EZI2C_EZI2C_FSM_OFFSET_LO8:
 190:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 191:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #if (EZI2C_SUB_ADDRESS_SIZE16)
 192:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 193:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Collect 2 bytes offset */
 194:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locByte = ((uint32) ((uint32) locBufSize << 8u)) | locByte;
 195:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 196:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #endif
 197:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 198:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Check offset against buffer size */
 199:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             if(locByte < (uint32) EZI2C_bufSizeBuf1)
 227              		.loc 1 199 0
 228 0132 8E4B     		ldr	r3, .L40+72
 229 0134 1B88     		ldrh	r3, [r3]
 230 0136 1A1E     		sub	r2, r3, #0
 231 0138 7B68     		ldr	r3, [r7, #4]
 232 013a 9A42     		cmp	r2, r3
 233 013c 3AD9     		bls	.L17
 200:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 201:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_ACK;
 234              		.loc 1 201 0
 235 013e 894B     		ldr	r3, .L40+64
 236 0140 0122     		mov	r2, #1
 237 0142 1A60     		str	r2, [r3]
 202:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 203:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Update local buffer index with new offset */
 204:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locIndex = locByte;
 238              		.loc 1 204 0
 239 0144 7B68     		ldr	r3, [r7, #4]
 240 0146 FB61     		str	r3, [r7, #28]
 205:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 206:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Get available buffer size to write */
 207:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locBufSize = (uint16) ((locByte < EZI2C_protectBuf1) ?
 241              		.loc 1 207 0
 242 0148 894B     		ldr	r3, .L40+76
 243 014a 1B88     		ldrh	r3, [r3]
 244 014c 1A1E     		sub	r2, r3, #0
 245 014e 7B68     		ldr	r3, [r7, #4]
 246 0150 9A42     		cmp	r2, r3
 247 0152 06D9     		bls	.L18
 248              		.loc 1 207 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 9


 249 0154 864B     		ldr	r3, .L40+76
 250 0156 1A88     		ldrh	r2, [r3]
 251 0158 7B68     		ldr	r3, [r7, #4]
 252 015a 9BB2     		uxth	r3, r3
 253 015c D31A     		sub	r3, r2, r3
 254 015e 9AB2     		uxth	r2, r3
 255 0160 00E0     		b	.L19
 256              	.L18:
 257              		.loc 1 207 0 discriminator 2
 258 0162 0022     		mov	r2, #0
 259              	.L19:
 260              		.loc 1 207 0 discriminator 4
 261 0164 7E4B     		ldr	r3, .L40+60
 262 0166 1A80     		strh	r2, [r3]
 208:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                                        (EZI2C_protectBuf1 - locByte) : (0u));
 209:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 210:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #if(EZI2C_CY_SCBIP_V0)
 211:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 212:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 if(locBufSize < EZI2C_EZI2C_FIFO_SIZE)
 213:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 214:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte */
 215:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_fsmState = EZI2C_EZI2C_FSM_BYTE_WRITE;
 216:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 217:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Receive RX FIFO chunks */
 218:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 else if(locBufSize == EZI2C_EZI2C_FIFO_SIZE)
 219:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 220:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is full */
 221:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 222:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 223:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 else
 224:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 225:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO is fu
 226:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_SetRxInterruptMode(EZI2C_INTR_RX_FULL);
 227:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 228:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 229:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #else
 230:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 231:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 #if(EZI2C_SECONDARY_ADDRESS_ENABLE)
 232:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 233:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte.
 234:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     * The byte by byte receive is always chosen for two addresses. 
 235:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     */
 236:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_fsmState = EZI2C_EZI2C_FSM_BYTE_WRITE;
 237:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 238:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 #else
 239:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 240:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     if (locBufSize < EZI2C_EZI2C_FIFO_SIZE)
 263              		.loc 1 240 0 is_stmt 1 discriminator 4
 264 0168 7D4B     		ldr	r3, .L40+60
 265 016a 1B88     		ldrh	r3, [r3]
 266 016c 072B     		cmp	r3, #7
 267 016e 03D8     		bhi	.L20
 241:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     {
 242:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         /* Set FSM state to receive byte by byte */
 243:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_fsmState = EZI2C_EZI2C_FSM_BYTE_WRITE;
 268              		.loc 1 243 0
 269 0170 774B     		ldr	r3, .L40+44
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 10


 270 0172 0122     		mov	r2, #1
 271 0174 1A70     		strb	r2, [r3]
 272 0176 18E0     		b	.L21
 273              	.L20:
 244:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     }
 245:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     /* Receive RX FIFO chunks */
 246:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     else if (locBufSize == EZI2C_EZI2C_FIFO_SIZE)
 274              		.loc 1 246 0
 275 0178 794B     		ldr	r3, .L40+60
 276 017a 1B88     		ldrh	r3, [r3]
 277 017c 082B     		cmp	r3, #8
 278 017e 0AD1     		bne	.L22
 247:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     {
 248:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is full 
 279              		.loc 1 248 0
 280 0180 704B     		ldr	r3, .L40+32
 281 0182 704A     		ldr	r2, .L40+32
 282 0184 1268     		ldr	r2, [r2]
 283 0186 A021     		mov	r1, #160
 284 0188 0902     		lsl	r1, r1, #8
 285 018a 0A43     		orr	r2, r1
 286 018c 1A60     		str	r2, [r3]
 249:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 287              		.loc 1 249 0
 288 018e 6F4B     		ldr	r3, .L40+40
 289 0190 0022     		mov	r2, #0
 290 0192 1A60     		str	r2, [r3]
 291 0194 09E0     		b	.L21
 292              	.L22:
 250:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     }
 251:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     else
 252:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     {
 253:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO i
 293              		.loc 1 253 0
 294 0196 6B4B     		ldr	r3, .L40+32
 295 0198 6A4A     		ldr	r2, .L40+32
 296 019a 1268     		ldr	r2, [r2]
 297 019c 8021     		mov	r1, #128
 298 019e 8901     		lsl	r1, r1, #6
 299 01a0 0A43     		orr	r2, r1
 300 01a2 1A60     		str	r2, [r3]
 254:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_SetRxInterruptMode(EZI2C_INTR_RX_FULL);
 301              		.loc 1 254 0
 302 01a4 694B     		ldr	r3, .L40+40
 303 01a6 0822     		mov	r2, #8
 304 01a8 1A60     		str	r2, [r3]
 305              	.L21:
 255:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     }
 256:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 257:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 #endif
 258:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 259:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #endif /* (EZI2C_CY_SCBIP_V0) */
 260:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 261:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Store local offset into global variable */
 262:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_EZI2C_SET_OFFSET(activeAddress, locIndex);
 306              		.loc 1 262 0
 307 01aa FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 11


 308 01ac DAB2     		uxtb	r2, r3
 309 01ae 644B     		ldr	r3, .L40+28
 310 01b0 1A70     		strb	r2, [r3]
 263:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 264:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             else
 265:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 266:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Discard offset byte and NACK */
 267:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_NACK;
 268:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 269:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             break;
 311              		.loc 1 269 0
 312 01b2 07E0     		b	.L16
 313              	.L17:
 267:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 314              		.loc 1 267 0
 315 01b4 6B4B     		ldr	r3, .L40+64
 316 01b6 0222     		mov	r2, #2
 317 01b8 1A60     		str	r2, [r3]
 318              		.loc 1 269 0
 319 01ba 03E0     		b	.L16
 320              	.L39:
 270:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 271:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         default:
 272:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             CYASSERT(0u != 0u); /* Should never get there */
 321              		.loc 1 272 0
 322 01bc 0020     		mov	r0, #0
 323 01be FFF7FEFF 		bl	CyHalt
 273:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             break;
 324              		.loc 1 273 0
 325 01c2 C046     		mov	r8, r8
 326              	.L16:
 274:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 275:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 276:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearRxInterruptSource(EZI2C_INTR_RX_NOT_EMPTY);
 327              		.loc 1 276 0
 328 01c4 6B4B     		ldr	r3, .L40+80
 329 01c6 0422     		mov	r2, #4
 330 01c8 1A60     		str	r2, [r3]
 331 01ca 4DE0     		b	.L9
 332              	.L10:
 277:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 278:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 279:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_RX.FULL, INTR_SLAVE.I2C_STOP */
 280:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Receive FIFO chunks: auto data ACK is enabled */
 281:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 else if (0u != (EZI2C_I2C_CTRL_REG & EZI2C_I2C_CTRL_S_READY_DATA_ACK))
 333              		.loc 1 281 0
 334 01cc 5D4B     		ldr	r3, .L40+32
 335 01ce 1A68     		ldr	r2, [r3]
 336 01d0 8023     		mov	r3, #128
 337 01d2 9B01     		lsl	r3, r3, #6
 338 01d4 1340     		and	r3, r2
 339 01d6 47D0     		beq	.L9
 282:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 283:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Slave interrupt (I2C_STOP or I2C_ADDR_MATCH) leads to completion of read.
 284:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * A completion event has a higher priority than the FIFO full.
 285:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * Read remaining data from RX FIFO.
 286:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     */
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 12


 287:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(0u != (locIntrCause & EZI2C_INTR_CAUSE_SLAVE))
 340              		.loc 1 287 0
 341 01d8 BB68     		ldr	r3, [r7, #8]
 342 01da 0222     		mov	r2, #2
 343 01dc 1340     		and	r3, r2
 344 01de 0DD0     		beq	.L24
 288:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 289:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Read remaining bytes from RX FIFO */
 290:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         fifoIndex = EZI2C_GET_RX_FIFO_ENTRIES;
 345              		.loc 1 290 0
 346 01e0 654B     		ldr	r3, .L40+84
 347 01e2 1B68     		ldr	r3, [r3]
 348 01e4 1F22     		mov	r2, #31
 349 01e6 1340     		and	r3, r2
 350 01e8 3B61     		str	r3, [r7, #16]
 291:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 292:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         #if(EZI2C_SECONDARY_ADDRESS_ENABLE)
 293:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 294:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Update with current address match */
 295:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             if(EZI2C_CHECK_INTR_SLAVE_MASKED(EZI2C_INTR_SLAVE_I2C_ADDR_MATCH))
 296:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 297:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Update RX FIFO entries as address byte is there now */
 298:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 fifoIndex = EZI2C_GET_RX_FIFO_ENTRIES;
 299:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 300:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* If SR is valid, RX FIFO is full and address is in SHIFTER:
 301:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 * read 8 entries and leave address in RX FIFO for further processin
 302:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 * If SR is invalid, address is already in RX FIFO: read (entries-1)
 303:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 */
 304:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 fifoIndex -= ((0u != EZI2C_GET_RX_FIFO_SR_VALID) ? (0u) : (1u));
 305:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 306:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 307:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         #endif
 308:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 309:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_DISABLE_SLAVE_AUTO_DATA;
 351              		.loc 1 309 0
 352 01ea 564B     		ldr	r3, .L40+32
 353 01ec 554A     		ldr	r2, .L40+32
 354 01ee 1268     		ldr	r2, [r2]
 355 01f0 5549     		ldr	r1, .L40+36
 356 01f2 0A40     		and	r2, r1
 357 01f4 1A60     		str	r2, [r3]
 310:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         endTransfer = EZI2C_EZI2C_CONTINUE_TRANSFER;
 358              		.loc 1 310 0
 359 01f6 0123     		mov	r3, #1
 360 01f8 7B61     		str	r3, [r7, #20]
 361 01fa 13E0     		b	.L25
 362              	.L24:
 311:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 312:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     else
 313:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* INTR_RX_FULL */
 314:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Continue transfer or disable INTR_RX_FULL to catch completion event. */
 315:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 316:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Calculate buffer size available to write data into */
 317:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locBufSize -= (uint16) EZI2C_EZI2C_FIFO_SIZE;
 363              		.loc 1 317 0
 364 01fc 584B     		ldr	r3, .L40+60
 365 01fe 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 13


 366 0200 083B     		sub	r3, r3, #8
 367 0202 9AB2     		uxth	r2, r3
 368 0204 564B     		ldr	r3, .L40+60
 369 0206 1A80     		strh	r2, [r3]
 318:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 319:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(locBufSize <= EZI2C_EZI2C_FIFO_SIZE)
 370              		.loc 1 319 0
 371 0208 554B     		ldr	r3, .L40+60
 372 020a 1B88     		ldrh	r3, [r3]
 373 020c 082B     		cmp	r3, #8
 374 020e 05D8     		bhi	.L26
 320:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 321:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Send NACK when RX FIFO overflow */
 322:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             fifoIndex   = locBufSize;
 375              		.loc 1 322 0
 376 0210 534B     		ldr	r3, .L40+60
 377 0212 1B88     		ldrh	r3, [r3]
 378 0214 3B61     		str	r3, [r7, #16]
 323:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             endTransfer = EZI2C_EZI2C_COMPLETE_TRANSFER;
 379              		.loc 1 323 0
 380 0216 0023     		mov	r3, #0
 381 0218 7B61     		str	r3, [r7, #20]
 382 021a 03E0     		b	.L25
 383              	.L26:
 324:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 325:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         else
 326:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 327:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Continue  transaction */
 328:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             fifoIndex   = EZI2C_EZI2C_FIFO_SIZE;
 384              		.loc 1 328 0
 385 021c 0823     		mov	r3, #8
 386 021e 3B61     		str	r3, [r7, #16]
 329:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             endTransfer = EZI2C_EZI2C_CONTINUE_TRANSFER;
 387              		.loc 1 329 0
 388 0220 0123     		mov	r3, #1
 389 0222 7B61     		str	r3, [r7, #20]
 390              	.L25:
 330:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 331:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 332:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 333:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     for(; (0u != fifoIndex); fifoIndex--)
 391              		.loc 1 333 0
 392 0224 0DE0     		b	.L27
 393              	.L28:
 334:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 335:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Store data in buffer */
 336:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_dataBuffer1[locIndex] = (uint8) EZI2C_RX_FIFO_RD_REG;
 394              		.loc 1 336 0 discriminator 2
 395 0226 504B     		ldr	r3, .L40+68
 396 0228 1A68     		ldr	r2, [r3]
 397 022a FB69     		ldr	r3, [r7, #28]
 398 022c D218     		add	r2, r2, r3
 399 022e 4B4B     		ldr	r3, .L40+56
 400 0230 1B68     		ldr	r3, [r3]
 401 0232 DBB2     		uxtb	r3, r3
 402 0234 1370     		strb	r3, [r2]
 337:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locIndex++;
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 14


 403              		.loc 1 337 0 discriminator 2
 404 0236 FB69     		ldr	r3, [r7, #28]
 405 0238 0133     		add	r3, r3, #1
 406 023a FB61     		str	r3, [r7, #28]
 333:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 407              		.loc 1 333 0 discriminator 2
 408 023c 3B69     		ldr	r3, [r7, #16]
 409 023e 013B     		sub	r3, r3, #1
 410 0240 3B61     		str	r3, [r7, #16]
 411              	.L27:
 333:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 412              		.loc 1 333 0 is_stmt 0 discriminator 1
 413 0242 3B69     		ldr	r3, [r7, #16]
 414 0244 002B     		cmp	r3, #0
 415 0246 EED1     		bne	.L28
 338:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 339:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 340:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Complete transfer sending NACK when RX FIFO overflow */
 341:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(EZI2C_EZI2C_COMPLETE_TRANSFER == endTransfer)
 416              		.loc 1 341 0 is_stmt 1
 417 0248 7B69     		ldr	r3, [r7, #20]
 418 024a 002B     		cmp	r3, #0
 419 024c 09D1     		bne	.L29
 342:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 343:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ENABLE_SLAVE_AUTO_DATA_NACK;
 420              		.loc 1 343 0
 421 024e 3D4B     		ldr	r3, .L40+32
 422 0250 3C4A     		ldr	r2, .L40+32
 423 0252 1268     		ldr	r2, [r2]
 424 0254 8021     		mov	r1, #128
 425 0256 0902     		lsl	r1, r1, #8
 426 0258 0A43     		orr	r2, r1
 427 025a 1A60     		str	r2, [r3]
 344:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 345:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Disable INTR_RX_FULL during last RX FIFO chunk reception */
 346:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 428              		.loc 1 346 0
 429 025c 3B4B     		ldr	r3, .L40+40
 430 025e 0022     		mov	r2, #0
 431 0260 1A60     		str	r2, [r3]
 432              	.L29:
 347:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 348:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 349:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_ClearRxInterruptSource(EZI2C_INTR_RX_FULL |
 433              		.loc 1 349 0
 434 0262 444B     		ldr	r3, .L40+80
 435 0264 0C22     		mov	r2, #12
 436 0266 1A60     		str	r2, [r3]
 437              	.L9:
 350:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                                             EZI2C_INTR_RX_NOT_EMPTY);
 351:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 352:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 else
 353:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 354:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Exit for slave interrupts which are not active for RX direction:
 355:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * INTR_SLAVE.I2C_ADDR_MATCH and INTR_SLAVE.I2C_STOP while byte-by-byte receptio
 356:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     */
 357:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 15


 358:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 359:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 360:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != (locIntrCause & EZI2C_INTR_CAUSE_SLAVE))
 438              		.loc 1 360 0
 439 0268 BB68     		ldr	r3, [r7, #8]
 440 026a 0222     		mov	r2, #2
 441 026c 1340     		and	r3, r2
 442 026e 00D1     		bne	.LCB384
 443 0270 9FE0     		b	.L30	@long jump
 444              	.LCB384:
 361:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
 362:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_STOP */
 363:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Catch Stop condition: completion of write or read transfer */
 364:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             #if(!EZI2C_SECONDARY_ADDRESS_ENABLE_CONST)
 365:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if(0u != (locIntrSlave & EZI2C_INTR_SLAVE_I2C_STOP))
 445              		.loc 1 365 0
 446 0272 FB68     		ldr	r3, [r7, #12]
 447 0274 1022     		mov	r2, #16
 448 0276 1340     		and	r3, r2
 449 0278 27D0     		beq	.L31
 366:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             #else
 367:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Prevent triggering when matched address was NACKed */
 368:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if((0u != (locIntrSlave & EZI2C_INTR_SLAVE_I2C_STOP)) &&
 369:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                    (0u != ((uint8) EZI2C_EZI2C_STATUS_BUSY & EZI2C_curStatus)))
 370:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             #endif
 371:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 372:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Disable TX and RX interrupt sources */
 373:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 450              		.loc 1 373 0
 451 027a 344B     		ldr	r3, .L40+40
 452 027c 0022     		mov	r2, #0
 453 027e 1A60     		str	r2, [r3]
 374:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_SetTxInterruptMode(EZI2C_NO_INTR_SOURCES);
 454              		.loc 1 374 0
 455 0280 2E4B     		ldr	r3, .L40+24
 456 0282 0022     		mov	r2, #0
 457 0284 1A60     		str	r2, [r3]
 375:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 376:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Set read completion mask */
 377:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus = EZI2C_INTR_SLAVE_I2C_NACK;
 458              		.loc 1 377 0
 459 0286 0223     		mov	r3, #2
 460 0288 BB61     		str	r3, [r7, #24]
 378:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 379:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Check if buffer content was modified: the address phase resets the locIndex 
 380:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(locIndex != EZI2C_EZI2C_GET_OFFSET(activeAddress))
 461              		.loc 1 380 0
 462 028a 2D4B     		ldr	r3, .L40+28
 463 028c 1B78     		ldrb	r3, [r3]
 464 028e 1A1E     		sub	r2, r3, #0
 465 0290 FB69     		ldr	r3, [r7, #28]
 466 0292 9A42     		cmp	r2, r3
 467 0294 03D0     		beq	.L32
 381:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 382:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locStatus |= EZI2C_INTR_SLAVE_I2C_WRITE_STOP;
 468              		.loc 1 382 0
 469 0296 BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 16


 470 0298 0822     		mov	r2, #8
 471 029a 1343     		orr	r3, r2
 472 029c BB61     		str	r3, [r7, #24]
 473              	.L32:
 383:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 384:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 385:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Complete read or write transaction */
 386:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus &= locIntrSlave;
 474              		.loc 1 386 0
 475 029e BB69     		ldr	r3, [r7, #24]
 476 02a0 FA68     		ldr	r2, [r7, #12]
 477 02a2 1340     		and	r3, r2
 478 02a4 BB61     		str	r3, [r7, #24]
 387:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_EZI2C_UPDATE_LOC_STATUS(activeAddress, locStatus);
 388:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus |= (uint32)  EZI2C_curStatus;
 479              		.loc 1 388 0
 480 02a6 244B     		ldr	r3, .L40+20
 481 02a8 1B78     		ldrb	r3, [r3]
 482 02aa DBB2     		uxtb	r3, r3
 483 02ac 1A1C     		mov	r2, r3
 484 02ae BB69     		ldr	r3, [r7, #24]
 485 02b0 1343     		orr	r3, r2
 486 02b2 BB61     		str	r3, [r7, #24]
 389:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus &= (uint32) ~EZI2C_EZI2C_STATUS_BUSY;
 487              		.loc 1 389 0
 488 02b4 BB69     		ldr	r3, [r7, #24]
 489 02b6 2022     		mov	r2, #32
 490 02b8 9343     		bic	r3, r2
 491 02ba BB61     		str	r3, [r7, #24]
 390:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_curStatus = (uint8) locStatus;
 492              		.loc 1 390 0
 493 02bc BB69     		ldr	r3, [r7, #24]
 494 02be DAB2     		uxtb	r2, r3
 495 02c0 1D4B     		ldr	r3, .L40+20
 496 02c2 1A70     		strb	r2, [r3]
 391:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 392:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_fsmState = EZI2C_EZI2C_FSM_IDLE;
 497              		.loc 1 392 0
 498 02c4 224B     		ldr	r3, .L40+44
 499 02c6 0022     		mov	r2, #0
 500 02c8 1A70     		strb	r2, [r3]
 501              	.L31:
 393:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 394:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(EZI2C_SECONDARY_ADDRESS_ENABLE)
 395:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 396:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Store local index into global variable, before address phase */
 397:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_EZI2C_SET_INDEX(activeAddress, locIndex);
 398:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 399:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif
 400:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 401:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 402:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_ADDR_MATCH */
 403:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* The matched address is received: the slave starts its operation.
 404:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 * INTR_SLAVE_I2C_STOP updates the buffer index before the address phase for two add
 405:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 * This is done to update buffer index correctly before the address phase changes it
 406:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 */
 407:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if(0u != (locIntrSlave & EZI2C_INTR_SLAVE_I2C_ADDR_MATCH))
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 17


 502              		.loc 1 407 0
 503 02ca FB68     		ldr	r3, [r7, #12]
 504 02cc 4022     		mov	r2, #64
 505 02ce 1340     		and	r3, r2
 506 02d0 6CD0     		beq	.L33
 408:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 409:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(EZI2C_SECONDARY_ADDRESS_ENABLE)
 410:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 411:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Read address byte from RX FIFO */
 412:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locByte = EZI2C_GET_I2C_7BIT_ADDRESS(EZI2C_RX_FIFO_RD_REG);
 413:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 414:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearRxInterruptSource(EZI2C_INTR_RX_NOT_EMPTY);
 415:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 416:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Check received address against device addresses */
 417:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(EZI2C_addrBuf1 == locByte)
 418:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 419:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 420:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_dataBuffer = EZI2C_dataBuffer1;
 421:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_bufSizeBuf = EZI2C_bufSizeBuf1;
 422:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_protectBuf = EZI2C_protectBuf1;
 423:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 424:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             activeAddress = EZI2C_EZI2C_ACTIVE_ADDRESS1;
 425:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 426:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         else if(EZI2C_addrBuf2 == locByte)
 427:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 428:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Set buffer exposed to secondary slave address */
 429:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_dataBuffer = EZI2C_dataBuffer2;
 430:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_bufSizeBuf = EZI2C_bufSizeBuf2;
 431:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_protectBuf = EZI2C_protectBuf2;
 432:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 433:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             activeAddress = EZI2C_EZI2C_ACTIVE_ADDRESS2;
 434:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 435:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         else
 436:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 437:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Address does not match */
 438:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             ackResponse = EZI2C_EZI2C_NACK_RECEIVED_ADDRESS;
 439:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 440:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 441:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif
 442:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 443:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 #if(EZI2C_SECONDARY_ADDRESS_ENABLE_CONST)
 444:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(EZI2C_EZI2C_NACK_RECEIVED_ADDRESS == ackResponse)
 445:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 446:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Clear interrupt sources before NACK address */
 447:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearI2CExtClkInterruptSource(EZI2C_INTR_I2C_EC_WAKE_UP);
 448:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearSlaveInterruptSource(EZI2C_INTR_SLAVE_ALL);
 449:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 450:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(!EZI2C_CY_SCBIP_V0)
 451:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Disable INTR_I2C_STOP to not trigger after matched address is NACKed. Ti
 452:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_DISABLE_INTR_SLAVE(EZI2C_INTR_SLAVE_I2C_STOP);
 453:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif /* (!EZI2C_CY_SCBIP_V0) */
 454:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 455:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* NACK address byte: it does not match neither primary nor secondary */
 456:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_I2C_SLAVE_GENERATE_NACK;
 457:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 458:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     else
 459:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 #endif /* (EZI2C_SECONDARY_ADDRESS_ENABLE_CONST) */
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 18


 460:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 461:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 462:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(EZI2C_SCB_MODE_UNCONFIG_CONST_CFG)
 463:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(!EZI2C_SECONDARY_ADDRESS_ENABLE)
 464:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 465:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 466:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_dataBuffer = EZI2C_dataBuffer1;
 467:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_bufSizeBuf = EZI2C_bufSizeBuf1;
 468:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_protectBuf = EZI2C_protectBuf1;
 469:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 470:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             activeAddress = EZI2C_EZI2C_ACTIVE_ADDRESS1;
 471:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 472:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif /* (EZI2C_SCB_MODE_UNCONFIG_CONST_CFG) */
 473:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 474:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Bus becomes busy after address is received */
 475:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_curStatus |= (uint8) EZI2C_EZI2C_STATUS_BUSY;
 507              		.loc 1 475 0
 508 02d2 194B     		ldr	r3, .L40+20
 509 02d4 1B78     		ldrb	r3, [r3]
 510 02d6 DBB2     		uxtb	r3, r3
 511 02d8 2022     		mov	r2, #32
 512 02da 1343     		orr	r3, r2
 513 02dc DAB2     		uxtb	r2, r3
 514 02de 164B     		ldr	r3, .L40+20
 515 02e0 1A70     		strb	r2, [r3]
 476:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 477:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Slave is read or written: set current offset */
 478:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locIndex = EZI2C_EZI2C_GET_OFFSET(activeAddress);
 516              		.loc 1 478 0
 517 02e2 174B     		ldr	r3, .L40+28
 518 02e4 1B78     		ldrb	r3, [r3]
 519 02e6 FB61     		str	r3, [r7, #28]
 479:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 480:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Check transaction direction */
 481:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(EZI2C_CHECK_I2C_STATUS(EZI2C_I2C_STATUS_S_READ))
 520              		.loc 1 481 0
 521 02e8 244B     		ldr	r3, .L40+88
 522 02ea 1B68     		ldr	r3, [r3]
 523 02ec 1022     		mov	r2, #16
 524 02ee 1340     		and	r3, r2
 525 02f0 4AD0     		beq	.L34
 482:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 483:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Calculate slave buffer size */
 484:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             locBufSize = EZI2C_bufSizeBuf1 - (uint16) locIndex;
 526              		.loc 1 484 0
 527 02f2 1E4B     		ldr	r3, .L40+72
 528 02f4 1A88     		ldrh	r2, [r3]
 529 02f6 FB69     		ldr	r3, [r7, #28]
 530 02f8 9BB2     		uxth	r3, r3
 531 02fa D31A     		sub	r3, r2, r3
 532 02fc 9AB2     		uxth	r2, r3
 533 02fe 184B     		ldr	r3, .L40+60
 534 0300 1A80     		strh	r2, [r3]
 485:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 486:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Clear TX FIFO to start fill from offset */
 487:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_CLEAR_TX_FIFO;
 535              		.loc 1 487 0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 19


 536 0302 1F4B     		ldr	r3, .L40+92
 537 0304 1E4A     		ldr	r2, .L40+92
 538 0306 1268     		ldr	r2, [r2]
 539 0308 8021     		mov	r1, #128
 540 030a 4902     		lsl	r1, r1, #9
 541 030c 0A43     		orr	r2, r1
 542 030e 1A60     		str	r2, [r3]
 543 0310 1B4B     		ldr	r3, .L40+92
 544 0312 1B4A     		ldr	r2, .L40+92
 545 0314 1268     		ldr	r2, [r2]
 546 0316 1B49     		ldr	r1, .L40+96
 547 0318 0A40     		and	r2, r1
 548 031a 1A60     		str	r2, [r3]
 488:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_SetTxInterruptMode(EZI2C_INTR_TX_EMPTY);
 549              		.loc 1 488 0
 550 031c 074B     		ldr	r3, .L40+24
 551 031e 1022     		mov	r2, #16
 552 0320 1A60     		str	r2, [r3]
 553 0322 34E0     		b	.L35
 554              	.L41:
 555              		.align	2
 556              	.L40:
 557 0324 00000000 		.word	EZI2C_customIntrHandler
 558 0328 00000000 		.word	EZI2C_indexBuf1
 559 032c 400F2540 		.word	1076170560
 560 0330 000E2540 		.word	1076170240
 561 0334 00002540 		.word	1076166656
 562 0338 00000000 		.word	EZI2C_curStatus
 563 033c 880F2540 		.word	1076170632
 564 0340 00000000 		.word	EZI2C_offsetBuf1
 565 0344 60002540 		.word	1076166752
 566 0348 FF5FFFFF 		.word	-40961
 567 034c C80F2540 		.word	1076170696
 568 0350 00000000 		.word	EZI2C_fsmState
 569 0354 880E2540 		.word	1076170376
 570 0358 CC0F2540 		.word	1076170700
 571 035c 40032540 		.word	1076167488
 572 0360 00000000 		.word	locBufSize.4832
 573 0364 6C002540 		.word	1076166764
 574 0368 00000000 		.word	EZI2C_dataBuffer1
 575 036c 00000000 		.word	EZI2C_bufSizeBuf1
 576 0370 00000000 		.word	EZI2C_protectBuf1
 577 0374 C00F2540 		.word	1076170688
 578 0378 08032540 		.word	1076167432
 579 037c 64002540 		.word	1076166756
 580 0380 04022540 		.word	1076167172
 581 0384 FFFFFEFF 		.word	-65537
 582              	.L34:
 489:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 490:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         else
 491:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 492:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Master writes: enable reception interrupt. The FSM state was set in 
 493:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_SetRxInterruptMode(EZI2C_INTR_RX_NOT_EMPTY);
 583              		.loc 1 493 0
 584 0388 214B     		ldr	r3, .L42
 585 038a 0422     		mov	r2, #4
 586 038c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 20


 587              	.L35:
 494:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 495:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 496:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Clear interrupt sources before ACK address */
 497:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearI2CExtClkInterruptSource(EZI2C_INTR_I2C_EC_WAKE_UP);
 588              		.loc 1 497 0
 589 038e 214B     		ldr	r3, .L42+4
 590 0390 0122     		mov	r2, #1
 591 0392 1A60     		str	r2, [r3]
 498:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearSlaveInterruptSource(EZI2C_INTR_SLAVE_ALL);
 592              		.loc 1 498 0
 593 0394 204B     		ldr	r3, .L42+8
 594 0396 214A     		ldr	r2, .L42+12
 595 0398 1A60     		str	r2, [r3]
 499:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 500:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if (!EZI2C_CY_SCBIP_V0)
 501:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Enable STOP to trigger after address match is ACKed. Ticket ID#156094 */
 502:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ENABLE_INTR_SLAVE(EZI2C_INTR_SLAVE_I2C_STOP);
 596              		.loc 1 502 0
 597 039a 214B     		ldr	r3, .L42+16
 598 039c 204A     		ldr	r2, .L42+16
 599 039e 1268     		ldr	r2, [r2]
 600 03a0 1021     		mov	r1, #16
 601 03a2 0A43     		orr	r2, r1
 602 03a4 1A60     		str	r2, [r3]
 503:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif /* (!EZI2C_CY_SCBIP_V0) */
 504:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 505:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* ACK the address byte */
 506:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_I2C_SLAVE_GENERATE_ACK;
 603              		.loc 1 506 0
 604 03a6 1F4B     		ldr	r3, .L42+20
 605 03a8 0122     		mov	r2, #1
 606 03aa 1A60     		str	r2, [r3]
 607              	.L33:
 507:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 508:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 509:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 510:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Clear slave interrupt sources */
 511:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_ClearSlaveInterruptSource(locIntrSlave);
 608              		.loc 1 511 0
 609 03ac 1A4B     		ldr	r3, .L42+8
 610 03ae FA68     		ldr	r2, [r7, #12]
 611 03b0 1A60     		str	r2, [r3]
 612              	.L30:
 512:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 513:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 514:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* INTR_TX.EMPTY */
 515:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* Transmits data to the master: loads data into the TX FIFO. The 0xFF sends out if the
 516:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             * out the buffer. The address reception with a read flag clears the TX FIFO to be loade
 517:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             */
 518:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != (EZI2C_GetInterruptCause() & EZI2C_INTR_CAUSE_TX))
 613              		.loc 1 518 0
 614 03b2 1D4B     		ldr	r3, .L42+24
 615 03b4 1B68     		ldr	r3, [r3]
 616 03b6 0422     		mov	r2, #4
 617 03b8 1340     		and	r3, r2
 618 03ba 21D0     		beq	.L7
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 21


 619              	.L38:
 519:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
 520:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Put data into TX FIFO until there is a room */
 521:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 do
 522:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 523:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Check transmit buffer range: locBufSize calculates after address reception *
 524:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(0u != locBufSize)
 620              		.loc 1 524 0
 621 03bc 1B4B     		ldr	r3, .L42+28
 622 03be 1B88     		ldrh	r3, [r3]
 623 03c0 002B     		cmp	r3, #0
 624 03c2 11D0     		beq	.L36
 525:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 526:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_TX_FIFO_WR_REG = (uint32) EZI2C_dataBuffer1[locIndex];
 625              		.loc 1 526 0
 626 03c4 1A4A     		ldr	r2, .L42+32
 627 03c6 1B4B     		ldr	r3, .L42+36
 628 03c8 1968     		ldr	r1, [r3]
 629 03ca FB69     		ldr	r3, [r7, #28]
 630 03cc CB18     		add	r3, r1, r3
 631 03ce 1B78     		ldrb	r3, [r3]
 632 03d0 DBB2     		uxtb	r3, r3
 633 03d2 1360     		str	r3, [r2]
 527:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locIndex++;
 634              		.loc 1 527 0
 635 03d4 FB69     		ldr	r3, [r7, #28]
 636 03d6 0133     		add	r3, r3, #1
 637 03d8 FB61     		str	r3, [r7, #28]
 528:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locBufSize--;
 638              		.loc 1 528 0
 639 03da 144B     		ldr	r3, .L42+28
 640 03dc 1B88     		ldrh	r3, [r3]
 641 03de 013B     		sub	r3, r3, #1
 642 03e0 9AB2     		uxth	r2, r3
 643 03e2 124B     		ldr	r3, .L42+28
 644 03e4 1A80     		strh	r2, [r3]
 645 03e6 02E0     		b	.L37
 646              	.L36:
 529:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 530:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     else
 531:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 532:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_TX_FIFO_WR_REG = EZI2C_EZI2C_OVFL_RETURN;
 647              		.loc 1 532 0
 648 03e8 114B     		ldr	r3, .L42+32
 649 03ea FF22     		mov	r2, #255
 650 03ec 1A60     		str	r2, [r3]
 651              	.L37:
 533:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 534:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 535:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 while(EZI2C_EZI2C_FIFO_SIZE != EZI2C_GET_TX_FIFO_ENTRIES);
 652              		.loc 1 535 0
 653 03ee 124B     		ldr	r3, .L42+40
 654 03f0 1B68     		ldr	r3, [r3]
 655 03f2 1F22     		mov	r2, #31
 656 03f4 1340     		and	r3, r2
 657 03f6 082B     		cmp	r3, #8
 658 03f8 E0D1     		bne	.L38
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 22


 536:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 537:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_ClearTxInterruptSource(EZI2C_INTR_TX_EMPTY);
 659              		.loc 1 537 0
 660 03fa 104B     		ldr	r3, .L42+44
 661 03fc 1022     		mov	r2, #16
 662 03fe 1A60     		str	r2, [r3]
 663              	.L7:
 538:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 539:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         }
 540:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 541:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Store local index copy into global variable */
 542:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         EZI2C_EZI2C_SET_INDEX(activeAddress, locIndex);
 664              		.loc 1 542 0
 665 0400 FB69     		ldr	r3, [r7, #28]
 666 0402 9AB2     		uxth	r2, r3
 667 0404 0E4B     		ldr	r3, .L42+48
 668 0406 1A80     		strh	r2, [r3]
 543:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 544:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #ifdef EZI2C_EZI2C_STRETCH_ISR_EXIT_CALLBACK
 545:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         EZI2C_EZI2C_STRETCH_ISR_ExitCallback();
 546:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #endif /* EZI2C_EZI2C_STRETCH_ISR_EXIT_CALLBACK */
 547:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 548:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     }
 669              		.loc 1 548 0
 670 0408 BD46     		mov	sp, r7
 671 040a 08B0     		add	sp, sp, #32
 672              		@ sp needed
 673 040c 80BD     		pop	{r7, pc}
 674              	.L43:
 675 040e C046     		.align	2
 676              	.L42:
 677 0410 C80F2540 		.word	1076170696
 678 0414 800E2540 		.word	1076170368
 679 0418 400F2540 		.word	1076170560
 680 041c FF0F0000 		.word	4095
 681 0420 480F2540 		.word	1076170568
 682 0424 6C002540 		.word	1076166764
 683 0428 000E2540 		.word	1076170240
 684 042c 00000000 		.word	locBufSize.4832
 685 0430 40022540 		.word	1076167232
 686 0434 00000000 		.word	EZI2C_dataBuffer1
 687 0438 08022540 		.word	1076167176
 688 043c 800F2540 		.word	1076170624
 689 0440 00000000 		.word	EZI2C_indexBuf1
 690              		.cfi_endproc
 691              	.LFE2:
 692              		.size	EZI2C_EZI2C_STRETCH_ISR, .-EZI2C_EZI2C_STRETCH_ISR
 693              		.bss
 694              		.align	1
 695              	locBufSize.4832:
 696 0000 0000     		.space	2
 697              		.text
 698              	.Letext0:
 699              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 700              		.file 3 ".\\Generated_Source\\PSoC4\\EZI2C_PVT.h"
 701              		.file 4 ".\\Generated_Source\\PSoC4\\EZI2C_EZI2C_PVT.h"
 702              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 23


 703              	.Ldebug_info0:
 704 0000 B8010000 		.4byte	0x1b8
 705 0004 0400     		.2byte	0x4
 706 0006 00000000 		.4byte	.Ldebug_abbrev0
 707 000a 04       		.byte	0x4
 708 000b 01       		.uleb128 0x1
 709 000c 06000000 		.4byte	.LASF34
 710 0010 01       		.byte	0x1
 711 0011 4A020000 		.4byte	.LASF35
 712 0015 67010000 		.4byte	.LASF36
 713 0019 00000000 		.4byte	.Ldebug_ranges0+0
 714 001d 00000000 		.4byte	0
 715 0021 00000000 		.4byte	.Ldebug_line0
 716 0025 02       		.uleb128 0x2
 717 0026 01       		.byte	0x1
 718 0027 06       		.byte	0x6
 719 0028 BD020000 		.4byte	.LASF0
 720 002c 02       		.uleb128 0x2
 721 002d 01       		.byte	0x1
 722 002e 08       		.byte	0x8
 723 002f 08010000 		.4byte	.LASF1
 724 0033 02       		.uleb128 0x2
 725 0034 02       		.byte	0x2
 726 0035 05       		.byte	0x5
 727 0036 8C020000 		.4byte	.LASF2
 728 003a 02       		.uleb128 0x2
 729 003b 02       		.byte	0x2
 730 003c 07       		.byte	0x7
 731 003d C5000000 		.4byte	.LASF3
 732 0041 02       		.uleb128 0x2
 733 0042 04       		.byte	0x4
 734 0043 05       		.byte	0x5
 735 0044 B4020000 		.4byte	.LASF4
 736 0048 02       		.uleb128 0x2
 737 0049 04       		.byte	0x4
 738 004a 07       		.byte	0x7
 739 004b 20010000 		.4byte	.LASF5
 740 004f 02       		.uleb128 0x2
 741 0050 08       		.byte	0x8
 742 0051 05       		.byte	0x5
 743 0052 3C020000 		.4byte	.LASF6
 744 0056 02       		.uleb128 0x2
 745 0057 08       		.byte	0x8
 746 0058 07       		.byte	0x7
 747 0059 0F020000 		.4byte	.LASF7
 748 005d 03       		.uleb128 0x3
 749 005e 04       		.byte	0x4
 750 005f 05       		.byte	0x5
 751 0060 696E7400 		.ascii	"int\000"
 752 0064 02       		.uleb128 0x2
 753 0065 04       		.byte	0x4
 754 0066 07       		.byte	0x7
 755 0067 ED010000 		.4byte	.LASF8
 756 006b 04       		.uleb128 0x4
 757 006c 32010000 		.4byte	.LASF9
 758 0070 02       		.byte	0x2
 759 0071 9201     		.2byte	0x192
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 24


 760 0073 2C000000 		.4byte	0x2c
 761 0077 04       		.uleb128 0x4
 762 0078 CD010000 		.4byte	.LASF10
 763 007c 02       		.byte	0x2
 764 007d 9301     		.2byte	0x193
 765 007f 3A000000 		.4byte	0x3a
 766 0083 04       		.uleb128 0x4
 767 0084 D4010000 		.4byte	.LASF11
 768 0088 02       		.byte	0x2
 769 0089 9401     		.2byte	0x194
 770 008b 48000000 		.4byte	0x48
 771 008f 02       		.uleb128 0x2
 772 0090 04       		.byte	0x4
 773 0091 04       		.byte	0x4
 774 0092 F9000000 		.4byte	.LASF12
 775 0096 02       		.uleb128 0x2
 776 0097 08       		.byte	0x8
 777 0098 04       		.byte	0x4
 778 0099 60010000 		.4byte	.LASF13
 779 009d 02       		.uleb128 0x2
 780 009e 01       		.byte	0x1
 781 009f 08       		.byte	0x8
 782 00a0 75020000 		.4byte	.LASF14
 783 00a4 05       		.uleb128 0x5
 784 00a5 6B000000 		.4byte	0x6b
 785 00a9 04       		.uleb128 0x4
 786 00aa 00000000 		.4byte	.LASF15
 787 00ae 02       		.byte	0x2
 788 00af 3E02     		.2byte	0x23e
 789 00b1 B5000000 		.4byte	0xb5
 790 00b5 05       		.uleb128 0x5
 791 00b6 83000000 		.4byte	0x83
 792 00ba 04       		.uleb128 0x4
 793 00bb 26020000 		.4byte	.LASF16
 794 00bf 02       		.byte	0x2
 795 00c0 4E02     		.2byte	0x24e
 796 00c2 C6000000 		.4byte	0xc6
 797 00c6 06       		.uleb128 0x6
 798 00c7 04       		.byte	0x4
 799 00c8 CC000000 		.4byte	0xcc
 800 00cc 07       		.uleb128 0x7
 801 00cd 02       		.uleb128 0x2
 802 00ce 04       		.byte	0x4
 803 00cf 07       		.byte	0x7
 804 00d0 33020000 		.4byte	.LASF17
 805 00d4 08       		.uleb128 0x8
 806 00d5 C9020000 		.4byte	.LASF37
 807 00d9 01       		.byte	0x1
 808 00da 26       		.byte	0x26
 809 00db 00000000 		.4byte	.LFB2
 810 00df 44040000 		.4byte	.LFE2-.LFB2
 811 00e3 01       		.uleb128 0x1
 812 00e4 9C       		.byte	0x9c
 813 00e5 5D010000 		.4byte	0x15d
 814 00e9 09       		.uleb128 0x9
 815 00ea FA010000 		.4byte	.LASF18
 816 00ee 01       		.byte	0x1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 25


 817 00ef 28       		.byte	0x28
 818 00f0 77000000 		.4byte	0x77
 819 00f4 05       		.uleb128 0x5
 820 00f5 03       		.byte	0x3
 821 00f6 00000000 		.4byte	locBufSize.4832
 822 00fa 09       		.uleb128 0x9
 823 00fb FF000000 		.4byte	.LASF19
 824 00ff 01       		.byte	0x1
 825 0100 29       		.byte	0x29
 826 0101 83000000 		.4byte	0x83
 827 0105 02       		.uleb128 0x2
 828 0106 91       		.byte	0x91
 829 0107 74       		.sleb128 -12
 830 0108 09       		.uleb128 0x9
 831 0109 16010000 		.4byte	.LASF20
 832 010d 01       		.byte	0x1
 833 010e 2A       		.byte	0x2a
 834 010f 83000000 		.4byte	0x83
 835 0113 02       		.uleb128 0x2
 836 0114 91       		.byte	0x91
 837 0115 70       		.sleb128 -16
 838 0116 09       		.uleb128 0x9
 839 0117 E5000000 		.4byte	.LASF21
 840 011b 01       		.byte	0x1
 841 011c 2C       		.byte	0x2c
 842 011d 83000000 		.4byte	0x83
 843 0121 02       		.uleb128 0x2
 844 0122 91       		.byte	0x91
 845 0123 6C       		.sleb128 -20
 846 0124 09       		.uleb128 0x9
 847 0125 05020000 		.4byte	.LASF22
 848 0129 01       		.byte	0x1
 849 012a 2D       		.byte	0x2d
 850 012b 83000000 		.4byte	0x83
 851 012f 02       		.uleb128 0x2
 852 0130 91       		.byte	0x91
 853 0131 68       		.sleb128 -24
 854 0132 09       		.uleb128 0x9
 855 0133 F1000000 		.4byte	.LASF23
 856 0137 01       		.byte	0x1
 857 0138 2E       		.byte	0x2e
 858 0139 83000000 		.4byte	0x83
 859 013d 02       		.uleb128 0x2
 860 013e 91       		.byte	0x91
 861 013f 5C       		.sleb128 -36
 862 0140 09       		.uleb128 0x9
 863 0141 A7020000 		.4byte	.LASF24
 864 0145 01       		.byte	0x1
 865 0146 30       		.byte	0x30
 866 0147 83000000 		.4byte	0x83
 867 014b 02       		.uleb128 0x2
 868 014c 91       		.byte	0x91
 869 014d 60       		.sleb128 -32
 870 014e 09       		.uleb128 0x9
 871 014f D8000000 		.4byte	.LASF25
 872 0153 01       		.byte	0x1
 873 0154 31       		.byte	0x31
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 26


 874 0155 83000000 		.4byte	0x83
 875 0159 02       		.uleb128 0x2
 876 015a 91       		.byte	0x91
 877 015b 64       		.sleb128 -28
 878 015c 00       		.byte	0
 879 015d 0A       		.uleb128 0xa
 880 015e 38010000 		.4byte	.LASF26
 881 0162 03       		.byte	0x3
 882 0163 3A       		.byte	0x3a
 883 0164 BA000000 		.4byte	0xba
 884 0168 0A       		.uleb128 0xa
 885 0169 94000000 		.4byte	.LASF27
 886 016d 04       		.byte	0x4
 887 016e 1D       		.byte	0x1d
 888 016f A4000000 		.4byte	0xa4
 889 0173 0A       		.uleb128 0xa
 890 0174 B6000000 		.4byte	.LASF28
 891 0178 04       		.byte	0x4
 892 0179 1E       		.byte	0x1e
 893 017a 6B000000 		.4byte	0x6b
 894 017e 0A       		.uleb128 0xa
 895 017f 7A020000 		.4byte	.LASF29
 896 0183 04       		.byte	0x4
 897 0184 21       		.byte	0x21
 898 0185 89010000 		.4byte	0x189
 899 0189 06       		.uleb128 0x6
 900 018a 04       		.byte	0x4
 901 018b A4000000 		.4byte	0xa4
 902 018f 0A       		.uleb128 0xa
 903 0190 A4000000 		.4byte	.LASF30
 904 0194 04       		.byte	0x4
 905 0195 22       		.byte	0x22
 906 0196 77000000 		.4byte	0x77
 907 019a 0A       		.uleb128 0xa
 908 019b DB010000 		.4byte	.LASF31
 909 019f 04       		.byte	0x4
 910 01a0 23       		.byte	0x23
 911 01a1 77000000 		.4byte	0x77
 912 01a5 0A       		.uleb128 0xa
 913 01a6 96020000 		.4byte	.LASF32
 914 01aa 04       		.byte	0x4
 915 01ab 24       		.byte	0x24
 916 01ac 6B000000 		.4byte	0x6b
 917 01b0 0A       		.uleb128 0xa
 918 01b1 50010000 		.4byte	.LASF33
 919 01b5 04       		.byte	0x4
 920 01b6 25       		.byte	0x25
 921 01b7 77000000 		.4byte	0x77
 922 01bb 00       		.byte	0
 923              		.section	.debug_abbrev,"",%progbits
 924              	.Ldebug_abbrev0:
 925 0000 01       		.uleb128 0x1
 926 0001 11       		.uleb128 0x11
 927 0002 01       		.byte	0x1
 928 0003 25       		.uleb128 0x25
 929 0004 0E       		.uleb128 0xe
 930 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 27


 931 0006 0B       		.uleb128 0xb
 932 0007 03       		.uleb128 0x3
 933 0008 0E       		.uleb128 0xe
 934 0009 1B       		.uleb128 0x1b
 935 000a 0E       		.uleb128 0xe
 936 000b 55       		.uleb128 0x55
 937 000c 17       		.uleb128 0x17
 938 000d 11       		.uleb128 0x11
 939 000e 01       		.uleb128 0x1
 940 000f 10       		.uleb128 0x10
 941 0010 17       		.uleb128 0x17
 942 0011 00       		.byte	0
 943 0012 00       		.byte	0
 944 0013 02       		.uleb128 0x2
 945 0014 24       		.uleb128 0x24
 946 0015 00       		.byte	0
 947 0016 0B       		.uleb128 0xb
 948 0017 0B       		.uleb128 0xb
 949 0018 3E       		.uleb128 0x3e
 950 0019 0B       		.uleb128 0xb
 951 001a 03       		.uleb128 0x3
 952 001b 0E       		.uleb128 0xe
 953 001c 00       		.byte	0
 954 001d 00       		.byte	0
 955 001e 03       		.uleb128 0x3
 956 001f 24       		.uleb128 0x24
 957 0020 00       		.byte	0
 958 0021 0B       		.uleb128 0xb
 959 0022 0B       		.uleb128 0xb
 960 0023 3E       		.uleb128 0x3e
 961 0024 0B       		.uleb128 0xb
 962 0025 03       		.uleb128 0x3
 963 0026 08       		.uleb128 0x8
 964 0027 00       		.byte	0
 965 0028 00       		.byte	0
 966 0029 04       		.uleb128 0x4
 967 002a 16       		.uleb128 0x16
 968 002b 00       		.byte	0
 969 002c 03       		.uleb128 0x3
 970 002d 0E       		.uleb128 0xe
 971 002e 3A       		.uleb128 0x3a
 972 002f 0B       		.uleb128 0xb
 973 0030 3B       		.uleb128 0x3b
 974 0031 05       		.uleb128 0x5
 975 0032 49       		.uleb128 0x49
 976 0033 13       		.uleb128 0x13
 977 0034 00       		.byte	0
 978 0035 00       		.byte	0
 979 0036 05       		.uleb128 0x5
 980 0037 35       		.uleb128 0x35
 981 0038 00       		.byte	0
 982 0039 49       		.uleb128 0x49
 983 003a 13       		.uleb128 0x13
 984 003b 00       		.byte	0
 985 003c 00       		.byte	0
 986 003d 06       		.uleb128 0x6
 987 003e 0F       		.uleb128 0xf
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 28


 988 003f 00       		.byte	0
 989 0040 0B       		.uleb128 0xb
 990 0041 0B       		.uleb128 0xb
 991 0042 49       		.uleb128 0x49
 992 0043 13       		.uleb128 0x13
 993 0044 00       		.byte	0
 994 0045 00       		.byte	0
 995 0046 07       		.uleb128 0x7
 996 0047 15       		.uleb128 0x15
 997 0048 00       		.byte	0
 998 0049 27       		.uleb128 0x27
 999 004a 19       		.uleb128 0x19
 1000 004b 00       		.byte	0
 1001 004c 00       		.byte	0
 1002 004d 08       		.uleb128 0x8
 1003 004e 2E       		.uleb128 0x2e
 1004 004f 01       		.byte	0x1
 1005 0050 3F       		.uleb128 0x3f
 1006 0051 19       		.uleb128 0x19
 1007 0052 03       		.uleb128 0x3
 1008 0053 0E       		.uleb128 0xe
 1009 0054 3A       		.uleb128 0x3a
 1010 0055 0B       		.uleb128 0xb
 1011 0056 3B       		.uleb128 0x3b
 1012 0057 0B       		.uleb128 0xb
 1013 0058 27       		.uleb128 0x27
 1014 0059 19       		.uleb128 0x19
 1015 005a 11       		.uleb128 0x11
 1016 005b 01       		.uleb128 0x1
 1017 005c 12       		.uleb128 0x12
 1018 005d 06       		.uleb128 0x6
 1019 005e 40       		.uleb128 0x40
 1020 005f 18       		.uleb128 0x18
 1021 0060 9642     		.uleb128 0x2116
 1022 0062 19       		.uleb128 0x19
 1023 0063 01       		.uleb128 0x1
 1024 0064 13       		.uleb128 0x13
 1025 0065 00       		.byte	0
 1026 0066 00       		.byte	0
 1027 0067 09       		.uleb128 0x9
 1028 0068 34       		.uleb128 0x34
 1029 0069 00       		.byte	0
 1030 006a 03       		.uleb128 0x3
 1031 006b 0E       		.uleb128 0xe
 1032 006c 3A       		.uleb128 0x3a
 1033 006d 0B       		.uleb128 0xb
 1034 006e 3B       		.uleb128 0x3b
 1035 006f 0B       		.uleb128 0xb
 1036 0070 49       		.uleb128 0x49
 1037 0071 13       		.uleb128 0x13
 1038 0072 02       		.uleb128 0x2
 1039 0073 18       		.uleb128 0x18
 1040 0074 00       		.byte	0
 1041 0075 00       		.byte	0
 1042 0076 0A       		.uleb128 0xa
 1043 0077 34       		.uleb128 0x34
 1044 0078 00       		.byte	0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 29


 1045 0079 03       		.uleb128 0x3
 1046 007a 0E       		.uleb128 0xe
 1047 007b 3A       		.uleb128 0x3a
 1048 007c 0B       		.uleb128 0xb
 1049 007d 3B       		.uleb128 0x3b
 1050 007e 0B       		.uleb128 0xb
 1051 007f 49       		.uleb128 0x49
 1052 0080 13       		.uleb128 0x13
 1053 0081 3F       		.uleb128 0x3f
 1054 0082 19       		.uleb128 0x19
 1055 0083 3C       		.uleb128 0x3c
 1056 0084 19       		.uleb128 0x19
 1057 0085 00       		.byte	0
 1058 0086 00       		.byte	0
 1059 0087 00       		.byte	0
 1060              		.section	.debug_aranges,"",%progbits
 1061 0000 1C000000 		.4byte	0x1c
 1062 0004 0200     		.2byte	0x2
 1063 0006 00000000 		.4byte	.Ldebug_info0
 1064 000a 04       		.byte	0x4
 1065 000b 00       		.byte	0
 1066 000c 0000     		.2byte	0
 1067 000e 0000     		.2byte	0
 1068 0010 00000000 		.4byte	.LFB2
 1069 0014 44040000 		.4byte	.LFE2-.LFB2
 1070 0018 00000000 		.4byte	0
 1071 001c 00000000 		.4byte	0
 1072              		.section	.debug_ranges,"",%progbits
 1073              	.Ldebug_ranges0:
 1074 0000 00000000 		.4byte	.LFB2
 1075 0004 44040000 		.4byte	.LFE2
 1076 0008 00000000 		.4byte	0
 1077 000c 00000000 		.4byte	0
 1078              		.section	.debug_line,"",%progbits
 1079              	.Ldebug_line0:
 1080 0000 41010000 		.section	.debug_str,"MS",%progbits,1
 1080      02008900 
 1080      00000201 
 1080      FB0E0D00 
 1080      01010101 
 1081              	.LASF15:
 1082 0000 72656733 		.ascii	"reg32\000"
 1082      3200
 1083              	.LASF34:
 1084 0006 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1084      4320342E 
 1084      392E3320 
 1084      32303135 
 1084      30333033 
 1085 0039 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1085      20726576 
 1085      6973696F 
 1085      6E203232 
 1085      31323230 
 1086 006c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1086      66756E63 
 1086      74696F6E 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 30


 1086      2D736563 
 1086      74696F6E 
 1087              	.LASF27:
 1088 0094 455A4932 		.ascii	"EZI2C_curStatus\000"
 1088      435F6375 
 1088      72537461 
 1088      74757300 
 1089              	.LASF30:
 1090 00a4 455A4932 		.ascii	"EZI2C_bufSizeBuf1\000"
 1090      435F6275 
 1090      6653697A 
 1090      65427566 
 1090      3100
 1091              	.LASF28:
 1092 00b6 455A4932 		.ascii	"EZI2C_fsmState\000"
 1092      435F6673 
 1092      6D537461 
 1092      746500
 1093              	.LASF3:
 1094 00c5 73686F72 		.ascii	"short unsigned int\000"
 1094      7420756E 
 1094      7369676E 
 1094      65642069 
 1094      6E7400
 1095              	.LASF25:
 1096 00d8 6C6F6349 		.ascii	"locIntrSlave\000"
 1096      6E747253 
 1096      6C617665 
 1096      00
 1097              	.LASF21:
 1098 00e5 656E6454 		.ascii	"endTransfer\000"
 1098      72616E73 
 1098      66657200 
 1099              	.LASF23:
 1100 00f1 6C6F6342 		.ascii	"locByte\000"
 1100      79746500 
 1101              	.LASF12:
 1102 00f9 666C6F61 		.ascii	"float\000"
 1102      7400
 1103              	.LASF19:
 1104 00ff 6C6F6349 		.ascii	"locIndex\000"
 1104      6E646578 
 1104      00
 1105              	.LASF1:
 1106 0108 756E7369 		.ascii	"unsigned char\000"
 1106      676E6564 
 1106      20636861 
 1106      7200
 1107              	.LASF20:
 1108 0116 6C6F6353 		.ascii	"locStatus\000"
 1108      74617475 
 1108      7300
 1109              	.LASF5:
 1110 0120 6C6F6E67 		.ascii	"long unsigned int\000"
 1110      20756E73 
 1110      69676E65 
 1110      6420696E 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 31


 1110      7400
 1111              	.LASF9:
 1112 0132 75696E74 		.ascii	"uint8\000"
 1112      3800
 1113              	.LASF26:
 1114 0138 455A4932 		.ascii	"EZI2C_customIntrHandler\000"
 1114      435F6375 
 1114      73746F6D 
 1114      496E7472 
 1114      48616E64 
 1115              	.LASF33:
 1116 0150 455A4932 		.ascii	"EZI2C_indexBuf1\000"
 1116      435F696E 
 1116      64657842 
 1116      75663100 
 1117              	.LASF13:
 1118 0160 646F7562 		.ascii	"double\000"
 1118      6C6500
 1119              	.LASF36:
 1120 0167 5C5C766D 		.ascii	"\\\\vmware-host\\Shared Folders\\Documents\\BLEIOSA"
 1120      77617265 
 1120      2D686F73 
 1120      745C5368 
 1120      61726564 
 1121 0195 50505C50 		.ascii	"PP\\PSoC_Creator\\capsenseled\\145i2ccapsenseled-bl"
 1121      536F435F 
 1121      43726561 
 1121      746F725C 
 1121      63617073 
 1122 01c5 652E6379 		.ascii	"e.cydsn\000"
 1122      64736E00 
 1123              	.LASF10:
 1124 01cd 75696E74 		.ascii	"uint16\000"
 1124      313600
 1125              	.LASF11:
 1126 01d4 75696E74 		.ascii	"uint32\000"
 1126      333200
 1127              	.LASF31:
 1128 01db 455A4932 		.ascii	"EZI2C_protectBuf1\000"
 1128      435F7072 
 1128      6F746563 
 1128      74427566 
 1128      3100
 1129              	.LASF8:
 1130 01ed 756E7369 		.ascii	"unsigned int\000"
 1130      676E6564 
 1130      20696E74 
 1130      00
 1131              	.LASF18:
 1132 01fa 6C6F6342 		.ascii	"locBufSize\000"
 1132      75665369 
 1132      7A6500
 1133              	.LASF22:
 1134 0205 6669666F 		.ascii	"fifoIndex\000"
 1134      496E6465 
 1134      7800
 1135              	.LASF7:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 32


 1136 020f 6C6F6E67 		.ascii	"long long unsigned int\000"
 1136      206C6F6E 
 1136      6720756E 
 1136      7369676E 
 1136      65642069 
 1137              	.LASF16:
 1138 0226 63796973 		.ascii	"cyisraddress\000"
 1138      72616464 
 1138      72657373 
 1138      00
 1139              	.LASF17:
 1140 0233 73697A65 		.ascii	"sizetype\000"
 1140      74797065 
 1140      00
 1141              	.LASF6:
 1142 023c 6C6F6E67 		.ascii	"long long int\000"
 1142      206C6F6E 
 1142      6720696E 
 1142      7400
 1143              	.LASF35:
 1144 024a 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\EZI2C_EZI2C_INT.c\000"
 1144      6E657261 
 1144      7465645F 
 1144      536F7572 
 1144      63655C50 
 1145              	.LASF14:
 1146 0275 63686172 		.ascii	"char\000"
 1146      00
 1147              	.LASF29:
 1148 027a 455A4932 		.ascii	"EZI2C_dataBuffer1\000"
 1148      435F6461 
 1148      74614275 
 1148      66666572 
 1148      3100
 1149              	.LASF2:
 1150 028c 73686F72 		.ascii	"short int\000"
 1150      7420696E 
 1150      7400
 1151              	.LASF32:
 1152 0296 455A4932 		.ascii	"EZI2C_offsetBuf1\000"
 1152      435F6F66 
 1152      66736574 
 1152      42756631 
 1152      00
 1153              	.LASF24:
 1154 02a7 6C6F6349 		.ascii	"locIntrCause\000"
 1154      6E747243 
 1154      61757365 
 1154      00
 1155              	.LASF4:
 1156 02b4 6C6F6E67 		.ascii	"long int\000"
 1156      20696E74 
 1156      00
 1157              	.LASF0:
 1158 02bd 7369676E 		.ascii	"signed char\000"
 1158      65642063 
 1158      68617200 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccsRo4OV.s 			page 33


 1159              	.LASF37:
 1160 02c9 455A4932 		.ascii	"EZI2C_EZI2C_STRETCH_ISR\000"
 1160      435F455A 
 1160      4932435F 
 1160      53545245 
 1160      5443485F 
 1161              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
