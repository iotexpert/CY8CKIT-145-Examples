ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"capsense_Sensing.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.capsense_IsBusy,"ax",%progbits
  18              		.align	2
  19              		.global	capsense_IsBusy
  20              		.code	16
  21              		.thumb_func
  22              		.type	capsense_IsBusy, %function
  23              	capsense_IsBusy:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\capsense_Sensing.c"
   1:.\Generated_Source\PSoC4/capsense_Sensing.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \file capsense_Sensing.c
   3:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \version 3.0
   4:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
   5:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
   6:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   This file contains the source of functions common for
   7:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   different sensing methods. 
   8:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
   9:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \see CapSense P4 v3.0 Datasheet
  10:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
  11:.\Generated_Source\PSoC4/capsense_Sensing.c **** *//*****************************************************************************
  12:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Copyright (2016), Cypress Semiconductor Corporation.
  13:.\Generated_Source\PSoC4/capsense_Sensing.c **** ********************************************************************************
  14:.\Generated_Source\PSoC4/capsense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:.\Generated_Source\PSoC4/capsense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:.\Generated_Source\PSoC4/capsense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:.\Generated_Source\PSoC4/capsense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:.\Generated_Source\PSoC4/capsense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:.\Generated_Source\PSoC4/capsense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:.\Generated_Source\PSoC4/capsense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:.\Generated_Source\PSoC4/capsense_Sensing.c **** * written permission of Cypress.
  25:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
  26:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:.\Generated_Source\PSoC4/capsense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:.\Generated_Source\PSoC4/capsense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:.\Generated_Source\PSoC4/capsense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
  31:.\Generated_Source\PSoC4/capsense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
  32:.\Generated_Source\PSoC4/capsense_Sensing.c **** * does not authorize its products for use as critical components in life-support
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 2


  33:.\Generated_Source\PSoC4/capsense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:.\Generated_Source\PSoC4/capsense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:.\Generated_Source\PSoC4/capsense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:.\Generated_Source\PSoC4/capsense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:.\Generated_Source\PSoC4/capsense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:.\Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
  40:.\Generated_Source\PSoC4/capsense_Sensing.c **** #include "capsense_Sensing.h"
  41:.\Generated_Source\PSoC4/capsense_Sensing.c **** #include "cyfitter.h"
  42:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
  43:.\Generated_Source\PSoC4/capsense_Sensing.c **** /***************************************
  44:.\Generated_Source\PSoC4/capsense_Sensing.c **** * API Constants
  45:.\Generated_Source\PSoC4/capsense_Sensing.c **** ***************************************/
  46:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
  47:.\Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_WIDGET_NUM_32                          (32u)
  48:.\Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_WIDGET_NUM_32_DIV_SHIFT                (5u)
  49:.\Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_WIDGET_NUM_32_MASK                     (0x0000001FLu)
  50:.\Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_CALIBRATION_RESOLUTION                 (12u)
  51:.\Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_COARSE_TRIM_THRESHOLD_1                (40u)
  52:.\Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_COARSE_TRIM_THRESHOLD_2                (215u)
  53:.\Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_FREQUENCY_OFFSET_5                     (20u)
  54:.\Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_FREQUENCY_OFFSET_10                    (40u)
  55:.\Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_CALIBRATION_FREQ_KHZ                   (1500u)
  56:.\Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_CALIBRATION_MD                         (2u)
  57:.\Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_MIN_IMO_FREQ_KHZ                       (6000u)
  58:.\Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_CSD_AUTOTUNE_CAL_LEVEL                 (85u)
  59:.\Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_CP_MIN                                 (0u)
  60:.\Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_CP_MAX                                 (65u)
  61:.\Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_CP_ERROR                               (4u)
  62:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
  63:.\Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_CLK_SOURCE_DIRECT != capsense_CSD_SNS_CLK_SOURCE)
  64:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #define capsense_PRS_FACTOR_DIV                     (1u)
  65:.\Generated_Source\PSoC4/capsense_Sensing.c **** #else
  66:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #define capsense_PRS_FACTOR_DIV                     (0u)
  67:.\Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_CLK_SOURCE_DIRECT != capsense_CSD_SNS_CLK_SOURCE) */
  68:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
  69:.\Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_FLIP_FLOP_DIV                          (1u)
  70:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
  71:.\Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  72:.\Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  73:.\Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  74:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
  75:.\Generated_Source\PSoC4/capsense_Sensing.c **** #if ((capsense_CLK_SOURCE_PRS8 == capsense_CSD_SNS_CLK_SOURCE) || \
  76:.\Generated_Source\PSoC4/capsense_Sensing.c ****     (capsense_CLK_SOURCE_PRS12 == capsense_CSD_SNS_CLK_SOURCE) || \
  77:.\Generated_Source\PSoC4/capsense_Sensing.c ****     (capsense_CLK_SOURCE_PRSAUTO == capsense_CSD_SNS_CLK_SOURCE))
  78:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #define capsense_FACTOR_FILTER_DELAY_12MHZ          (2u)
  79:.\Generated_Source\PSoC4/capsense_Sensing.c **** #else
  80:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #define capsense_FACTOR_FILTER_DELAY_12MHZ          (4u)
  81:.\Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_CLK_SOURCE_DIRECT != capsense_CSD_SNS_CLK_SOURCE) */
  82:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
  83:.\Generated_Source\PSoC4/capsense_Sensing.c **** #define capsense_FACTOR_MOD_SNS                         (8u)
  84:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
  85:.\Generated_Source\PSoC4/capsense_Sensing.c **** /*****************************************************************************/
  86:.\Generated_Source\PSoC4/capsense_Sensing.c **** /* Enumeration types definition                                               */
  87:.\Generated_Source\PSoC4/capsense_Sensing.c **** /*****************************************************************************/
  88:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
  89:.\Generated_Source\PSoC4/capsense_Sensing.c **** typedef enum
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 3


  90:.\Generated_Source\PSoC4/capsense_Sensing.c **** {
  91:.\Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_RES_PULLUP_E   = 0x02u,
  92:.\Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_RES_PULLDOWN_E = 0x03u
  93:.\Generated_Source\PSoC4/capsense_Sensing.c **** } capsense_PORT_TEST_DM;
  94:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
  95:.\Generated_Source\PSoC4/capsense_Sensing.c **** typedef enum
  96:.\Generated_Source\PSoC4/capsense_Sensing.c **** {
  97:.\Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_STS_RESET      = 0x01u,
  98:.\Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_STS_NO_RESET   = 0x02u
  99:.\Generated_Source\PSoC4/capsense_Sensing.c **** } capsense_TEST_TYPE;
 100:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 101:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 102:.\Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
 103:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Static Function Prototypes
 104:.\Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
 105:.\Generated_Source\PSoC4/capsense_Sensing.c **** /**
 106:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \if SECTION_CAPSENSE_INTERNAL
 107:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \addtogroup group_capsense_internal
 108:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \{
 109:.\Generated_Source\PSoC4/capsense_Sensing.c **** */
 110:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 111:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 112:.\Generated_Source\PSoC4/capsense_Sensing.c **** /** \}
 113:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \endif */
 114:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 115:.\Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
 116:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Define module variables
 117:.\Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
 118:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 119:.\Generated_Source\PSoC4/capsense_Sensing.c **** #if ((capsense_ENABLE == capsense_CSD_CSX_EN) || \
 120:.\Generated_Source\PSoC4/capsense_Sensing.c ****      (capsense_ENABLE == capsense_ADC_EN))
 121:.\Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_SENSE_METHOD_ENUM capsense_currentSenseMethod = capsense_UNDEFINED_E;
 122:.\Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* ((capsense_ENABLE == capsense_CSD_CSX_EN) || \
 123:.\Generated_Source\PSoC4/capsense_Sensing.c ****            (capsense_ENABLE == capsense_ADC_EN))) */
 124:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 125:.\Generated_Source\PSoC4/capsense_Sensing.c **** #if(capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN)
 126:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /*  Module variable keep track of frequency hopping channel index   */
 127:.\Generated_Source\PSoC4/capsense_Sensing.c ****     uint8 capsense_scanFreqIndex = 0u;
 128:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /*  Variable keep frequency offsets */
 129:.\Generated_Source\PSoC4/capsense_Sensing.c ****     uint8 capsense_immunity[capsense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 130:.\Generated_Source\PSoC4/capsense_Sensing.c **** #else
 131:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /* const allows C-compiler to do optimization */
 132:.\Generated_Source\PSoC4/capsense_Sensing.c ****     const uint8 capsense_scanFreqIndex = 0u;
 133:.\Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN) */
 134:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 135:.\Generated_Source\PSoC4/capsense_Sensing.c **** /* Global software variables */
 136:.\Generated_Source\PSoC4/capsense_Sensing.c **** volatile uint8 capsense_widgetIndex = 0u;    /* Index of the scanning widget */
 137:.\Generated_Source\PSoC4/capsense_Sensing.c **** volatile uint8 capsense_sensorIndex = 0u;    /* Index of the scanning sensor */
 138:.\Generated_Source\PSoC4/capsense_Sensing.c **** volatile uint32 capsense_curWidgetResolution = 0u;
 139:.\Generated_Source\PSoC4/capsense_Sensing.c **** uint8 capsense_requestScanAllWidget = 0u;
 140:.\Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_CSD_SS_DIS != capsense_CSD_AUTOTUNE)
 141:.\Generated_Source\PSoC4/capsense_Sensing.c ****     uint8 capsense_prescalersTuningDone = 0u;
 142:.\Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_CSD_SS_DIS != capsense_CSD_AUTOTUNE) */
 143:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 144:.\Generated_Source\PSoC4/capsense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure  */
 145:.\Generated_Source\PSoC4/capsense_Sensing.c **** capsense_RAM_SNS_STRUCT *capsense_curRamSnsPtr;
 146:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 4


 147:.\Generated_Source\PSoC4/capsense_Sensing.c **** #if ((capsense_ENABLE == capsense_CSD_GANGED_SNS_EN) || \
 148:.\Generated_Source\PSoC4/capsense_Sensing.c ****      (capsense_ENABLE == capsense_CSX_EN))
 149:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /*  Pointer to Flash structure holding configuration of widget to be scanned  */
 150:.\Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_FLASH_WD_STRUCT const *capsense_curFlashWdgtPtr = 0u;
 151:.\Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* ((capsense_ENABLE == capsense_CSD_GANGED_SNS_EN) || \
 152:.\Generated_Source\PSoC4/capsense_Sensing.c ****            (capsense_ENABLE == capsense_CSX_EN))  */
 153:.\Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN) 
 154:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /*  Pointer to Flash structure holding info of sensor to be scanned  */
 155:.\Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_FLASH_SNS_STRUCT const *capsense_curFlashSnsPtr = 0u;
 156:.\Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN) */
 157:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 158:.\Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
 159:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_IsBusy
 160:.\Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
 161:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 162:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
 163:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Returns the current status of the component (scan completed or scan in
 164:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   progress).
 165:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 166:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \details
 167:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   This API checks the status flag in the capsense_dsRam structure
 168:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   which is set when the scanning starts. The API returns a zero value when all the
 169:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   sensors in the widget have been scanned.
 170:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   In the CSD2X mode the API returns a zero value when all the sensors in both slots
 171:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   have been scanned.
 172:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   A new scan or the widget setup change must not be made while
 173:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   the component is busy.
 174:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 175:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \return
 176:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Returns the current status of the component (scan completed or scan in
 177:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   progress):
 178:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Zero     - Free, no scan in progress, a next scan can be initiated.
 179:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Non-zero - Busy, scan in progress, wait prior to initiating a next scan.
 180:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 181:.\Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
 182:.\Generated_Source\PSoC4/capsense_Sensing.c **** uint32 capsense_IsBusy(void)
 183:.\Generated_Source\PSoC4/capsense_Sensing.c **** {
  26              		.loc 1 183 0
  27              		.cfi_startproc
 184:.\Generated_Source\PSoC4/capsense_Sensing.c ****     return ((*(volatile uint8 *)&capsense_dsRam.status) & capsense_SW_STS_BUSY);
  28              		.loc 1 184 0
  29 0000 024B     		ldr	r3, .L2
  30 0002 187A     		ldrb	r0, [r3, #8]
  31 0004 7F23     		mov	r3, #127
  32 0006 9843     		bic	r0, r3
 185:.\Generated_Source\PSoC4/capsense_Sensing.c **** }
  33              		.loc 1 185 0
  34              		@ sp needed
  35 0008 7047     		bx	lr
  36              	.L3:
  37 000a C046     		.align	2
  38              	.L2:
  39 000c 00000000 		.word	capsense_dsRam
  40              		.cfi_endproc
  41              	.LFE1:
  42              		.size	capsense_IsBusy, .-capsense_IsBusy
  43              		.section	.text.capsense_SetupWidget,"ax",%progbits
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 5


  44              		.align	2
  45              		.global	capsense_SetupWidget
  46              		.code	16
  47              		.thumb_func
  48              		.type	capsense_SetupWidget, %function
  49              	capsense_SetupWidget:
  50              	.LFB2:
 186:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 187:.\Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
 188:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_SetupWidget
 189:.\Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
 190:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 191:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
 192:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Performs the initialization required to scan a particular widget.
 193:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 194:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \details
 195:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   This API re-initializes the component hardware if the sensing methods used by
 196:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   the widget are different from the sensing methods used by the previous widget, 
 197:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   initializes the hardware with configurations specific to the widget. 
 198:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   This API does not start sensor scanning. This API must be called prior 
 199:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   calling capsense_Scan() API to start the sensor scan.
 200:.\Generated_Source\PSoC4/capsense_Sensing.c **** * 
 201:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Note in the CSD2x mode, each widget should be set up individually with two calls to the
 202:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   capsense_SetupWidget() API.
 203:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   This API disconnects the electrode if it was previously connected by 
 204:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   capsense_CSDSetupWidgetExt() or capsense_CSXSetupWidgetExt() 
 205:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   APIs. This API does not disconnect the electrode if it was connected manually or
 206:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   using capsense_CSDConnectSns() API.
 207:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   The last widget will be configured if this API is called twice for different
 208:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   widgets. API does not break the functionality if it is called twice for the 
 209:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   same widget.
 210:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 211:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \param wdgtIndex
 212:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Specifies the ID of the widget for which the hardware tuning parameters should be
 213:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   initialized in the capsense HW block.
 214:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 215:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \return 
 216:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Returns the status of operation:
 217:.\Generated_Source\PSoC4/capsense_Sensing.c **** *      - Zero     - The capsense HW block is initialized.
 218:.\Generated_Source\PSoC4/capsense_Sensing.c **** *      - Non-zero - The capsense HW block is busy and cannot be initialized.
 219:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 220:.\Generated_Source\PSoC4/capsense_Sensing.c **** **********************************************************************************/
 221:.\Generated_Source\PSoC4/capsense_Sensing.c **** cystatus capsense_SetupWidget(uint32 wdgtIndex)
 222:.\Generated_Source\PSoC4/capsense_Sensing.c **** {
  51              		.loc 1 222 0
  52              		.cfi_startproc
  53              	.LVL0:
  54 0000 10B5     		push	{r4, lr}
  55              		.cfi_def_cfa_offset 8
  56              		.cfi_offset 4, -8
  57              		.cfi_offset 14, -4
 223:.\Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus widgetStatus;
 224:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 225:.\Generated_Source\PSoC4/capsense_Sensing.c ****     if (capsense_WDGT_SW_STS_BUSY == (capsense_dsRam.status & capsense_WDGT_SW_STS_BUSY))
  58              		.loc 1 225 0
  59 0002 104B     		ldr	r3, .L10
  60 0004 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 6


  61 0006 DB03     		lsl	r3, r3, #15
  62 0008 10D4     		bmi	.L7
 226:.\Generated_Source\PSoC4/capsense_Sensing.c ****     {
 227:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 228:.\Generated_Source\PSoC4/capsense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 229:.\Generated_Source\PSoC4/capsense_Sensing.c ****     }
 230:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /*  
 231:.\Generated_Source\PSoC4/capsense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 232:.\Generated_Source\PSoC4/capsense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 233:.\Generated_Source\PSoC4/capsense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.   
 234:.\Generated_Source\PSoC4/capsense_Sensing.c ****      */
 235:.\Generated_Source\PSoC4/capsense_Sensing.c ****         else if ((capsense_TOTAL_WIDGETS > wdgtIndex) &&
  63              		.loc 1 235 0
  64 000a 0028     		cmp	r0, #0
  65 000c 10D1     		bne	.L8
  66 000e C304     		lsl	r3, r0, #19
  67 0010 1B0E     		lsr	r3, r3, #24
 236:.\Generated_Source\PSoC4/capsense_Sensing.c ****             (((uint32)capsense_dsRam.wdgtEnable[(uint8)(wdgtIndex >> capsense_WIDGET_NUM_32_DIV_SHI
  68              		.loc 1 236 0 discriminator 1
  69 0012 0233     		add	r3, r3, #2
  70 0014 9B00     		lsl	r3, r3, #2
  71 0016 0B4A     		ldr	r2, .L10
  72 0018 D318     		add	r3, r2, r3
  73 001a 5A68     		ldr	r2, [r3, #4]
 237:.\Generated_Source\PSoC4/capsense_Sensing.c ****                                                 (0x00000001Lu << (wdgtIndex & capsense_WIDGET_NUM_3
  74              		.loc 1 237 0 discriminator 1
  75 001c 1F23     		mov	r3, #31
  76 001e 0340     		and	r3, r0
  77 0020 DA40     		lsr	r2, r2, r3
  78 0022 131C     		mov	r3, r2
 235:.\Generated_Source\PSoC4/capsense_Sensing.c ****             (((uint32)capsense_dsRam.wdgtEnable[(uint8)(wdgtIndex >> capsense_WIDGET_NUM_32_DIV_SHI
  79              		.loc 1 235 0 discriminator 1
  80 0024 DB07     		lsl	r3, r3, #31
  81 0026 05D4     		bmi	.L9
 238:.\Generated_Source\PSoC4/capsense_Sensing.c ****     
 239:.\Generated_Source\PSoC4/capsense_Sensing.c ****         {
 240:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_SELF_TEST_EN)
 241:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 if (capsense_DISABLE != ((uint32)capsense_dsRam.wdgtWorking[(uint8)(wdgtIndex >> ca
 242:.\Generated_Source\PSoC4/capsense_Sensing.c ****                                                  (0x00000001Lu << (wdgtIndex & capsense_WIDGET_NUM_
 243:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 {
 244:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     widgetStatus = CYRET_SUCCESS;
 245:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 }
 246:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 else    
 247:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 {
 248:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     widgetStatus = CYRET_INVALID_STATE;
 249:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 }
 250:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #else
 251:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 widgetStatus = CYRET_SUCCESS;
 252:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #endif  /* (capsense_ENABLE == capsense_SELF_TEST_EN)) */
 253:.\Generated_Source\PSoC4/capsense_Sensing.c ****         }
 254:.\Generated_Source\PSoC4/capsense_Sensing.c ****         else    
 255:.\Generated_Source\PSoC4/capsense_Sensing.c ****         {
 256:.\Generated_Source\PSoC4/capsense_Sensing.c ****             widgetStatus = CYRET_BAD_PARAM;
  82              		.loc 1 256 0
  83 0028 0124     		mov	r4, #1
  84 002a 04E0     		b	.L5
  85              	.L7:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 7


 228:.\Generated_Source\PSoC4/capsense_Sensing.c ****     }
  86              		.loc 1 228 0
  87 002c 1124     		mov	r4, #17
  88 002e 02E0     		b	.L5
  89              	.L8:
  90              		.loc 1 256 0
  91 0030 0124     		mov	r4, #1
  92 0032 00E0     		b	.L5
  93              	.L9:
 251:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #endif  /* (capsense_ENABLE == capsense_SELF_TEST_EN)) */
  94              		.loc 1 251 0
  95 0034 0024     		mov	r4, #0
  96              	.L5:
  97              	.LVL1:
 257:.\Generated_Source\PSoC4/capsense_Sensing.c ****         }
 258:.\Generated_Source\PSoC4/capsense_Sensing.c ****     
 259:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /*  
 260:.\Generated_Source\PSoC4/capsense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 261:.\Generated_Source\PSoC4/capsense_Sensing.c ****      * widget  
 262:.\Generated_Source\PSoC4/capsense_Sensing.c ****      */
 263:.\Generated_Source\PSoC4/capsense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)    
  98              		.loc 1 263 0
  99 0036 002C     		cmp	r4, #0
 100 0038 01D1     		bne	.L6
 264:.\Generated_Source\PSoC4/capsense_Sensing.c ****     {
 265:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  Check if CSD2X is enabled   */
 266:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSD2X_EN)
 267:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /******************************
 268:.\Generated_Source\PSoC4/capsense_Sensing.c ****             * This is the place where capsense_SetupWidget2x(uint32 slotIndex) 
 269:.\Generated_Source\PSoC4/capsense_Sensing.c ****             * API should be implemented.
 270:.\Generated_Source\PSoC4/capsense_Sensing.c ****             * CSD2X will be implemented
 271:.\Generated_Source\PSoC4/capsense_Sensing.c ****             * in the next component version.
 272:.\Generated_Source\PSoC4/capsense_Sensing.c ****             *********************************/
 273:.\Generated_Source\PSoC4/capsense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 274:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #error "CSD2x not implemented in this version of component"
 275:.\Generated_Source\PSoC4/capsense_Sensing.c ****             
 276:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #elif (capsense_ENABLE == capsense_CSD_CSX_EN)
 277:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_ADC_EN)
 278:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 if (capsense_UNDEFINED_E == capsense_currentSenseMethod) 
 279:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 {
 280:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /* Release ADC resources */
 281:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     widgetStatus = capsense_AdcReleaseResources();
 282:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 }
 283:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_ADC_EN) */
 284:.\Generated_Source\PSoC4/capsense_Sensing.c ****             
 285:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /*  Check widget sensing method is CSX and call CSX APIs    */
 286:.\Generated_Source\PSoC4/capsense_Sensing.c ****             if (capsense_SENSE_METHOD_CSX_E == 
 287:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 (capsense_SENSE_METHOD_ENUM)capsense_GET_SENSE_METHOD(&capsense_dsFlash.wdgtArray[w
 288:.\Generated_Source\PSoC4/capsense_Sensing.c ****             {
 289:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 /*  
 290:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  *  Check if CSD block is  already initialized for CSX operation
 291:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  *  If not, initialize CSD hardware block for CSX measurement   
 292:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  */
 293:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 if (capsense_SENSE_METHOD_CSX_E != capsense_currentSenseMethod) 
 294:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 {
 295:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     capsense_SwitchSensingMode(capsense_SENSE_METHOD_CSX_E);
 296:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 }
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 8


 297:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 298:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 #if (capsense_ENABLE == capsense_ADC_EN)
 299:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     if (CYRET_SUCCESS == widgetStatus)
 300:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     {
 301:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         /*  Set up widget for CSX scan  */
 302:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         capsense_CSXSetupWidget(wdgtIndex);
 303:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     }
 304:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 #else
 305:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /*  Set up widget for CSX scan  */
 306:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     capsense_CSXSetupWidget(wdgtIndex);
 307:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 #endif /* (capsense_ENABLE == capsense_ADC_EN) */
 308:.\Generated_Source\PSoC4/capsense_Sensing.c ****             }
 309:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /*  Check widget sensing method is CSD and call appropriate API */
 310:.\Generated_Source\PSoC4/capsense_Sensing.c ****             else if (capsense_SENSE_METHOD_CSD_E ==
 311:.\Generated_Source\PSoC4/capsense_Sensing.c ****                      (capsense_SENSE_METHOD_ENUM)capsense_GET_SENSE_METHOD(&capsense_dsFlash.wdgtAr
 312:.\Generated_Source\PSoC4/capsense_Sensing.c ****             {
 313:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 /*  
 314:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  * Check if CSD block is  already initialized for CSD operation
 315:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  * If not, initialize CSD hardware block for CSD measurement   
 316:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  */
 317:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 if (capsense_SENSE_METHOD_CSD_E != capsense_currentSenseMethod)
 318:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 {
 319:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     capsense_SwitchSensingMode(capsense_SENSE_METHOD_CSD_E);
 320:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 }
 321:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 322:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 #if (capsense_ENABLE == capsense_ADC_EN)
 323:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     if (CYRET_SUCCESS == widgetStatus)
 324:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     {
 325:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         /*  Set up widget for CSD scan  */
 326:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         capsense_CSDSetupWidget(wdgtIndex);
 327:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     }
 328:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 #else
 329:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /*  Set up widget for CSD scan  */
 330:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     capsense_CSDSetupWidget(wdgtIndex);
 331:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 #endif /* (capsense_ENABLE == capsense_ADC_EN) */
 332:.\Generated_Source\PSoC4/capsense_Sensing.c ****             }
 333:.\Generated_Source\PSoC4/capsense_Sensing.c ****             else
 334:.\Generated_Source\PSoC4/capsense_Sensing.c ****             {
 335:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 /*  Sensing method is invalid, return error to caller  */
 336:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 widgetStatus = CYRET_UNKNOWN;
 337:.\Generated_Source\PSoC4/capsense_Sensing.c ****             }
 338:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #elif (capsense_ENABLE == capsense_CSD_EN)
 339:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_ADC_EN)
 340:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 /*  
 341:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  * Check if CSD block is  already initialized for CSD operation
 342:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  * If not, initialize CSD hardware block for CSD measurement   
 343:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  */
 344:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 if (capsense_SENSE_METHOD_CSD_E != capsense_currentSenseMethod)
 345:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 {
 346:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     if (capsense_UNDEFINED_E == capsense_currentSenseMethod) 
 347:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     {
 348:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         /* Release ADC resources */
 349:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         widgetStatus = capsense_AdcReleaseResources();
 350:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     }
 351:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 352:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     if (CYRET_SUCCESS == widgetStatus)
 353:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     {
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 9


 354:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         /* Initialize CSD mode to guarantee configured CSD mode after CSX calibrati
 355:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         capsense_CSDInitialize();
 356:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         capsense_currentSenseMethod = capsense_SENSE_METHOD_CSD_E;
 357:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     }
 358:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 }
 359:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 
 360:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 if (CYRET_SUCCESS == widgetStatus)
 361:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 {
 362:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /*  Set up widget for scan */
 363:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     capsense_CSDSetupWidget(wdgtIndex);  
 364:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 }
 365:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #else    
 366:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 /*  Set up widget for scan */
 367:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_CSDSetupWidget(wdgtIndex);   
 101              		.loc 1 367 0
 102 003a FFF7FEFF 		bl	capsense_CSDSetupWidget
 103              	.LVL2:
 104              	.L6:
 368:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_ADC_EN) */
 369:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #elif (capsense_ENABLE == capsense_CSX_EN)
 370:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_ADC_EN)
 371:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 /*  
 372:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  *  Check if CSD block is  already initialized for CSX operation
 373:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  *  If not, initialize CSD hardware block for CSX measurement   
 374:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  */
 375:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 if (capsense_SENSE_METHOD_CSX_E != capsense_currentSenseMethod) 
 376:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 {
 377:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     if (capsense_UNDEFINED_E == capsense_currentSenseMethod) 
 378:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     {
 379:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         /* Release ADC resources */
 380:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         widgetStatus = capsense_AdcReleaseResources();
 381:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     }
 382:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     
 383:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     if (CYRET_SUCCESS == widgetStatus)
 384:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     {
 385:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         /* Initialize CSD hardware block for CSX measurement */
 386:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         capsense_CSXInitialize();
 387:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         capsense_currentSenseMethod = capsense_SENSE_METHOD_CSX_E;
 388:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     }
 389:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 }
 390:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 
 391:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 if (CYRET_SUCCESS == widgetStatus)
 392:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 {
 393:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /*  Set up widgets for scan     */
 394:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     capsense_CSXSetupWidget(wdgtIndex);
 395:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 }
 396:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #else
 397:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 /*  Set up widgets for scan     */
 398:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_CSXSetupWidget(wdgtIndex);
 399:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_ADC_EN) */
 400:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #else
 401:.\Generated_Source\PSoC4/capsense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 402:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #error "No sensing method enabled, component cannot work in this mode"
 403:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #endif  /* (capsense_ENABLE == capsense_CSD2X_EN) */
 404:.\Generated_Source\PSoC4/capsense_Sensing.c ****     }
 405:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 406:.\Generated_Source\PSoC4/capsense_Sensing.c ****     return (widgetStatus);
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 10


 407:.\Generated_Source\PSoC4/capsense_Sensing.c **** }
 105              		.loc 1 407 0
 106 003e 201C     		mov	r0, r4
 107              		@ sp needed
 108              	.LVL3:
 109 0040 10BD     		pop	{r4, pc}
 110              	.L11:
 111 0042 C046     		.align	2
 112              	.L10:
 113 0044 00000000 		.word	capsense_dsRam
 114              		.cfi_endproc
 115              	.LFE2:
 116              		.size	capsense_SetupWidget, .-capsense_SetupWidget
 117              		.section	.text.capsense_Scan,"ax",%progbits
 118              		.align	2
 119              		.global	capsense_Scan
 120              		.code	16
 121              		.thumb_func
 122              		.type	capsense_Scan, %function
 123              	capsense_Scan:
 124              	.LFB3:
 408:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 409:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 410:.\Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
 411:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_Scan
 412:.\Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
 413:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 414:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
 415:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Initiates scan for all sensors in the widget which is initialized by 
 416:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   capsense_SetupWidget(), if the no scan is in progress
 417:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 418:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \details
 419:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   In the CSD mode, this API initializes the widget scanning in the descending order.
 420:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   In the CSX mode, this API initializes the widget scanning in the ascending order. 
 421:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   It connects the sensor in the widget, sets up a callback for the ISR
 422:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   and starts scan of all the sensors in the widget which was set up in
 423:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   the capsense_SetupWidget() API.
 424:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   This API returns to the caller after scanning of the sensor in the 
 425:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   widget is started, and scanning of the remaining sensors is started in the ISR. 
 426:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   The status of scanning must be checked using the capsense_IsBusy() API  
 427:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   prior to starting next scan or setting up a widget.
 428:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 429:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Note that the capsense HW block should be configured using  
 430:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   the capsense_SetupWidget() API prior to calling this API.
 431:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 432:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \return 
 433:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Returns the status of operation:
 434:.\Generated_Source\PSoC4/capsense_Sensing.c **** *      - Zero     - The capsense scan is started.
 435:.\Generated_Source\PSoC4/capsense_Sensing.c **** *      - Non-zero - The capsense HW block is busy and scan has not started.
 436:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 437:.\Generated_Source\PSoC4/capsense_Sensing.c **** **********************************************************************************/
 438:.\Generated_Source\PSoC4/capsense_Sensing.c **** cystatus capsense_Scan(void)
 439:.\Generated_Source\PSoC4/capsense_Sensing.c **** {
 125              		.loc 1 439 0
 126              		.cfi_startproc
 127 0000 08B5     		push	{r3, lr}
 128              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 11


 129              		.cfi_offset 3, -8
 130              		.cfi_offset 14, -4
 131              	.LVL4:
 440:.\Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 441:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 442:.\Generated_Source\PSoC4/capsense_Sensing.c ****     if (capsense_WDGT_SW_STS_BUSY == (capsense_dsRam.status & capsense_WDGT_SW_STS_BUSY))
 132              		.loc 1 442 0
 133 0002 054B     		ldr	r3, .L15
 134 0004 9B68     		ldr	r3, [r3, #8]
 135 0006 DB03     		lsl	r3, r3, #15
 136 0008 03D4     		bmi	.L14
 443:.\Generated_Source\PSoC4/capsense_Sensing.c ****     {
 444:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 445:.\Generated_Source\PSoC4/capsense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 446:.\Generated_Source\PSoC4/capsense_Sensing.c ****     }
 447:.\Generated_Source\PSoC4/capsense_Sensing.c ****     else
 448:.\Generated_Source\PSoC4/capsense_Sensing.c ****     {
 449:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  If CSD2X is enabled, call CSD2X scan    */
 450:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_ENABLE == capsense_CSD2X_EN)
 451:.\Generated_Source\PSoC4/capsense_Sensing.c ****         scanStatus = capsense_Scan2x();
 452:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 453:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /*  If both CSD and CSX are enabled, call scan API based on widget sensing method    */
 454:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #elif (capsense_ENABLE == capsense_CSD_CSX_EN)
 455:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  Check widget sensing method and call appropriate APIs   */
 456:.\Generated_Source\PSoC4/capsense_Sensing.c ****         switch (capsense_currentSenseMethod)
 457:.\Generated_Source\PSoC4/capsense_Sensing.c ****         {  
 458:.\Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SENSE_METHOD_CSX_E:
 459:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_CSXScan();
 460:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 461:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 462:.\Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_SENSE_METHOD_CSD_E:
 463:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  capsense_CSDScan();
 464:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 465:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 466:.\Generated_Source\PSoC4/capsense_Sensing.c ****             default:
 467:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 scanStatus = CYRET_UNKNOWN;
 468:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 469:.\Generated_Source\PSoC4/capsense_Sensing.c ****         }
 470:.\Generated_Source\PSoC4/capsense_Sensing.c ****         
 471:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /*  If only CSD is enabled, call CSD scan   */
 472:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #elif (capsense_ENABLE == capsense_CSD_EN)
 473:.\Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_CSDScan();
 137              		.loc 1 473 0
 138 000a FFF7FEFF 		bl	capsense_CSDScan
 139              	.LVL5:
 440:.\Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 140              		.loc 1 440 0
 141 000e 0020     		mov	r0, #0
 142 0010 00E0     		b	.L13
 143              	.L14:
 445:.\Generated_Source\PSoC4/capsense_Sensing.c ****     }
 144              		.loc 1 445 0
 145 0012 1120     		mov	r0, #17
 146              	.L13:
 147              	.LVL6:
 474:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 475:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /*  If only CSX is enabled, call CSX scan   */
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 12


 476:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #elif (capsense_ENABLE == capsense_CSX_EN)
 477:.\Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_CSXScan();
 478:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 479:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #else
 480:.\Generated_Source\PSoC4/capsense_Sensing.c ****         scanStatus = CYRET_UNKNOWN;
 481:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #error "No sensing method enabled, component cannot work in this mode"
 482:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #endif  /* (capsense_ENABLE == capsense_CSD2X_EN) */
 483:.\Generated_Source\PSoC4/capsense_Sensing.c ****     }
 484:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 485:.\Generated_Source\PSoC4/capsense_Sensing.c ****     return (scanStatus);
 486:.\Generated_Source\PSoC4/capsense_Sensing.c **** }
 148              		.loc 1 486 0
 149              		@ sp needed
 150 0014 08BD     		pop	{r3, pc}
 151              	.L16:
 152 0016 C046     		.align	2
 153              	.L15:
 154 0018 00000000 		.word	capsense_dsRam
 155              		.cfi_endproc
 156              	.LFE3:
 157              		.size	capsense_Scan, .-capsense_Scan
 158              		.section	.text.capsense_ScanAllWidgets,"ax",%progbits
 159              		.align	2
 160              		.global	capsense_ScanAllWidgets
 161              		.code	16
 162              		.thumb_func
 163              		.type	capsense_ScanAllWidgets, %function
 164              	capsense_ScanAllWidgets:
 165              	.LFB4:
 487:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 488:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 489:.\Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_ScanAllWidgets
 491:.\Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
 492:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 493:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
 494:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Initializes a widget and scans all the sensors in the widget, then the same 
 495:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   process is repeated for all widgets in the component. i.e. scan all the 
 496:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   widgets in the component.
 497:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 498:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \details
 499:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Initializes a widget and then initiates scan for the sensor in the
 500:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   widget and returns to the caller. At the end of the sensor scan, the ISR is 
 501:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   triggered and the following sensor scan is initiated in the ISR. Once all the 
 502:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   sensors are scanned, the next widget in the component is initialized and the  
 503:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   process is repeated  until all the sensors in all widgets in the component 
 504:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   are scanned.
 505:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   This function does not require the capsense_Scan() or 
 506:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   capsense_SetupWidget(uint32 wdgtIndex) APIs to be called to start
 507:.\Generated_Source\PSoC4/capsense_Sensing.c **** *    scanning.
 508:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 509:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \return 
 510:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Returns the status of operation:
 511:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   - Zero        - Successfully initiated scan.
 512:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   - Non-zero    - One or more errors occurred in the initialization process.
 513:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 514:.\Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 13


 515:.\Generated_Source\PSoC4/capsense_Sensing.c **** cystatus capsense_ScanAllWidgets(void)
 516:.\Generated_Source\PSoC4/capsense_Sensing.c **** {
 166              		.loc 1 516 0
 167              		.cfi_startproc
 168 0000 08B5     		push	{r3, lr}
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 3, -8
 171              		.cfi_offset 14, -4
 172              	.LVL7:
 517:.\Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 518:.\Generated_Source\PSoC4/capsense_Sensing.c ****     
 519:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_DISABLE == capsense_CSD2X_EN)
 520:.\Generated_Source\PSoC4/capsense_Sensing.c ****         if (capsense_SW_STS_BUSY == (capsense_dsRam.status & capsense_SW_STS_BUSY))
 173              		.loc 1 520 0
 174 0002 114B     		ldr	r3, .L23
 175 0004 9B68     		ldr	r3, [r3, #8]
 176 0006 1B06     		lsl	r3, r3, #24
 177 0008 1CD4     		bmi	.L22
 521:.\Generated_Source\PSoC4/capsense_Sensing.c ****         {
 522:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /* Previous widget is being scanned. Return error. */
 523:.\Generated_Source\PSoC4/capsense_Sensing.c ****             scanStatus = CYRET_INVALID_STATE;
 524:.\Generated_Source\PSoC4/capsense_Sensing.c ****         }
 525:.\Generated_Source\PSoC4/capsense_Sensing.c ****         else
 526:.\Generated_Source\PSoC4/capsense_Sensing.c ****         {
 527:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /*  
 528:.\Generated_Source\PSoC4/capsense_Sensing.c ****              *  Set up widget first widget.
 529:.\Generated_Source\PSoC4/capsense_Sensing.c ****              *  If widget returned error, set up next, continue same until widget does not return e
 530:.\Generated_Source\PSoC4/capsense_Sensing.c ****              */
 531:.\Generated_Source\PSoC4/capsense_Sensing.c ****             for (capsense_widgetIndex = 0u; 
 178              		.loc 1 531 0
 179 000a 0022     		mov	r2, #0
 180 000c 0F4B     		ldr	r3, .L23+4
 181 000e 1A70     		strb	r2, [r3]
 517:.\Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 182              		.loc 1 517 0
 183 0010 0120     		mov	r0, #1
 184 0012 4042     		neg	r0, r0
 185              		.loc 1 531 0
 186 0014 11E0     		b	.L19
 187              	.LVL8:
 188              	.L21:
 532:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  capsense_widgetIndex < capsense_TOTAL_WIDGETS; 
 533:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  capsense_widgetIndex++)
 534:.\Generated_Source\PSoC4/capsense_Sensing.c ****             {
 535:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 536:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 scanStatus = capsense_SetupWidget((uint32)capsense_widgetIndex);
 189              		.loc 1 536 0
 190 0016 0D4B     		ldr	r3, .L23+4
 191 0018 1878     		ldrb	r0, [r3]
 192              	.LVL9:
 193 001a C0B2     		uxtb	r0, r0
 194 001c FFF7FEFF 		bl	capsense_SetupWidget
 195              	.LVL10:
 537:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 538:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 if (CYRET_SUCCESS == scanStatus)
 196              		.loc 1 538 0
 197 0020 0028     		cmp	r0, #0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 14


 198 0022 05D1     		bne	.L20
 539:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 {
 540:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     #if (0u != (capsense_TOTAL_WIDGETS - 1u))
 541:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         /* If there are more than one widget to be scanned, request callback to sca
 542:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         if ((capsense_TOTAL_WIDGETS - 1u) > capsense_widgetIndex)
 543:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         {
 544:.\Generated_Source\PSoC4/capsense_Sensing.c ****                              /* Request callback to scan next widget in ISR */
 545:.\Generated_Source\PSoC4/capsense_Sensing.c ****                             capsense_requestScanAllWidget = capsense_ENABLE;
 546:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         }
 547:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         else
 548:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         {
 549:.\Generated_Source\PSoC4/capsense_Sensing.c ****                             /* Request to exit in ISR (Do not scan the next widgets) */
 550:.\Generated_Source\PSoC4/capsense_Sensing.c ****                             capsense_requestScanAllWidget = capsense_DISABLE;
 551:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         }
 552:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     #else 
 553:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         {
 554:.\Generated_Source\PSoC4/capsense_Sensing.c ****                             /* Request to exit in ISR (We have only one widget) */
 555:.\Generated_Source\PSoC4/capsense_Sensing.c ****                             capsense_requestScanAllWidget = capsense_DISABLE;
 199              		.loc 1 555 0
 200 0024 0022     		mov	r2, #0
 201 0026 094B     		ldr	r3, .L23+4
 202 0028 5A70     		strb	r2, [r3, #1]
 556:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         }
 557:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     #endif  /* (0u != (capsense_TOTAL_WIDGETS - 1u)) */
 558:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     
 559:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /*  Initiate scan and quit loop */
 560:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     scanStatus = capsense_Scan();
 203              		.loc 1 560 0
 204 002a FFF7FEFF 		bl	capsense_Scan
 205              	.LVL11:
 561:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 562:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     break;
 206              		.loc 1 562 0
 207 002e 0AE0     		b	.L18
 208              	.L20:
 533:.\Generated_Source\PSoC4/capsense_Sensing.c ****             {
 209              		.loc 1 533 0
 210 0030 064A     		ldr	r2, .L23+4
 211 0032 1378     		ldrb	r3, [r2]
 212 0034 0133     		add	r3, r3, #1
 213 0036 DBB2     		uxtb	r3, r3
 214 0038 1370     		strb	r3, [r2]
 215              	.LVL12:
 216              	.L19:
 532:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  capsense_widgetIndex++)
 217              		.loc 1 532 0 discriminator 1
 218 003a 044B     		ldr	r3, .L23+4
 219 003c 1B78     		ldrb	r3, [r3]
 531:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  capsense_widgetIndex < capsense_TOTAL_WIDGETS; 
 220              		.loc 1 531 0 discriminator 1
 221 003e 002B     		cmp	r3, #0
 222 0040 E9D0     		beq	.L21
 223 0042 00E0     		b	.L18
 224              	.LVL13:
 225              	.L22:
 523:.\Generated_Source\PSoC4/capsense_Sensing.c ****         }
 226              		.loc 1 523 0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 15


 227 0044 1120     		mov	r0, #17
 228              	.LVL14:
 229              	.L18:
 563:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 } 
 564:.\Generated_Source\PSoC4/capsense_Sensing.c ****             } 
 565:.\Generated_Source\PSoC4/capsense_Sensing.c ****         }        
 566:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #else
 567:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /******************************
 568:.\Generated_Source\PSoC4/capsense_Sensing.c ****         * This is the place where the Scan2x 
 569:.\Generated_Source\PSoC4/capsense_Sensing.c ****         * setup should be implemented.
 570:.\Generated_Source\PSoC4/capsense_Sensing.c ****         * Scan2x will be implemented
 571:.\Generated_Source\PSoC4/capsense_Sensing.c ****         * in the next component version.
 572:.\Generated_Source\PSoC4/capsense_Sensing.c ****         *********************************/
 573:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* (capsense_DISABLE == capsense_CSD2X_EN) */
 574:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 575:.\Generated_Source\PSoC4/capsense_Sensing.c ****     return (scanStatus);
 576:.\Generated_Source\PSoC4/capsense_Sensing.c **** }
 230              		.loc 1 576 0
 231              		@ sp needed
 232 0046 08BD     		pop	{r3, pc}
 233              	.L24:
 234              		.align	2
 235              	.L23:
 236 0048 00000000 		.word	capsense_dsRam
 237 004c 00000000 		.word	.LANCHOR0
 238              		.cfi_endproc
 239              	.LFE4:
 240              		.size	capsense_ScanAllWidgets, .-capsense_ScanAllWidgets
 241              		.section	.text.capsense_SsInitialize,"ax",%progbits
 242              		.align	2
 243              		.global	capsense_SsInitialize
 244              		.code	16
 245              		.thumb_func
 246              		.type	capsense_SsInitialize, %function
 247              	capsense_SsInitialize:
 248              	.LFB5:
 577:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 578:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 579:.\Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_SsInitialize
 581:.\Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
 582:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 583:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
 584:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Performs hardware and firmware initialization required for proper operation
 585:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   of the capsense component. This function is called from 
 586:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   the CapSense_Start() API prior to calling any other APIs of the component.
 587:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 588:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \details
 589:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Performs hardware and firmware initialization required for proper operation
 590:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   of the capsense component. This function is called from 
 591:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   the CapSense_Start() API prior to calling any other APIs of the component.
 592:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   1. The function initialises immunity offsets when the frequency hopping is 
 593:.\Generated_Source\PSoC4/capsense_Sensing.c **** *      enabled.
 594:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   2. Depending on the configuration, the function initialises the CSD block 
 595:.\Generated_Source\PSoC4/capsense_Sensing.c **** *      for the CSD2X, CSD, CSX, or CSD+CSX modes.
 596:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   3. The function updates the dsRam.wdgtWorking variable with 1 when Self Test
 597:.\Generated_Source\PSoC4/capsense_Sensing.c **** *      is enabled.
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 16


 598:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 599:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Calling the capsense_Start API is the recommended method to initialize
 600:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   the capsense component at power-up. The capsense_SsInitialize() 
 601:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   API should not be used for initialization, resume, or wake-up operations.
 602:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   The dsRam.wdgtWorking variable is updated.
 603:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 604:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \return status
 605:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Returns status of operation:
 606:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   - Zero        - Indicates successful initialization.
 607:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   - Non-zero    - One or more errors occurred in the initialization process.
 608:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 609:.\Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
 610:.\Generated_Source\PSoC4/capsense_Sensing.c **** cystatus capsense_SsInitialize(void)
 611:.\Generated_Source\PSoC4/capsense_Sensing.c **** {
 249              		.loc 1 611 0
 250              		.cfi_startproc
 251 0000 08B5     		push	{r3, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 3, -8
 254              		.cfi_offset 14, -4
 255              	.LVL15:
 612:.\Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus initStatus = CYRET_SUCCESS;
 613:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 614:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN)
 615:.\Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_immunity[capsense_FREQ_CHANNEL_0] = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 616:.\Generated_Source\PSoC4/capsense_Sensing.c ****         if (capsense_COARSE_TRIM_THRESHOLD_1 > capsense_immunity[capsense_FREQ_CHANNEL_0])
 617:.\Generated_Source\PSoC4/capsense_Sensing.c ****         {
 618:.\Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_immunity[capsense_FREQ_CHANNEL_1] = 
 619:.\Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_immunity[capsense_FREQ_CHANNEL_0] + capsense_FREQUENCY_OFFSET_5;
 620:.\Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_immunity[capsense_FREQ_CHANNEL_2] = 
 621:.\Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_immunity[capsense_FREQ_CHANNEL_0] + capsense_FREQUENCY_OFFSET_10;
 622:.\Generated_Source\PSoC4/capsense_Sensing.c ****         }
 623:.\Generated_Source\PSoC4/capsense_Sensing.c ****         else if (capsense_COARSE_TRIM_THRESHOLD_2 > capsense_immunity[capsense_FREQ_CHANNEL_0])
 624:.\Generated_Source\PSoC4/capsense_Sensing.c ****         {
 625:.\Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_immunity[capsense_FREQ_CHANNEL_1] = 
 626:.\Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_immunity[capsense_FREQ_CHANNEL_0] - capsense_FREQUENCY_OFFSET_5;
 627:.\Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_immunity[capsense_FREQ_CHANNEL_2] = 
 628:.\Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_immunity[capsense_FREQ_CHANNEL_0] + capsense_FREQUENCY_OFFSET_5;
 629:.\Generated_Source\PSoC4/capsense_Sensing.c ****         }
 630:.\Generated_Source\PSoC4/capsense_Sensing.c ****         else
 631:.\Generated_Source\PSoC4/capsense_Sensing.c ****         {
 632:.\Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_immunity[capsense_FREQ_CHANNEL_1] = 
 633:.\Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_immunity[capsense_FREQ_CHANNEL_0] - capsense_FREQUENCY_OFFSET_5;
 634:.\Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_immunity[capsense_FREQ_CHANNEL_2] = 
 635:.\Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_immunity[capsense_FREQ_CHANNEL_0] - capsense_FREQUENCY_OFFSET_10;
 636:.\Generated_Source\PSoC4/capsense_Sensing.c ****         }
 637:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* (capsense_ENABLE == capsense_MULTI_FREQ_SCAN_EN) */
 638:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 639:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /*  
 640:.\Generated_Source\PSoC4/capsense_Sensing.c ****      *  Check if CSD2X is enabled, if yes, initialize capsense component
 641:.\Generated_Source\PSoC4/capsense_Sensing.c ****      *  for CSD2x operation 
 642:.\Generated_Source\PSoC4/capsense_Sensing.c ****      */
 643:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_ENABLE == capsense_CSD2X_EN)
 644:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  
 645:.\Generated_Source\PSoC4/capsense_Sensing.c ****          *  Check if CSX or CSD enable along with CSD2X, if yes, provide the error
 646:.\Generated_Source\PSoC4/capsense_Sensing.c ****          *  message as CSD2X can not coexist with CSD or CSX    
 647:.\Generated_Source\PSoC4/capsense_Sensing.c ****          */
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 17


 648:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSX_EN)
 649:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #error "CSD2X and CSX can not be enabled together"
 650:.\Generated_Source\PSoC4/capsense_Sensing.c ****             initStatus = CYRET_UNKNOWN;
 651:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #elif (capsense_ENABLE == capsense_CSD_EN)
 652:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #error "CSD2X and CSD can not be enabled together"
 653:.\Generated_Source\PSoC4/capsense_Sensing.c ****             initStatus = CYRET_UNKNOWN;
 654:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (capsense_CSX_EN == capsense_ENABLE) */
 655:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 656:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* Initialize both CSD blocks for CSD2X scanning    */
 657:.\Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_CSD2XInitialize();
 658:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 659:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #elif (capsense_ENABLE == capsense_CSD_CSX_EN)
 660:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* 
 661:.\Generated_Source\PSoC4/capsense_Sensing.c ****          * Do nothing, CSD hardware shall be initialized in the Setup Widget based
 662:.\Generated_Source\PSoC4/capsense_Sensing.c ****          * on widget sensing method    
 663:.\Generated_Source\PSoC4/capsense_Sensing.c ****          */         
 664:.\Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_currentSenseMethod = capsense_UNDEFINED_E;    
 665:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 666:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #elif (capsense_ENABLE == capsense_CSD_EN)
 667:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  Initialize CSD block for CSD scanning   */
 668:.\Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_CSDInitialize();
 256              		.loc 1 668 0
 257 0002 FFF7FEFF 		bl	capsense_CSDInitialize
 258              	.LVL16:
 669:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 670:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #elif (capsense_ENABLE == capsense_CSX_EN)
 671:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  Initialize CSD block for CSX scanning   */
 672:.\Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_CSXInitialize();
 673:.\Generated_Source\PSoC4/capsense_Sensing.c ****         
 674:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #else
 675:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #error "No sensing method enabled, component cannot work in this mode"
 676:.\Generated_Source\PSoC4/capsense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 677:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #endif  /* (capsense_ENABLE == capsense_CSD2X_EN) */
 678:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 679:.\Generated_Source\PSoC4/capsense_Sensing.c ****     return (initStatus);
 680:.\Generated_Source\PSoC4/capsense_Sensing.c **** }
 259              		.loc 1 680 0
 260 0006 0020     		mov	r0, #0
 261              		@ sp needed
 262 0008 08BD     		pop	{r3, pc}
 263              		.cfi_endproc
 264              	.LFE5:
 265              		.size	capsense_SsInitialize, .-capsense_SsInitialize
 266              		.section	.text.capsense_SetPinState,"ax",%progbits
 267              		.align	2
 268              		.global	capsense_SetPinState
 269              		.code	16
 270              		.thumb_func
 271              		.type	capsense_SetPinState, %function
 272              	capsense_SetPinState:
 273              	.LFB6:
 681:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 682:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 683:.\Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
 684:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_SetPinState
 685:.\Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
 686:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 18


 687:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
 688:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Sets the status (drive mode and output state) of a sensor to six states
 689:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   relevant (GND, Shield,  HIgh-Z, Tx or Rx, sensor) to the capsense operation.
 690:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   If the sensor is configured as a ganged sensor, then the API applies to the  
 691:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   dedicated pin and all ganged electrodes.
 692:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 693:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \details
 694:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   This API disconnects port pins from AMUXBUS and sets the drive mode of a port pin
 695:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   (Rx, Tx or Sns electrode) based on an input parameter. The mode of the pin
 696:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   is set to HIgh-Z in the GPIO_PRT_PCx register.
 697:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 698:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Scanning should be completed before calling this API. 
 699:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   capsense_SHIELD is not allowed if Enable shield electrode parameter
 700:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   is disabled.
 701:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   capsense_TX_PIN and capsense_RX_PIN are not allowed if there 
 702:.\Generated_Source\PSoC4/capsense_Sensing.c **** *    are no other CSX widgets configured in the project.
 703:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 704:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  \param wdgtIndex Specifies the ID of the widget.
 705:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   
 706:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  \param snsIndex Specifies the ID of the snsIndex.
 707:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   
 708:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  \param state Specifies the state to be set for a specified pin:
 709:.\Generated_Source\PSoC4/capsense_Sensing.c **** *          -   (0) capsense_GROUND
 710:.\Generated_Source\PSoC4/capsense_Sensing.c **** *          -   (1) capsense_HIGHZ
 711:.\Generated_Source\PSoC4/capsense_Sensing.c **** *          -   (2) capsense_SHIELD
 712:.\Generated_Source\PSoC4/capsense_Sensing.c **** *          -   (3) capsense_SENSOR
 713:.\Generated_Source\PSoC4/capsense_Sensing.c **** *          -   (4) capsense_TX_PIN
 714:.\Generated_Source\PSoC4/capsense_Sensing.c **** *          -   (5) capsense_RX_PIN
 715:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 716:.\Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
 717:.\Generated_Source\PSoC4/capsense_Sensing.c **** void capsense_SetPinState(uint32 wdgtIndex, uint32 snsIndex, uint32 state)
 718:.\Generated_Source\PSoC4/capsense_Sensing.c **** {
 274              		.loc 1 718 0
 275              		.cfi_startproc
 276              	.LVL17:
 277 0000 70B5     		push	{r4, r5, r6, lr}
 278              		.cfi_def_cfa_offset 16
 279              		.cfi_offset 4, -16
 280              		.cfi_offset 5, -12
 281              		.cfi_offset 6, -8
 282              		.cfi_offset 14, -4
 719:.\Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_FLASH_IO_STRUCT const *curSnsIOPtr;
 720:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)
 721:.\Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 722:.\Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 tempVal;
 723:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN) */
 724:.\Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 newRegisterValue;
 725:.\Generated_Source\PSoC4/capsense_Sensing.c ****     uint8  interruptState;
 726:.\Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 pinHSIOMShift;
 727:.\Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 pinModeShift;
 728:.\Generated_Source\PSoC4/capsense_Sensing.c ****     
 729:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)
 730:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* Check ganged sns flag  */
 731:.\Generated_Source\PSoC4/capsense_Sensing.c ****         if (capsense_GANGED_SNS_MASK == (capsense_dsFlash.wdgtArray[wdgtIndex].staticConfig & 
 732:.\Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_GANGED_SNS_MASK))
 733:.\Generated_Source\PSoC4/capsense_Sensing.c ****         {             
 734:.\Generated_Source\PSoC4/capsense_Sensing.c ****             curFlashSnsPtr = capsense_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlash;
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 19


 735:.\Generated_Source\PSoC4/capsense_Sensing.c ****             curFlashSnsPtr += snsIndex;
 736:.\Generated_Source\PSoC4/capsense_Sensing.c ****             curSnsIOPtr = &capsense_ioList[curFlashSnsPtr->firstPinId];
 737:.\Generated_Source\PSoC4/capsense_Sensing.c ****             
 738:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /* Get number of ganged pins  */
 739:.\Generated_Source\PSoC4/capsense_Sensing.c ****             tempVal = curFlashSnsPtr->numPins;
 740:.\Generated_Source\PSoC4/capsense_Sensing.c ****         }
 741:.\Generated_Source\PSoC4/capsense_Sensing.c ****         else
 742:.\Generated_Source\PSoC4/capsense_Sensing.c ****         {
 743:.\Generated_Source\PSoC4/capsense_Sensing.c ****             curSnsIOPtr = (capsense_FLASH_IO_STRUCT const *)
 744:.\Generated_Source\PSoC4/capsense_Sensing.c ****                                     capsense_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlash + snsIndex;
 745:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /* There are no ganged pins */
 746:.\Generated_Source\PSoC4/capsense_Sensing.c ****             tempVal = 1u;                                
 747:.\Generated_Source\PSoC4/capsense_Sensing.c ****         }
 748:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #else
 749:.\Generated_Source\PSoC4/capsense_Sensing.c ****         curSnsIOPtr = (capsense_FLASH_IO_STRUCT const *)
 750:.\Generated_Source\PSoC4/capsense_Sensing.c ****                                     capsense_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlash + snsIndex;
 283              		.loc 1 750 0
 284 0002 8300     		lsl	r3, r0, #2
 285 0004 1818     		add	r0, r3, r0
 286              	.LVL18:
 287 0006 C000     		lsl	r0, r0, #3
 288 0008 204B     		ldr	r3, .L31
 289 000a C458     		ldr	r4, [r0, r3]
 290 000c CB00     		lsl	r3, r1, #3
 291 000e 591A     		sub	r1, r3, r1
 292              	.LVL19:
 293 0010 8900     		lsl	r1, r1, #2
 749:.\Generated_Source\PSoC4/capsense_Sensing.c ****                                     capsense_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlash + snsIndex;
 294              		.loc 1 749 0
 295 0012 6418     		add	r4, r4, r1
 296              	.LVL20:
 751:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #endif  /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN) */
 752:.\Generated_Source\PSoC4/capsense_Sensing.c ****     
 753:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)
 754:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* Reconfigure all ganged sensors  */
 755:.\Generated_Source\PSoC4/capsense_Sensing.c ****         do
 756:.\Generated_Source\PSoC4/capsense_Sensing.c ****         {
 757:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #endif  /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN) */
 758:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 759:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /* Get HSIOM and port mode shifts */
 760:.\Generated_Source\PSoC4/capsense_Sensing.c ****             pinHSIOMShift = (uint32)curSnsIOPtr->hsiomShift;
 297              		.loc 1 760 0
 298 0014 267E     		ldrb	r6, [r4, #24]
 299              	.LVL21:
 761:.\Generated_Source\PSoC4/capsense_Sensing.c ****             pinModeShift = (uint32)curSnsIOPtr->shift;
 300              		.loc 1 761 0
 301 0016 A57E     		ldrb	r5, [r4, #26]
 302              	.LVL22:
 762:.\Generated_Source\PSoC4/capsense_Sensing.c ****             
 763:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /* Reset HSIOM register */
 764:.\Generated_Source\PSoC4/capsense_Sensing.c ****             CY_SET_REG32(curSnsIOPtr->hsiomPtr, CY_GET_REG32(curSnsIOPtr->hsiomPtr) & ~(capsense_HS
 303              		.loc 1 764 0
 304 0018 2068     		ldr	r0, [r4]
 305 001a 0368     		ldr	r3, [r0]
 306 001c 0F21     		mov	r1, #15
 307 001e B140     		lsl	r1, r1, r6
 308 0020 8B43     		bic	r3, r1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 20


 309 0022 0360     		str	r3, [r0]
 765:.\Generated_Source\PSoC4/capsense_Sensing.c ****            
 766:.\Generated_Source\PSoC4/capsense_Sensing.c ****             switch (state)
 310              		.loc 1 766 0
 311 0024 012A     		cmp	r2, #1
 312 0026 1AD0     		beq	.L28
 313 0028 002A     		cmp	r2, #0
 314 002a 02D0     		beq	.L29
 315 002c 032A     		cmp	r2, #3
 316 002e 28D0     		beq	.L30
 317 0030 2AE0     		b	.L26
 318              	.L29:
 767:.\Generated_Source\PSoC4/capsense_Sensing.c ****             {  
 768:.\Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_GROUND:
 769:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 319              		.loc 1 769 0
 320 0032 FFF7FEFF 		bl	CyEnterCriticalSection
 321              	.LVL23:
 770:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 771:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Update port configuration register (drive mode) for sensor */
 772:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 newRegisterValue = CY_GET_REG32(curSnsIOPtr->pcPtr);
 322              		.loc 1 772 0
 323 0036 6168     		ldr	r1, [r4, #4]
 324 0038 0B68     		ldr	r3, [r1]
 325              	.LVL24:
 773:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 newRegisterValue &= ~(capsense_GPIO_PC_MASK << pinModeShift);
 326              		.loc 1 773 0
 327 003a 0722     		mov	r2, #7
 328 003c AA40     		lsl	r2, r2, r5
 329 003e 9343     		bic	r3, r2
 330              	.LVL25:
 774:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 newRegisterValue |= (capsense_SNS_GROUND_CONNECT << pinModeShift);
 331              		.loc 1 774 0
 332 0040 0622     		mov	r2, #6
 333 0042 AA40     		lsl	r2, r2, r5
 334 0044 151C     		mov	r5, r2
 335              	.LVL26:
 336 0046 1D43     		orr	r5, r3
 337              	.LVL27:
 775:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 CY_SET_REG32(curSnsIOPtr->pcPtr, newRegisterValue);
 338              		.loc 1 775 0
 339 0048 0D60     		str	r5, [r1]
 776:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 777:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 340              		.loc 1 777 0
 341 004a FFF7FEFF 		bl	CyExitCriticalSection
 342              	.LVL28:
 778:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 779:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Set logic 0 to port data register */
 780:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 CY_SET_REG32(curSnsIOPtr->drPtr, CY_GET_REG32(curSnsIOPtr->drPtr) & (uint32)~(uint3
 343              		.loc 1 780 0
 344 004e A168     		ldr	r1, [r4, #8]
 345 0050 0B68     		ldr	r3, [r1]
 346 0052 607E     		ldrb	r0, [r4, #25]
 347 0054 0122     		mov	r2, #1
 348 0056 8240     		lsl	r2, r2, r0
 349 0058 9343     		bic	r3, r2
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 21


 350 005a 0B60     		str	r3, [r1]
 781:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 351              		.loc 1 781 0
 352 005c 14E0     		b	.L26
 353              	.LVL29:
 354              	.L28:
 782:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 
 783:.\Generated_Source\PSoC4/capsense_Sensing.c ****             case capsense_HIGHZ:
 784:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 355              		.loc 1 784 0
 356 005e FFF7FEFF 		bl	CyEnterCriticalSection
 357              	.LVL30:
 785:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 786:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Update port configuration register (drive mode) for sensor */
 787:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 newRegisterValue = CY_GET_REG32(curSnsIOPtr->pcPtr);
 358              		.loc 1 787 0
 359 0062 6168     		ldr	r1, [r4, #4]
 360 0064 0B68     		ldr	r3, [r1]
 361              	.LVL31:
 788:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 newRegisterValue &= ~(capsense_GPIO_PC_MASK << pinModeShift);
 362              		.loc 1 788 0
 363 0066 0722     		mov	r2, #7
 364 0068 AA40     		lsl	r2, r2, r5
 365 006a 9343     		bic	r3, r2
 366              	.LVL32:
 789:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 CY_SET_REG32(curSnsIOPtr->pcPtr, newRegisterValue);
 367              		.loc 1 789 0
 368 006c 0B60     		str	r3, [r1]
 790:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 791:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 369              		.loc 1 791 0
 370 006e FFF7FEFF 		bl	CyExitCriticalSection
 371              	.LVL33:
 792:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 793:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Set logic 0 to port data register */
 794:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 CY_SET_REG32(curSnsIOPtr->drPtr, CY_GET_REG32(curSnsIOPtr->drPtr) & (uint32)~(uint3
 372              		.loc 1 794 0
 373 0072 A168     		ldr	r1, [r4, #8]
 374 0074 0B68     		ldr	r3, [r1]
 375 0076 607E     		ldrb	r0, [r4, #25]
 376 0078 0122     		mov	r2, #1
 377 007a 8240     		lsl	r2, r2, r0
 378 007c 9343     		bic	r3, r2
 379 007e 0B60     		str	r3, [r1]
 795:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 380              		.loc 1 795 0
 381 0080 02E0     		b	.L26
 382              	.LVL34:
 383              	.L30:
 796:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 797:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_CSD_SHIELD_EN)
 798:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 case capsense_SHIELD:
 799:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /* Set drive mode to Analog */
 800:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     CY_SET_REG32(curSnsIOPtr->pcPtr, CY_GET_REG32(curSnsIOPtr->pcPtr) &
 801:.\Generated_Source\PSoC4/capsense_Sensing.c ****                                ~(capsense_GPIO_PC_MASK <<(curSnsIOPtr->shift)));
 802:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 803:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 22


 804:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     CY_SET_REG32(curSnsIOPtr->hsiomPtr, CY_GET_REG32(curSnsIOPtr->hsiomPtr) | 
 805:.\Generated_Source\PSoC4/capsense_Sensing.c ****                                                        (capsense_HSIOM_SEL_CSD_SHIELD << pinHSIOMSh
 806:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     break;
 807:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #endif  /* (capsense_ENABLE == capsense_CSD_SHIELD_EN) */
 808:.\Generated_Source\PSoC4/capsense_Sensing.c ****             
 809:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #if ((capsense_ENABLE == capsense_CSD_EN) || \
 810:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  (capsense_ENABLE == capsense_CSD_CSX_EN))
 811:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 case capsense_SENSOR:
 812:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /* Enable sensor */
 813:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     capsense_CSDConnectSns(curSnsIOPtr);
 384              		.loc 1 813 0
 385 0082 201C     		mov	r0, r4
 386 0084 FFF7FEFF 		bl	capsense_CSDConnectSns
 387              	.LVL35:
 388              	.L26:
 814:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     break;
 815:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #endif  /* ((capsense_ENABLE == capsense_CSD_EN) || \
 816:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         (capsense_ENABLE == capsense_CSD_CSX_EN)) */
 817:.\Generated_Source\PSoC4/capsense_Sensing.c ****              
 818:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #if ((capsense_ENABLE == capsense_CSX_EN) || \
 819:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  (capsense_ENABLE == capsense_CSD_CSX_EN))
 820:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 case capsense_TX_PIN:
 821:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     CY_SET_REG32(curSnsIOPtr->hsiomPtr, CY_GET_REG32(curSnsIOPtr->hsiomPtr) | (caps
 822:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     break;
 823:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     
 824:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 case capsense_RX_PIN:
 825:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     CY_SET_REG32(curSnsIOPtr->hsiomPtr, CY_GET_REG32(curSnsIOPtr->hsiomPtr) | (caps
 826:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     CY_SET_REG32(curSnsIOPtr->pcPtr, CY_GET_REG32(curSnsIOPtr->pcPtr) & ~(capsense_
 827:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     break;
 828:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #endif  /* ((capsense_ENABLE == capsense_CSX_EN) || \
 829:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         (capsense_ENABLE == capsense_CSD_CSX_EN)) */
 830:.\Generated_Source\PSoC4/capsense_Sensing.c ****              
 831:.\Generated_Source\PSoC4/capsense_Sensing.c ****             default:
 832:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Wrong input */
 833:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
 834:.\Generated_Source\PSoC4/capsense_Sensing.c ****             }
 835:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 836:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN)
 837:.\Generated_Source\PSoC4/capsense_Sensing.c ****             curSnsIOPtr++;
 838:.\Generated_Source\PSoC4/capsense_Sensing.c ****             tempVal--;
 839:.\Generated_Source\PSoC4/capsense_Sensing.c ****         } while (0u != tempVal);
 840:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #endif  /* (capsense_ENABLE == capsense_CSD_GANGED_SNS_EN) */
 841:.\Generated_Source\PSoC4/capsense_Sensing.c **** }
 389              		.loc 1 841 0
 390              		@ sp needed
 391              	.LVL36:
 392              	.LVL37:
 393 0088 70BD     		pop	{r4, r5, r6, pc}
 394              	.L32:
 395 008a C046     		.align	2
 396              	.L31:
 397 008c 00000000 		.word	capsense_dsFlash
 398              		.cfi_endproc
 399              	.LFE6:
 400              		.size	capsense_SetPinState, .-capsense_SetPinState
 401              		.section	.text.capsense_PostAllWidgetsScan,"ax",%progbits
 402              		.align	2
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 23


 403              		.global	capsense_PostAllWidgetsScan
 404              		.code	16
 405              		.thumb_func
 406              		.type	capsense_PostAllWidgetsScan, %function
 407              	capsense_PostAllWidgetsScan:
 408              	.LFB7:
 842:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 843:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 844:.\Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_CSD_CSX_EN)
 845:.\Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
 846:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_SwitchSensingMode
 847:.\Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
 848:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 849:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
 850:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 851:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  scanned.
 852:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 853:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \details
 854:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 855:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A
 856:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected
 857:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  3. Initialize CSD mode.
 858:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 859:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 860:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A
 861:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected
 862:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  3. Initialize CSX mode.
 863:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 864:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \param mode Specifies the scan mode:
 865:.\Generated_Source\PSoC4/capsense_Sensing.c **** *           -  (1) capsense_SENSE_METHOD_CSD_E
 866:.\Generated_Source\PSoC4/capsense_Sensing.c **** *           -  (2) capsense_SENSE_METHOD_CSX_E
 867:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 868:.\Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
 869:.\Generated_Source\PSoC4/capsense_Sensing.c **** void capsense_SwitchSensingMode(capsense_SENSE_METHOD_ENUM mode)
 870:.\Generated_Source\PSoC4/capsense_Sensing.c **** {
 871:.\Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 newRegValue;
 872:.\Generated_Source\PSoC4/capsense_Sensing.c ****         
 873:.\Generated_Source\PSoC4/capsense_Sensing.c ****     if (capsense_SENSE_METHOD_CSD_E == mode) 
 874:.\Generated_Source\PSoC4/capsense_Sensing.c ****     {
 875:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 876:.\Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue = CY_GET_REG32(capsense_CintA_HSIOM_PTR);
 877:.\Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)capsense_CintA_HSIOM_MASK);
 878:.\Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_CintA_HSIOM_PTR, newRegValue);
 879:.\Generated_Source\PSoC4/capsense_Sensing.c ****         
 880:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 881:.\Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue = CY_GET_REG32(capsense_CintB_HSIOM_PTR);
 882:.\Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)capsense_CintB_HSIOM_MASK);
 883:.\Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_CintB_HSIOM_PTR, newRegValue);
 884:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 885:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 886:.\Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_CSXElectrodeCheck();
 887:.\Generated_Source\PSoC4/capsense_Sensing.c ****         
 888:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* Initialize CSD mode to guarantee configured CSD mode after CSX calibration */
 889:.\Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_CSDInitialize();
 890:.\Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_currentSenseMethod = capsense_SENSE_METHOD_CSD_E;
 891:.\Generated_Source\PSoC4/capsense_Sensing.c ****     }
 892:.\Generated_Source\PSoC4/capsense_Sensing.c ****     else if (capsense_SENSE_METHOD_CSX_E == mode) 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 24


 893:.\Generated_Source\PSoC4/capsense_Sensing.c ****     {
 894:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */ 
 895:.\Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue = CY_GET_REG32(capsense_CMOD_HSIOM_PTR); 
 896:.\Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)capsense_CMOD_HSIOM_MASK);
 897:.\Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_CMOD_HSIOM_PTR, newRegValue);
 898:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 899:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 900:.\Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_CSDElectrodeCheck();
 901:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 902:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 903:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #if ((capsense_ENABLE == capsense_CSD_SHIELD_EN) && \
 904:.\Generated_Source\PSoC4/capsense_Sensing.c ****              (capsense_ENABLE == capsense_CSD_SHIELD_TANK_EN))
 905:.\Generated_Source\PSoC4/capsense_Sensing.c ****             newRegValue = CY_GET_REG32(capsense_CSH_HSIOM_PTR);
 906:.\Generated_Source\PSoC4/capsense_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(capsense_CSH_TO_AMUXBUS_B_MASK << capsense_CSH_HSIOM_
 907:.\Generated_Source\PSoC4/capsense_Sensing.c ****             CY_SET_REG32(capsense_CSH_HSIOM_PTR, newRegValue);
 908:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* ((capsense_ENABLE == capsense_CSD_SHIELD_EN) && \
 909:.\Generated_Source\PSoC4/capsense_Sensing.c ****                    (capsense_ENABLE == capsense_CSD_SHIELD_TANK_EN)) */
 910:.\Generated_Source\PSoC4/capsense_Sensing.c ****         
 911:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #if ((capsense_ENABLE == capsense_CSD_SHIELD_EN) && \
 912:.\Generated_Source\PSoC4/capsense_Sensing.c ****              (0u != capsense_CSD_TOTAL_SHIELD_COUNT))
 913:.\Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_DisableShieldElectrodes();
 914:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* ((capsense_ENABLE == capsense_CSD_SHIELD_EN) && \
 915:.\Generated_Source\PSoC4/capsense_Sensing.c ****                    (0u != capsense_CSD_TOTAL_SHIELD_COUNT)) */
 916:.\Generated_Source\PSoC4/capsense_Sensing.c ****         
 917:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* Initialize CSD hardware block for CSX measurement */
 918:.\Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_CSXInitialize();
 919:.\Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_currentSenseMethod = capsense_SENSE_METHOD_CSX_E;
 920:.\Generated_Source\PSoC4/capsense_Sensing.c ****     }
 921:.\Generated_Source\PSoC4/capsense_Sensing.c ****     else
 922:.\Generated_Source\PSoC4/capsense_Sensing.c ****     {
 923:.\Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_currentSenseMethod = capsense_UNDEFINED_E;  
 924:.\Generated_Source\PSoC4/capsense_Sensing.c ****     }
 925:.\Generated_Source\PSoC4/capsense_Sensing.c **** }
 926:.\Generated_Source\PSoC4/capsense_Sensing.c **** #endif  /* (capsense_ENABLE == capsense_CSD_CSX_EN)) */
 927:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 928:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 929:.\Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_ADC_EN)
 930:.\Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
 931:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_SsReleaseResources()
 932:.\Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
 933:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 934:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
 935:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  This function sets the resources that do not belong to the CSDv2 HW block to 
 936:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  default state.
 937:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 938:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \details
 939:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  The function performs following tasks:
 940:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
 941:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and 
 942:.\Generated_Source\PSoC4/capsense_Sensing.c **** *     Cmod for CSD mode)
 943:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
 944:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
 945:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \return 
 946:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Returns the status of operation:
 947:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   - Zero        - Resources released successfully.
 948:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   - Non-zero    - One or more errors occurred in releasing process.
 949:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 25


 950:.\Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
 951:.\Generated_Source\PSoC4/capsense_Sensing.c **** cystatus capsense_SsReleaseResources(void)
 952:.\Generated_Source\PSoC4/capsense_Sensing.c **** {
 953:.\Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
 954:.\Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 newRegValue;
 955:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 956:.\Generated_Source\PSoC4/capsense_Sensing.c ****     if (capsense_SW_STS_BUSY == (capsense_dsRam.status & capsense_SW_STS_BUSY))
 957:.\Generated_Source\PSoC4/capsense_Sensing.c ****     {
 958:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 959:.\Generated_Source\PSoC4/capsense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
 960:.\Generated_Source\PSoC4/capsense_Sensing.c ****     }
 961:.\Generated_Source\PSoC4/capsense_Sensing.c ****     else
 962:.\Generated_Source\PSoC4/capsense_Sensing.c ****     {
 963:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_ENABLE == capsense_CSX_EN)
 964:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 965:.\Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue = CY_GET_REG32(capsense_CintA_HSIOM_PTR);
 966:.\Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)capsense_CintA_HSIOM_MASK);
 967:.\Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_CintA_HSIOM_PTR, newRegValue);
 968:.\Generated_Source\PSoC4/capsense_Sensing.c ****         
 969:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 970:.\Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue = CY_GET_REG32(capsense_CintB_HSIOM_PTR);
 971:.\Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)capsense_CintB_HSIOM_MASK);
 972:.\Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_CintB_HSIOM_PTR, newRegValue);
 973:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 974:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 975:.\Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_CSXElectrodeCheck();
 976:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* (capsense_ENABLE == capsense_CSX_EN) */
 977:.\Generated_Source\PSoC4/capsense_Sensing.c ****     
 978:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_ENABLE == capsense_CSD_EN)
 979:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */ 
 980:.\Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue = CY_GET_REG32(capsense_CMOD_HSIOM_PTR); 
 981:.\Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)capsense_CMOD_HSIOM_MASK);
 982:.\Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_CMOD_HSIOM_PTR, newRegValue);
 983:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
 984:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 985:.\Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_CSDElectrodeCheck();
 986:.\Generated_Source\PSoC4/capsense_Sensing.c ****         
 987:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 988:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #if ((capsense_ENABLE == capsense_CSD_SHIELD_EN) && \
 989:.\Generated_Source\PSoC4/capsense_Sensing.c ****              (capsense_ENABLE == capsense_CSD_SHIELD_TANK_EN))
 990:.\Generated_Source\PSoC4/capsense_Sensing.c ****             newRegValue = CY_GET_REG32(capsense_CSH_HSIOM_PTR);
 991:.\Generated_Source\PSoC4/capsense_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(capsense_CSH_TO_AMUXBUS_B_MASK << capsense_CSH_HSIOM_
 992:.\Generated_Source\PSoC4/capsense_Sensing.c ****             CY_SET_REG32(capsense_CSH_HSIOM_PTR, newRegValue);
 993:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* ((capsense_ENABLE == capsense_CSD_SHIELD_EN) && \
 994:.\Generated_Source\PSoC4/capsense_Sensing.c ****                    (capsense_ENABLE == capsense_CSD_SHIELD_TANK_EN)) */
 995:.\Generated_Source\PSoC4/capsense_Sensing.c ****         
 996:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #if ((capsense_ENABLE == capsense_CSD_SHIELD_EN) && \
 997:.\Generated_Source\PSoC4/capsense_Sensing.c ****              (0u != capsense_CSD_TOTAL_SHIELD_COUNT))
 998:.\Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_DisableShieldElectrodes();
 999:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* ((capsense_ENABLE == capsense_CSD_SHIELD_EN) && \
1000:.\Generated_Source\PSoC4/capsense_Sensing.c ****                    (0u != capsense_CSD_TOTAL_SHIELD_COUNT)) */
1001:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* (capsense_ENABLE == capsense_CSD_EN) */
1002:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1003:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* 
1004:.\Generated_Source\PSoC4/capsense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1005:.\Generated_Source\PSoC4/capsense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1006:.\Generated_Source\PSoC4/capsense_Sensing.c ****          */
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 26


1007:.\Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_currentSenseMethod = capsense_UNDEFINED_E;
1008:.\Generated_Source\PSoC4/capsense_Sensing.c ****     }
1009:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1010:.\Generated_Source\PSoC4/capsense_Sensing.c ****     return busyStatus;
1011:.\Generated_Source\PSoC4/capsense_Sensing.c **** }
1012:.\Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_ADC_EN) */
1013:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1014:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1015:.\Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
1016:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_PostAllWidgetsScan
1017:.\Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
1018:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1019:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
1020:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   The ISR function for multiple widget scanning implementation.
1021:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1022:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \details
1023:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   This is the function used by the capsense ISR to implement multiple widget
1024:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   scanning.
1025:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Should not be used by the application layer.
1026:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1027:.\Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
1028:.\Generated_Source\PSoC4/capsense_Sensing.c **** void capsense_PostAllWidgetsScan(void)
1029:.\Generated_Source\PSoC4/capsense_Sensing.c **** {
 409              		.loc 1 1029 0
 410              		.cfi_startproc
1030:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_DISABLE == capsense_CSD2X_EN)
1031:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  
1032:.\Generated_Source\PSoC4/capsense_Sensing.c ****         *   1. Increment widget index
1033:.\Generated_Source\PSoC4/capsense_Sensing.c ****         *   2. Check if all widgets are scanned
1034:.\Generated_Source\PSoC4/capsense_Sensing.c ****         *   3. If all widgets are not scanned, set up and scan next widget  
1035:.\Generated_Source\PSoC4/capsense_Sensing.c ****         */
1036:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #if (1u != capsense_TOTAL_WIDGETS)  
1037:.\Generated_Source\PSoC4/capsense_Sensing.c ****             cystatus postScanStatus;
1038:.\Generated_Source\PSoC4/capsense_Sensing.c ****         
1039:.\Generated_Source\PSoC4/capsense_Sensing.c ****             do
1040:.\Generated_Source\PSoC4/capsense_Sensing.c ****             {
1041:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_widgetIndex++;
1042:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1043:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 postScanStatus = capsense_SetupWidget((uint32)capsense_widgetIndex);
1044:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1045:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 if (CYRET_SUCCESS == postScanStatus)
1046:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 {
1047:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     if((capsense_TOTAL_WIDGETS - 1u) == capsense_widgetIndex)
1048:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     {
1049:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         /* The last widget will be scanned. Reset flag to skip configuring the next
1050:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         capsense_requestScanAllWidget = capsense_DISABLE;
1051:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     }
1052:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     (void)capsense_Scan();
1053:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 }
1054:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 else if((capsense_TOTAL_WIDGETS - 1u) == capsense_widgetIndex)
1055:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 {
1056:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     #if ((capsense_ENABLE == capsense_BLOCK_OFF_AFTER_SCAN_EN) && \
1057:.\Generated_Source\PSoC4/capsense_Sensing.c ****                          (capsense_ENABLE == capsense_CSD_EN))
1058:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         if (capsense_SENSE_METHOD_CSD_E ==
1059:.\Generated_Source\PSoC4/capsense_Sensing.c ****                              (capsense_SENSE_METHOD_ENUM)capsense_GET_SENSE_METHOD(&capsense_dsFlas
1060:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         {
1061:.\Generated_Source\PSoC4/capsense_Sensing.c ****                             /*  Disable the CSD block */
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 27


1062:.\Generated_Source\PSoC4/capsense_Sensing.c ****                             CY_SET_REG32(capsense_CONFIG_PTR, capsense_configCsd);
1063:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         }
1064:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     #endif /* ((capsense_ENABLE == capsense_BLOCK_OFF_AFTER_SCAN_EN) && \
1065:.\Generated_Source\PSoC4/capsense_Sensing.c ****                                (capsense_ENABLE == capsense_CSD_EN)) */
1066:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     
1067:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /* All widgets are totally processed. Reset BUSY flag */
1068:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     capsense_dsRam.status &= ~capsense_SW_STS_BUSY;
1069:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     
1070:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /* Update status with with the failure */
1071:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     capsense_dsRam.status &= ~capsense_STATUS_ERR_MASK;                
1072:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     capsense_dsRam.status |= ((postScanStatus & capsense_STATUS_ERR_SIZE) << capsen
1073:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     
1074:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /* Set postScanStatus to exit the while loop */
1075:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     postScanStatus = CYRET_SUCCESS;
1076:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 }
1077:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 else
1078:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 {
1079:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /* Update status with with the failure. Configure the next widget in while() lo
1080:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     capsense_dsRam.status &= ~capsense_STATUS_ERR_MASK;                
1081:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     capsense_dsRam.status |= ((postScanStatus & capsense_STATUS_ERR_SIZE) << capsen
1082:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 }
1083:.\Generated_Source\PSoC4/capsense_Sensing.c ****             } while (CYRET_SUCCESS != postScanStatus);
1084:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (1u != capsense_TOTAL_WIDGETS) */
1085:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #else
1086:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /******************************
1087:.\Generated_Source\PSoC4/capsense_Sensing.c ****         * This is the place where the CSD2X 
1088:.\Generated_Source\PSoC4/capsense_Sensing.c ****         * postscan for 2 widgets should be implemented.
1089:.\Generated_Source\PSoC4/capsense_Sensing.c ****         * The CSD2X postscan will be implemented
1090:.\Generated_Source\PSoC4/capsense_Sensing.c ****         * in the next component version.
1091:.\Generated_Source\PSoC4/capsense_Sensing.c ****         *********************************/
1092:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* (capsense_CSD2X_EN == capsense_DISABLE) */
1093:.\Generated_Source\PSoC4/capsense_Sensing.c **** }
 411              		.loc 1 1093 0
 412              		@ sp needed
 413 0000 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE7:
 416              		.size	capsense_PostAllWidgetsScan, .-capsense_PostAllWidgetsScan
 417 0002 C046     		.section	.text.capsense_IsrInitialize,"ax",%progbits
 418              		.align	2
 419              		.global	capsense_IsrInitialize
 420              		.code	16
 421              		.thumb_func
 422              		.type	capsense_IsrInitialize, %function
 423              	capsense_IsrInitialize:
 424              	.LFB8:
1094:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1095:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1096:.\Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
1097:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_IsrInitialize
1098:.\Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
1099:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1100:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
1101:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Enables and initializes for the function pointer for a callback for the ISR.
1102:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1103:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \details
1104:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   The  "address" is a special type cyisraddress defined by Cylib. This function
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 28


1105:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   is used by component APIs and should not be used by an application program for
1106:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   proper working of the component.
1107:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1108:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \param  address The address of the function to be called when interrupt is fired.
1109:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1110:.\Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
1111:.\Generated_Source\PSoC4/capsense_Sensing.c **** void capsense_IsrInitialize(cyisraddress address)
1112:.\Generated_Source\PSoC4/capsense_Sensing.c **** {
 425              		.loc 1 1112 0
 426              		.cfi_startproc
 427              	.LVL38:
 428 0000 08B5     		push	{r3, lr}
 429              		.cfi_def_cfa_offset 8
 430              		.cfi_offset 3, -8
 431              		.cfi_offset 14, -4
1113:.\Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_CSD2X_EN)
1114:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /******************************
1115:.\Generated_Source\PSoC4/capsense_Sensing.c ****     * This is the place where the CSD2X ISR 
1116:.\Generated_Source\PSoC4/capsense_Sensing.c ****     * Setup should be implemented.
1117:.\Generated_Source\PSoC4/capsense_Sensing.c ****     * The CSD2X ISR Setup will be implemented
1118:.\Generated_Source\PSoC4/capsense_Sensing.c ****     * in the next component version.
1119:.\Generated_Source\PSoC4/capsense_Sensing.c ****     *********************************/
1120:.\Generated_Source\PSoC4/capsense_Sensing.c **** #else
1121:.\Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_ISR_StartEx(address);
 432              		.loc 1 1121 0
 433 0002 FFF7FEFF 		bl	capsense_ISR_StartEx
 434              	.LVL39:
1122:.\Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_CSD2X_EN) */
1123:.\Generated_Source\PSoC4/capsense_Sensing.c **** }
 435              		.loc 1 1123 0
 436              		@ sp needed
 437 0006 08BD     		pop	{r3, pc}
 438              		.cfi_endproc
 439              	.LFE8:
 440              		.size	capsense_IsrInitialize, .-capsense_IsrInitialize
 441              		.section	.text.capsense_ConfigureModClkClock,"ax",%progbits
 442              		.align	2
 443              		.global	capsense_ConfigureModClkClock
 444              		.code	16
 445              		.thumb_func
 446              		.type	capsense_ConfigureModClkClock, %function
 447              	capsense_ConfigureModClkClock:
 448              	.LFB9:
1124:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1125:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1126:.\Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
1127:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_ConfigureModClkClock
1128:.\Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
1129:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1130:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
1131:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Sets the divider values for the modulator clock and then starts
1132:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   the modulator clock.
1133:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1134:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \details
1135:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   It is not recommended to call this function directly by the application layer.
1136:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   It is used by initialization, widget APIs or wakeup functions to
1137:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   enable the clocks.
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 29


1138:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1139:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \param
1140:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   modClk The divider value for the modulator clock.
1141:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1142:.\Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
1143:.\Generated_Source\PSoC4/capsense_Sensing.c **** void capsense_ConfigureModClkClock(uint32 modClk)
1144:.\Generated_Source\PSoC4/capsense_Sensing.c **** {
 449              		.loc 1 1144 0
 450              		.cfi_startproc
 451              	.LVL40:
1145:.\Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_IS_M0S8PERI_BLOCK)
1146:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /*  Stop modulator clock   */
1147:.\Generated_Source\PSoC4/capsense_Sensing.c ****     CY_SET_REG32(capsense_MODCLK_CMD_PTR, 
 452              		.loc 1 1147 0
 453 0000 074A     		ldr	r2, .L37
 454 0002 084B     		ldr	r3, .L37+4
 455 0004 1A60     		str	r2, [r3]
1148:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  ((uint32)capsense_ModClk__DIV_ID <<
1149:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  capsense_MODCLK_CMD_DIV_SHIFT)|
1150:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  ((uint32)capsense_MODCLK_CMD_DISABLE_MASK));
1151:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1152:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /*  
1153:.\Generated_Source\PSoC4/capsense_Sensing.c ****      * Set divider value for sense modClk.
1154:.\Generated_Source\PSoC4/capsense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1155:.\Generated_Source\PSoC4/capsense_Sensing.c ****      * to dividing by 1.  
1156:.\Generated_Source\PSoC4/capsense_Sensing.c ****      */
1157:.\Generated_Source\PSoC4/capsense_Sensing.c ****     CY_SET_REG32(capsense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));  
 456              		.loc 1 1157 0
 457 0006 0138     		sub	r0, r0, #1
 458              	.LVL41:
 459 0008 0002     		lsl	r0, r0, #8
 460              	.LVL42:
 461 000a 074B     		ldr	r3, .L37+8
 462 000c 1860     		str	r0, [r3]
 463              	.L36:
1158:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1159:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /*  Check whether previous modulator clock start command has finished. */
1160:.\Generated_Source\PSoC4/capsense_Sensing.c ****     while(0u != (CY_GET_REG32(capsense_MODCLK_CMD_PTR) & capsense_MODCLK_CMD_ENABLE_MASK))
 464              		.loc 1 1160 0 discriminator 1
 465 000e 054B     		ldr	r3, .L37+4
 466 0010 1B68     		ldr	r3, [r3]
 467 0012 002B     		cmp	r3, #0
 468 0014 FBDB     		blt	.L36
1161:.\Generated_Source\PSoC4/capsense_Sensing.c ****     {
1162:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  Wait until previous modulator clock start command has finished. */  
1163:.\Generated_Source\PSoC4/capsense_Sensing.c ****     }
1164:.\Generated_Source\PSoC4/capsense_Sensing.c ****     
1165:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /*  Start modulator clock, aligned to HFCLK */
1166:.\Generated_Source\PSoC4/capsense_Sensing.c ****     CY_SET_REG32(capsense_MODCLK_CMD_PTR, 
 469              		.loc 1 1166 0
 470 0016 054A     		ldr	r2, .L37+12
 471 0018 024B     		ldr	r3, .L37+4
 472 001a 1A60     		str	r2, [r3]
1167:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  (uint32)(((uint32)capsense_ModClk__DIV_ID << capsense_MODCLK_CMD_DIV_SHIFT) |
1168:.\Generated_Source\PSoC4/capsense_Sensing.c ****                   ((uint32)capsense_ModClk__PA_DIV_ID << capsense_MODCLK_CMD_PA_DIV_SHIFT) |
1169:.\Generated_Source\PSoC4/capsense_Sensing.c ****                   capsense_MODCLK_CMD_ENABLE_MASK));
1170:.\Generated_Source\PSoC4/capsense_Sensing.c **** #else
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 30


1171:.\Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 newRegValue;
1172:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1173:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1174:.\Generated_Source\PSoC4/capsense_Sensing.c ****     CY_SET_REG32(capsense_MODCLK_CMD_PTR, 
1175:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  CY_GET_REG32(capsense_MODCLK_CMD_PTR) & 
1176:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  (uint32)(~capsense_ModClk__ENABLE_MASK));
1177:.\Generated_Source\PSoC4/capsense_Sensing.c ****         
1178:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /* 
1179:.\Generated_Source\PSoC4/capsense_Sensing.c ****      * Update ModClk clock divider.
1180:.\Generated_Source\PSoC4/capsense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).  
1181:.\Generated_Source\PSoC4/capsense_Sensing.c ****      */
1182:.\Generated_Source\PSoC4/capsense_Sensing.c ****     newRegValue = CY_GET_REG32(capsense_MODCLK_DIV_PTR) & (uint32)(~(uint32)capsense_ModClk__DIVIDE
1183:.\Generated_Source\PSoC4/capsense_Sensing.c ****     newRegValue |= (modClk - 1u);
1184:.\Generated_Source\PSoC4/capsense_Sensing.c ****     CY_SET_REG32(capsense_MODCLK_DIV_PTR, newRegValue);
1185:.\Generated_Source\PSoC4/capsense_Sensing.c ****     
1186:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1187:.\Generated_Source\PSoC4/capsense_Sensing.c ****     CY_SET_REG32(capsense_MODCLK_CMD_PTR, 
1188:.\Generated_Source\PSoC4/capsense_Sensing.c ****                  CY_GET_REG32(capsense_MODCLK_CMD_PTR) | 
1189:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_ModClk__ENABLE_MASK);
1190:.\Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_IS_M0S8PERI_BLOCK) */
1191:.\Generated_Source\PSoC4/capsense_Sensing.c **** }
 473              		.loc 1 1191 0
 474              		@ sp needed
 475 001c 7047     		bx	lr
 476              	.L38:
 477 001e C046     		.align	2
 478              	.L37:
 479 0020 40000040 		.word	1073741888
 480 0024 00000140 		.word	1073807360
 481 0028 00030140 		.word	1073808128
 482 002c 40FF0080 		.word	-2147418304
 483              		.cfi_endproc
 484              	.LFE9:
 485              		.size	capsense_ConfigureModClkClock, .-capsense_ConfigureModClkClock
 486              		.section	.text.capsense_ConfigureSnsClock,"ax",%progbits
 487              		.align	2
 488              		.global	capsense_ConfigureSnsClock
 489              		.code	16
 490              		.thumb_func
 491              		.type	capsense_ConfigureSnsClock, %function
 492              	capsense_ConfigureSnsClock:
 493              	.LFB10:
1192:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1193:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1194:.\Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
1195:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_ConfigureSnsClock
1196:.\Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
1197:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1198:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
1199:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Sets the divider values for the sense clock and then starts
1200:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   the sense clock.
1201:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1202:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \details
1203:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   It is not recommended to call this function directly by the application layer.
1204:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   It is used by initialization, widget APIs or wakeup functions to
1205:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   enable the clocks.
1206:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 31


1207:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \param
1208:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   snsClk The divider value for the sense clock.
1209:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1210:.\Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
1211:.\Generated_Source\PSoC4/capsense_Sensing.c **** void capsense_ConfigureSnsClock(uint32 snsClk)
1212:.\Generated_Source\PSoC4/capsense_Sensing.c **** {
 494              		.loc 1 1212 0
 495              		.cfi_startproc
 496              	.LVL43:
1213:.\Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_ENABLE == capsense_CSDV2)
1214:.\Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 newRegValue;
1215:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1216:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /*  
1217:.\Generated_Source\PSoC4/capsense_Sensing.c ****      * Set divider value for sense clock.
1218:.\Generated_Source\PSoC4/capsense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1219:.\Generated_Source\PSoC4/capsense_Sensing.c ****      * to dividing by 1.  
1220:.\Generated_Source\PSoC4/capsense_Sensing.c ****      */
1221:.\Generated_Source\PSoC4/capsense_Sensing.c ****     newRegValue = CY_GET_REG32(capsense_SENSE_PERIOD_PTR); 
 497              		.loc 1 1221 0
 498 0000 034A     		ldr	r2, .L40
 499 0002 1368     		ldr	r3, [r2]
 500              	.LVL44:
1222:.\Generated_Source\PSoC4/capsense_Sensing.c ****     newRegValue &= (uint32)(~capsense_SENSE_PERIOD_SENSE_DIV_MASK);
 501              		.loc 1 1222 0
 502 0004 1B0B     		lsr	r3, r3, #12
 503              	.LVL45:
 504 0006 1B03     		lsl	r3, r3, #12
 505              	.LVL46:
1223:.\Generated_Source\PSoC4/capsense_Sensing.c ****     newRegValue |= snsClk - 1u;
 506              		.loc 1 1223 0
 507 0008 0138     		sub	r0, r0, #1
 508              	.LVL47:
 509 000a 1843     		orr	r0, r3
 510              	.LVL48:
1224:.\Generated_Source\PSoC4/capsense_Sensing.c ****     CY_SET_REG32(capsense_SENSE_PERIOD_PTR, newRegValue);
 511              		.loc 1 1224 0
 512 000c 1060     		str	r0, [r2]
1225:.\Generated_Source\PSoC4/capsense_Sensing.c **** #else
1226:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_ENABLE == capsense_IS_M0S8PERI_BLOCK)
1227:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  Stop sense clock clock   */
1228:.\Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_SNSCLK_CMD_PTR, 
1229:.\Generated_Source\PSoC4/capsense_Sensing.c ****                      ((uint32)capsense_SnsClk__DIV_ID <<
1230:.\Generated_Source\PSoC4/capsense_Sensing.c ****                      capsense_SNSCLK_CMD_DIV_SHIFT)|
1231:.\Generated_Source\PSoC4/capsense_Sensing.c ****                      ((uint32)capsense_SNSCLK_CMD_DISABLE_MASK));
1232:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1233:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  
1234:.\Generated_Source\PSoC4/capsense_Sensing.c ****          * Set divider value for sense clock.
1235:.\Generated_Source\PSoC4/capsense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1236:.\Generated_Source\PSoC4/capsense_Sensing.c ****          * to dividing by 1.  
1237:.\Generated_Source\PSoC4/capsense_Sensing.c ****          */
1238:.\Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1239:.\Generated_Source\PSoC4/capsense_Sensing.c ****         
1240:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  Check whether previous sense clock start command has finished. */
1241:.\Generated_Source\PSoC4/capsense_Sensing.c ****         while(0u != (CY_GET_REG32(capsense_SNSCLK_CMD_PTR) & capsense_SNSCLK_CMD_ENABLE_MASK))
1242:.\Generated_Source\PSoC4/capsense_Sensing.c ****         {
1243:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /*  Wait until previous sense clock start command has finished. */  
1244:.\Generated_Source\PSoC4/capsense_Sensing.c ****         } 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 32


1245:.\Generated_Source\PSoC4/capsense_Sensing.c ****         
1246:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1247:.\Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_SNSCLK_CMD_PTR, 
1248:.\Generated_Source\PSoC4/capsense_Sensing.c ****                      (uint32)(((uint32)capsense_SnsClk__DIV_ID << capsense_SNSCLK_CMD_DIV_SHIFT) |
1249:.\Generated_Source\PSoC4/capsense_Sensing.c ****                       ((uint32)capsense_ModClk__PA_DIV_ID << capsense_SNSCLK_CMD_PA_DIV_SHIFT) |
1250:.\Generated_Source\PSoC4/capsense_Sensing.c ****                       capsense_SNSCLK_CMD_ENABLE_MASK));
1251:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #else
1252:.\Generated_Source\PSoC4/capsense_Sensing.c ****         uint32 newRegValue;
1253:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1254:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1255:.\Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_SNSCLK_CMD_PTR, 
1256:.\Generated_Source\PSoC4/capsense_Sensing.c ****                      CY_GET_REG32(capsense_SNSCLK_CMD_PTR) & 
1257:.\Generated_Source\PSoC4/capsense_Sensing.c ****                      (uint32)(~(uint32)capsense_SnsClk__ENABLE_MASK));
1258:.\Generated_Source\PSoC4/capsense_Sensing.c ****         
1259:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* 
1260:.\Generated_Source\PSoC4/capsense_Sensing.c ****          * Update snsClk clock divider.
1261:.\Generated_Source\PSoC4/capsense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).  
1262:.\Generated_Source\PSoC4/capsense_Sensing.c ****          */
1263:.\Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue = CY_GET_REG32(capsense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)capsense_SnsClk__DI
1264:.\Generated_Source\PSoC4/capsense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1265:.\Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_SNSCLK_DIV_PTR, newRegValue);
1266:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1267:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1268:.\Generated_Source\PSoC4/capsense_Sensing.c ****         CY_SET_REG32(capsense_SNSCLK_CMD_PTR, 
1269:.\Generated_Source\PSoC4/capsense_Sensing.c ****                      CY_GET_REG32(capsense_SNSCLK_CMD_PTR) | 
1270:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     capsense_SnsClk__ENABLE_MASK);
1271:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* (capsense_ENABLE == capsense_IS_M0S8PERI_BLOCK) */
1272:.\Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* (capsense_ENABLE == capsense_CSDV2) */
1273:.\Generated_Source\PSoC4/capsense_Sensing.c **** }
 513              		.loc 1 1273 0
 514              		@ sp needed
 515 000e 7047     		bx	lr
 516              	.L41:
 517              		.align	2
 518              	.L40:
 519 0010 00020B40 		.word	1074463232
 520              		.cfi_endproc
 521              	.LFE10:
 522              		.size	capsense_ConfigureSnsClock, .-capsense_ConfigureSnsClock
 523              		.section	.text.capsense_ConfigureClocks,"ax",%progbits
 524              		.align	2
 525              		.global	capsense_ConfigureClocks
 526              		.code	16
 527              		.thumb_func
 528              		.type	capsense_ConfigureClocks, %function
 529              	capsense_ConfigureClocks:
 530              	.LFB11:
1274:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1275:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1276:.\Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
1277:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_ConfigureClocks
1278:.\Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
1279:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1280:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
1281:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Sets the divider values for sense and modulator clocks and then starts
1282:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1283:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   the modulator clock.
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 33


1284:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1285:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \details
1286:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   It is not recommended to call this function directly by the application layer.
1287:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   It is used by initialization, widget APIs or wakeup functions to
1288:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   enable the clocks.
1289:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1290:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \param
1291:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   snsClk The divider value for the sense clock.
1292:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   modClk The divider value for the modulator clock.
1293:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1294:.\Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
1295:.\Generated_Source\PSoC4/capsense_Sensing.c **** void capsense_ConfigureClocks(uint32 snsClk, uint32 modClk)
1296:.\Generated_Source\PSoC4/capsense_Sensing.c **** {
 531              		.loc 1 1296 0
 532              		.cfi_startproc
 533              	.LVL49:
 534 0000 10B5     		push	{r4, lr}
 535              		.cfi_def_cfa_offset 8
 536              		.cfi_offset 4, -8
 537              		.cfi_offset 14, -4
 538 0002 041C     		mov	r4, r0
1297:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /* Configure Mod clock */
1298:.\Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_ConfigureModClkClock(modClk);
 539              		.loc 1 1298 0
 540 0004 081C     		mov	r0, r1
 541              	.LVL50:
 542 0006 FFF7FEFF 		bl	capsense_ConfigureModClkClock
 543              	.LVL51:
1299:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1300:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /* Configure Sns clock */
1301:.\Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_ConfigureSnsClock(snsClk);
 544              		.loc 1 1301 0
 545 000a 201C     		mov	r0, r4
 546 000c FFF7FEFF 		bl	capsense_ConfigureSnsClock
 547              	.LVL52:
1302:.\Generated_Source\PSoC4/capsense_Sensing.c **** }
 548              		.loc 1 1302 0
 549              		@ sp needed
 550              	.LVL53:
 551 0010 10BD     		pop	{r4, pc}
 552              		.cfi_endproc
 553              	.LFE11:
 554              		.size	capsense_ConfigureClocks, .-capsense_ConfigureClocks
 555 0012 C046     		.section	.text.capsense_CalibrateWidget,"ax",%progbits
 556              		.align	2
 557              		.global	capsense_CalibrateWidget
 558              		.code	16
 559              		.thumb_func
 560              		.type	capsense_CalibrateWidget, %function
 561              	capsense_CalibrateWidget:
 562              	.LFB12:
1303:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1304:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1305:.\Generated_Source\PSoC4/capsense_Sensing.c **** #if ((capsense_ENABLE == capsense_CSD_IDAC_AUTOCAL_EN) || \
1306:.\Generated_Source\PSoC4/capsense_Sensing.c ****      (capsense_ENABLE == capsense_CSX_IDAC_AUTOCAL_EN))
1307:.\Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
1308:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_CalibrateWidget 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 34


1309:.\Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
1310:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1311:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
1312:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  Executes the IDAC calibration for the widget.
1313:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1314:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \details
1315:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Depending on the widget type, this function calibrates an appropriate widget: CSD or CSX.
1316:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Before calibration, the function checks if the widget failed during the self-test  
1317:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   if it is enabled in the customizer.
1318:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1319:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \param wdgtIndex Specifies the ID of the widget for calibration.
1320:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   
1321:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \return status 
1322:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   - Zero     - The widget is calibrated successfully.
1323:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   - Non-zero - Calibration is failed for the widget.
1324:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1325:.\Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
1326:.\Generated_Source\PSoC4/capsense_Sensing.c **** cystatus capsense_CalibrateWidget(uint32 wdgtIndex)
1327:.\Generated_Source\PSoC4/capsense_Sensing.c **** {
 563              		.loc 1 1327 0
 564              		.cfi_startproc
 565              	.LVL54:
1328:.\Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus calibrateStatus = CYRET_SUCCESS;
1329:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1330:.\Generated_Source\PSoC4/capsense_Sensing.c ****     do
1331:.\Generated_Source\PSoC4/capsense_Sensing.c ****     {   
1332:.\Generated_Source\PSoC4/capsense_Sensing.c ****         if (capsense_TOTAL_WIDGETS <= wdgtIndex)
 566              		.loc 1 1332 0
 567 0000 0028     		cmp	r0, #0
 568 0002 01D0     		beq	.L45
1333:.\Generated_Source\PSoC4/capsense_Sensing.c ****         {
1334:.\Generated_Source\PSoC4/capsense_Sensing.c ****             calibrateStatus = CYRET_BAD_PARAM;
 569              		.loc 1 1334 0
 570 0004 0120     		mov	r0, #1
 571              	.LVL55:
 572 0006 01E0     		b	.L44
 573              	.LVL56:
 574              	.L45:
1335:.\Generated_Source\PSoC4/capsense_Sensing.c ****             break;
1336:.\Generated_Source\PSoC4/capsense_Sensing.c ****         }
1337:.\Generated_Source\PSoC4/capsense_Sensing.c ****     
1338:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  
1339:.\Generated_Source\PSoC4/capsense_Sensing.c ****          *  Check if widget id is valid, specified widget did not
1340:.\Generated_Source\PSoC4/capsense_Sensing.c ****          *  detect any faults conditions if BIST is enabled.   
1341:.\Generated_Source\PSoC4/capsense_Sensing.c ****          */
1342:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_SELF_TEST_EN)
1343:.\Generated_Source\PSoC4/capsense_Sensing.c ****             if (capsense_DISABLE != ((uint32)capsense_dsRam.wdgtWorking[(uint8)wdgtIndex >> capsens
1344:.\Generated_Source\PSoC4/capsense_Sensing.c ****                                              (0x00000001Lu << (wdgtIndex & capsense_WIDGET_NUM_32_M
1345:.\Generated_Source\PSoC4/capsense_Sensing.c ****             {
1346:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 calibrateStatus = CYRET_SUCCESS;
1347:.\Generated_Source\PSoC4/capsense_Sensing.c ****             }
1348:.\Generated_Source\PSoC4/capsense_Sensing.c ****             else    
1349:.\Generated_Source\PSoC4/capsense_Sensing.c ****             {
1350:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 calibrateStatus = CYRET_INVALID_STATE;
1351:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 /*  Exit because widget is not working  */
1352:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 break;
1353:.\Generated_Source\PSoC4/capsense_Sensing.c ****             }
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 35


1354:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #endif  /* (capsense_ENABLE == capsense_SELF_TEST_EN) */
1355:.\Generated_Source\PSoC4/capsense_Sensing.c ****     
1356:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_ADC_EN)
1357:.\Generated_Source\PSoC4/capsense_Sensing.c ****             if (capsense_UNDEFINED_E == capsense_currentSenseMethod) 
1358:.\Generated_Source\PSoC4/capsense_Sensing.c ****             {
1359:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Release ADC resources */
1360:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 calibrateStatus = capsense_AdcReleaseResources();
1361:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1362:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 if (CYRET_SUCCESS != calibrateStatus)
1363:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 {
1364:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /* Exit because widget is not working */
1365:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     break;
1366:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 }
1367:.\Generated_Source\PSoC4/capsense_Sensing.c ****             }
1368:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #endif /* (capsense_ENABLE == capsense_ADC_EN) */
1369:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1370:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  If CSD2X is enabled, calibrate CSD sensor    */
1371:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #if (capsense_ENABLE == capsense_CSD2X_EN)
1372:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /******************************
1373:.\Generated_Source\PSoC4/capsense_Sensing.c ****             * This is the place where the CSD2X mode
1374:.\Generated_Source\PSoC4/capsense_Sensing.c ****             * API should be implemented.
1375:.\Generated_Source\PSoC4/capsense_Sensing.c ****             * CSD2X will be implemented
1376:.\Generated_Source\PSoC4/capsense_Sensing.c ****             * in the next component version.
1377:.\Generated_Source\PSoC4/capsense_Sensing.c ****             *********************************/
1378:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1379:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  If both CSD and CSX are enabled, calibrate widget using sensing method */
1380:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #elif (capsense_ENABLE == capsense_CSD_CSX_EN)
1381:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1382:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /*  Check widget sensing method and call appropriate APIs   */
1383:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #if ((capsense_ENABLE == capsense_CSX_IDAC_AUTOCAL_EN) && (capsense_ENABLE == capsense_
1384:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 #if (capsense_CSD_SS_DIS == capsense_CSD_AUTOTUNE)
1385:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     if (capsense_SENSE_METHOD_CSX_E ==
1386:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         (capsense_SENSE_METHOD_ENUM)capsense_GET_SENSE_METHOD(&capsense_dsFlash.wdg
1387:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     {
1388:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         /* Calibrate CSX widget (when Autotune mode is disabled) */
1389:.\Generated_Source\PSoC4/capsense_Sensing.c ****                        capsense_CSXCalibrateWidget(wdgtIndex, capsense_CSX_RAWCOUNT_CAL_LEVEL);
1390:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     }
1391:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     else if (capsense_SENSE_METHOD_CSD_E ==
1392:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         (capsense_SENSE_METHOD_ENUM)capsense_GET_SENSE_METHOD(&capsense_dsFlash.wdg
1393:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     {
1394:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         /*  
1395:.\Generated_Source\PSoC4/capsense_Sensing.c ****                          *  Check if CSD block is  already initialized for CSD operation
1396:.\Generated_Source\PSoC4/capsense_Sensing.c ****                          *  If not, initialize CSD hardware block for CSD measurement   
1397:.\Generated_Source\PSoC4/capsense_Sensing.c ****                          */
1398:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         if (capsense_SENSE_METHOD_CSD_E != capsense_currentSenseMethod) 
1399:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         {
1400:.\Generated_Source\PSoC4/capsense_Sensing.c ****                             capsense_SwitchSensingMode(capsense_SENSE_METHOD_CSD_E);
1401:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         }
1402:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         
1403:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         /* Calibrate CSD widget (when Autotune mode is disabled) */
1404:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         calibrateStatus = capsense_CSDCalibrateWidget(wdgtIndex, capsense_CSD_RAWCO
1405:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     }
1406:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     else    
1407:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     {
1408:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         calibrateStatus = CYRET_UNKNOWN;
1409:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     }
1410:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 #else
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 36


1411:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     if (capsense_SENSE_METHOD_CSX_E ==
1412:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         (capsense_SENSE_METHOD_ENUM)capsense_GET_SENSE_METHOD(&capsense_dsFlash.wdg
1413:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     {
1414:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         /* Calibrate CSX widget only (when Autotune mode is enabled) */
1415:.\Generated_Source\PSoC4/capsense_Sensing.c ****                        capsense_CSXCalibrateWidget(wdgtIndex, capsense_CSX_RAWCOUNT_CAL_LEVEL);
1416:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     }
1417:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 #endif /* (capsense_CSD_SS_DIS == capsense_CSD_AUTOTUNE) */
1418:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #elif (capsense_ENABLE == capsense_CSX_IDAC_AUTOCAL_EN)
1419:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 if (capsense_SENSE_METHOD_CSX_E ==
1420:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     (capsense_SENSE_METHOD_ENUM)capsense_GET_SENSE_METHOD(&capsense_dsFlash.wdgtArr
1421:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 {
1422:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /* Calibrate CSX widget only */
1423:.\Generated_Source\PSoC4/capsense_Sensing.c ****                    capsense_CSXCalibrateWidget(wdgtIndex, capsense_CSX_RAWCOUNT_CAL_LEVEL);
1424:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 }          
1425:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #elif ((capsense_ENABLE == capsense_CSD_IDAC_AUTOCAL_EN) && (capsense_CSD_SS_DIS == cap
1426:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 if (capsense_SENSE_METHOD_CSD_E ==
1427:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     (capsense_SENSE_METHOD_ENUM)capsense_GET_SENSE_METHOD(&capsense_dsFlash.wdgtArr
1428:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 {
1429:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /* Initialize CSD mode */
1430:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     capsense_CSDInitialize();
1431:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1432:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /* Calibrate CSD widget only */
1433:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     calibrateStatus = capsense_CSDCalibrateWidget(wdgtIndex, capsense_CSD_RAWCOUNT_
1434:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 }
1435:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #else
1436:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 /*  No calibration  */
1437:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #endif  /* ((capsense_ENABLE == capsense_CSX_IDAC_AUTOCAL_EN) && (capsense_ENABLE == ca
1438:.\Generated_Source\PSoC4/capsense_Sensing.c ****             
1439:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  If only CSD is enabled, calibrate CSD sensor  */
1440:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #elif ((capsense_ENABLE == capsense_CSD_EN) && (capsense_CSD_SS_DIS == capsense_CSD_AUTOTUN
1441:.\Generated_Source\PSoC4/capsense_Sensing.c ****             calibrateStatus = capsense_CSDCalibrateWidget(wdgtIndex, capsense_CSD_RAWCOUNT_CAL_LEVE
1442:.\Generated_Source\PSoC4/capsense_Sensing.c ****         
1443:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  If only CSX is enabled, call CSX scan   */
1444:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #elif (capsense_ENABLE == capsense_CSX_EN)
1445:.\Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_CSXCalibrateWidget(wdgtIndex, capsense_CSX_RAWCOUNT_CAL_LEVEL);
1446:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1447:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #else
1448:.\Generated_Source\PSoC4/capsense_Sensing.c ****             calibrateStatus = CYRET_UNKNOWN;
 575              		.loc 1 1448 0
 576 0008 0120     		mov	r0, #1
 577              	.LVL57:
 578 000a 4042     		neg	r0, r0
 579              	.L44:
 580              	.LVL58:
1449:.\Generated_Source\PSoC4/capsense_Sensing.c ****         #endif  /* (capsense_ENABLE == capsense_CSD2X_EN) */   
1450:.\Generated_Source\PSoC4/capsense_Sensing.c ****     
1451:.\Generated_Source\PSoC4/capsense_Sensing.c ****     } while (0u);
1452:.\Generated_Source\PSoC4/capsense_Sensing.c ****     
1453:.\Generated_Source\PSoC4/capsense_Sensing.c ****     return calibrateStatus;
1454:.\Generated_Source\PSoC4/capsense_Sensing.c **** }
 581              		.loc 1 1454 0
 582              		@ sp needed
 583 000c 7047     		bx	lr
 584              		.cfi_endproc
 585              	.LFE12:
 586              		.size	capsense_CalibrateWidget, .-capsense_CalibrateWidget
 587 000e C046     		.section	.text.capsense_CalibrateAllWidgets,"ax",%progbits
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 37


 588              		.align	2
 589              		.global	capsense_CalibrateAllWidgets
 590              		.code	16
 591              		.thumb_func
 592              		.type	capsense_CalibrateAllWidgets, %function
 593              	capsense_CalibrateAllWidgets:
 594              	.LFB13:
1455:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1456:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1457:.\Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
1458:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_CalibrateAllWidgets 
1459:.\Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
1460:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1461:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
1462:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  Executes the IDAC calibration for all the widgets in the component.
1463:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1464:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \details
1465:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   The function goes through all widgets and calls 
1466:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   capsense_CalibrateWidget() for each widget.
1467:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   It returns a fail status if any widget has failed to calibrate or it   
1468:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   has been failed during the self-test.
1469:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1470:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \return status: 
1471:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   - Zero     -  All the widgets are calibrated successfully.
1472:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   - Non-zero - Calibration failed for any widget.
1473:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1474:.\Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
1475:.\Generated_Source\PSoC4/capsense_Sensing.c **** cystatus capsense_CalibrateAllWidgets(void)
1476:.\Generated_Source\PSoC4/capsense_Sensing.c **** {
 595              		.loc 1 1476 0
 596              		.cfi_startproc
 597 0000 38B5     		push	{r3, r4, r5, lr}
 598              		.cfi_def_cfa_offset 16
 599              		.cfi_offset 3, -16
 600              		.cfi_offset 4, -12
 601              		.cfi_offset 5, -8
 602              		.cfi_offset 14, -4
 603              	.LVL59:
1477:.\Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus calibrateStatus = CYRET_SUCCESS;
1478:.\Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 wdgtIndex;
1479:.\Generated_Source\PSoC4/capsense_Sensing.c ****     
1480:.\Generated_Source\PSoC4/capsense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < capsense_TOTAL_WIDGETS; wdgtIndex++)
 604              		.loc 1 1480 0
 605 0002 0024     		mov	r4, #0
1477:.\Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus calibrateStatus = CYRET_SUCCESS;
 606              		.loc 1 1477 0
 607 0004 0025     		mov	r5, #0
 608              		.loc 1 1480 0
 609 0006 04E0     		b	.L47
 610              	.LVL60:
 611              	.L48:
1481:.\Generated_Source\PSoC4/capsense_Sensing.c ****     {
1482:.\Generated_Source\PSoC4/capsense_Sensing.c ****         calibrateStatus |= capsense_CalibrateWidget(wdgtIndex); 
 612              		.loc 1 1482 0 discriminator 3
 613 0008 201C     		mov	r0, r4
 614 000a FFF7FEFF 		bl	capsense_CalibrateWidget
 615              	.LVL61:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 38


 616 000e 0543     		orr	r5, r0
 617              	.LVL62:
1480:.\Generated_Source\PSoC4/capsense_Sensing.c ****     {
 618              		.loc 1 1480 0 discriminator 3
 619 0010 0134     		add	r4, r4, #1
 620              	.LVL63:
 621              	.L47:
1480:.\Generated_Source\PSoC4/capsense_Sensing.c ****     {
 622              		.loc 1 1480 0 is_stmt 0 discriminator 1
 623 0012 002C     		cmp	r4, #0
 624 0014 F8D0     		beq	.L48
1483:.\Generated_Source\PSoC4/capsense_Sensing.c ****     }
1484:.\Generated_Source\PSoC4/capsense_Sensing.c ****     
1485:.\Generated_Source\PSoC4/capsense_Sensing.c ****     return calibrateStatus;
1486:.\Generated_Source\PSoC4/capsense_Sensing.c **** }
 625              		.loc 1 1486 0 is_stmt 1
 626 0016 281C     		mov	r0, r5
 627              		@ sp needed
 628              	.LVL64:
 629              	.LVL65:
 630 0018 38BD     		pop	{r3, r4, r5, pc}
 631              		.cfi_endproc
 632              	.LFE13:
 633              		.size	capsense_CalibrateAllWidgets, .-capsense_CalibrateAllWidgets
 634              		.global	__aeabi_uidiv
 635 001a C046     		.section	.text.capsense_AutoTune,"ax",%progbits
 636              		.align	2
 637              		.global	capsense_AutoTune
 638              		.code	16
 639              		.thumb_func
 640              		.type	capsense_AutoTune, %function
 641              	capsense_AutoTune:
 642              	.LFB14:
1487:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1488:.\Generated_Source\PSoC4/capsense_Sensing.c **** #endif /* ((capsense_ENABLE == capsense_CSD_IDAC_AUTOCAL_EN) || 
1489:.\Generated_Source\PSoC4/capsense_Sensing.c ****            (capsense_ENABLE == capsense_CSX_IDAC_AUTOCAL_EN))  */
1490:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1491:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1492:.\Generated_Source\PSoC4/capsense_Sensing.c **** #if (capsense_CSD_SS_DIS != capsense_CSD_AUTOTUNE)
1493:.\Generated_Source\PSoC4/capsense_Sensing.c **** /*******************************************************************************
1494:.\Generated_Source\PSoC4/capsense_Sensing.c **** * Function Name: capsense_AutoTune
1495:.\Generated_Source\PSoC4/capsense_Sensing.c **** ****************************************************************************//**
1496:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1497:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \brief
1498:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  This API performs the parameters auto-tuning for the optimal CapSense operation.
1499:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1500:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \details
1501:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  This API performs the following:
1502:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  - Calibrates Modulator and Compensation IDACs.
1503:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1504:.\Generated_Source\PSoC4/capsense_Sensing.c **** *     2*5*R*Cp.
1505:.\Generated_Source\PSoC4/capsense_Sensing.c **** *  - Calculates the resolution for the optimal sensitivity.
1506:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1507:.\Generated_Source\PSoC4/capsense_Sensing.c **** * \return 
1508:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   Returns the status of operation: 
1509:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   - Zero     - All the widgets are auto-tuned successfully.
1510:.\Generated_Source\PSoC4/capsense_Sensing.c **** *   - Non-zero - Auto-tuning failed for any widget.
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 39


1511:.\Generated_Source\PSoC4/capsense_Sensing.c **** *
1512:.\Generated_Source\PSoC4/capsense_Sensing.c **** *******************************************************************************/
1513:.\Generated_Source\PSoC4/capsense_Sensing.c **** cystatus capsense_AutoTune(void)
1514:.\Generated_Source\PSoC4/capsense_Sensing.c **** {
 643              		.loc 1 1514 0
 644              		.cfi_startproc
 645 0000 70B5     		push	{r4, r5, r6, lr}
 646              		.cfi_def_cfa_offset 16
 647              		.cfi_offset 4, -16
 648              		.cfi_offset 5, -12
 649              		.cfi_offset 6, -8
 650              		.cfi_offset 14, -4
 651 0002 86B0     		sub	sp, sp, #24
 652              		.cfi_def_cfa_offset 40
 653              	.LVL66:
1515:.\Generated_Source\PSoC4/capsense_Sensing.c ****     cystatus autoTuneStatus = CYRET_SUCCESS;
1516:.\Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 wdgtIndex;
1517:.\Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 cp;
1518:.\Generated_Source\PSoC4/capsense_Sensing.c ****     capsense_RAM_WD_BASE_STRUCT *ptrWdgt;
1519:.\Generated_Source\PSoC4/capsense_Sensing.c ****     AUTO_TUNE_CONFIG_TYPE autoTuneConfig;  
1520:.\Generated_Source\PSoC4/capsense_Sensing.c ****     
1521:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /* Configure common config variables */
1522:.\Generated_Source\PSoC4/capsense_Sensing.c ****     autoTuneConfig.snsClkConstantR = capsense_CSD_SNSCLK_R_CONST;
 654              		.loc 1 1522 0
 655 0004 FA23     		mov	r3, #250
 656 0006 9B00     		lsl	r3, r3, #2
 657 0008 6A46     		mov	r2, sp
 658 000a 1380     		strh	r3, [r2]
1523:.\Generated_Source\PSoC4/capsense_Sensing.c ****     autoTuneConfig.vRef = capsense_CSD_VREF_MV;
 659              		.loc 1 1523 0
 660 000c 304B     		ldr	r3, .L56
 661 000e 5380     		strh	r3, [r2, #2]
1524:.\Generated_Source\PSoC4/capsense_Sensing.c ****     autoTuneConfig.iDacGain = capsense_CSD_IDAC_GAIN_VALUE_NA * capsense_CSD_DUAL_IDAC_FACTOR;
 662              		.loc 1 1524 0
 663 0010 9623     		mov	r3, #150
 664 0012 5B01     		lsl	r3, r3, #5
 665 0014 9380     		strh	r3, [r2, #4]
1525:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1526:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /* Calculate snsClk Input Clock in KHz */
1527:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_ENABLE == capsense_CSDV2)
1528:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  Dividers are chained (CSDV2). Flip flop is not available */
1529:.\Generated_Source\PSoC4/capsense_Sensing.c ****         autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / capsense_dsRam.modCsdClk);
 666              		.loc 1 1529 0
 667 0016 2F4B     		ldr	r3, .L56+4
 668 0018 197E     		ldrb	r1, [r3, #24]
 669 001a 2F48     		ldr	r0, .L56+8
 670 001c FFF7FEFF 		bl	__aeabi_uidiv
 671              	.LVL67:
 672 0020 6B46     		mov	r3, sp
 673 0022 1881     		strh	r0, [r3, #8]
 674              	.LVL68:
1530:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #elif ((capsense_ENABLE == capsense_IS_M0S8PERI_BLOCK) && (capsense_DISABLE == CY_PSOC4_4000))
1531:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  Dividers are not chained */
1532:.\Generated_Source\PSoC4/capsense_Sensing.c ****         autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> capsense_FLIP_FLOP_DIV;
1533:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #elif (capsense_ENABLE == capsense_IS_M0S8PERI_BLOCK)
1534:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  Dividers are not chained (PSoC 4000) */
1535:.\Generated_Source\PSoC4/capsense_Sensing.c ****         autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> capsense_FLIP_FLOP_DIV;
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 40


1536:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #else
1537:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /*  Dividers are chained (PSoC 4100, PSoC 4200) */
1538:.\Generated_Source\PSoC4/capsense_Sensing.c ****         autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / capsense_dsRam.modCsdClk) >> ca
1539:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* (capsense_ENABLE == capsense_CSDV2) */
1540:.\Generated_Source\PSoC4/capsense_Sensing.c ****  
1541:.\Generated_Source\PSoC4/capsense_Sensing.c ****     /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1542:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #if (capsense_ENABLE == capsense_CSD_CSX_EN)
1543:.\Generated_Source\PSoC4/capsense_Sensing.c ****         /* Initialize CSD mode */
1544:.\Generated_Source\PSoC4/capsense_Sensing.c ****         capsense_CSDInitialize();
1545:.\Generated_Source\PSoC4/capsense_Sensing.c ****     #endif /* (capsense_ENABLE == capsense_CSD_CSX_EN) */
1546:.\Generated_Source\PSoC4/capsense_Sensing.c ****  
1547:.\Generated_Source\PSoC4/capsense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < capsense_TOTAL_WIDGETS; wdgtIndex++)
 675              		.loc 1 1547 0
 676 0024 0025     		mov	r5, #0
1515:.\Generated_Source\PSoC4/capsense_Sensing.c ****     uint32 wdgtIndex;
 677              		.loc 1 1515 0
 678 0026 0026     		mov	r6, #0
 679              		.loc 1 1547 0
 680 0028 4DE0     		b	.L50
 681              	.LVL69:
 682              	.L54:
1548:.\Generated_Source\PSoC4/capsense_Sensing.c ****     {
1549:.\Generated_Source\PSoC4/capsense_Sensing.c ****         if (capsense_SENSE_METHOD_CSD_E ==
1550:.\Generated_Source\PSoC4/capsense_Sensing.c ****             (capsense_SENSE_METHOD_ENUM)capsense_GET_SENSE_METHOD(&capsense_dsFlash.wdgtArray[wdgtI
1551:.\Generated_Source\PSoC4/capsense_Sensing.c ****         {
1552:.\Generated_Source\PSoC4/capsense_Sensing.c ****             ptrWdgt = (capsense_RAM_WD_BASE_STRUCT *)
 683              		.loc 1 1552 0
 684 002a AB00     		lsl	r3, r5, #2
 685 002c 5B19     		add	r3, r3, r5
 686 002e DB00     		lsl	r3, r3, #3
 687 0030 2A4A     		ldr	r2, .L56+12
 688 0032 D318     		add	r3, r2, r3
 689 0034 5C68     		ldr	r4, [r3, #4]
 690              	.LVL70:
1553:.\Generated_Source\PSoC4/capsense_Sensing.c ****                       capsense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1554:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1555:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /* Switch charge clock source to direct clock mode */ 
1556:.\Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_SET_DIRECT_CLOCK_MODE;
 691              		.loc 1 1556 0
 692 0036 2A4A     		ldr	r2, .L56+16
 693 0038 1168     		ldr	r1, [r2]
 694 003a 2A4B     		ldr	r3, .L56+20
 695 003c 0B40     		and	r3, r1
 696 003e 1360     		str	r3, [r2]
1557:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1558:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /* Get sensitivity and multiply it to 2 for PRS mode (to take into account average PRS 
1559:.\Generated_Source\PSoC4/capsense_Sensing.c ****             autoTuneConfig.sensitivity = ptrWdgt->sensitivity << capsense_PRS_FACTOR_DIV;
 697              		.loc 1 1559 0
 698 0040 A389     		ldrh	r3, [r4, #12]
 699 0042 5B00     		lsl	r3, r3, #1
 700 0044 6A46     		mov	r2, sp
 701 0046 D380     		strh	r3, [r2, #6]
1560:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1561:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /* Init pointer to sigPPf */
1562:.\Generated_Source\PSoC4/capsense_Sensing.c ****             autoTuneConfig.sigPPf = &ptrWdgt->sigPPf;
 702              		.loc 1 1562 0
 703 0048 231C     		mov	r3, r4
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 41


 704 004a 0E33     		add	r3, r3, #14
 705 004c 0593     		str	r3, [sp, #20]
1563:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1564:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /* Set calibration resolution to 12 bits */
1565:.\Generated_Source\PSoC4/capsense_Sensing.c ****             ptrWdgt->resolution = capsense_CALIBRATION_RESOLUTION;
 706              		.loc 1 1565 0
 707 004e 0C23     		mov	r3, #12
 708 0050 2380     		strh	r3, [r4]
1566:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1567:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /* Set Sense clock frequency to 1.5 MHz */
1568:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_CSD_COMMON_SNS_CLK_EN)
1569:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_dsRam.snsCsdClk = (uint8)((uint32)autoTuneConfig.snsClkInputClock / 
1570:.\Generated_Source\PSoC4/capsense_Sensing.c ****                                                    capsense_CALIBRATION_FREQ_KHZ);
1571:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #elif (capsense_CSD_MATRIX_WIDGET_EN | capsense_CSD_TOUCHPAD_WIDGET_EN)
1572:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 ptrWdgt->rowSnsClk = (uint8)((uint32)autoTuneConfig.snsClkInputClock / 
1573:.\Generated_Source\PSoC4/capsense_Sensing.c ****                                      capsense_CALIBRATION_FREQ_KHZ);    
1574:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 ptrWdgt->snsClk = (uint8)((uint32)autoTuneConfig.snsClkInputClock / 
1575:.\Generated_Source\PSoC4/capsense_Sensing.c ****                                   capsense_CALIBRATION_FREQ_KHZ);
1576:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #else
1577:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 ptrWdgt->snsClk = (uint8)((uint32)autoTuneConfig.snsClkInputClock / 
 709              		.loc 1 1577 0
 710 0052 1089     		ldrh	r0, [r2, #8]
 711 0054 2449     		ldr	r1, .L56+24
 712 0056 FFF7FEFF 		bl	__aeabi_uidiv
 713              	.LVL71:
 714 005a C0B2     		uxtb	r0, r0
 715 005c E072     		strb	r0, [r4, #11]
1578:.\Generated_Source\PSoC4/capsense_Sensing.c ****                                   capsense_CALIBRATION_FREQ_KHZ);
1579:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /*  (capsense_ENABLE == capsense_CSD_COMMON_SNS_CLK_EN) */
1580:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1581:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_CSDV2)
1582:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 capsense_ConfigureSnsClock((uint32)ptrWdgt->snsClk);
 716              		.loc 1 1582 0
 717 005e FFF7FEFF 		bl	capsense_ConfigureSnsClock
 718              	.LVL72:
1583:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_CSDV2) */
1584:.\Generated_Source\PSoC4/capsense_Sensing.c ****         
1585:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /* Set flag to calibrate in PWM mode only */
1586:.\Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_prescalersTuningDone = capsense_DISABLE;
 719              		.loc 1 1586 0
 720 0062 0022     		mov	r2, #0
 721 0064 214B     		ldr	r3, .L56+28
 722 0066 9A70     		strb	r2, [r3, #2]
1587:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1588:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_DISABLE == capsense_CSD2X_EN)
1589:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Calibrate CSD widget to 85% */
1590:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 (void)capsense_CSDCalibrateWidget(wdgtIndex, capsense_CSD_AUTOTUNE_CAL_LEVEL);
 723              		.loc 1 1590 0
 724 0068 281C     		mov	r0, r5
 725 006a 5521     		mov	r1, #85
 726 006c FFF7FEFF 		bl	capsense_CSDCalibrateWidget
 727              	.LVL73:
1591:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_DISABLE == capsense_CSD2X_EN) */
1592:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1593:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_CSD_MATRIX_WIDGET_EN | capsense_CSD_TOUCHPAD_WIDGET_EN)
1594:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 if((uint8)(capsense_WD_TOUCHPAD_E | capsense_WD_MATRIX_BUTTON_E) == capsense_dsFlas
1595:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 {
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 42


1596:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /* Get pointer to Modulator IDAC for columns */
1597:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     autoTuneConfig.ptrModIDAC = &ptrWdgt->rowIdacMod[0u];
1598:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     
1599:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /* Get pointer to Sense Clock Divider for columns */
1600:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1601:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1602:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /* Find correct sense clock value */
1603:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     cp = SmartSense_TunePrescalers(&autoTuneConfig);
1604:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1605:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     if ((capsense_CP_MAX + capsense_CP_ERROR) <= cp)
1606:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     {
1607:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         autoTuneStatus = CYRET_BAD_DATA;
1608:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     }
1609:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     
1610:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     #if (capsense_ENABLE == capsense_CSDV2)
1611:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         /* Make sure that ModClk >= 4 * rowSnsClk for ModClk <= 12 MHz and rowSnsCl
1612:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         if (autoTuneConfig.snsClkInputClock <= capsense_MOD_CSD_CLK_24000KHZ)
1613:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         {
1614:.\Generated_Source\PSoC4/capsense_Sensing.c ****                             if (ptrWdgt->rowSnsClk < capsense_FACTOR_FILTER_DELAY_12MHZ)
1615:.\Generated_Source\PSoC4/capsense_Sensing.c ****                             {
1616:.\Generated_Source\PSoC4/capsense_Sensing.c ****                                 ptrWdgt->rowSnsClk = capsense_FACTOR_FILTER_DELAY_12MHZ;
1617:.\Generated_Source\PSoC4/capsense_Sensing.c ****                             }
1618:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         }
1619:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         else if (autoTuneConfig.snsClkInputClock <= capsense_MOD_CSD_CLK_48000KHZ)
1620:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         {
1621:.\Generated_Source\PSoC4/capsense_Sensing.c ****                             if (ptrWdgt->rowSnsClk < capsense_FACTOR_MOD_SNS)
1622:.\Generated_Source\PSoC4/capsense_Sensing.c ****                             {
1623:.\Generated_Source\PSoC4/capsense_Sensing.c ****                                 ptrWdgt->rowSnsClk = capsense_FACTOR_MOD_SNS;
1624:.\Generated_Source\PSoC4/capsense_Sensing.c ****                             }
1625:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         }
1626:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         else
1627:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         {
1628:.\Generated_Source\PSoC4/capsense_Sensing.c ****                             /* rowSnsClk is valid*/
1629:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         }
1630:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     #endif /* (capsense_ENABLE == capsense_CSDV2) */
1631:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 }
1632:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_CSD_MATRIX_WIDGET_EN | capsense_CSD_TOUCHPAD_WIDGET_EN) */
1633:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1634:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /* Get pointer to Modulator IDAC  for rows */
1635:.\Generated_Source\PSoC4/capsense_Sensing.c ****             autoTuneConfig.ptrModIDAC = &ptrWdgt->idacMod[0u];
 728              		.loc 1 1635 0
 729 0070 231C     		mov	r3, r4
 730 0072 0A33     		add	r3, r3, #10
 731 0074 0393     		str	r3, [sp, #12]
1636:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 
1637:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /* Get pointer to Sense Clock Divider for columns */
1638:.\Generated_Source\PSoC4/capsense_Sensing.c ****             autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
 732              		.loc 1 1638 0
 733 0076 0133     		add	r3, r3, #1
 734 0078 0493     		str	r3, [sp, #16]
1639:.\Generated_Source\PSoC4/capsense_Sensing.c ****                
1640:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /* Find correct sense clock value */
1641:.\Generated_Source\PSoC4/capsense_Sensing.c ****             cp = SmartSense_TunePrescalers(&autoTuneConfig);
 735              		.loc 1 1641 0
 736 007a 6846     		mov	r0, sp
 737 007c FFF7FEFF 		bl	SmartSense_TunePrescalers
 738              	.LVL74:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 43


1642:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1643:.\Generated_Source\PSoC4/capsense_Sensing.c ****             if ((capsense_CP_MAX + capsense_CP_ERROR) <= cp)
 739              		.loc 1 1643 0
 740 0080 4428     		cmp	r0, #68
 741 0082 00D9     		bls	.L51
1644:.\Generated_Source\PSoC4/capsense_Sensing.c ****             {
1645:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 autoTuneStatus = CYRET_BAD_DATA;
 742              		.loc 1 1645 0
 743 0084 0626     		mov	r6, #6
 744              	.LVL75:
 745              	.L51:
1646:.\Generated_Source\PSoC4/capsense_Sensing.c ****             }
1647:.\Generated_Source\PSoC4/capsense_Sensing.c ****             
1648:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_ENABLE == capsense_CSDV2)
1649:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Make sure that ModClk >= 4 * SnsClk for ModClk <= 12 MHz and SnsClk <= 6MHz */
1650:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 if (autoTuneConfig.snsClkInputClock <= capsense_MOD_CSD_CLK_24000KHZ)
 746              		.loc 1 1650 0
 747 0086 6B46     		mov	r3, sp
 748 0088 1B89     		ldrh	r3, [r3, #8]
 749 008a 134A     		ldr	r2, .L56+8
 750 008c 9342     		cmp	r3, r2
 751 008e 05D8     		bhi	.L52
1651:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 {
1652:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     if (ptrWdgt->snsClk < capsense_FACTOR_FILTER_DELAY_12MHZ)
 752              		.loc 1 1652 0
 753 0090 E37A     		ldrb	r3, [r4, #11]
 754 0092 012B     		cmp	r3, #1
 755 0094 0AD8     		bhi	.L53
1653:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     {
1654:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         ptrWdgt->snsClk = capsense_FACTOR_FILTER_DELAY_12MHZ;
 756              		.loc 1 1654 0
 757 0096 0223     		mov	r3, #2
 758 0098 E372     		strb	r3, [r4, #11]
 759 009a 07E0     		b	.L53
 760              	.L52:
1655:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     }
1656:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 }
1657:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 else if (autoTuneConfig.snsClkInputClock <= capsense_MOD_CSD_CLK_48000KHZ)
 761              		.loc 1 1657 0
 762 009c 144A     		ldr	r2, .L56+32
 763 009e 9342     		cmp	r3, r2
 764 00a0 04D8     		bhi	.L53
1658:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 {
1659:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     if (ptrWdgt->snsClk < capsense_FACTOR_MOD_SNS)
 765              		.loc 1 1659 0
 766 00a2 E37A     		ldrb	r3, [r4, #11]
 767 00a4 072B     		cmp	r3, #7
 768 00a6 01D8     		bhi	.L53
1660:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     {
1661:.\Generated_Source\PSoC4/capsense_Sensing.c ****                         ptrWdgt->snsClk = capsense_FACTOR_MOD_SNS;
 769              		.loc 1 1661 0
 770 00a8 0823     		mov	r3, #8
 771 00aa E372     		strb	r3, [r4, #11]
 772              	.L53:
1662:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     }
1663:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 }
1664:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 else
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 44


1665:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 {
1666:.\Generated_Source\PSoC4/capsense_Sensing.c ****                     /* SnsClk is valid*/
1667:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 }
1668:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_ENABLE == capsense_CSDV2) */
1669:.\Generated_Source\PSoC4/capsense_Sensing.c ****             
1670:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /* Set flag to indicate that calibration in PWM mode has been performed */
1671:.\Generated_Source\PSoC4/capsense_Sensing.c ****             capsense_prescalersTuningDone = 1u;
 773              		.loc 1 1671 0
 774 00ac 0122     		mov	r2, #1
 775 00ae 0F4B     		ldr	r3, .L56+28
 776 00b0 9A70     		strb	r2, [r3, #2]
1672:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1673:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #if (capsense_DISABLE == capsense_CSD2X_EN)
1674:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 /* Calibrate CSD widget to 85% */
1675:.\Generated_Source\PSoC4/capsense_Sensing.c ****                 autoTuneStatus |= capsense_CSDCalibrateWidget(wdgtIndex, capsense_CSD_AUTOTUNE_CAL_
 777              		.loc 1 1675 0
 778 00b2 281C     		mov	r0, r5
 779              	.LVL76:
 780 00b4 5521     		mov	r1, #85
 781 00b6 FFF7FEFF 		bl	capsense_CSDCalibrateWidget
 782              	.LVL77:
 783 00ba 0643     		orr	r6, r0
 784              	.LVL78:
1676:.\Generated_Source\PSoC4/capsense_Sensing.c ****             #endif /* (capsense_DISABLE == capsense_CSD2X_EN) */
1677:.\Generated_Source\PSoC4/capsense_Sensing.c **** 
1678:.\Generated_Source\PSoC4/capsense_Sensing.c ****             /* Find resolution */
1679:.\Generated_Source\PSoC4/capsense_Sensing.c ****             ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
 785              		.loc 1 1679 0
 786 00bc 6846     		mov	r0, sp
 787 00be FFF7FEFF 		bl	SmartSense_TuneSensitivity
 788              	.LVL79:
 789 00c2 2080     		strh	r0, [r4]
1547:.\Generated_Source\PSoC4/capsense_Sensing.c ****     {
 790              		.loc 1 1547 0
 791 00c4 0135     		add	r5, r5, #1
 792              	.LVL80:
 793              	.L50:
1547:.\Generated_Source\PSoC4/capsense_Sensing.c ****     {
 794              		.loc 1 1547 0 is_stmt 0 discriminator 1
 795 00c6 002D     		cmp	r5, #0
 796 00c8 AFD0     		beq	.L54
1680:.\Generated_Source\PSoC4/capsense_Sensing.c ****         }
1681:.\Generated_Source\PSoC4/capsense_Sensing.c ****     }
1682:.\Generated_Source\PSoC4/capsense_Sensing.c ****     return autoTuneStatus;
1683:.\Generated_Source\PSoC4/capsense_Sensing.c **** }
 797              		.loc 1 1683 0 is_stmt 1
 798 00ca 301C     		mov	r0, r6
 799 00cc 06B0     		add	sp, sp, #24
 800              		@ sp needed
 801              	.LVL81:
 802              	.LVL82:
 803 00ce 70BD     		pop	{r4, r5, r6, pc}
 804              	.L57:
 805              		.align	2
 806              	.L56:
 807 00d0 55080000 		.word	2133
 808 00d4 00000000 		.word	capsense_dsRam
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 45


 809 00d8 C05D0000 		.word	24000
 810 00dc 00000000 		.word	capsense_dsFlash
 811 00e0 00020B40 		.word	1074463232
 812 00e4 FFFFF8FD 		.word	-34013185
 813 00e8 DC050000 		.word	1500
 814 00ec 00000000 		.word	.LANCHOR0
 815 00f0 80BB0000 		.word	48000
 816              		.cfi_endproc
 817              	.LFE14:
 818              		.size	capsense_AutoTune, .-capsense_AutoTune
 819              		.comm	capsense_curRamSnsPtr,4,4
 820              		.global	capsense_prescalersTuningDone
 821              		.global	capsense_requestScanAllWidget
 822              		.global	capsense_curWidgetResolution
 823              		.global	capsense_sensorIndex
 824              		.global	capsense_widgetIndex
 825              		.global	capsense_scanFreqIndex
 826              		.section	.rodata
 827              		.type	capsense_scanFreqIndex, %object
 828              		.size	capsense_scanFreqIndex, 1
 829              	capsense_scanFreqIndex:
 830 0000 00       		.space	1
 831              		.bss
 832              		.align	2
 833              		.set	.LANCHOR0,. + 0
 834              		.type	capsense_widgetIndex, %object
 835              		.size	capsense_widgetIndex, 1
 836              	capsense_widgetIndex:
 837 0000 00       		.space	1
 838              		.type	capsense_requestScanAllWidget, %object
 839              		.size	capsense_requestScanAllWidget, 1
 840              	capsense_requestScanAllWidget:
 841 0001 00       		.space	1
 842              		.type	capsense_prescalersTuningDone, %object
 843              		.size	capsense_prescalersTuningDone, 1
 844              	capsense_prescalersTuningDone:
 845 0002 00       		.space	1
 846 0003 00       		.space	1
 847              		.type	capsense_curWidgetResolution, %object
 848              		.size	capsense_curWidgetResolution, 4
 849              	capsense_curWidgetResolution:
 850 0004 00000000 		.space	4
 851              		.type	capsense_sensorIndex, %object
 852              		.size	capsense_sensorIndex, 1
 853              	capsense_sensorIndex:
 854 0008 00       		.space	1
 855 0009 000000   		.text
 856              	.Letext0:
 857              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 858              		.file 3 ".\\Generated_Source\\PSoC4\\capsense_Configuration.h"
 859              		.file 4 ".\\Generated_Source\\PSoC4\\capsense_SmartSense_LL.h"
 860              		.file 5 ".\\Generated_Source\\PSoC4\\capsense_Structure.h"
 861              		.file 6 ".\\Generated_Source\\PSoC4\\capsense_SensingCSD_LL.h"
 862              		.file 7 "Generated_Source\\PSoC4/CyLib.h"
 863              		.file 8 ".\\Generated_Source\\PSoC4\\capsense_ISR.h"
 864              		.section	.debug_info,"",%progbits
 865              	.Ldebug_info0:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 46


 866 0000 3B0C0000 		.4byte	0xc3b
 867 0004 0400     		.2byte	0x4
 868 0006 00000000 		.4byte	.Ldebug_abbrev0
 869 000a 04       		.byte	0x4
 870 000b 01       		.uleb128 0x1
 871 000c 00000000 		.4byte	.LASF155
 872 0010 01       		.byte	0x1
 873 0011 30080000 		.4byte	.LASF156
 874 0015 12030000 		.4byte	.LASF157
 875 0019 00000000 		.4byte	.Ldebug_ranges0+0
 876 001d 00000000 		.4byte	0
 877 0021 00000000 		.4byte	.Ldebug_line0
 878 0025 02       		.uleb128 0x2
 879 0026 01       		.byte	0x1
 880 0027 06       		.byte	0x6
 881 0028 19090000 		.4byte	.LASF0
 882 002c 02       		.uleb128 0x2
 883 002d 01       		.byte	0x1
 884 002e 08       		.byte	0x8
 885 002f 65080000 		.4byte	.LASF1
 886 0033 02       		.uleb128 0x2
 887 0034 02       		.byte	0x2
 888 0035 05       		.byte	0x5
 889 0036 11070000 		.4byte	.LASF2
 890 003a 02       		.uleb128 0x2
 891 003b 02       		.byte	0x2
 892 003c 07       		.byte	0x7
 893 003d 38090000 		.4byte	.LASF3
 894 0041 02       		.uleb128 0x2
 895 0042 04       		.byte	0x4
 896 0043 05       		.byte	0x5
 897 0044 1B070000 		.4byte	.LASF4
 898 0048 02       		.uleb128 0x2
 899 0049 04       		.byte	0x4
 900 004a 07       		.byte	0x7
 901 004b CD070000 		.4byte	.LASF5
 902 004f 02       		.uleb128 0x2
 903 0050 08       		.byte	0x8
 904 0051 05       		.byte	0x5
 905 0052 B0040000 		.4byte	.LASF6
 906 0056 02       		.uleb128 0x2
 907 0057 08       		.byte	0x8
 908 0058 07       		.byte	0x7
 909 0059 4C020000 		.4byte	.LASF7
 910 005d 03       		.uleb128 0x3
 911 005e 04       		.byte	0x4
 912 005f 05       		.byte	0x5
 913 0060 696E7400 		.ascii	"int\000"
 914 0064 02       		.uleb128 0x2
 915 0065 04       		.byte	0x4
 916 0066 07       		.byte	0x7
 917 0067 E6000000 		.4byte	.LASF8
 918 006b 04       		.uleb128 0x4
 919 006c 98090000 		.4byte	.LASF9
 920 0070 02       		.byte	0x2
 921 0071 9201     		.2byte	0x192
 922 0073 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 47


 923 0077 04       		.uleb128 0x4
 924 0078 88040000 		.4byte	.LASF10
 925 007c 02       		.byte	0x2
 926 007d 9301     		.2byte	0x193
 927 007f 3A000000 		.4byte	0x3a
 928 0083 04       		.uleb128 0x4
 929 0084 8F050000 		.4byte	.LASF11
 930 0088 02       		.byte	0x2
 931 0089 9401     		.2byte	0x194
 932 008b 48000000 		.4byte	0x48
 933 008f 02       		.uleb128 0x2
 934 0090 04       		.byte	0x4
 935 0091 04       		.byte	0x4
 936 0092 01020000 		.4byte	.LASF12
 937 0096 02       		.uleb128 0x2
 938 0097 08       		.byte	0x8
 939 0098 04       		.byte	0x4
 940 0099 9E090000 		.4byte	.LASF13
 941 009d 02       		.uleb128 0x2
 942 009e 01       		.byte	0x1
 943 009f 08       		.byte	0x8
 944 00a0 4C040000 		.4byte	.LASF14
 945 00a4 04       		.uleb128 0x4
 946 00a5 5C080000 		.4byte	.LASF15
 947 00a9 02       		.byte	0x2
 948 00aa 3402     		.2byte	0x234
 949 00ac 48000000 		.4byte	0x48
 950 00b0 05       		.uleb128 0x5
 951 00b1 6B000000 		.4byte	0x6b
 952 00b5 04       		.uleb128 0x4
 953 00b6 98060000 		.4byte	.LASF16
 954 00ba 02       		.byte	0x2
 955 00bb 3E02     		.2byte	0x23e
 956 00bd C1000000 		.4byte	0xc1
 957 00c1 05       		.uleb128 0x5
 958 00c2 83000000 		.4byte	0x83
 959 00c6 04       		.uleb128 0x4
 960 00c7 3E050000 		.4byte	.LASF17
 961 00cb 02       		.byte	0x2
 962 00cc 4E02     		.2byte	0x24e
 963 00ce D2000000 		.4byte	0xd2
 964 00d2 06       		.uleb128 0x6
 965 00d3 04       		.byte	0x4
 966 00d4 D8000000 		.4byte	0xd8
 967 00d8 07       		.uleb128 0x7
 968 00d9 02       		.uleb128 0x2
 969 00da 04       		.byte	0x4
 970 00db 07       		.byte	0x7
 971 00dc BC070000 		.4byte	.LASF18
 972 00e0 08       		.uleb128 0x8
 973 00e1 04       		.byte	0x4
 974 00e2 09       		.uleb128 0x9
 975 00e3 F3050000 		.4byte	.LASF19
 976 00e7 03       		.byte	0x3
 977 00e8 D6       		.byte	0xd6
 978 00e9 77000000 		.4byte	0x77
 979 00ed 09       		.uleb128 0x9
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 48


 980 00ee 0E040000 		.4byte	.LASF20
 981 00f2 03       		.byte	0x3
 982 00f3 DA       		.byte	0xda
 983 00f4 6B000000 		.4byte	0x6b
 984 00f8 0A       		.uleb128 0xa
 985 00f9 18       		.byte	0x18
 986 00fa 04       		.byte	0x4
 987 00fb 2F       		.byte	0x2f
 988 00fc 61010000 		.4byte	0x161
 989 0100 0B       		.uleb128 0xb
 990 0101 88060000 		.4byte	.LASF21
 991 0105 04       		.byte	0x4
 992 0106 34       		.byte	0x34
 993 0107 77000000 		.4byte	0x77
 994 010b 00       		.byte	0
 995 010c 0B       		.uleb128 0xb
 996 010d DF070000 		.4byte	.LASF22
 997 0111 04       		.byte	0x4
 998 0112 39       		.byte	0x39
 999 0113 77000000 		.4byte	0x77
 1000 0117 02       		.byte	0x2
 1001 0118 0B       		.uleb128 0xb
 1002 0119 43010000 		.4byte	.LASF23
 1003 011d 04       		.byte	0x4
 1004 011e 3E       		.byte	0x3e
 1005 011f 77000000 		.4byte	0x77
 1006 0123 04       		.byte	0x4
 1007 0124 0B       		.uleb128 0xb
 1008 0125 B0070000 		.4byte	.LASF24
 1009 0129 04       		.byte	0x4
 1010 012a 43       		.byte	0x43
 1011 012b 77000000 		.4byte	0x77
 1012 012f 06       		.byte	0x6
 1013 0130 0B       		.uleb128 0xb
 1014 0131 83010000 		.4byte	.LASF25
 1015 0135 04       		.byte	0x4
 1016 0136 48       		.byte	0x48
 1017 0137 77000000 		.4byte	0x77
 1018 013b 08       		.byte	0x8
 1019 013c 0B       		.uleb128 0xb
 1020 013d B0010000 		.4byte	.LASF26
 1021 0141 04       		.byte	0x4
 1022 0142 4D       		.byte	0x4d
 1023 0143 61010000 		.4byte	0x161
 1024 0147 0C       		.byte	0xc
 1025 0148 0B       		.uleb128 0xb
 1026 0149 21060000 		.4byte	.LASF27
 1027 014d 04       		.byte	0x4
 1028 014e 52       		.byte	0x52
 1029 014f 6C010000 		.4byte	0x16c
 1030 0153 10       		.byte	0x10
 1031 0154 0B       		.uleb128 0xb
 1032 0155 AF000000 		.4byte	.LASF28
 1033 0159 04       		.byte	0x4
 1034 015a 57       		.byte	0x57
 1035 015b 72010000 		.4byte	0x172
 1036 015f 14       		.byte	0x14
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 49


 1037 0160 00       		.byte	0
 1038 0161 06       		.uleb128 0x6
 1039 0162 04       		.byte	0x4
 1040 0163 67010000 		.4byte	0x167
 1041 0167 0C       		.uleb128 0xc
 1042 0168 6B000000 		.4byte	0x6b
 1043 016c 06       		.uleb128 0x6
 1044 016d 04       		.byte	0x4
 1045 016e 6B000000 		.4byte	0x6b
 1046 0172 06       		.uleb128 0x6
 1047 0173 04       		.byte	0x4
 1048 0174 77000000 		.4byte	0x77
 1049 0178 09       		.uleb128 0x9
 1050 0179 4B090000 		.4byte	.LASF29
 1051 017d 04       		.byte	0x4
 1052 017e 58       		.byte	0x58
 1053 017f F8000000 		.4byte	0xf8
 1054 0183 0A       		.uleb128 0xa
 1055 0184 0C       		.byte	0xc
 1056 0185 04       		.byte	0x4
 1057 0186 5D       		.byte	0x5d
 1058 0187 E0010000 		.4byte	0x1e0
 1059 018b 0B       		.uleb128 0xb
 1060 018c B3090000 		.4byte	.LASF30
 1061 0190 04       		.byte	0x4
 1062 0191 5F       		.byte	0x5f
 1063 0192 77000000 		.4byte	0x77
 1064 0196 00       		.byte	0
 1065 0197 0B       		.uleb128 0xb
 1066 0198 BA090000 		.4byte	.LASF31
 1067 019c 04       		.byte	0x4
 1068 019d 60       		.byte	0x60
 1069 019e 77000000 		.4byte	0x77
 1070 01a2 02       		.byte	0x2
 1071 01a3 0B       		.uleb128 0xb
 1072 01a4 C1090000 		.4byte	.LASF32
 1073 01a8 04       		.byte	0x4
 1074 01a9 61       		.byte	0x61
 1075 01aa 77000000 		.4byte	0x77
 1076 01ae 04       		.byte	0x4
 1077 01af 0B       		.uleb128 0xb
 1078 01b0 C8090000 		.4byte	.LASF33
 1079 01b4 04       		.byte	0x4
 1080 01b5 62       		.byte	0x62
 1081 01b6 77000000 		.4byte	0x77
 1082 01ba 06       		.byte	0x6
 1083 01bb 0B       		.uleb128 0xb
 1084 01bc CF090000 		.4byte	.LASF34
 1085 01c0 04       		.byte	0x4
 1086 01c1 63       		.byte	0x63
 1087 01c2 77000000 		.4byte	0x77
 1088 01c6 08       		.byte	0x8
 1089 01c7 0B       		.uleb128 0xb
 1090 01c8 D6090000 		.4byte	.LASF35
 1091 01cc 04       		.byte	0x4
 1092 01cd 64       		.byte	0x64
 1093 01ce 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 50


 1094 01d2 0A       		.byte	0xa
 1095 01d3 0B       		.uleb128 0xb
 1096 01d4 DD090000 		.4byte	.LASF36
 1097 01d8 04       		.byte	0x4
 1098 01d9 65       		.byte	0x65
 1099 01da 6B000000 		.4byte	0x6b
 1100 01de 0B       		.byte	0xb
 1101 01df 00       		.byte	0
 1102 01e0 09       		.uleb128 0x9
 1103 01e1 C5030000 		.4byte	.LASF37
 1104 01e5 04       		.byte	0x4
 1105 01e6 66       		.byte	0x66
 1106 01e7 83010000 		.4byte	0x183
 1107 01eb 0D       		.uleb128 0xd
 1108 01ec 01       		.byte	0x1
 1109 01ed 05       		.byte	0x5
 1110 01ee 5D       		.byte	0x5d
 1111 01ef 06020000 		.4byte	0x206
 1112 01f3 0E       		.uleb128 0xe
 1113 01f4 F9030000 		.4byte	.LASF38
 1114 01f8 00       		.sleb128 0
 1115 01f9 0E       		.uleb128 0xe
 1116 01fa E5010000 		.4byte	.LASF39
 1117 01fe 01       		.sleb128 1
 1118 01ff 0E       		.uleb128 0xe
 1119 0200 67010000 		.4byte	.LASF40
 1120 0204 02       		.sleb128 2
 1121 0205 00       		.byte	0
 1122 0206 09       		.uleb128 0x9
 1123 0207 29040000 		.4byte	.LASF41
 1124 020b 05       		.byte	0x5
 1125 020c 61       		.byte	0x61
 1126 020d EB010000 		.4byte	0x1eb
 1127 0211 0A       		.uleb128 0xa
 1128 0212 10       		.byte	0x10
 1129 0213 05       		.byte	0x5
 1130 0214 7B       		.byte	0x7b
 1131 0215 AA020000 		.4byte	0x2aa
 1132 0219 0B       		.uleb128 0xb
 1133 021a 8F040000 		.4byte	.LASF42
 1134 021e 05       		.byte	0x5
 1135 021f 81       		.byte	0x81
 1136 0220 77000000 		.4byte	0x77
 1137 0224 00       		.byte	0
 1138 0225 0B       		.uleb128 0xb
 1139 0226 10080000 		.4byte	.LASF43
 1140 022a 05       		.byte	0x5
 1141 022b 86       		.byte	0x86
 1142 022c E2000000 		.4byte	0xe2
 1143 0230 02       		.byte	0x2
 1144 0231 0B       		.uleb128 0xb
 1145 0232 44040000 		.4byte	.LASF44
 1146 0236 05       		.byte	0x5
 1147 0237 8B       		.byte	0x8b
 1148 0238 6B000000 		.4byte	0x6b
 1149 023c 04       		.byte	0x4
 1150 023d 0B       		.uleb128 0xb
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 51


 1151 023e 2A050000 		.4byte	.LASF45
 1152 0242 05       		.byte	0x5
 1153 0243 90       		.byte	0x90
 1154 0244 6B000000 		.4byte	0x6b
 1155 0248 05       		.byte	0x5
 1156 0249 0B       		.uleb128 0xb
 1157 024a 07030000 		.4byte	.LASF46
 1158 024e 05       		.byte	0x5
 1159 024f 95       		.byte	0x95
 1160 0250 6B000000 		.4byte	0x6b
 1161 0254 06       		.byte	0x6
 1162 0255 0B       		.uleb128 0xb
 1163 0256 C6040000 		.4byte	.LASF47
 1164 025a 05       		.byte	0x5
 1165 025b 9A       		.byte	0x9a
 1166 025c 6B000000 		.4byte	0x6b
 1167 0260 07       		.byte	0x7
 1168 0261 0B       		.uleb128 0xb
 1169 0262 75030000 		.4byte	.LASF48
 1170 0266 05       		.byte	0x5
 1171 0267 A0       		.byte	0xa0
 1172 0268 ED000000 		.4byte	0xed
 1173 026c 08       		.byte	0x8
 1174 026d 0B       		.uleb128 0xb
 1175 026e F0020000 		.4byte	.LASF49
 1176 0272 05       		.byte	0x5
 1177 0273 A5       		.byte	0xa5
 1178 0274 6B000000 		.4byte	0x6b
 1179 0278 09       		.byte	0x9
 1180 0279 0B       		.uleb128 0xb
 1181 027a E4070000 		.4byte	.LASF50
 1182 027e 05       		.byte	0x5
 1183 027f AC       		.byte	0xac
 1184 0280 AA020000 		.4byte	0x2aa
 1185 0284 0A       		.byte	0xa
 1186 0285 0B       		.uleb128 0xb
 1187 0286 FB080000 		.4byte	.LASF51
 1188 028a 05       		.byte	0x5
 1189 028b B3       		.byte	0xb3
 1190 028c 6B000000 		.4byte	0x6b
 1191 0290 0B       		.byte	0xb
 1192 0291 0B       		.uleb128 0xb
 1193 0292 B0070000 		.4byte	.LASF24
 1194 0296 05       		.byte	0x5
 1195 0297 B9       		.byte	0xb9
 1196 0298 77000000 		.4byte	0x77
 1197 029c 0C       		.byte	0xc
 1198 029d 0B       		.uleb128 0xb
 1199 029e AF000000 		.4byte	.LASF28
 1200 02a2 05       		.byte	0x5
 1201 02a3 BE       		.byte	0xbe
 1202 02a4 77000000 		.4byte	0x77
 1203 02a8 0E       		.byte	0xe
 1204 02a9 00       		.byte	0
 1205 02aa 0F       		.uleb128 0xf
 1206 02ab 6B000000 		.4byte	0x6b
 1207 02af BA020000 		.4byte	0x2ba
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 52


 1208 02b3 10       		.uleb128 0x10
 1209 02b4 D9000000 		.4byte	0xd9
 1210 02b8 00       		.byte	0
 1211 02b9 00       		.byte	0
 1212 02ba 09       		.uleb128 0x9
 1213 02bb 110A0000 		.4byte	.LASF52
 1214 02bf 05       		.byte	0x5
 1215 02c0 BF       		.byte	0xbf
 1216 02c1 11020000 		.4byte	0x211
 1217 02c5 0A       		.uleb128 0xa
 1218 02c6 12       		.byte	0x12
 1219 02c7 05       		.byte	0x5
 1220 02c8 C4       		.byte	0xc4
 1221 02c9 6D030000 		.4byte	0x36d
 1222 02cd 0B       		.uleb128 0xb
 1223 02ce 8F040000 		.4byte	.LASF42
 1224 02d2 05       		.byte	0x5
 1225 02d3 CA       		.byte	0xca
 1226 02d4 77000000 		.4byte	0x77
 1227 02d8 00       		.byte	0
 1228 02d9 0B       		.uleb128 0xb
 1229 02da 10080000 		.4byte	.LASF43
 1230 02de 05       		.byte	0x5
 1231 02df CF       		.byte	0xcf
 1232 02e0 E2000000 		.4byte	0xe2
 1233 02e4 02       		.byte	0x2
 1234 02e5 0B       		.uleb128 0xb
 1235 02e6 44040000 		.4byte	.LASF44
 1236 02ea 05       		.byte	0x5
 1237 02eb D4       		.byte	0xd4
 1238 02ec 6B000000 		.4byte	0x6b
 1239 02f0 04       		.byte	0x4
 1240 02f1 0B       		.uleb128 0xb
 1241 02f2 2A050000 		.4byte	.LASF45
 1242 02f6 05       		.byte	0x5
 1243 02f7 D9       		.byte	0xd9
 1244 02f8 6B000000 		.4byte	0x6b
 1245 02fc 05       		.byte	0x5
 1246 02fd 0B       		.uleb128 0xb
 1247 02fe 07030000 		.4byte	.LASF46
 1248 0302 05       		.byte	0x5
 1249 0303 DE       		.byte	0xde
 1250 0304 6B000000 		.4byte	0x6b
 1251 0308 06       		.byte	0x6
 1252 0309 0B       		.uleb128 0xb
 1253 030a C6040000 		.4byte	.LASF47
 1254 030e 05       		.byte	0x5
 1255 030f E3       		.byte	0xe3
 1256 0310 6B000000 		.4byte	0x6b
 1257 0314 07       		.byte	0x7
 1258 0315 0B       		.uleb128 0xb
 1259 0316 75030000 		.4byte	.LASF48
 1260 031a 05       		.byte	0x5
 1261 031b E9       		.byte	0xe9
 1262 031c ED000000 		.4byte	0xed
 1263 0320 08       		.byte	0x8
 1264 0321 0B       		.uleb128 0xb
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 53


 1265 0322 F0020000 		.4byte	.LASF49
 1266 0326 05       		.byte	0x5
 1267 0327 EE       		.byte	0xee
 1268 0328 6B000000 		.4byte	0x6b
 1269 032c 09       		.byte	0x9
 1270 032d 0B       		.uleb128 0xb
 1271 032e E4070000 		.4byte	.LASF50
 1272 0332 05       		.byte	0x5
 1273 0333 F5       		.byte	0xf5
 1274 0334 AA020000 		.4byte	0x2aa
 1275 0338 0A       		.byte	0xa
 1276 0339 0B       		.uleb128 0xb
 1277 033a FB080000 		.4byte	.LASF51
 1278 033e 05       		.byte	0x5
 1279 033f FC       		.byte	0xfc
 1280 0340 6B000000 		.4byte	0x6b
 1281 0344 0B       		.byte	0xb
 1282 0345 11       		.uleb128 0x11
 1283 0346 B0070000 		.4byte	.LASF24
 1284 034a 05       		.byte	0x5
 1285 034b 0201     		.2byte	0x102
 1286 034d 77000000 		.4byte	0x77
 1287 0351 0C       		.byte	0xc
 1288 0352 11       		.uleb128 0x11
 1289 0353 AF000000 		.4byte	.LASF28
 1290 0357 05       		.byte	0x5
 1291 0358 0701     		.2byte	0x107
 1292 035a 77000000 		.4byte	0x77
 1293 035e 0E       		.byte	0xe
 1294 035f 11       		.uleb128 0x11
 1295 0360 2D0A0000 		.4byte	.LASF53
 1296 0364 05       		.byte	0x5
 1297 0365 0C01     		.2byte	0x10c
 1298 0367 6D030000 		.4byte	0x36d
 1299 036b 10       		.byte	0x10
 1300 036c 00       		.byte	0
 1301 036d 0F       		.uleb128 0xf
 1302 036e 77000000 		.4byte	0x77
 1303 0372 7D030000 		.4byte	0x37d
 1304 0376 10       		.uleb128 0x10
 1305 0377 D9000000 		.4byte	0xd9
 1306 037b 00       		.byte	0
 1307 037c 00       		.byte	0
 1308 037d 04       		.uleb128 0x4
 1309 037e 37060000 		.4byte	.LASF54
 1310 0382 05       		.byte	0x5
 1311 0383 0D01     		.2byte	0x10d
 1312 0385 C5020000 		.4byte	0x2c5
 1313 0389 12       		.uleb128 0x12
 1314 038a 12       		.byte	0x12
 1315 038b 05       		.byte	0x5
 1316 038c 1301     		.2byte	0x113
 1317 038e A0030000 		.4byte	0x3a0
 1318 0392 11       		.uleb128 0x11
 1319 0393 D7080000 		.4byte	.LASF55
 1320 0397 05       		.byte	0x5
 1321 0398 1801     		.2byte	0x118
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 54


 1322 039a 7D030000 		.4byte	0x37d
 1323 039e 00       		.byte	0
 1324 039f 00       		.byte	0
 1325 03a0 04       		.uleb128 0x4
 1326 03a1 D7050000 		.4byte	.LASF56
 1327 03a5 05       		.byte	0x5
 1328 03a6 1901     		.2byte	0x119
 1329 03a8 89030000 		.4byte	0x389
 1330 03ac 12       		.uleb128 0x12
 1331 03ad 0A       		.byte	0xa
 1332 03ae 05       		.byte	0x5
 1333 03af 1F01     		.2byte	0x11f
 1334 03b1 04040000 		.4byte	0x404
 1335 03b5 13       		.uleb128 0x13
 1336 03b6 72617700 		.ascii	"raw\000"
 1337 03ba 05       		.byte	0x5
 1338 03bb 2401     		.2byte	0x124
 1339 03bd 6D030000 		.4byte	0x36d
 1340 03c1 00       		.byte	0
 1341 03c2 11       		.uleb128 0x11
 1342 03c3 33090000 		.4byte	.LASF57
 1343 03c7 05       		.byte	0x5
 1344 03c8 2901     		.2byte	0x129
 1345 03ca 6D030000 		.4byte	0x36d
 1346 03ce 02       		.byte	0x2
 1347 03cf 11       		.uleb128 0x11
 1348 03d0 19080000 		.4byte	.LASF58
 1349 03d4 05       		.byte	0x5
 1350 03d5 2F01     		.2byte	0x12f
 1351 03d7 AA020000 		.4byte	0x2aa
 1352 03db 04       		.byte	0x4
 1353 03dc 11       		.uleb128 0x11
 1354 03dd A1040000 		.4byte	.LASF59
 1355 03e1 05       		.byte	0x5
 1356 03e2 3501     		.2byte	0x135
 1357 03e4 AA020000 		.4byte	0x2aa
 1358 03e8 05       		.byte	0x5
 1359 03e9 11       		.uleb128 0x11
 1360 03ea 2F070000 		.4byte	.LASF60
 1361 03ee 05       		.byte	0x5
 1362 03ef 3A01     		.2byte	0x13a
 1363 03f1 E2000000 		.4byte	0xe2
 1364 03f5 06       		.byte	0x6
 1365 03f6 11       		.uleb128 0x11
 1366 03f7 A5090000 		.4byte	.LASF61
 1367 03fb 05       		.byte	0x5
 1368 03fc 3F01     		.2byte	0x13f
 1369 03fe 04040000 		.4byte	0x404
 1370 0402 08       		.byte	0x8
 1371 0403 00       		.byte	0
 1372 0404 0F       		.uleb128 0xf
 1373 0405 ED000000 		.4byte	0xed
 1374 0409 14040000 		.4byte	0x414
 1375 040d 10       		.uleb128 0x10
 1376 040e D9000000 		.4byte	0xd9
 1377 0412 00       		.byte	0
 1378 0413 00       		.byte	0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 55


 1379 0414 04       		.uleb128 0x4
 1380 0415 43070000 		.4byte	.LASF62
 1381 0419 05       		.byte	0x5
 1382 041a 4001     		.2byte	0x140
 1383 041c AC030000 		.4byte	0x3ac
 1384 0420 12       		.uleb128 0x12
 1385 0421 32       		.byte	0x32
 1386 0422 05       		.byte	0x5
 1387 0423 4601     		.2byte	0x146
 1388 0425 37040000 		.4byte	0x437
 1389 0429 11       		.uleb128 0x11
 1390 042a D7080000 		.4byte	.LASF55
 1391 042e 05       		.byte	0x5
 1392 042f 4B01     		.2byte	0x14b
 1393 0431 37040000 		.4byte	0x437
 1394 0435 00       		.byte	0
 1395 0436 00       		.byte	0
 1396 0437 0F       		.uleb128 0xf
 1397 0438 14040000 		.4byte	0x414
 1398 043c 47040000 		.4byte	0x447
 1399 0440 10       		.uleb128 0x10
 1400 0441 D9000000 		.4byte	0xd9
 1401 0445 04       		.byte	0x4
 1402 0446 00       		.byte	0
 1403 0447 04       		.uleb128 0x4
 1404 0448 92000000 		.4byte	.LASF63
 1405 044c 05       		.byte	0x5
 1406 044d 4C01     		.2byte	0x14c
 1407 044f 20040000 		.4byte	0x420
 1408 0453 12       		.uleb128 0x12
 1409 0454 64       		.byte	0x64
 1410 0455 05       		.byte	0x5
 1411 0456 5201     		.2byte	0x152
 1412 0458 2D050000 		.4byte	0x52d
 1413 045c 11       		.uleb128 0x11
 1414 045d B1060000 		.4byte	.LASF64
 1415 0461 05       		.byte	0x5
 1416 0462 5801     		.2byte	0x158
 1417 0464 77000000 		.4byte	0x77
 1418 0468 00       		.byte	0
 1419 0469 11       		.uleb128 0x11
 1420 046a FB090000 		.4byte	.LASF65
 1421 046e 05       		.byte	0x5
 1422 046f 5D01     		.2byte	0x15d
 1423 0471 77000000 		.4byte	0x77
 1424 0475 02       		.byte	0x2
 1425 0476 11       		.uleb128 0x11
 1426 0477 34070000 		.4byte	.LASF66
 1427 047b 05       		.byte	0x5
 1428 047c 6301     		.2byte	0x163
 1429 047e 77000000 		.4byte	0x77
 1430 0482 04       		.byte	0x4
 1431 0483 11       		.uleb128 0x11
 1432 0484 F3000000 		.4byte	.LASF67
 1433 0488 05       		.byte	0x5
 1434 0489 6801     		.2byte	0x168
 1435 048b 77000000 		.4byte	0x77
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 56


 1436 048f 06       		.byte	0x6
 1437 0490 11       		.uleb128 0x11
 1438 0491 9A040000 		.4byte	.LASF68
 1439 0495 05       		.byte	0x5
 1440 0496 6D01     		.2byte	0x16d
 1441 0498 83000000 		.4byte	0x83
 1442 049c 08       		.byte	0x8
 1443 049d 11       		.uleb128 0x11
 1444 049e 24070000 		.4byte	.LASF69
 1445 04a2 05       		.byte	0x5
 1446 04a3 7301     		.2byte	0x173
 1447 04a5 2D050000 		.4byte	0x52d
 1448 04a9 0C       		.byte	0xc
 1449 04aa 11       		.uleb128 0x11
 1450 04ab 8B070000 		.4byte	.LASF70
 1451 04af 05       		.byte	0x5
 1452 04b0 7901     		.2byte	0x179
 1453 04b2 2D050000 		.4byte	0x52d
 1454 04b6 10       		.byte	0x10
 1455 04b7 11       		.uleb128 0x11
 1456 04b8 E2060000 		.4byte	.LASF71
 1457 04bc 05       		.byte	0x5
 1458 04bd 8701     		.2byte	0x187
 1459 04bf AA020000 		.4byte	0x2aa
 1460 04c3 14       		.byte	0x14
 1461 04c4 11       		.uleb128 0x11
 1462 04c5 33050000 		.4byte	.LASF72
 1463 04c9 05       		.byte	0x5
 1464 04ca 8C01     		.2byte	0x18c
 1465 04cc 77000000 		.4byte	0x77
 1466 04d0 16       		.byte	0x16
 1467 04d1 11       		.uleb128 0x11
 1468 04d2 E6020000 		.4byte	.LASF73
 1469 04d6 05       		.byte	0x5
 1470 04d7 9101     		.2byte	0x191
 1471 04d9 6B000000 		.4byte	0x6b
 1472 04dd 18       		.byte	0x18
 1473 04de 11       		.uleb128 0x11
 1474 04df 01050000 		.4byte	.LASF74
 1475 04e3 05       		.byte	0x5
 1476 04e4 9601     		.2byte	0x196
 1477 04e6 A0030000 		.4byte	0x3a0
 1478 04ea 1A       		.byte	0x1a
 1479 04eb 11       		.uleb128 0x11
 1480 04ec 44020000 		.4byte	.LASF75
 1481 04f0 05       		.byte	0x5
 1482 04f1 9B01     		.2byte	0x19b
 1483 04f3 47040000 		.4byte	0x447
 1484 04f7 2C       		.byte	0x2c
 1485 04f8 11       		.uleb128 0x11
 1486 04f9 C1000000 		.4byte	.LASF76
 1487 04fd 05       		.byte	0x5
 1488 04fe A001     		.2byte	0x1a0
 1489 0500 6B000000 		.4byte	0x6b
 1490 0504 5E       		.byte	0x5e
 1491 0505 11       		.uleb128 0x11
 1492 0506 78020000 		.4byte	.LASF77
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 57


 1493 050a 05       		.byte	0x5
 1494 050b A501     		.2byte	0x1a5
 1495 050d 6B000000 		.4byte	0x6b
 1496 0511 5F       		.byte	0x5f
 1497 0512 11       		.uleb128 0x11
 1498 0513 9E060000 		.4byte	.LASF78
 1499 0517 05       		.byte	0x5
 1500 0518 AA01     		.2byte	0x1aa
 1501 051a 77000000 		.4byte	0x77
 1502 051e 60       		.byte	0x60
 1503 051f 11       		.uleb128 0x11
 1504 0520 1A050000 		.4byte	.LASF79
 1505 0524 05       		.byte	0x5
 1506 0525 AF01     		.2byte	0x1af
 1507 0527 6D030000 		.4byte	0x36d
 1508 052b 62       		.byte	0x62
 1509 052c 00       		.byte	0
 1510 052d 0F       		.uleb128 0xf
 1511 052e 83000000 		.4byte	0x83
 1512 0532 3D050000 		.4byte	0x53d
 1513 0536 10       		.uleb128 0x10
 1514 0537 D9000000 		.4byte	0xd9
 1515 053b 00       		.byte	0
 1516 053c 00       		.byte	0
 1517 053d 04       		.uleb128 0x4
 1518 053e A5080000 		.4byte	.LASF80
 1519 0542 05       		.byte	0x5
 1520 0543 B001     		.2byte	0x1b0
 1521 0545 53040000 		.4byte	0x453
 1522 0549 12       		.uleb128 0x12
 1523 054a 1C       		.byte	0x1c
 1524 054b 05       		.byte	0x5
 1525 054c B601     		.2byte	0x1b6
 1526 054e C8050000 		.4byte	0x5c8
 1527 0552 11       		.uleb128 0x11
 1528 0553 86050000 		.4byte	.LASF81
 1529 0557 05       		.byte	0x5
 1530 0558 BB01     		.2byte	0x1bb
 1531 055a C8050000 		.4byte	0x5c8
 1532 055e 00       		.byte	0
 1533 055f 11       		.uleb128 0x11
 1534 0560 AA040000 		.4byte	.LASF82
 1535 0564 05       		.byte	0x5
 1536 0565 C001     		.2byte	0x1c0
 1537 0567 C8050000 		.4byte	0x5c8
 1538 056b 04       		.byte	0x4
 1539 056c 11       		.uleb128 0x11
 1540 056d FA020000 		.4byte	.LASF83
 1541 0571 05       		.byte	0x5
 1542 0572 C501     		.2byte	0x1c5
 1543 0574 C8050000 		.4byte	0x5c8
 1544 0578 08       		.byte	0x8
 1545 0579 11       		.uleb128 0x11
 1546 057a 3D070000 		.4byte	.LASF84
 1547 057e 05       		.byte	0x5
 1548 057f CA01     		.2byte	0x1ca
 1549 0581 C8050000 		.4byte	0x5c8
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 58


 1550 0585 0C       		.byte	0xc
 1551 0586 11       		.uleb128 0x11
 1552 0587 E5080000 		.4byte	.LASF85
 1553 058b 05       		.byte	0x5
 1554 058c CF01     		.2byte	0x1cf
 1555 058e 83000000 		.4byte	0x83
 1556 0592 10       		.byte	0x10
 1557 0593 11       		.uleb128 0x11
 1558 0594 A6050000 		.4byte	.LASF86
 1559 0598 05       		.byte	0x5
 1560 0599 D401     		.2byte	0x1d4
 1561 059b 83000000 		.4byte	0x83
 1562 059f 14       		.byte	0x14
 1563 05a0 11       		.uleb128 0x11
 1564 05a1 67040000 		.4byte	.LASF87
 1565 05a5 05       		.byte	0x5
 1566 05a6 D901     		.2byte	0x1d9
 1567 05a8 6B000000 		.4byte	0x6b
 1568 05ac 18       		.byte	0x18
 1569 05ad 11       		.uleb128 0x11
 1570 05ae C5070000 		.4byte	.LASF88
 1571 05b2 05       		.byte	0x5
 1572 05b3 DE01     		.2byte	0x1de
 1573 05b5 6B000000 		.4byte	0x6b
 1574 05b9 19       		.byte	0x19
 1575 05ba 11       		.uleb128 0x11
 1576 05bb 07020000 		.4byte	.LASF89
 1577 05bf 05       		.byte	0x5
 1578 05c0 E301     		.2byte	0x1e3
 1579 05c2 6B000000 		.4byte	0x6b
 1580 05c6 1A       		.byte	0x1a
 1581 05c7 00       		.byte	0
 1582 05c8 06       		.uleb128 0x6
 1583 05c9 04       		.byte	0x4
 1584 05ca B5000000 		.4byte	0xb5
 1585 05ce 04       		.uleb128 0x4
 1586 05cf 73080000 		.4byte	.LASF90
 1587 05d3 05       		.byte	0x5
 1588 05d4 E401     		.2byte	0x1e4
 1589 05d6 49050000 		.4byte	0x549
 1590 05da 12       		.uleb128 0x12
 1591 05db 28       		.byte	0x28
 1592 05dc 05       		.byte	0x5
 1593 05dd 0F02     		.2byte	0x20f
 1594 05df 8D060000 		.4byte	0x68d
 1595 05e3 11       		.uleb128 0x11
 1596 05e4 7F090000 		.4byte	.LASF91
 1597 05e8 05       		.byte	0x5
 1598 05e9 1802     		.2byte	0x218
 1599 05eb 8D060000 		.4byte	0x68d
 1600 05ef 00       		.byte	0
 1601 05f0 11       		.uleb128 0x11
 1602 05f1 99080000 		.4byte	.LASF92
 1603 05f5 05       		.byte	0x5
 1604 05f6 1E02     		.2byte	0x21e
 1605 05f8 E0000000 		.4byte	0xe0
 1606 05fc 04       		.byte	0x4
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 59


 1607 05fd 11       		.uleb128 0x11
 1608 05fe D7060000 		.4byte	.LASF93
 1609 0602 05       		.byte	0x5
 1610 0603 2402     		.2byte	0x224
 1611 0605 94060000 		.4byte	0x694
 1612 0609 08       		.byte	0x8
 1613 060a 11       		.uleb128 0x11
 1614 060b 96050000 		.4byte	.LASF94
 1615 060f 05       		.byte	0x5
 1616 0610 2902     		.2byte	0x229
 1617 0612 E0000000 		.4byte	0xe0
 1618 0616 0C       		.byte	0xc
 1619 0617 11       		.uleb128 0x11
 1620 0618 EC070000 		.4byte	.LASF95
 1621 061c 05       		.byte	0x5
 1622 061d 3002     		.2byte	0x230
 1623 061f 6C010000 		.4byte	0x16c
 1624 0623 10       		.byte	0x10
 1625 0624 11       		.uleb128 0x11
 1626 0625 8C080000 		.4byte	.LASF96
 1627 0629 05       		.byte	0x5
 1628 062a 3502     		.2byte	0x235
 1629 062c 77000000 		.4byte	0x77
 1630 0630 14       		.byte	0x14
 1631 0631 11       		.uleb128 0x11
 1632 0632 B9030000 		.4byte	.LASF97
 1633 0636 05       		.byte	0x5
 1634 0637 3C02     		.2byte	0x23c
 1635 0639 77000000 		.4byte	0x77
 1636 063d 16       		.byte	0x16
 1637 063e 11       		.uleb128 0x11
 1638 063f A8020000 		.4byte	.LASF98
 1639 0643 05       		.byte	0x5
 1640 0644 4702     		.2byte	0x247
 1641 0646 6B000000 		.4byte	0x6b
 1642 064a 18       		.byte	0x18
 1643 064b 11       		.uleb128 0x11
 1644 064c BE040000 		.4byte	.LASF99
 1645 0650 05       		.byte	0x5
 1646 0651 4F02     		.2byte	0x24f
 1647 0653 6B000000 		.4byte	0x6b
 1648 0657 19       		.byte	0x19
 1649 0658 11       		.uleb128 0x11
 1650 0659 05070000 		.4byte	.LASF100
 1651 065d 05       		.byte	0x5
 1652 065e 5502     		.2byte	0x255
 1653 0660 77000000 		.4byte	0x77
 1654 0664 1A       		.byte	0x1a
 1655 0665 11       		.uleb128 0x11
 1656 0666 FC070000 		.4byte	.LASF101
 1657 066a 05       		.byte	0x5
 1658 066b 5E02     		.2byte	0x25e
 1659 066d 77000000 		.4byte	0x77
 1660 0671 1C       		.byte	0x1c
 1661 0672 11       		.uleb128 0x11
 1662 0673 88020000 		.4byte	.LASF102
 1663 0677 05       		.byte	0x5
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 60


 1664 0678 6602     		.2byte	0x266
 1665 067a 9A060000 		.4byte	0x69a
 1666 067e 20       		.byte	0x20
 1667 067f 11       		.uleb128 0x11
 1668 0680 21080000 		.4byte	.LASF103
 1669 0684 05       		.byte	0x5
 1670 0685 6B02     		.2byte	0x26b
 1671 0687 E0000000 		.4byte	0xe0
 1672 068b 24       		.byte	0x24
 1673 068c 00       		.byte	0
 1674 068d 06       		.uleb128 0x6
 1675 068e 04       		.byte	0x4
 1676 068f 93060000 		.4byte	0x693
 1677 0693 14       		.uleb128 0x14
 1678 0694 06       		.uleb128 0x6
 1679 0695 04       		.byte	0x4
 1680 0696 14040000 		.4byte	0x414
 1681 069a 06       		.uleb128 0x6
 1682 069b 04       		.byte	0x4
 1683 069c E0010000 		.4byte	0x1e0
 1684 06a0 04       		.uleb128 0x4
 1685 06a1 0D020000 		.4byte	.LASF104
 1686 06a5 05       		.byte	0x5
 1687 06a6 6C02     		.2byte	0x26c
 1688 06a8 DA050000 		.4byte	0x5da
 1689 06ac 12       		.uleb128 0x12
 1690 06ad 28       		.byte	0x28
 1691 06ae 05       		.byte	0x5
 1692 06af 7202     		.2byte	0x272
 1693 06b1 C3060000 		.4byte	0x6c3
 1694 06b5 11       		.uleb128 0x11
 1695 06b6 4D0A0000 		.4byte	.LASF105
 1696 06ba 05       		.byte	0x5
 1697 06bb 7702     		.2byte	0x277
 1698 06bd C3060000 		.4byte	0x6c3
 1699 06c1 00       		.byte	0
 1700 06c2 00       		.byte	0
 1701 06c3 0F       		.uleb128 0xf
 1702 06c4 A0060000 		.4byte	0x6a0
 1703 06c8 D3060000 		.4byte	0x6d3
 1704 06cc 10       		.uleb128 0x10
 1705 06cd D9000000 		.4byte	0xd9
 1706 06d1 00       		.byte	0
 1707 06d2 00       		.byte	0
 1708 06d3 04       		.uleb128 0x4
 1709 06d4 0B060000 		.4byte	.LASF106
 1710 06d8 05       		.byte	0x5
 1711 06d9 7802     		.2byte	0x278
 1712 06db AC060000 		.4byte	0x6ac
 1713 06df 15       		.uleb128 0x15
 1714 06e0 0A050000 		.4byte	.LASF158
 1715 06e4 01       		.byte	0x1
 1716 06e5 B6       		.byte	0xb6
 1717 06e6 83000000 		.4byte	0x83
 1718 06ea 00000000 		.4byte	.LFB1
 1719 06ee 10000000 		.4byte	.LFE1-.LFB1
 1720 06f2 01       		.uleb128 0x1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 61


 1721 06f3 9C       		.byte	0x9c
 1722 06f4 16       		.uleb128 0x16
 1723 06f5 D1000000 		.4byte	.LASF107
 1724 06f9 01       		.byte	0x1
 1725 06fa DD       		.byte	0xdd
 1726 06fb A4000000 		.4byte	0xa4
 1727 06ff 00000000 		.4byte	.LFB2
 1728 0703 48000000 		.4byte	.LFE2-.LFB2
 1729 0707 01       		.uleb128 0x1
 1730 0708 9C       		.byte	0x9c
 1731 0709 35070000 		.4byte	0x735
 1732 070d 17       		.uleb128 0x17
 1733 070e 2D060000 		.4byte	.LASF114
 1734 0712 01       		.byte	0x1
 1735 0713 DD       		.byte	0xdd
 1736 0714 83000000 		.4byte	0x83
 1737 0718 00000000 		.4byte	.LLST0
 1738 071c 18       		.uleb128 0x18
 1739 071d 040A0000 		.4byte	.LASF109
 1740 0721 01       		.byte	0x1
 1741 0722 DF       		.byte	0xdf
 1742 0723 A4000000 		.4byte	0xa4
 1743 0727 21000000 		.4byte	.LLST1
 1744 072b 19       		.uleb128 0x19
 1745 072c 3E000000 		.4byte	.LVL2
 1746 0730 9B0B0000 		.4byte	0xb9b
 1747 0734 00       		.byte	0
 1748 0735 1A       		.uleb128 0x1a
 1749 0736 25090000 		.4byte	.LASF108
 1750 073a 01       		.byte	0x1
 1751 073b B601     		.2byte	0x1b6
 1752 073d A4000000 		.4byte	0xa4
 1753 0741 00000000 		.4byte	.LFB3
 1754 0745 1C000000 		.4byte	.LFE3-.LFB3
 1755 0749 01       		.uleb128 0x1
 1756 074a 9C       		.byte	0x9c
 1757 074b 69070000 		.4byte	0x769
 1758 074f 1B       		.uleb128 0x1b
 1759 0750 B6000000 		.4byte	.LASF110
 1760 0754 01       		.byte	0x1
 1761 0755 B801     		.2byte	0x1b8
 1762 0757 A4000000 		.4byte	0xa4
 1763 075b 3F000000 		.4byte	.LLST2
 1764 075f 19       		.uleb128 0x19
 1765 0760 0E000000 		.4byte	.LVL5
 1766 0764 AC0B0000 		.4byte	0xbac
 1767 0768 00       		.byte	0
 1768 0769 1A       		.uleb128 0x1a
 1769 076a D9040000 		.4byte	.LASF111
 1770 076e 01       		.byte	0x1
 1771 076f 0302     		.2byte	0x203
 1772 0771 A4000000 		.4byte	0xa4
 1773 0775 00000000 		.4byte	.LFB4
 1774 0779 50000000 		.4byte	.LFE4-.LFB4
 1775 077d 01       		.uleb128 0x1
 1776 077e 9C       		.byte	0x9c
 1777 077f A6070000 		.4byte	0x7a6
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 62


 1778 0783 1B       		.uleb128 0x1b
 1779 0784 B6000000 		.4byte	.LASF110
 1780 0788 01       		.byte	0x1
 1781 0789 0502     		.2byte	0x205
 1782 078b A4000000 		.4byte	0xa4
 1783 078f 5E000000 		.4byte	.LLST3
 1784 0793 19       		.uleb128 0x19
 1785 0794 20000000 		.4byte	.LVL10
 1786 0798 F4060000 		.4byte	0x6f4
 1787 079c 19       		.uleb128 0x19
 1788 079d 2E000000 		.4byte	.LVL11
 1789 07a1 35070000 		.4byte	0x735
 1790 07a5 00       		.byte	0
 1791 07a6 1A       		.uleb128 0x1a
 1792 07a7 80030000 		.4byte	.LASF112
 1793 07ab 01       		.byte	0x1
 1794 07ac 6202     		.2byte	0x262
 1795 07ae A4000000 		.4byte	0xa4
 1796 07b2 00000000 		.4byte	.LFB5
 1797 07b6 0A000000 		.4byte	.LFE5-.LFB5
 1798 07ba 01       		.uleb128 0x1
 1799 07bb 9C       		.byte	0x9c
 1800 07bc D7070000 		.4byte	0x7d7
 1801 07c0 1C       		.uleb128 0x1c
 1802 07c1 FF000000 		.4byte	.LASF113
 1803 07c5 01       		.byte	0x1
 1804 07c6 6402     		.2byte	0x264
 1805 07c8 A4000000 		.4byte	0xa4
 1806 07cc 00       		.byte	0
 1807 07cd 19       		.uleb128 0x19
 1808 07ce 06000000 		.4byte	.LVL16
 1809 07d2 B30B0000 		.4byte	0xbb3
 1810 07d6 00       		.byte	0
 1811 07d7 1D       		.uleb128 0x1d
 1812 07d8 D0010000 		.4byte	.LASF122
 1813 07dc 01       		.byte	0x1
 1814 07dd CD02     		.2byte	0x2cd
 1815 07df 00000000 		.4byte	.LFB6
 1816 07e3 90000000 		.4byte	.LFE6-.LFB6
 1817 07e7 01       		.uleb128 0x1
 1818 07e8 9C       		.byte	0x9c
 1819 07e9 A2080000 		.4byte	0x8a2
 1820 07ed 1E       		.uleb128 0x1e
 1821 07ee 2D060000 		.4byte	.LASF114
 1822 07f2 01       		.byte	0x1
 1823 07f3 CD02     		.2byte	0x2cd
 1824 07f5 83000000 		.4byte	0x83
 1825 07f9 AC000000 		.4byte	.LLST4
 1826 07fd 1E       		.uleb128 0x1e
 1827 07fe 55060000 		.4byte	.LASF115
 1828 0802 01       		.byte	0x1
 1829 0803 CD02     		.2byte	0x2cd
 1830 0805 83000000 		.4byte	0x83
 1831 0809 CD000000 		.4byte	.LLST5
 1832 080d 1E       		.uleb128 0x1e
 1833 080e D1080000 		.4byte	.LASF116
 1834 0812 01       		.byte	0x1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 63


 1835 0813 CD02     		.2byte	0x2cd
 1836 0815 83000000 		.4byte	0x83
 1837 0819 EE000000 		.4byte	.LLST6
 1838 081d 1B       		.uleb128 0x1b
 1839 081e EF080000 		.4byte	.LASF117
 1840 0822 01       		.byte	0x1
 1841 0823 CF02     		.2byte	0x2cf
 1842 0825 A2080000 		.4byte	0x8a2
 1843 0829 41010000 		.4byte	.LLST7
 1844 082d 1B       		.uleb128 0x1b
 1845 082e D5020000 		.4byte	.LASF118
 1846 0832 01       		.byte	0x1
 1847 0833 D402     		.2byte	0x2d4
 1848 0835 83000000 		.4byte	0x83
 1849 0839 54010000 		.4byte	.LLST8
 1850 083d 1B       		.uleb128 0x1b
 1851 083e 0A010000 		.4byte	.LASF119
 1852 0842 01       		.byte	0x1
 1853 0843 D502     		.2byte	0x2d5
 1854 0845 6B000000 		.4byte	0x6b
 1855 0849 7D010000 		.4byte	.LLST9
 1856 084d 1B       		.uleb128 0x1b
 1857 084e 35010000 		.4byte	.LASF120
 1858 0852 01       		.byte	0x1
 1859 0853 D602     		.2byte	0x2d6
 1860 0855 83000000 		.4byte	0x83
 1861 0859 9B010000 		.4byte	.LLST10
 1862 085d 1B       		.uleb128 0x1b
 1863 085e BB010000 		.4byte	.LASF121
 1864 0862 01       		.byte	0x1
 1865 0863 D702     		.2byte	0x2d7
 1866 0865 83000000 		.4byte	0x83
 1867 0869 B3010000 		.4byte	.LLST11
 1868 086d 19       		.uleb128 0x19
 1869 086e 36000000 		.4byte	.LVL23
 1870 0872 BA0B0000 		.4byte	0xbba
 1871 0876 19       		.uleb128 0x19
 1872 0877 4E000000 		.4byte	.LVL28
 1873 087b C50B0000 		.4byte	0xbc5
 1874 087f 19       		.uleb128 0x19
 1875 0880 62000000 		.4byte	.LVL30
 1876 0884 BA0B0000 		.4byte	0xbba
 1877 0888 19       		.uleb128 0x19
 1878 0889 72000000 		.4byte	.LVL33
 1879 088d C50B0000 		.4byte	0xbc5
 1880 0891 1F       		.uleb128 0x1f
 1881 0892 88000000 		.4byte	.LVL35
 1882 0896 D60B0000 		.4byte	0xbd6
 1883 089a 20       		.uleb128 0x20
 1884 089b 01       		.uleb128 0x1
 1885 089c 50       		.byte	0x50
 1886 089d 02       		.uleb128 0x2
 1887 089e 74       		.byte	0x74
 1888 089f 00       		.sleb128 0
 1889 08a0 00       		.byte	0
 1890 08a1 00       		.byte	0
 1891 08a2 06       		.uleb128 0x6
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 64


 1892 08a3 04       		.byte	0x4
 1893 08a4 A8080000 		.4byte	0x8a8
 1894 08a8 0C       		.uleb128 0xc
 1895 08a9 CE050000 		.4byte	0x5ce
 1896 08ad 21       		.uleb128 0x21
 1897 08ae 19010000 		.4byte	.LASF159
 1898 08b2 01       		.byte	0x1
 1899 08b3 0404     		.2byte	0x404
 1900 08b5 00000000 		.4byte	.LFB7
 1901 08b9 02000000 		.4byte	.LFE7-.LFB7
 1902 08bd 01       		.uleb128 0x1
 1903 08be 9C       		.byte	0x9c
 1904 08bf 1D       		.uleb128 0x1d
 1905 08c0 5B070000 		.4byte	.LASF123
 1906 08c4 01       		.byte	0x1
 1907 08c5 5704     		.2byte	0x457
 1908 08c7 00000000 		.4byte	.LFB8
 1909 08cb 08000000 		.4byte	.LFE8-.LFB8
 1910 08cf 01       		.uleb128 0x1
 1911 08d0 9C       		.byte	0x9c
 1912 08d1 F7080000 		.4byte	0x8f7
 1913 08d5 1E       		.uleb128 0x1e
 1914 08d6 D1040000 		.4byte	.LASF124
 1915 08da 01       		.byte	0x1
 1916 08db 5704     		.2byte	0x457
 1917 08dd C6000000 		.4byte	0xc6
 1918 08e1 DB010000 		.4byte	.LLST12
 1919 08e5 1F       		.uleb128 0x1f
 1920 08e6 06000000 		.4byte	.LVL39
 1921 08ea E70B0000 		.4byte	0xbe7
 1922 08ee 20       		.uleb128 0x20
 1923 08ef 01       		.uleb128 0x1
 1924 08f0 50       		.byte	0x50
 1925 08f1 03       		.uleb128 0x3
 1926 08f2 F3       		.byte	0xf3
 1927 08f3 01       		.uleb128 0x1
 1928 08f4 50       		.byte	0x50
 1929 08f5 00       		.byte	0
 1930 08f6 00       		.byte	0
 1931 08f7 1D       		.uleb128 0x1d
 1932 08f8 61090000 		.4byte	.LASF125
 1933 08fc 01       		.byte	0x1
 1934 08fd 7704     		.2byte	0x477
 1935 08ff 00000000 		.4byte	.LFB9
 1936 0903 30000000 		.4byte	.LFE9-.LFB9
 1937 0907 01       		.uleb128 0x1
 1938 0908 9C       		.byte	0x9c
 1939 0909 1E090000 		.4byte	0x91e
 1940 090d 1E       		.uleb128 0x1e
 1941 090e 00030000 		.4byte	.LASF126
 1942 0912 01       		.byte	0x1
 1943 0913 7704     		.2byte	0x477
 1944 0915 83000000 		.4byte	0x83
 1945 0919 FC010000 		.4byte	.LLST13
 1946 091d 00       		.byte	0
 1947 091e 1D       		.uleb128 0x1d
 1948 091f 6D060000 		.4byte	.LASF127
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 65


 1949 0923 01       		.byte	0x1
 1950 0924 BB04     		.2byte	0x4bb
 1951 0926 00000000 		.4byte	.LFB10
 1952 092a 14000000 		.4byte	.LFE10-.LFB10
 1953 092e 01       		.uleb128 0x1
 1954 092f 9C       		.byte	0x9c
 1955 0930 55090000 		.4byte	0x955
 1956 0934 1E       		.uleb128 0x1e
 1957 0935 FB080000 		.4byte	.LASF51
 1958 0939 01       		.byte	0x1
 1959 093a BB04     		.2byte	0x4bb
 1960 093c 83000000 		.4byte	0x83
 1961 0940 2A020000 		.4byte	.LLST14
 1962 0944 1B       		.uleb128 0x1b
 1963 0945 8C090000 		.4byte	.LASF128
 1964 0949 01       		.byte	0x1
 1965 094a BE04     		.2byte	0x4be
 1966 094c 83000000 		.4byte	0x83
 1967 0950 58020000 		.4byte	.LLST15
 1968 0954 00       		.byte	0
 1969 0955 1D       		.uleb128 0x1d
 1970 0956 EC060000 		.4byte	.LASF129
 1971 095a 01       		.byte	0x1
 1972 095b 0F05     		.2byte	0x50f
 1973 095d 00000000 		.4byte	.LFB11
 1974 0961 12000000 		.4byte	.LFE11-.LFB11
 1975 0965 01       		.uleb128 0x1
 1976 0966 9C       		.byte	0x9c
 1977 0967 B1090000 		.4byte	0x9b1
 1978 096b 1E       		.uleb128 0x1e
 1979 096c FB080000 		.4byte	.LASF51
 1980 0970 01       		.byte	0x1
 1981 0971 0F05     		.2byte	0x50f
 1982 0973 83000000 		.4byte	0x83
 1983 0977 81020000 		.4byte	.LLST16
 1984 097b 1E       		.uleb128 0x1e
 1985 097c 00030000 		.4byte	.LASF126
 1986 0980 01       		.byte	0x1
 1987 0981 0F05     		.2byte	0x50f
 1988 0983 83000000 		.4byte	0x83
 1989 0987 AD020000 		.4byte	.LLST17
 1990 098b 22       		.uleb128 0x22
 1991 098c 0A000000 		.4byte	.LVL51
 1992 0990 F7080000 		.4byte	0x8f7
 1993 0994 A0090000 		.4byte	0x9a0
 1994 0998 20       		.uleb128 0x20
 1995 0999 01       		.uleb128 0x1
 1996 099a 50       		.byte	0x50
 1997 099b 03       		.uleb128 0x3
 1998 099c F3       		.byte	0xf3
 1999 099d 01       		.uleb128 0x1
 2000 099e 51       		.byte	0x51
 2001 099f 00       		.byte	0
 2002 09a0 1F       		.uleb128 0x1f
 2003 09a1 10000000 		.4byte	.LVL52
 2004 09a5 1E090000 		.4byte	0x91e
 2005 09a9 20       		.uleb128 0x20
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 66


 2006 09aa 01       		.uleb128 0x1
 2007 09ab 50       		.byte	0x50
 2008 09ac 02       		.uleb128 0x2
 2009 09ad 74       		.byte	0x74
 2010 09ae 00       		.sleb128 0
 2011 09af 00       		.byte	0
 2012 09b0 00       		.byte	0
 2013 09b1 1A       		.uleb128 0x1a
 2014 09b2 72070000 		.4byte	.LASF130
 2015 09b6 01       		.byte	0x1
 2016 09b7 2E05     		.2byte	0x52e
 2017 09b9 A4000000 		.4byte	0xa4
 2018 09bd 00000000 		.4byte	.LFB12
 2019 09c1 0E000000 		.4byte	.LFE12-.LFB12
 2020 09c5 01       		.uleb128 0x1
 2021 09c6 9C       		.byte	0x9c
 2022 09c7 EC090000 		.4byte	0x9ec
 2023 09cb 1E       		.uleb128 0x1e
 2024 09cc 2D060000 		.4byte	.LASF114
 2025 09d0 01       		.byte	0x1
 2026 09d1 2E05     		.2byte	0x52e
 2027 09d3 83000000 		.4byte	0x83
 2028 09d7 CE020000 		.4byte	.LLST18
 2029 09db 1B       		.uleb128 0x1b
 2030 09dc F1040000 		.4byte	.LASF131
 2031 09e0 01       		.byte	0x1
 2032 09e1 3005     		.2byte	0x530
 2033 09e3 A4000000 		.4byte	0xa4
 2034 09e7 08030000 		.4byte	.LLST19
 2035 09eb 00       		.byte	0
 2036 09ec 1A       		.uleb128 0x1a
 2037 09ed 69050000 		.4byte	.LASF132
 2038 09f1 01       		.byte	0x1
 2039 09f2 C305     		.2byte	0x5c3
 2040 09f4 A4000000 		.4byte	0xa4
 2041 09f8 00000000 		.4byte	.LFB13
 2042 09fc 1A000000 		.4byte	.LFE13-.LFB13
 2043 0a00 01       		.uleb128 0x1
 2044 0a01 9C       		.byte	0x9c
 2045 0a02 370A0000 		.4byte	0xa37
 2046 0a06 1B       		.uleb128 0x1b
 2047 0a07 F1040000 		.4byte	.LASF131
 2048 0a0b 01       		.byte	0x1
 2049 0a0c C505     		.2byte	0x5c5
 2050 0a0e A4000000 		.4byte	0xa4
 2051 0a12 27030000 		.4byte	.LLST20
 2052 0a16 1B       		.uleb128 0x1b
 2053 0a17 2D060000 		.4byte	.LASF114
 2054 0a1b 01       		.byte	0x1
 2055 0a1c C605     		.2byte	0x5c6
 2056 0a1e 83000000 		.4byte	0x83
 2057 0a22 51030000 		.4byte	.LLST21
 2058 0a26 1F       		.uleb128 0x1f
 2059 0a27 0E000000 		.4byte	.LVL61
 2060 0a2b B1090000 		.4byte	0x9b1
 2061 0a2f 20       		.uleb128 0x20
 2062 0a30 01       		.uleb128 0x1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 67


 2063 0a31 50       		.byte	0x50
 2064 0a32 02       		.uleb128 0x2
 2065 0a33 74       		.byte	0x74
 2066 0a34 00       		.sleb128 0
 2067 0a35 00       		.byte	0
 2068 0a36 00       		.byte	0
 2069 0a37 23       		.uleb128 0x23
 2070 0a38 A7030000 		.4byte	.LASF133
 2071 0a3c 01       		.byte	0x1
 2072 0a3d E905     		.2byte	0x5e9
 2073 0a3f A4000000 		.4byte	0xa4
 2074 0a43 00000000 		.4byte	.LFB14
 2075 0a47 F4000000 		.4byte	.LFE14-.LFB14
 2076 0a4b 01       		.uleb128 0x1
 2077 0a4c 9C       		.byte	0x9c
 2078 0a4d 010B0000 		.4byte	0xb01
 2079 0a51 1B       		.uleb128 0x1b
 2080 0a52 B1020000 		.4byte	.LASF134
 2081 0a56 01       		.byte	0x1
 2082 0a57 EB05     		.2byte	0x5eb
 2083 0a59 A4000000 		.4byte	0xa4
 2084 0a5d 70030000 		.4byte	.LLST22
 2085 0a61 1B       		.uleb128 0x1b
 2086 0a62 2D060000 		.4byte	.LASF114
 2087 0a66 01       		.byte	0x1
 2088 0a67 EC05     		.2byte	0x5ec
 2089 0a69 83000000 		.4byte	0x83
 2090 0a6d 9A030000 		.4byte	.LLST23
 2091 0a71 24       		.uleb128 0x24
 2092 0a72 637000   		.ascii	"cp\000"
 2093 0a75 01       		.byte	0x1
 2094 0a76 ED05     		.2byte	0x5ed
 2095 0a78 83000000 		.4byte	0x83
 2096 0a7c B9030000 		.4byte	.LLST24
 2097 0a80 1B       		.uleb128 0x1b
 2098 0a81 C8010000 		.4byte	.LASF135
 2099 0a85 01       		.byte	0x1
 2100 0a86 EE05     		.2byte	0x5ee
 2101 0a88 010B0000 		.4byte	0xb01
 2102 0a8c CC030000 		.4byte	.LLST25
 2103 0a90 25       		.uleb128 0x25
 2104 0a91 EA030000 		.4byte	.LASF136
 2105 0a95 01       		.byte	0x1
 2106 0a96 EF05     		.2byte	0x5ef
 2107 0a98 78010000 		.4byte	0x178
 2108 0a9c 02       		.uleb128 0x2
 2109 0a9d 91       		.byte	0x91
 2110 0a9e 58       		.sleb128 -40
 2111 0a9f 19       		.uleb128 0x19
 2112 0aa0 62000000 		.4byte	.LVL72
 2113 0aa4 1E090000 		.4byte	0x91e
 2114 0aa8 22       		.uleb128 0x22
 2115 0aa9 70000000 		.4byte	.LVL73
 2116 0aad F80B0000 		.4byte	0xbf8
 2117 0ab1 C20A0000 		.4byte	0xac2
 2118 0ab5 20       		.uleb128 0x20
 2119 0ab6 01       		.uleb128 0x1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 68


 2120 0ab7 51       		.byte	0x51
 2121 0ab8 02       		.uleb128 0x2
 2122 0ab9 08       		.byte	0x8
 2123 0aba 55       		.byte	0x55
 2124 0abb 20       		.uleb128 0x20
 2125 0abc 01       		.uleb128 0x1
 2126 0abd 50       		.byte	0x50
 2127 0abe 02       		.uleb128 0x2
 2128 0abf 75       		.byte	0x75
 2129 0ac0 00       		.sleb128 0
 2130 0ac1 00       		.byte	0
 2131 0ac2 22       		.uleb128 0x22
 2132 0ac3 80000000 		.4byte	.LVL74
 2133 0ac7 120C0000 		.4byte	0xc12
 2134 0acb D60A0000 		.4byte	0xad6
 2135 0acf 20       		.uleb128 0x20
 2136 0ad0 01       		.uleb128 0x1
 2137 0ad1 50       		.byte	0x50
 2138 0ad2 02       		.uleb128 0x2
 2139 0ad3 7D       		.byte	0x7d
 2140 0ad4 00       		.sleb128 0
 2141 0ad5 00       		.byte	0
 2142 0ad6 22       		.uleb128 0x22
 2143 0ad7 BA000000 		.4byte	.LVL77
 2144 0adb F80B0000 		.4byte	0xbf8
 2145 0adf F00A0000 		.4byte	0xaf0
 2146 0ae3 20       		.uleb128 0x20
 2147 0ae4 01       		.uleb128 0x1
 2148 0ae5 51       		.byte	0x51
 2149 0ae6 02       		.uleb128 0x2
 2150 0ae7 08       		.byte	0x8
 2151 0ae8 55       		.byte	0x55
 2152 0ae9 20       		.uleb128 0x20
 2153 0aea 01       		.uleb128 0x1
 2154 0aeb 50       		.byte	0x50
 2155 0aec 02       		.uleb128 0x2
 2156 0aed 75       		.byte	0x75
 2157 0aee 00       		.sleb128 0
 2158 0aef 00       		.byte	0
 2159 0af0 1F       		.uleb128 0x1f
 2160 0af1 C2000000 		.4byte	.LVL79
 2161 0af5 2D0C0000 		.4byte	0xc2d
 2162 0af9 20       		.uleb128 0x20
 2163 0afa 01       		.uleb128 0x1
 2164 0afb 50       		.byte	0x50
 2165 0afc 02       		.uleb128 0x2
 2166 0afd 7D       		.byte	0x7d
 2167 0afe 00       		.sleb128 0
 2168 0aff 00       		.byte	0
 2169 0b00 00       		.byte	0
 2170 0b01 06       		.uleb128 0x6
 2171 0b02 04       		.byte	0x4
 2172 0b03 BA020000 		.4byte	0x2ba
 2173 0b07 26       		.uleb128 0x26
 2174 0b08 5E060000 		.4byte	.LASF137
 2175 0b0c 05       		.byte	0x5
 2176 0b0d A103     		.2byte	0x3a1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 69


 2177 0b0f 3D050000 		.4byte	0x53d
 2178 0b13 26       		.uleb128 0x26
 2179 0b14 97020000 		.4byte	.LASF138
 2180 0b18 05       		.byte	0x5
 2181 0b19 A203     		.2byte	0x3a2
 2182 0b1b 1F0B0000 		.4byte	0xb1f
 2183 0b1f 0C       		.uleb128 0xc
 2184 0b20 D3060000 		.4byte	0x6d3
 2185 0b24 27       		.uleb128 0x27
 2186 0b25 360A0000 		.4byte	.LASF139
 2187 0b29 01       		.byte	0x1
 2188 0b2a 84       		.byte	0x84
 2189 0b2b 67010000 		.4byte	0x167
 2190 0b2f 05       		.uleb128 0x5
 2191 0b30 03       		.byte	0x3
 2192 0b31 00000000 		.4byte	capsense_scanFreqIndex
 2193 0b35 27       		.uleb128 0x27
 2194 0b36 C0020000 		.4byte	.LASF140
 2195 0b3a 01       		.byte	0x1
 2196 0b3b 88       		.byte	0x88
 2197 0b3c B0000000 		.4byte	0xb0
 2198 0b40 05       		.uleb128 0x5
 2199 0b41 03       		.byte	0x3
 2200 0b42 00000000 		.4byte	capsense_widgetIndex
 2201 0b46 27       		.uleb128 0x27
 2202 0b47 C2050000 		.4byte	.LASF141
 2203 0b4b 01       		.byte	0x1
 2204 0b4c 89       		.byte	0x89
 2205 0b4d B0000000 		.4byte	0xb0
 2206 0b51 05       		.uleb128 0x5
 2207 0b52 03       		.byte	0x3
 2208 0b53 00000000 		.4byte	capsense_sensorIndex
 2209 0b57 27       		.uleb128 0x27
 2210 0b58 BA060000 		.4byte	.LASF142
 2211 0b5c 01       		.byte	0x1
 2212 0b5d 8A       		.byte	0x8a
 2213 0b5e C1000000 		.4byte	0xc1
 2214 0b62 05       		.uleb128 0x5
 2215 0b63 03       		.byte	0x3
 2216 0b64 00000000 		.4byte	capsense_curWidgetResolution
 2217 0b68 27       		.uleb128 0x27
 2218 0b69 4B050000 		.4byte	.LASF143
 2219 0b6d 01       		.byte	0x1
 2220 0b6e 8B       		.byte	0x8b
 2221 0b6f 6B000000 		.4byte	0x6b
 2222 0b73 05       		.uleb128 0x5
 2223 0b74 03       		.byte	0x3
 2224 0b75 00000000 		.4byte	capsense_requestScanAllWidget
 2225 0b79 27       		.uleb128 0x27
 2226 0b7a 72040000 		.4byte	.LASF144
 2227 0b7e 01       		.byte	0x1
 2228 0b7f 91       		.byte	0x91
 2229 0b80 94060000 		.4byte	0x694
 2230 0b84 05       		.uleb128 0x5
 2231 0b85 03       		.byte	0x3
 2232 0b86 00000000 		.4byte	capsense_curRamSnsPtr
 2233 0b8a 27       		.uleb128 0x27
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 70


 2234 0b8b 26020000 		.4byte	.LASF145
 2235 0b8f 01       		.byte	0x1
 2236 0b90 8D       		.byte	0x8d
 2237 0b91 6B000000 		.4byte	0x6b
 2238 0b95 05       		.uleb128 0x5
 2239 0b96 03       		.byte	0x3
 2240 0b97 00000000 		.4byte	capsense_prescalersTuningDone
 2241 0b9b 28       		.uleb128 0x28
 2242 0b9c B9080000 		.4byte	.LASF148
 2243 0ba0 06       		.byte	0x6
 2244 0ba1 43       		.byte	0x43
 2245 0ba2 AC0B0000 		.4byte	0xbac
 2246 0ba6 29       		.uleb128 0x29
 2247 0ba7 83000000 		.4byte	0x83
 2248 0bab 00       		.byte	0
 2249 0bac 2A       		.uleb128 0x2a
 2250 0bad 96030000 		.4byte	.LASF146
 2251 0bb1 06       		.byte	0x6
 2252 0bb2 3D       		.byte	0x3d
 2253 0bb3 2A       		.uleb128 0x2a
 2254 0bb4 AB050000 		.4byte	.LASF147
 2255 0bb8 06       		.byte	0x6
 2256 0bb9 52       		.byte	0x52
 2257 0bba 2B       		.uleb128 0x2b
 2258 0bbb 02090000 		.4byte	.LASF160
 2259 0bbf 07       		.byte	0x7
 2260 0bc0 E3       		.byte	0xe3
 2261 0bc1 6B000000 		.4byte	0x6b
 2262 0bc5 28       		.uleb128 0x28
 2263 0bc6 51040000 		.4byte	.LASF149
 2264 0bca 07       		.byte	0x7
 2265 0bcb E4       		.byte	0xe4
 2266 0bcc D60B0000 		.4byte	0xbd6
 2267 0bd0 29       		.uleb128 0x29
 2268 0bd1 6B000000 		.4byte	0x6b
 2269 0bd5 00       		.byte	0
 2270 0bd6 28       		.uleb128 0x28
 2271 0bd7 E4090000 		.4byte	.LASF150
 2272 0bdb 06       		.byte	0x6
 2273 0bdc 3A       		.byte	0x3a
 2274 0bdd E70B0000 		.4byte	0xbe7
 2275 0be1 29       		.uleb128 0x29
 2276 0be2 A2080000 		.4byte	0x8a2
 2277 0be6 00       		.byte	0
 2278 0be7 28       		.uleb128 0x28
 2279 0be8 63020000 		.4byte	.LASF151
 2280 0bec 08       		.byte	0x8
 2281 0bed 18       		.byte	0x18
 2282 0bee F80B0000 		.4byte	0xbf8
 2283 0bf2 29       		.uleb128 0x29
 2284 0bf3 C6000000 		.4byte	0xc6
 2285 0bf7 00       		.byte	0
 2286 0bf8 2C       		.uleb128 0x2c
 2287 0bf9 94010000 		.4byte	.LASF152
 2288 0bfd 06       		.byte	0x6
 2289 0bfe 40       		.byte	0x40
 2290 0bff A4000000 		.4byte	0xa4
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 71


 2291 0c03 120C0000 		.4byte	0xc12
 2292 0c07 29       		.uleb128 0x29
 2293 0c08 83000000 		.4byte	0x83
 2294 0c0c 29       		.uleb128 0x29
 2295 0c0d 83000000 		.4byte	0x83
 2296 0c11 00       		.byte	0
 2297 0c12 2C       		.uleb128 0x2c
 2298 0c13 96070000 		.4byte	.LASF153
 2299 0c17 04       		.byte	0x4
 2300 0c18 87       		.byte	0x87
 2301 0c19 83000000 		.4byte	0x83
 2302 0c1d 270C0000 		.4byte	0xc27
 2303 0c21 29       		.uleb128 0x29
 2304 0c22 270C0000 		.4byte	0xc27
 2305 0c26 00       		.byte	0
 2306 0c27 06       		.uleb128 0x6
 2307 0c28 04       		.byte	0x4
 2308 0c29 78010000 		.4byte	0x178
 2309 0c2d 2D       		.uleb128 0x2d
 2310 0c2e 4C010000 		.4byte	.LASF154
 2311 0c32 04       		.byte	0x4
 2312 0c33 88       		.byte	0x88
 2313 0c34 6B000000 		.4byte	0x6b
 2314 0c38 29       		.uleb128 0x29
 2315 0c39 270C0000 		.4byte	0xc27
 2316 0c3d 00       		.byte	0
 2317 0c3e 00       		.byte	0
 2318              		.section	.debug_abbrev,"",%progbits
 2319              	.Ldebug_abbrev0:
 2320 0000 01       		.uleb128 0x1
 2321 0001 11       		.uleb128 0x11
 2322 0002 01       		.byte	0x1
 2323 0003 25       		.uleb128 0x25
 2324 0004 0E       		.uleb128 0xe
 2325 0005 13       		.uleb128 0x13
 2326 0006 0B       		.uleb128 0xb
 2327 0007 03       		.uleb128 0x3
 2328 0008 0E       		.uleb128 0xe
 2329 0009 1B       		.uleb128 0x1b
 2330 000a 0E       		.uleb128 0xe
 2331 000b 55       		.uleb128 0x55
 2332 000c 17       		.uleb128 0x17
 2333 000d 11       		.uleb128 0x11
 2334 000e 01       		.uleb128 0x1
 2335 000f 10       		.uleb128 0x10
 2336 0010 17       		.uleb128 0x17
 2337 0011 00       		.byte	0
 2338 0012 00       		.byte	0
 2339 0013 02       		.uleb128 0x2
 2340 0014 24       		.uleb128 0x24
 2341 0015 00       		.byte	0
 2342 0016 0B       		.uleb128 0xb
 2343 0017 0B       		.uleb128 0xb
 2344 0018 3E       		.uleb128 0x3e
 2345 0019 0B       		.uleb128 0xb
 2346 001a 03       		.uleb128 0x3
 2347 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 72


 2348 001c 00       		.byte	0
 2349 001d 00       		.byte	0
 2350 001e 03       		.uleb128 0x3
 2351 001f 24       		.uleb128 0x24
 2352 0020 00       		.byte	0
 2353 0021 0B       		.uleb128 0xb
 2354 0022 0B       		.uleb128 0xb
 2355 0023 3E       		.uleb128 0x3e
 2356 0024 0B       		.uleb128 0xb
 2357 0025 03       		.uleb128 0x3
 2358 0026 08       		.uleb128 0x8
 2359 0027 00       		.byte	0
 2360 0028 00       		.byte	0
 2361 0029 04       		.uleb128 0x4
 2362 002a 16       		.uleb128 0x16
 2363 002b 00       		.byte	0
 2364 002c 03       		.uleb128 0x3
 2365 002d 0E       		.uleb128 0xe
 2366 002e 3A       		.uleb128 0x3a
 2367 002f 0B       		.uleb128 0xb
 2368 0030 3B       		.uleb128 0x3b
 2369 0031 05       		.uleb128 0x5
 2370 0032 49       		.uleb128 0x49
 2371 0033 13       		.uleb128 0x13
 2372 0034 00       		.byte	0
 2373 0035 00       		.byte	0
 2374 0036 05       		.uleb128 0x5
 2375 0037 35       		.uleb128 0x35
 2376 0038 00       		.byte	0
 2377 0039 49       		.uleb128 0x49
 2378 003a 13       		.uleb128 0x13
 2379 003b 00       		.byte	0
 2380 003c 00       		.byte	0
 2381 003d 06       		.uleb128 0x6
 2382 003e 0F       		.uleb128 0xf
 2383 003f 00       		.byte	0
 2384 0040 0B       		.uleb128 0xb
 2385 0041 0B       		.uleb128 0xb
 2386 0042 49       		.uleb128 0x49
 2387 0043 13       		.uleb128 0x13
 2388 0044 00       		.byte	0
 2389 0045 00       		.byte	0
 2390 0046 07       		.uleb128 0x7
 2391 0047 15       		.uleb128 0x15
 2392 0048 00       		.byte	0
 2393 0049 27       		.uleb128 0x27
 2394 004a 19       		.uleb128 0x19
 2395 004b 00       		.byte	0
 2396 004c 00       		.byte	0
 2397 004d 08       		.uleb128 0x8
 2398 004e 0F       		.uleb128 0xf
 2399 004f 00       		.byte	0
 2400 0050 0B       		.uleb128 0xb
 2401 0051 0B       		.uleb128 0xb
 2402 0052 00       		.byte	0
 2403 0053 00       		.byte	0
 2404 0054 09       		.uleb128 0x9
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 73


 2405 0055 16       		.uleb128 0x16
 2406 0056 00       		.byte	0
 2407 0057 03       		.uleb128 0x3
 2408 0058 0E       		.uleb128 0xe
 2409 0059 3A       		.uleb128 0x3a
 2410 005a 0B       		.uleb128 0xb
 2411 005b 3B       		.uleb128 0x3b
 2412 005c 0B       		.uleb128 0xb
 2413 005d 49       		.uleb128 0x49
 2414 005e 13       		.uleb128 0x13
 2415 005f 00       		.byte	0
 2416 0060 00       		.byte	0
 2417 0061 0A       		.uleb128 0xa
 2418 0062 13       		.uleb128 0x13
 2419 0063 01       		.byte	0x1
 2420 0064 0B       		.uleb128 0xb
 2421 0065 0B       		.uleb128 0xb
 2422 0066 3A       		.uleb128 0x3a
 2423 0067 0B       		.uleb128 0xb
 2424 0068 3B       		.uleb128 0x3b
 2425 0069 0B       		.uleb128 0xb
 2426 006a 01       		.uleb128 0x1
 2427 006b 13       		.uleb128 0x13
 2428 006c 00       		.byte	0
 2429 006d 00       		.byte	0
 2430 006e 0B       		.uleb128 0xb
 2431 006f 0D       		.uleb128 0xd
 2432 0070 00       		.byte	0
 2433 0071 03       		.uleb128 0x3
 2434 0072 0E       		.uleb128 0xe
 2435 0073 3A       		.uleb128 0x3a
 2436 0074 0B       		.uleb128 0xb
 2437 0075 3B       		.uleb128 0x3b
 2438 0076 0B       		.uleb128 0xb
 2439 0077 49       		.uleb128 0x49
 2440 0078 13       		.uleb128 0x13
 2441 0079 38       		.uleb128 0x38
 2442 007a 0B       		.uleb128 0xb
 2443 007b 00       		.byte	0
 2444 007c 00       		.byte	0
 2445 007d 0C       		.uleb128 0xc
 2446 007e 26       		.uleb128 0x26
 2447 007f 00       		.byte	0
 2448 0080 49       		.uleb128 0x49
 2449 0081 13       		.uleb128 0x13
 2450 0082 00       		.byte	0
 2451 0083 00       		.byte	0
 2452 0084 0D       		.uleb128 0xd
 2453 0085 04       		.uleb128 0x4
 2454 0086 01       		.byte	0x1
 2455 0087 0B       		.uleb128 0xb
 2456 0088 0B       		.uleb128 0xb
 2457 0089 3A       		.uleb128 0x3a
 2458 008a 0B       		.uleb128 0xb
 2459 008b 3B       		.uleb128 0x3b
 2460 008c 0B       		.uleb128 0xb
 2461 008d 01       		.uleb128 0x1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 74


 2462 008e 13       		.uleb128 0x13
 2463 008f 00       		.byte	0
 2464 0090 00       		.byte	0
 2465 0091 0E       		.uleb128 0xe
 2466 0092 28       		.uleb128 0x28
 2467 0093 00       		.byte	0
 2468 0094 03       		.uleb128 0x3
 2469 0095 0E       		.uleb128 0xe
 2470 0096 1C       		.uleb128 0x1c
 2471 0097 0D       		.uleb128 0xd
 2472 0098 00       		.byte	0
 2473 0099 00       		.byte	0
 2474 009a 0F       		.uleb128 0xf
 2475 009b 01       		.uleb128 0x1
 2476 009c 01       		.byte	0x1
 2477 009d 49       		.uleb128 0x49
 2478 009e 13       		.uleb128 0x13
 2479 009f 01       		.uleb128 0x1
 2480 00a0 13       		.uleb128 0x13
 2481 00a1 00       		.byte	0
 2482 00a2 00       		.byte	0
 2483 00a3 10       		.uleb128 0x10
 2484 00a4 21       		.uleb128 0x21
 2485 00a5 00       		.byte	0
 2486 00a6 49       		.uleb128 0x49
 2487 00a7 13       		.uleb128 0x13
 2488 00a8 2F       		.uleb128 0x2f
 2489 00a9 0B       		.uleb128 0xb
 2490 00aa 00       		.byte	0
 2491 00ab 00       		.byte	0
 2492 00ac 11       		.uleb128 0x11
 2493 00ad 0D       		.uleb128 0xd
 2494 00ae 00       		.byte	0
 2495 00af 03       		.uleb128 0x3
 2496 00b0 0E       		.uleb128 0xe
 2497 00b1 3A       		.uleb128 0x3a
 2498 00b2 0B       		.uleb128 0xb
 2499 00b3 3B       		.uleb128 0x3b
 2500 00b4 05       		.uleb128 0x5
 2501 00b5 49       		.uleb128 0x49
 2502 00b6 13       		.uleb128 0x13
 2503 00b7 38       		.uleb128 0x38
 2504 00b8 0B       		.uleb128 0xb
 2505 00b9 00       		.byte	0
 2506 00ba 00       		.byte	0
 2507 00bb 12       		.uleb128 0x12
 2508 00bc 13       		.uleb128 0x13
 2509 00bd 01       		.byte	0x1
 2510 00be 0B       		.uleb128 0xb
 2511 00bf 0B       		.uleb128 0xb
 2512 00c0 3A       		.uleb128 0x3a
 2513 00c1 0B       		.uleb128 0xb
 2514 00c2 3B       		.uleb128 0x3b
 2515 00c3 05       		.uleb128 0x5
 2516 00c4 01       		.uleb128 0x1
 2517 00c5 13       		.uleb128 0x13
 2518 00c6 00       		.byte	0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 75


 2519 00c7 00       		.byte	0
 2520 00c8 13       		.uleb128 0x13
 2521 00c9 0D       		.uleb128 0xd
 2522 00ca 00       		.byte	0
 2523 00cb 03       		.uleb128 0x3
 2524 00cc 08       		.uleb128 0x8
 2525 00cd 3A       		.uleb128 0x3a
 2526 00ce 0B       		.uleb128 0xb
 2527 00cf 3B       		.uleb128 0x3b
 2528 00d0 05       		.uleb128 0x5
 2529 00d1 49       		.uleb128 0x49
 2530 00d2 13       		.uleb128 0x13
 2531 00d3 38       		.uleb128 0x38
 2532 00d4 0B       		.uleb128 0xb
 2533 00d5 00       		.byte	0
 2534 00d6 00       		.byte	0
 2535 00d7 14       		.uleb128 0x14
 2536 00d8 26       		.uleb128 0x26
 2537 00d9 00       		.byte	0
 2538 00da 00       		.byte	0
 2539 00db 00       		.byte	0
 2540 00dc 15       		.uleb128 0x15
 2541 00dd 2E       		.uleb128 0x2e
 2542 00de 00       		.byte	0
 2543 00df 3F       		.uleb128 0x3f
 2544 00e0 19       		.uleb128 0x19
 2545 00e1 03       		.uleb128 0x3
 2546 00e2 0E       		.uleb128 0xe
 2547 00e3 3A       		.uleb128 0x3a
 2548 00e4 0B       		.uleb128 0xb
 2549 00e5 3B       		.uleb128 0x3b
 2550 00e6 0B       		.uleb128 0xb
 2551 00e7 27       		.uleb128 0x27
 2552 00e8 19       		.uleb128 0x19
 2553 00e9 49       		.uleb128 0x49
 2554 00ea 13       		.uleb128 0x13
 2555 00eb 11       		.uleb128 0x11
 2556 00ec 01       		.uleb128 0x1
 2557 00ed 12       		.uleb128 0x12
 2558 00ee 06       		.uleb128 0x6
 2559 00ef 40       		.uleb128 0x40
 2560 00f0 18       		.uleb128 0x18
 2561 00f1 9742     		.uleb128 0x2117
 2562 00f3 19       		.uleb128 0x19
 2563 00f4 00       		.byte	0
 2564 00f5 00       		.byte	0
 2565 00f6 16       		.uleb128 0x16
 2566 00f7 2E       		.uleb128 0x2e
 2567 00f8 01       		.byte	0x1
 2568 00f9 3F       		.uleb128 0x3f
 2569 00fa 19       		.uleb128 0x19
 2570 00fb 03       		.uleb128 0x3
 2571 00fc 0E       		.uleb128 0xe
 2572 00fd 3A       		.uleb128 0x3a
 2573 00fe 0B       		.uleb128 0xb
 2574 00ff 3B       		.uleb128 0x3b
 2575 0100 0B       		.uleb128 0xb
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 76


 2576 0101 27       		.uleb128 0x27
 2577 0102 19       		.uleb128 0x19
 2578 0103 49       		.uleb128 0x49
 2579 0104 13       		.uleb128 0x13
 2580 0105 11       		.uleb128 0x11
 2581 0106 01       		.uleb128 0x1
 2582 0107 12       		.uleb128 0x12
 2583 0108 06       		.uleb128 0x6
 2584 0109 40       		.uleb128 0x40
 2585 010a 18       		.uleb128 0x18
 2586 010b 9742     		.uleb128 0x2117
 2587 010d 19       		.uleb128 0x19
 2588 010e 01       		.uleb128 0x1
 2589 010f 13       		.uleb128 0x13
 2590 0110 00       		.byte	0
 2591 0111 00       		.byte	0
 2592 0112 17       		.uleb128 0x17
 2593 0113 05       		.uleb128 0x5
 2594 0114 00       		.byte	0
 2595 0115 03       		.uleb128 0x3
 2596 0116 0E       		.uleb128 0xe
 2597 0117 3A       		.uleb128 0x3a
 2598 0118 0B       		.uleb128 0xb
 2599 0119 3B       		.uleb128 0x3b
 2600 011a 0B       		.uleb128 0xb
 2601 011b 49       		.uleb128 0x49
 2602 011c 13       		.uleb128 0x13
 2603 011d 02       		.uleb128 0x2
 2604 011e 17       		.uleb128 0x17
 2605 011f 00       		.byte	0
 2606 0120 00       		.byte	0
 2607 0121 18       		.uleb128 0x18
 2608 0122 34       		.uleb128 0x34
 2609 0123 00       		.byte	0
 2610 0124 03       		.uleb128 0x3
 2611 0125 0E       		.uleb128 0xe
 2612 0126 3A       		.uleb128 0x3a
 2613 0127 0B       		.uleb128 0xb
 2614 0128 3B       		.uleb128 0x3b
 2615 0129 0B       		.uleb128 0xb
 2616 012a 49       		.uleb128 0x49
 2617 012b 13       		.uleb128 0x13
 2618 012c 02       		.uleb128 0x2
 2619 012d 17       		.uleb128 0x17
 2620 012e 00       		.byte	0
 2621 012f 00       		.byte	0
 2622 0130 19       		.uleb128 0x19
 2623 0131 898201   		.uleb128 0x4109
 2624 0134 00       		.byte	0
 2625 0135 11       		.uleb128 0x11
 2626 0136 01       		.uleb128 0x1
 2627 0137 31       		.uleb128 0x31
 2628 0138 13       		.uleb128 0x13
 2629 0139 00       		.byte	0
 2630 013a 00       		.byte	0
 2631 013b 1A       		.uleb128 0x1a
 2632 013c 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 77


 2633 013d 01       		.byte	0x1
 2634 013e 3F       		.uleb128 0x3f
 2635 013f 19       		.uleb128 0x19
 2636 0140 03       		.uleb128 0x3
 2637 0141 0E       		.uleb128 0xe
 2638 0142 3A       		.uleb128 0x3a
 2639 0143 0B       		.uleb128 0xb
 2640 0144 3B       		.uleb128 0x3b
 2641 0145 05       		.uleb128 0x5
 2642 0146 27       		.uleb128 0x27
 2643 0147 19       		.uleb128 0x19
 2644 0148 49       		.uleb128 0x49
 2645 0149 13       		.uleb128 0x13
 2646 014a 11       		.uleb128 0x11
 2647 014b 01       		.uleb128 0x1
 2648 014c 12       		.uleb128 0x12
 2649 014d 06       		.uleb128 0x6
 2650 014e 40       		.uleb128 0x40
 2651 014f 18       		.uleb128 0x18
 2652 0150 9742     		.uleb128 0x2117
 2653 0152 19       		.uleb128 0x19
 2654 0153 01       		.uleb128 0x1
 2655 0154 13       		.uleb128 0x13
 2656 0155 00       		.byte	0
 2657 0156 00       		.byte	0
 2658 0157 1B       		.uleb128 0x1b
 2659 0158 34       		.uleb128 0x34
 2660 0159 00       		.byte	0
 2661 015a 03       		.uleb128 0x3
 2662 015b 0E       		.uleb128 0xe
 2663 015c 3A       		.uleb128 0x3a
 2664 015d 0B       		.uleb128 0xb
 2665 015e 3B       		.uleb128 0x3b
 2666 015f 05       		.uleb128 0x5
 2667 0160 49       		.uleb128 0x49
 2668 0161 13       		.uleb128 0x13
 2669 0162 02       		.uleb128 0x2
 2670 0163 17       		.uleb128 0x17
 2671 0164 00       		.byte	0
 2672 0165 00       		.byte	0
 2673 0166 1C       		.uleb128 0x1c
 2674 0167 34       		.uleb128 0x34
 2675 0168 00       		.byte	0
 2676 0169 03       		.uleb128 0x3
 2677 016a 0E       		.uleb128 0xe
 2678 016b 3A       		.uleb128 0x3a
 2679 016c 0B       		.uleb128 0xb
 2680 016d 3B       		.uleb128 0x3b
 2681 016e 05       		.uleb128 0x5
 2682 016f 49       		.uleb128 0x49
 2683 0170 13       		.uleb128 0x13
 2684 0171 1C       		.uleb128 0x1c
 2685 0172 0B       		.uleb128 0xb
 2686 0173 00       		.byte	0
 2687 0174 00       		.byte	0
 2688 0175 1D       		.uleb128 0x1d
 2689 0176 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 78


 2690 0177 01       		.byte	0x1
 2691 0178 3F       		.uleb128 0x3f
 2692 0179 19       		.uleb128 0x19
 2693 017a 03       		.uleb128 0x3
 2694 017b 0E       		.uleb128 0xe
 2695 017c 3A       		.uleb128 0x3a
 2696 017d 0B       		.uleb128 0xb
 2697 017e 3B       		.uleb128 0x3b
 2698 017f 05       		.uleb128 0x5
 2699 0180 27       		.uleb128 0x27
 2700 0181 19       		.uleb128 0x19
 2701 0182 11       		.uleb128 0x11
 2702 0183 01       		.uleb128 0x1
 2703 0184 12       		.uleb128 0x12
 2704 0185 06       		.uleb128 0x6
 2705 0186 40       		.uleb128 0x40
 2706 0187 18       		.uleb128 0x18
 2707 0188 9742     		.uleb128 0x2117
 2708 018a 19       		.uleb128 0x19
 2709 018b 01       		.uleb128 0x1
 2710 018c 13       		.uleb128 0x13
 2711 018d 00       		.byte	0
 2712 018e 00       		.byte	0
 2713 018f 1E       		.uleb128 0x1e
 2714 0190 05       		.uleb128 0x5
 2715 0191 00       		.byte	0
 2716 0192 03       		.uleb128 0x3
 2717 0193 0E       		.uleb128 0xe
 2718 0194 3A       		.uleb128 0x3a
 2719 0195 0B       		.uleb128 0xb
 2720 0196 3B       		.uleb128 0x3b
 2721 0197 05       		.uleb128 0x5
 2722 0198 49       		.uleb128 0x49
 2723 0199 13       		.uleb128 0x13
 2724 019a 02       		.uleb128 0x2
 2725 019b 17       		.uleb128 0x17
 2726 019c 00       		.byte	0
 2727 019d 00       		.byte	0
 2728 019e 1F       		.uleb128 0x1f
 2729 019f 898201   		.uleb128 0x4109
 2730 01a2 01       		.byte	0x1
 2731 01a3 11       		.uleb128 0x11
 2732 01a4 01       		.uleb128 0x1
 2733 01a5 31       		.uleb128 0x31
 2734 01a6 13       		.uleb128 0x13
 2735 01a7 00       		.byte	0
 2736 01a8 00       		.byte	0
 2737 01a9 20       		.uleb128 0x20
 2738 01aa 8A8201   		.uleb128 0x410a
 2739 01ad 00       		.byte	0
 2740 01ae 02       		.uleb128 0x2
 2741 01af 18       		.uleb128 0x18
 2742 01b0 9142     		.uleb128 0x2111
 2743 01b2 18       		.uleb128 0x18
 2744 01b3 00       		.byte	0
 2745 01b4 00       		.byte	0
 2746 01b5 21       		.uleb128 0x21
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 79


 2747 01b6 2E       		.uleb128 0x2e
 2748 01b7 00       		.byte	0
 2749 01b8 3F       		.uleb128 0x3f
 2750 01b9 19       		.uleb128 0x19
 2751 01ba 03       		.uleb128 0x3
 2752 01bb 0E       		.uleb128 0xe
 2753 01bc 3A       		.uleb128 0x3a
 2754 01bd 0B       		.uleb128 0xb
 2755 01be 3B       		.uleb128 0x3b
 2756 01bf 05       		.uleb128 0x5
 2757 01c0 27       		.uleb128 0x27
 2758 01c1 19       		.uleb128 0x19
 2759 01c2 11       		.uleb128 0x11
 2760 01c3 01       		.uleb128 0x1
 2761 01c4 12       		.uleb128 0x12
 2762 01c5 06       		.uleb128 0x6
 2763 01c6 40       		.uleb128 0x40
 2764 01c7 18       		.uleb128 0x18
 2765 01c8 9742     		.uleb128 0x2117
 2766 01ca 19       		.uleb128 0x19
 2767 01cb 00       		.byte	0
 2768 01cc 00       		.byte	0
 2769 01cd 22       		.uleb128 0x22
 2770 01ce 898201   		.uleb128 0x4109
 2771 01d1 01       		.byte	0x1
 2772 01d2 11       		.uleb128 0x11
 2773 01d3 01       		.uleb128 0x1
 2774 01d4 31       		.uleb128 0x31
 2775 01d5 13       		.uleb128 0x13
 2776 01d6 01       		.uleb128 0x1
 2777 01d7 13       		.uleb128 0x13
 2778 01d8 00       		.byte	0
 2779 01d9 00       		.byte	0
 2780 01da 23       		.uleb128 0x23
 2781 01db 2E       		.uleb128 0x2e
 2782 01dc 01       		.byte	0x1
 2783 01dd 3F       		.uleb128 0x3f
 2784 01de 19       		.uleb128 0x19
 2785 01df 03       		.uleb128 0x3
 2786 01e0 0E       		.uleb128 0xe
 2787 01e1 3A       		.uleb128 0x3a
 2788 01e2 0B       		.uleb128 0xb
 2789 01e3 3B       		.uleb128 0x3b
 2790 01e4 05       		.uleb128 0x5
 2791 01e5 27       		.uleb128 0x27
 2792 01e6 19       		.uleb128 0x19
 2793 01e7 49       		.uleb128 0x49
 2794 01e8 13       		.uleb128 0x13
 2795 01e9 11       		.uleb128 0x11
 2796 01ea 01       		.uleb128 0x1
 2797 01eb 12       		.uleb128 0x12
 2798 01ec 06       		.uleb128 0x6
 2799 01ed 40       		.uleb128 0x40
 2800 01ee 18       		.uleb128 0x18
 2801 01ef 9642     		.uleb128 0x2116
 2802 01f1 19       		.uleb128 0x19
 2803 01f2 01       		.uleb128 0x1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 80


 2804 01f3 13       		.uleb128 0x13
 2805 01f4 00       		.byte	0
 2806 01f5 00       		.byte	0
 2807 01f6 24       		.uleb128 0x24
 2808 01f7 34       		.uleb128 0x34
 2809 01f8 00       		.byte	0
 2810 01f9 03       		.uleb128 0x3
 2811 01fa 08       		.uleb128 0x8
 2812 01fb 3A       		.uleb128 0x3a
 2813 01fc 0B       		.uleb128 0xb
 2814 01fd 3B       		.uleb128 0x3b
 2815 01fe 05       		.uleb128 0x5
 2816 01ff 49       		.uleb128 0x49
 2817 0200 13       		.uleb128 0x13
 2818 0201 02       		.uleb128 0x2
 2819 0202 17       		.uleb128 0x17
 2820 0203 00       		.byte	0
 2821 0204 00       		.byte	0
 2822 0205 25       		.uleb128 0x25
 2823 0206 34       		.uleb128 0x34
 2824 0207 00       		.byte	0
 2825 0208 03       		.uleb128 0x3
 2826 0209 0E       		.uleb128 0xe
 2827 020a 3A       		.uleb128 0x3a
 2828 020b 0B       		.uleb128 0xb
 2829 020c 3B       		.uleb128 0x3b
 2830 020d 05       		.uleb128 0x5
 2831 020e 49       		.uleb128 0x49
 2832 020f 13       		.uleb128 0x13
 2833 0210 02       		.uleb128 0x2
 2834 0211 18       		.uleb128 0x18
 2835 0212 00       		.byte	0
 2836 0213 00       		.byte	0
 2837 0214 26       		.uleb128 0x26
 2838 0215 34       		.uleb128 0x34
 2839 0216 00       		.byte	0
 2840 0217 03       		.uleb128 0x3
 2841 0218 0E       		.uleb128 0xe
 2842 0219 3A       		.uleb128 0x3a
 2843 021a 0B       		.uleb128 0xb
 2844 021b 3B       		.uleb128 0x3b
 2845 021c 05       		.uleb128 0x5
 2846 021d 49       		.uleb128 0x49
 2847 021e 13       		.uleb128 0x13
 2848 021f 3F       		.uleb128 0x3f
 2849 0220 19       		.uleb128 0x19
 2850 0221 3C       		.uleb128 0x3c
 2851 0222 19       		.uleb128 0x19
 2852 0223 00       		.byte	0
 2853 0224 00       		.byte	0
 2854 0225 27       		.uleb128 0x27
 2855 0226 34       		.uleb128 0x34
 2856 0227 00       		.byte	0
 2857 0228 03       		.uleb128 0x3
 2858 0229 0E       		.uleb128 0xe
 2859 022a 3A       		.uleb128 0x3a
 2860 022b 0B       		.uleb128 0xb
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 81


 2861 022c 3B       		.uleb128 0x3b
 2862 022d 0B       		.uleb128 0xb
 2863 022e 49       		.uleb128 0x49
 2864 022f 13       		.uleb128 0x13
 2865 0230 3F       		.uleb128 0x3f
 2866 0231 19       		.uleb128 0x19
 2867 0232 02       		.uleb128 0x2
 2868 0233 18       		.uleb128 0x18
 2869 0234 00       		.byte	0
 2870 0235 00       		.byte	0
 2871 0236 28       		.uleb128 0x28
 2872 0237 2E       		.uleb128 0x2e
 2873 0238 01       		.byte	0x1
 2874 0239 3F       		.uleb128 0x3f
 2875 023a 19       		.uleb128 0x19
 2876 023b 03       		.uleb128 0x3
 2877 023c 0E       		.uleb128 0xe
 2878 023d 3A       		.uleb128 0x3a
 2879 023e 0B       		.uleb128 0xb
 2880 023f 3B       		.uleb128 0x3b
 2881 0240 0B       		.uleb128 0xb
 2882 0241 27       		.uleb128 0x27
 2883 0242 19       		.uleb128 0x19
 2884 0243 3C       		.uleb128 0x3c
 2885 0244 19       		.uleb128 0x19
 2886 0245 01       		.uleb128 0x1
 2887 0246 13       		.uleb128 0x13
 2888 0247 00       		.byte	0
 2889 0248 00       		.byte	0
 2890 0249 29       		.uleb128 0x29
 2891 024a 05       		.uleb128 0x5
 2892 024b 00       		.byte	0
 2893 024c 49       		.uleb128 0x49
 2894 024d 13       		.uleb128 0x13
 2895 024e 00       		.byte	0
 2896 024f 00       		.byte	0
 2897 0250 2A       		.uleb128 0x2a
 2898 0251 2E       		.uleb128 0x2e
 2899 0252 00       		.byte	0
 2900 0253 3F       		.uleb128 0x3f
 2901 0254 19       		.uleb128 0x19
 2902 0255 03       		.uleb128 0x3
 2903 0256 0E       		.uleb128 0xe
 2904 0257 3A       		.uleb128 0x3a
 2905 0258 0B       		.uleb128 0xb
 2906 0259 3B       		.uleb128 0x3b
 2907 025a 0B       		.uleb128 0xb
 2908 025b 27       		.uleb128 0x27
 2909 025c 19       		.uleb128 0x19
 2910 025d 3C       		.uleb128 0x3c
 2911 025e 19       		.uleb128 0x19
 2912 025f 00       		.byte	0
 2913 0260 00       		.byte	0
 2914 0261 2B       		.uleb128 0x2b
 2915 0262 2E       		.uleb128 0x2e
 2916 0263 00       		.byte	0
 2917 0264 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 82


 2918 0265 19       		.uleb128 0x19
 2919 0266 03       		.uleb128 0x3
 2920 0267 0E       		.uleb128 0xe
 2921 0268 3A       		.uleb128 0x3a
 2922 0269 0B       		.uleb128 0xb
 2923 026a 3B       		.uleb128 0x3b
 2924 026b 0B       		.uleb128 0xb
 2925 026c 27       		.uleb128 0x27
 2926 026d 19       		.uleb128 0x19
 2927 026e 49       		.uleb128 0x49
 2928 026f 13       		.uleb128 0x13
 2929 0270 3C       		.uleb128 0x3c
 2930 0271 19       		.uleb128 0x19
 2931 0272 00       		.byte	0
 2932 0273 00       		.byte	0
 2933 0274 2C       		.uleb128 0x2c
 2934 0275 2E       		.uleb128 0x2e
 2935 0276 01       		.byte	0x1
 2936 0277 3F       		.uleb128 0x3f
 2937 0278 19       		.uleb128 0x19
 2938 0279 03       		.uleb128 0x3
 2939 027a 0E       		.uleb128 0xe
 2940 027b 3A       		.uleb128 0x3a
 2941 027c 0B       		.uleb128 0xb
 2942 027d 3B       		.uleb128 0x3b
 2943 027e 0B       		.uleb128 0xb
 2944 027f 27       		.uleb128 0x27
 2945 0280 19       		.uleb128 0x19
 2946 0281 49       		.uleb128 0x49
 2947 0282 13       		.uleb128 0x13
 2948 0283 3C       		.uleb128 0x3c
 2949 0284 19       		.uleb128 0x19
 2950 0285 01       		.uleb128 0x1
 2951 0286 13       		.uleb128 0x13
 2952 0287 00       		.byte	0
 2953 0288 00       		.byte	0
 2954 0289 2D       		.uleb128 0x2d
 2955 028a 2E       		.uleb128 0x2e
 2956 028b 01       		.byte	0x1
 2957 028c 3F       		.uleb128 0x3f
 2958 028d 19       		.uleb128 0x19
 2959 028e 03       		.uleb128 0x3
 2960 028f 0E       		.uleb128 0xe
 2961 0290 3A       		.uleb128 0x3a
 2962 0291 0B       		.uleb128 0xb
 2963 0292 3B       		.uleb128 0x3b
 2964 0293 0B       		.uleb128 0xb
 2965 0294 27       		.uleb128 0x27
 2966 0295 19       		.uleb128 0x19
 2967 0296 49       		.uleb128 0x49
 2968 0297 13       		.uleb128 0x13
 2969 0298 3C       		.uleb128 0x3c
 2970 0299 19       		.uleb128 0x19
 2971 029a 00       		.byte	0
 2972 029b 00       		.byte	0
 2973 029c 00       		.byte	0
 2974              		.section	.debug_loc,"",%progbits
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 83


 2975              	.Ldebug_loc0:
 2976              	.LLST0:
 2977 0000 00000000 		.4byte	.LVL0
 2978 0004 3D000000 		.4byte	.LVL2-1
 2979 0008 0100     		.2byte	0x1
 2980 000a 50       		.byte	0x50
 2981 000b 3D000000 		.4byte	.LVL2-1
 2982 000f 48000000 		.4byte	.LFE2
 2983 0013 0400     		.2byte	0x4
 2984 0015 F3       		.byte	0xf3
 2985 0016 01       		.uleb128 0x1
 2986 0017 50       		.byte	0x50
 2987 0018 9F       		.byte	0x9f
 2988 0019 00000000 		.4byte	0
 2989 001d 00000000 		.4byte	0
 2990              	.LLST1:
 2991 0021 36000000 		.4byte	.LVL1
 2992 0025 40000000 		.4byte	.LVL3
 2993 0029 0100     		.2byte	0x1
 2994 002b 54       		.byte	0x54
 2995 002c 40000000 		.4byte	.LVL3
 2996 0030 48000000 		.4byte	.LFE2
 2997 0034 0100     		.2byte	0x1
 2998 0036 50       		.byte	0x50
 2999 0037 00000000 		.4byte	0
 3000 003b 00000000 		.4byte	0
 3001              	.LLST2:
 3002 003f 02000000 		.4byte	.LVL4
 3003 0043 14000000 		.4byte	.LVL6
 3004 0047 0200     		.2byte	0x2
 3005 0049 30       		.byte	0x30
 3006 004a 9F       		.byte	0x9f
 3007 004b 14000000 		.4byte	.LVL6
 3008 004f 1C000000 		.4byte	.LFE3
 3009 0053 0100     		.2byte	0x1
 3010 0055 50       		.byte	0x50
 3011 0056 00000000 		.4byte	0
 3012 005a 00000000 		.4byte	0
 3013              	.LLST3:
 3014 005e 02000000 		.4byte	.LVL7
 3015 0062 16000000 		.4byte	.LVL8
 3016 0066 0300     		.2byte	0x3
 3017 0068 09       		.byte	0x9
 3018 0069 FF       		.byte	0xff
 3019 006a 9F       		.byte	0x9f
 3020 006b 16000000 		.4byte	.LVL8
 3021 006f 1A000000 		.4byte	.LVL9
 3022 0073 0100     		.2byte	0x1
 3023 0075 50       		.byte	0x50
 3024 0076 20000000 		.4byte	.LVL10
 3025 007a 2D000000 		.4byte	.LVL11-1
 3026 007e 0100     		.2byte	0x1
 3027 0080 50       		.byte	0x50
 3028 0081 2E000000 		.4byte	.LVL11
 3029 0085 44000000 		.4byte	.LVL13
 3030 0089 0100     		.2byte	0x1
 3031 008b 50       		.byte	0x50
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 84


 3032 008c 44000000 		.4byte	.LVL13
 3033 0090 46000000 		.4byte	.LVL14
 3034 0094 0300     		.2byte	0x3
 3035 0096 09       		.byte	0x9
 3036 0097 FF       		.byte	0xff
 3037 0098 9F       		.byte	0x9f
 3038 0099 46000000 		.4byte	.LVL14
 3039 009d 50000000 		.4byte	.LFE4
 3040 00a1 0100     		.2byte	0x1
 3041 00a3 50       		.byte	0x50
 3042 00a4 00000000 		.4byte	0
 3043 00a8 00000000 		.4byte	0
 3044              	.LLST4:
 3045 00ac 00000000 		.4byte	.LVL17
 3046 00b0 06000000 		.4byte	.LVL18
 3047 00b4 0100     		.2byte	0x1
 3048 00b6 50       		.byte	0x50
 3049 00b7 06000000 		.4byte	.LVL18
 3050 00bb 90000000 		.4byte	.LFE6
 3051 00bf 0400     		.2byte	0x4
 3052 00c1 F3       		.byte	0xf3
 3053 00c2 01       		.uleb128 0x1
 3054 00c3 50       		.byte	0x50
 3055 00c4 9F       		.byte	0x9f
 3056 00c5 00000000 		.4byte	0
 3057 00c9 00000000 		.4byte	0
 3058              	.LLST5:
 3059 00cd 00000000 		.4byte	.LVL17
 3060 00d1 10000000 		.4byte	.LVL19
 3061 00d5 0100     		.2byte	0x1
 3062 00d7 51       		.byte	0x51
 3063 00d8 10000000 		.4byte	.LVL19
 3064 00dc 90000000 		.4byte	.LFE6
 3065 00e0 0400     		.2byte	0x4
 3066 00e2 F3       		.byte	0xf3
 3067 00e3 01       		.uleb128 0x1
 3068 00e4 51       		.byte	0x51
 3069 00e5 9F       		.byte	0x9f
 3070 00e6 00000000 		.4byte	0
 3071 00ea 00000000 		.4byte	0
 3072              	.LLST6:
 3073 00ee 00000000 		.4byte	.LVL17
 3074 00f2 35000000 		.4byte	.LVL23-1
 3075 00f6 0100     		.2byte	0x1
 3076 00f8 52       		.byte	0x52
 3077 00f9 35000000 		.4byte	.LVL23-1
 3078 00fd 5E000000 		.4byte	.LVL29
 3079 0101 0400     		.2byte	0x4
 3080 0103 F3       		.byte	0xf3
 3081 0104 01       		.uleb128 0x1
 3082 0105 52       		.byte	0x52
 3083 0106 9F       		.byte	0x9f
 3084 0107 5E000000 		.4byte	.LVL29
 3085 010b 61000000 		.4byte	.LVL30-1
 3086 010f 0100     		.2byte	0x1
 3087 0111 52       		.byte	0x52
 3088 0112 61000000 		.4byte	.LVL30-1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 85


 3089 0116 82000000 		.4byte	.LVL34
 3090 011a 0400     		.2byte	0x4
 3091 011c F3       		.byte	0xf3
 3092 011d 01       		.uleb128 0x1
 3093 011e 52       		.byte	0x52
 3094 011f 9F       		.byte	0x9f
 3095 0120 82000000 		.4byte	.LVL34
 3096 0124 87000000 		.4byte	.LVL35-1
 3097 0128 0100     		.2byte	0x1
 3098 012a 52       		.byte	0x52
 3099 012b 87000000 		.4byte	.LVL35-1
 3100 012f 90000000 		.4byte	.LFE6
 3101 0133 0400     		.2byte	0x4
 3102 0135 F3       		.byte	0xf3
 3103 0136 01       		.uleb128 0x1
 3104 0137 52       		.byte	0x52
 3105 0138 9F       		.byte	0x9f
 3106 0139 00000000 		.4byte	0
 3107 013d 00000000 		.4byte	0
 3108              	.LLST7:
 3109 0141 14000000 		.4byte	.LVL20
 3110 0145 88000000 		.4byte	.LVL36
 3111 0149 0100     		.2byte	0x1
 3112 014b 54       		.byte	0x54
 3113 014c 00000000 		.4byte	0
 3114 0150 00000000 		.4byte	0
 3115              	.LLST8:
 3116 0154 3A000000 		.4byte	.LVL24
 3117 0158 48000000 		.4byte	.LVL27
 3118 015c 0100     		.2byte	0x1
 3119 015e 53       		.byte	0x53
 3120 015f 48000000 		.4byte	.LVL27
 3121 0163 5E000000 		.4byte	.LVL29
 3122 0167 0100     		.2byte	0x1
 3123 0169 55       		.byte	0x55
 3124 016a 66000000 		.4byte	.LVL31
 3125 016e 71000000 		.4byte	.LVL33-1
 3126 0172 0100     		.2byte	0x1
 3127 0174 53       		.byte	0x53
 3128 0175 00000000 		.4byte	0
 3129 0179 00000000 		.4byte	0
 3130              	.LLST9:
 3131 017d 36000000 		.4byte	.LVL23
 3132 0181 4D000000 		.4byte	.LVL28-1
 3133 0185 0100     		.2byte	0x1
 3134 0187 50       		.byte	0x50
 3135 0188 62000000 		.4byte	.LVL30
 3136 018c 71000000 		.4byte	.LVL33-1
 3137 0190 0100     		.2byte	0x1
 3138 0192 50       		.byte	0x50
 3139 0193 00000000 		.4byte	0
 3140 0197 00000000 		.4byte	0
 3141              	.LLST10:
 3142 019b 16000000 		.4byte	.LVL21
 3143 019f 88000000 		.4byte	.LVL37
 3144 01a3 0600     		.2byte	0x6
 3145 01a5 76       		.byte	0x76
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 86


 3146 01a6 00       		.sleb128 0
 3147 01a7 08       		.byte	0x8
 3148 01a8 FF       		.byte	0xff
 3149 01a9 1A       		.byte	0x1a
 3150 01aa 9F       		.byte	0x9f
 3151 01ab 00000000 		.4byte	0
 3152 01af 00000000 		.4byte	0
 3153              	.LLST11:
 3154 01b3 18000000 		.4byte	.LVL22
 3155 01b7 46000000 		.4byte	.LVL26
 3156 01bb 0600     		.2byte	0x6
 3157 01bd 75       		.byte	0x75
 3158 01be 00       		.sleb128 0
 3159 01bf 08       		.byte	0x8
 3160 01c0 FF       		.byte	0xff
 3161 01c1 1A       		.byte	0x1a
 3162 01c2 9F       		.byte	0x9f
 3163 01c3 5E000000 		.4byte	.LVL29
 3164 01c7 88000000 		.4byte	.LVL35
 3165 01cb 0600     		.2byte	0x6
 3166 01cd 75       		.byte	0x75
 3167 01ce 00       		.sleb128 0
 3168 01cf 08       		.byte	0x8
 3169 01d0 FF       		.byte	0xff
 3170 01d1 1A       		.byte	0x1a
 3171 01d2 9F       		.byte	0x9f
 3172 01d3 00000000 		.4byte	0
 3173 01d7 00000000 		.4byte	0
 3174              	.LLST12:
 3175 01db 00000000 		.4byte	.LVL38
 3176 01df 05000000 		.4byte	.LVL39-1
 3177 01e3 0100     		.2byte	0x1
 3178 01e5 50       		.byte	0x50
 3179 01e6 05000000 		.4byte	.LVL39-1
 3180 01ea 08000000 		.4byte	.LFE8
 3181 01ee 0400     		.2byte	0x4
 3182 01f0 F3       		.byte	0xf3
 3183 01f1 01       		.uleb128 0x1
 3184 01f2 50       		.byte	0x50
 3185 01f3 9F       		.byte	0x9f
 3186 01f4 00000000 		.4byte	0
 3187 01f8 00000000 		.4byte	0
 3188              	.LLST13:
 3189 01fc 00000000 		.4byte	.LVL40
 3190 0200 08000000 		.4byte	.LVL41
 3191 0204 0100     		.2byte	0x1
 3192 0206 50       		.byte	0x50
 3193 0207 08000000 		.4byte	.LVL41
 3194 020b 0A000000 		.4byte	.LVL42
 3195 020f 0300     		.2byte	0x3
 3196 0211 70       		.byte	0x70
 3197 0212 01       		.sleb128 1
 3198 0213 9F       		.byte	0x9f
 3199 0214 0A000000 		.4byte	.LVL42
 3200 0218 30000000 		.4byte	.LFE9
 3201 021c 0400     		.2byte	0x4
 3202 021e F3       		.byte	0xf3
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 87


 3203 021f 01       		.uleb128 0x1
 3204 0220 50       		.byte	0x50
 3205 0221 9F       		.byte	0x9f
 3206 0222 00000000 		.4byte	0
 3207 0226 00000000 		.4byte	0
 3208              	.LLST14:
 3209 022a 00000000 		.4byte	.LVL43
 3210 022e 0A000000 		.4byte	.LVL47
 3211 0232 0100     		.2byte	0x1
 3212 0234 50       		.byte	0x50
 3213 0235 0A000000 		.4byte	.LVL47
 3214 0239 0C000000 		.4byte	.LVL48
 3215 023d 0300     		.2byte	0x3
 3216 023f 70       		.byte	0x70
 3217 0240 01       		.sleb128 1
 3218 0241 9F       		.byte	0x9f
 3219 0242 0C000000 		.4byte	.LVL48
 3220 0246 14000000 		.4byte	.LFE10
 3221 024a 0400     		.2byte	0x4
 3222 024c F3       		.byte	0xf3
 3223 024d 01       		.uleb128 0x1
 3224 024e 50       		.byte	0x50
 3225 024f 9F       		.byte	0x9f
 3226 0250 00000000 		.4byte	0
 3227 0254 00000000 		.4byte	0
 3228              	.LLST15:
 3229 0258 04000000 		.4byte	.LVL44
 3230 025c 06000000 		.4byte	.LVL45
 3231 0260 0100     		.2byte	0x1
 3232 0262 53       		.byte	0x53
 3233 0263 08000000 		.4byte	.LVL46
 3234 0267 0C000000 		.4byte	.LVL48
 3235 026b 0100     		.2byte	0x1
 3236 026d 53       		.byte	0x53
 3237 026e 0C000000 		.4byte	.LVL48
 3238 0272 14000000 		.4byte	.LFE10
 3239 0276 0100     		.2byte	0x1
 3240 0278 50       		.byte	0x50
 3241 0279 00000000 		.4byte	0
 3242 027d 00000000 		.4byte	0
 3243              	.LLST16:
 3244 0281 00000000 		.4byte	.LVL49
 3245 0285 06000000 		.4byte	.LVL50
 3246 0289 0100     		.2byte	0x1
 3247 028b 50       		.byte	0x50
 3248 028c 06000000 		.4byte	.LVL50
 3249 0290 10000000 		.4byte	.LVL53
 3250 0294 0100     		.2byte	0x1
 3251 0296 54       		.byte	0x54
 3252 0297 10000000 		.4byte	.LVL53
 3253 029b 12000000 		.4byte	.LFE11
 3254 029f 0400     		.2byte	0x4
 3255 02a1 F3       		.byte	0xf3
 3256 02a2 01       		.uleb128 0x1
 3257 02a3 50       		.byte	0x50
 3258 02a4 9F       		.byte	0x9f
 3259 02a5 00000000 		.4byte	0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 88


 3260 02a9 00000000 		.4byte	0
 3261              	.LLST17:
 3262 02ad 00000000 		.4byte	.LVL49
 3263 02b1 09000000 		.4byte	.LVL51-1
 3264 02b5 0100     		.2byte	0x1
 3265 02b7 51       		.byte	0x51
 3266 02b8 09000000 		.4byte	.LVL51-1
 3267 02bc 12000000 		.4byte	.LFE11
 3268 02c0 0400     		.2byte	0x4
 3269 02c2 F3       		.byte	0xf3
 3270 02c3 01       		.uleb128 0x1
 3271 02c4 51       		.byte	0x51
 3272 02c5 9F       		.byte	0x9f
 3273 02c6 00000000 		.4byte	0
 3274 02ca 00000000 		.4byte	0
 3275              	.LLST18:
 3276 02ce 00000000 		.4byte	.LVL54
 3277 02d2 06000000 		.4byte	.LVL55
 3278 02d6 0100     		.2byte	0x1
 3279 02d8 50       		.byte	0x50
 3280 02d9 06000000 		.4byte	.LVL55
 3281 02dd 08000000 		.4byte	.LVL56
 3282 02e1 0400     		.2byte	0x4
 3283 02e3 F3       		.byte	0xf3
 3284 02e4 01       		.uleb128 0x1
 3285 02e5 50       		.byte	0x50
 3286 02e6 9F       		.byte	0x9f
 3287 02e7 08000000 		.4byte	.LVL56
 3288 02eb 0A000000 		.4byte	.LVL57
 3289 02ef 0100     		.2byte	0x1
 3290 02f1 50       		.byte	0x50
 3291 02f2 0A000000 		.4byte	.LVL57
 3292 02f6 0E000000 		.4byte	.LFE12
 3293 02fa 0400     		.2byte	0x4
 3294 02fc F3       		.byte	0xf3
 3295 02fd 01       		.uleb128 0x1
 3296 02fe 50       		.byte	0x50
 3297 02ff 9F       		.byte	0x9f
 3298 0300 00000000 		.4byte	0
 3299 0304 00000000 		.4byte	0
 3300              	.LLST19:
 3301 0308 00000000 		.4byte	.LVL54
 3302 030c 0C000000 		.4byte	.LVL58
 3303 0310 0200     		.2byte	0x2
 3304 0312 30       		.byte	0x30
 3305 0313 9F       		.byte	0x9f
 3306 0314 0C000000 		.4byte	.LVL58
 3307 0318 0E000000 		.4byte	.LFE12
 3308 031c 0100     		.2byte	0x1
 3309 031e 50       		.byte	0x50
 3310 031f 00000000 		.4byte	0
 3311 0323 00000000 		.4byte	0
 3312              	.LLST20:
 3313 0327 02000000 		.4byte	.LVL59
 3314 032b 08000000 		.4byte	.LVL60
 3315 032f 0200     		.2byte	0x2
 3316 0331 30       		.byte	0x30
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 89


 3317 0332 9F       		.byte	0x9f
 3318 0333 08000000 		.4byte	.LVL60
 3319 0337 18000000 		.4byte	.LVL65
 3320 033b 0100     		.2byte	0x1
 3321 033d 55       		.byte	0x55
 3322 033e 18000000 		.4byte	.LVL65
 3323 0342 1A000000 		.4byte	.LFE13
 3324 0346 0100     		.2byte	0x1
 3325 0348 50       		.byte	0x50
 3326 0349 00000000 		.4byte	0
 3327 034d 00000000 		.4byte	0
 3328              	.LLST21:
 3329 0351 02000000 		.4byte	.LVL59
 3330 0355 08000000 		.4byte	.LVL60
 3331 0359 0200     		.2byte	0x2
 3332 035b 30       		.byte	0x30
 3333 035c 9F       		.byte	0x9f
 3334 035d 08000000 		.4byte	.LVL60
 3335 0361 18000000 		.4byte	.LVL64
 3336 0365 0100     		.2byte	0x1
 3337 0367 54       		.byte	0x54
 3338 0368 00000000 		.4byte	0
 3339 036c 00000000 		.4byte	0
 3340              	.LLST22:
 3341 0370 04000000 		.4byte	.LVL66
 3342 0374 2A000000 		.4byte	.LVL69
 3343 0378 0200     		.2byte	0x2
 3344 037a 30       		.byte	0x30
 3345 037b 9F       		.byte	0x9f
 3346 037c 2A000000 		.4byte	.LVL69
 3347 0380 CE000000 		.4byte	.LVL82
 3348 0384 0100     		.2byte	0x1
 3349 0386 56       		.byte	0x56
 3350 0387 CE000000 		.4byte	.LVL82
 3351 038b F4000000 		.4byte	.LFE14
 3352 038f 0100     		.2byte	0x1
 3353 0391 50       		.byte	0x50
 3354 0392 00000000 		.4byte	0
 3355 0396 00000000 		.4byte	0
 3356              	.LLST23:
 3357 039a 24000000 		.4byte	.LVL68
 3358 039e 2A000000 		.4byte	.LVL69
 3359 03a2 0200     		.2byte	0x2
 3360 03a4 30       		.byte	0x30
 3361 03a5 9F       		.byte	0x9f
 3362 03a6 2A000000 		.4byte	.LVL69
 3363 03aa CE000000 		.4byte	.LVL81
 3364 03ae 0100     		.2byte	0x1
 3365 03b0 55       		.byte	0x55
 3366 03b1 00000000 		.4byte	0
 3367 03b5 00000000 		.4byte	0
 3368              	.LLST24:
 3369 03b9 80000000 		.4byte	.LVL74
 3370 03bd B4000000 		.4byte	.LVL76
 3371 03c1 0100     		.2byte	0x1
 3372 03c3 50       		.byte	0x50
 3373 03c4 00000000 		.4byte	0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 90


 3374 03c8 00000000 		.4byte	0
 3375              	.LLST25:
 3376 03cc 36000000 		.4byte	.LVL70
 3377 03d0 C6000000 		.4byte	.LVL80
 3378 03d4 0100     		.2byte	0x1
 3379 03d6 54       		.byte	0x54
 3380 03d7 00000000 		.4byte	0
 3381 03db 00000000 		.4byte	0
 3382              		.section	.debug_aranges,"",%progbits
 3383 0000 84000000 		.4byte	0x84
 3384 0004 0200     		.2byte	0x2
 3385 0006 00000000 		.4byte	.Ldebug_info0
 3386 000a 04       		.byte	0x4
 3387 000b 00       		.byte	0
 3388 000c 0000     		.2byte	0
 3389 000e 0000     		.2byte	0
 3390 0010 00000000 		.4byte	.LFB1
 3391 0014 10000000 		.4byte	.LFE1-.LFB1
 3392 0018 00000000 		.4byte	.LFB2
 3393 001c 48000000 		.4byte	.LFE2-.LFB2
 3394 0020 00000000 		.4byte	.LFB3
 3395 0024 1C000000 		.4byte	.LFE3-.LFB3
 3396 0028 00000000 		.4byte	.LFB4
 3397 002c 50000000 		.4byte	.LFE4-.LFB4
 3398 0030 00000000 		.4byte	.LFB5
 3399 0034 0A000000 		.4byte	.LFE5-.LFB5
 3400 0038 00000000 		.4byte	.LFB6
 3401 003c 90000000 		.4byte	.LFE6-.LFB6
 3402 0040 00000000 		.4byte	.LFB7
 3403 0044 02000000 		.4byte	.LFE7-.LFB7
 3404 0048 00000000 		.4byte	.LFB8
 3405 004c 08000000 		.4byte	.LFE8-.LFB8
 3406 0050 00000000 		.4byte	.LFB9
 3407 0054 30000000 		.4byte	.LFE9-.LFB9
 3408 0058 00000000 		.4byte	.LFB10
 3409 005c 14000000 		.4byte	.LFE10-.LFB10
 3410 0060 00000000 		.4byte	.LFB11
 3411 0064 12000000 		.4byte	.LFE11-.LFB11
 3412 0068 00000000 		.4byte	.LFB12
 3413 006c 0E000000 		.4byte	.LFE12-.LFB12
 3414 0070 00000000 		.4byte	.LFB13
 3415 0074 1A000000 		.4byte	.LFE13-.LFB13
 3416 0078 00000000 		.4byte	.LFB14
 3417 007c F4000000 		.4byte	.LFE14-.LFB14
 3418 0080 00000000 		.4byte	0
 3419 0084 00000000 		.4byte	0
 3420              		.section	.debug_ranges,"",%progbits
 3421              	.Ldebug_ranges0:
 3422 0000 00000000 		.4byte	.LFB1
 3423 0004 10000000 		.4byte	.LFE1
 3424 0008 00000000 		.4byte	.LFB2
 3425 000c 48000000 		.4byte	.LFE2
 3426 0010 00000000 		.4byte	.LFB3
 3427 0014 1C000000 		.4byte	.LFE3
 3428 0018 00000000 		.4byte	.LFB4
 3429 001c 50000000 		.4byte	.LFE4
 3430 0020 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 91


 3431 0024 0A000000 		.4byte	.LFE5
 3432 0028 00000000 		.4byte	.LFB6
 3433 002c 90000000 		.4byte	.LFE6
 3434 0030 00000000 		.4byte	.LFB7
 3435 0034 02000000 		.4byte	.LFE7
 3436 0038 00000000 		.4byte	.LFB8
 3437 003c 08000000 		.4byte	.LFE8
 3438 0040 00000000 		.4byte	.LFB9
 3439 0044 30000000 		.4byte	.LFE9
 3440 0048 00000000 		.4byte	.LFB10
 3441 004c 14000000 		.4byte	.LFE10
 3442 0050 00000000 		.4byte	.LFB11
 3443 0054 12000000 		.4byte	.LFE11
 3444 0058 00000000 		.4byte	.LFB12
 3445 005c 0E000000 		.4byte	.LFE12
 3446 0060 00000000 		.4byte	.LFB13
 3447 0064 1A000000 		.4byte	.LFE13
 3448 0068 00000000 		.4byte	.LFB14
 3449 006c F4000000 		.4byte	.LFE14
 3450 0070 00000000 		.4byte	0
 3451 0074 00000000 		.4byte	0
 3452              		.section	.debug_line,"",%progbits
 3453              	.Ldebug_line0:
 3454 0000 C8020000 		.section	.debug_str,"MS",%progbits,1
 3454      0200EF00 
 3454      00000201 
 3454      FB0E0D00 
 3454      01010101 
 3455              	.LASF155:
 3456 0000 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3456      4320342E 
 3456      392E3320 
 3456      32303135 
 3456      30333033 
 3457 0033 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 3457      20726576 
 3457      6973696F 
 3457      6E203232 
 3457      31323230 
 3458 0066 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 3458      67202D66 
 3458      66756E63 
 3458      74696F6E 
 3458      2D736563 
 3459              	.LASF63:
 3460 0092 63617073 		.ascii	"capsense_RAM_SNS_LIST_STRUCT\000"
 3460      656E7365 
 3460      5F52414D 
 3460      5F534E53 
 3460      5F4C4953 
 3461              	.LASF28:
 3462 00af 73696750 		.ascii	"sigPPf\000"
 3462      506600
 3463              	.LASF110:
 3464 00b6 7363616E 		.ascii	"scanStatus\000"
 3464      53746174 
 3464      757300
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 92


 3465              	.LASF76:
 3466 00c1 736E7254 		.ascii	"snrTestWidgetId\000"
 3466      65737457 
 3466      69646765 
 3466      74496400 
 3467              	.LASF107:
 3468 00d1 63617073 		.ascii	"capsense_SetupWidget\000"
 3468      656E7365 
 3468      5F536574 
 3468      75705769 
 3468      64676574 
 3469              	.LASF8:
 3470 00e6 756E7369 		.ascii	"unsigned int\000"
 3470      676E6564 
 3470      20696E74 
 3470      00
 3471              	.LASF67:
 3472 00f3 7363616E 		.ascii	"scanCounter\000"
 3472      436F756E 
 3472      74657200 
 3473              	.LASF113:
 3474 00ff 696E6974 		.ascii	"initStatus\000"
 3474      53746174 
 3474      757300
 3475              	.LASF119:
 3476 010a 696E7465 		.ascii	"interruptState\000"
 3476      72727570 
 3476      74537461 
 3476      746500
 3477              	.LASF159:
 3478 0119 63617073 		.ascii	"capsense_PostAllWidgetsScan\000"
 3478      656E7365 
 3478      5F506F73 
 3478      74416C6C 
 3478      57696467 
 3479              	.LASF120:
 3480 0135 70696E48 		.ascii	"pinHSIOMShift\000"
 3480      53494F4D 
 3480      53686966 
 3480      7400
 3481              	.LASF23:
 3482 0143 69446163 		.ascii	"iDacGain\000"
 3482      4761696E 
 3482      00
 3483              	.LASF154:
 3484 014c 536D6172 		.ascii	"SmartSense_TuneSensitivity\000"
 3484      7453656E 
 3484      73655F54 
 3484      756E6553 
 3484      656E7369 
 3485              	.LASF40:
 3486 0167 63617073 		.ascii	"capsense_SENSE_METHOD_CSX_E\000"
 3486      656E7365 
 3486      5F53454E 
 3486      53455F4D 
 3486      4554484F 
 3487              	.LASF25:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 93


 3488 0183 736E7343 		.ascii	"snsClkInputClock\000"
 3488      6C6B496E 
 3488      70757443 
 3488      6C6F636B 
 3488      00
 3489              	.LASF152:
 3490 0194 63617073 		.ascii	"capsense_CSDCalibrateWidget\000"
 3490      656E7365 
 3490      5F435344 
 3490      43616C69 
 3490      62726174 
 3491              	.LASF26:
 3492 01b0 7074724D 		.ascii	"ptrModIDAC\000"
 3492      6F644944 
 3492      414300
 3493              	.LASF121:
 3494 01bb 70696E4D 		.ascii	"pinModeShift\000"
 3494      6F646553 
 3494      68696674 
 3494      00
 3495              	.LASF135:
 3496 01c8 70747257 		.ascii	"ptrWdgt\000"
 3496      64677400 
 3497              	.LASF122:
 3498 01d0 63617073 		.ascii	"capsense_SetPinState\000"
 3498      656E7365 
 3498      5F536574 
 3498      50696E53 
 3498      74617465 
 3499              	.LASF39:
 3500 01e5 63617073 		.ascii	"capsense_SENSE_METHOD_CSD_E\000"
 3500      656E7365 
 3500      5F53454E 
 3500      53455F4D 
 3500      4554484F 
 3501              	.LASF12:
 3502 0201 666C6F61 		.ascii	"float\000"
 3502      7400
 3503              	.LASF89:
 3504 0207 73686966 		.ascii	"shift\000"
 3504      7400
 3505              	.LASF104:
 3506 020d 63617073 		.ascii	"capsense_FLASH_WD_STRUCT\000"
 3506      656E7365 
 3506      5F464C41 
 3506      53485F57 
 3506      445F5354 
 3507              	.LASF145:
 3508 0226 63617073 		.ascii	"capsense_prescalersTuningDone\000"
 3508      656E7365 
 3508      5F707265 
 3508      7363616C 
 3508      65727354 
 3509              	.LASF75:
 3510 0244 736E734C 		.ascii	"snsList\000"
 3510      69737400 
 3511              	.LASF7:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 94


 3512 024c 6C6F6E67 		.ascii	"long long unsigned int\000"
 3512      206C6F6E 
 3512      6720756E 
 3512      7369676E 
 3512      65642069 
 3513              	.LASF151:
 3514 0263 63617073 		.ascii	"capsense_ISR_StartEx\000"
 3514      656E7365 
 3514      5F495352 
 3514      5F537461 
 3514      72744578 
 3515              	.LASF77:
 3516 0278 736E7254 		.ascii	"snrTestSensorId\000"
 3516      65737453 
 3516      656E736F 
 3516      72496400 
 3517              	.LASF102:
 3518 0288 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 3518      4E6F6973 
 3518      65456E76 
 3518      6C7000
 3519              	.LASF138:
 3520 0297 63617073 		.ascii	"capsense_dsFlash\000"
 3520      656E7365 
 3520      5F647346 
 3520      6C617368 
 3520      00
 3521              	.LASF98:
 3522 02a8 77646774 		.ascii	"wdgtType\000"
 3522      54797065 
 3522      00
 3523              	.LASF134:
 3524 02b1 6175746F 		.ascii	"autoTuneStatus\000"
 3524      54756E65 
 3524      53746174 
 3524      757300
 3525              	.LASF140:
 3526 02c0 63617073 		.ascii	"capsense_widgetIndex\000"
 3526      656E7365 
 3526      5F776964 
 3526      67657449 
 3526      6E646578 
 3527              	.LASF118:
 3528 02d5 6E657752 		.ascii	"newRegisterValue\000"
 3528      65676973 
 3528      74657256 
 3528      616C7565 
 3528      00
 3529              	.LASF73:
 3530 02e6 6D6F6443 		.ascii	"modCsdClk\000"
 3530      7364436C 
 3530      6B00
 3531              	.LASF49:
 3532 02f0 62736C6E 		.ascii	"bslnCoeff\000"
 3532      436F6566 
 3532      6600
 3533              	.LASF83:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 95


 3534 02fa 64725074 		.ascii	"drPtr\000"
 3534      7200
 3535              	.LASF126:
 3536 0300 6D6F6443 		.ascii	"modClk\000"
 3536      6C6B00
 3537              	.LASF46:
 3538 0307 68797374 		.ascii	"hysteresis\000"
 3538      65726573 
 3538      697300
 3539              	.LASF157:
 3540 0312 5C5C766D 		.ascii	"\\\\vmware-host\\Shared Folders\\Documents\\BLEIOSA"
 3540      77617265 
 3540      2D686F73 
 3540      745C5368 
 3540      61726564 
 3541 0340 50505C50 		.ascii	"PP\\PSoC_Creator\\capsenseled\\145i2c-capsenseled.c"
 3541      536F435F 
 3541      43726561 
 3541      746F725C 
 3541      63617073 
 3542 0370 7964736E 		.ascii	"ydsn\000"
 3542      00
 3543              	.LASF48:
 3544 0375 6C6F7742 		.ascii	"lowBslnRst\000"
 3544      736C6E52 
 3544      737400
 3545              	.LASF112:
 3546 0380 63617073 		.ascii	"capsense_SsInitialize\000"
 3546      656E7365 
 3546      5F537349 
 3546      6E697469 
 3546      616C697A 
 3547              	.LASF146:
 3548 0396 63617073 		.ascii	"capsense_CSDScan\000"
 3548      656E7365 
 3548      5F435344 
 3548      5363616E 
 3548      00
 3549              	.LASF133:
 3550 03a7 63617073 		.ascii	"capsense_AutoTune\000"
 3550      656E7365 
 3550      5F417574 
 3550      6F54756E 
 3550      6500
 3551              	.LASF97:
 3552 03b9 746F7461 		.ascii	"totalNumSns\000"
 3552      6C4E756D 
 3552      536E7300 
 3553              	.LASF37:
 3554 03c5 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 3554      5453454E 
 3554      53455F43 
 3554      53445F4E 
 3554      4F495345 
 3555              	.LASF136:
 3556 03ea 6175746F 		.ascii	"autoTuneConfig\000"
 3556      54756E65 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 96


 3556      436F6E66 
 3556      696700
 3557              	.LASF38:
 3558 03f9 63617073 		.ascii	"capsense_UNDEFINED_E\000"
 3558      656E7365 
 3558      5F554E44 
 3558      4546494E 
 3558      45445F45 
 3559              	.LASF20:
 3560 040e 63617073 		.ascii	"capsense_LOW_BSLN_RST_TYPE\000"
 3560      656E7365 
 3560      5F4C4F57 
 3560      5F42534C 
 3560      4E5F5253 
 3561              	.LASF41:
 3562 0429 63617073 		.ascii	"capsense_SENSE_METHOD_ENUM\000"
 3562      656E7365 
 3562      5F53454E 
 3562      53455F4D 
 3562      4554484F 
 3563              	.LASF44:
 3564 0444 6E6F6973 		.ascii	"noiseTh\000"
 3564      65546800 
 3565              	.LASF14:
 3566 044c 63686172 		.ascii	"char\000"
 3566      00
 3567              	.LASF149:
 3568 0451 43794578 		.ascii	"CyExitCriticalSection\000"
 3568      69744372 
 3568      69746963 
 3568      616C5365 
 3568      6374696F 
 3569              	.LASF87:
 3570 0467 6873696F 		.ascii	"hsiomShift\000"
 3570      6D536869 
 3570      667400
 3571              	.LASF144:
 3572 0472 63617073 		.ascii	"capsense_curRamSnsPtr\000"
 3572      656E7365 
 3572      5F637572 
 3572      52616D53 
 3572      6E735074 
 3573              	.LASF10:
 3574 0488 75696E74 		.ascii	"uint16\000"
 3574      313600
 3575              	.LASF42:
 3576 048f 7265736F 		.ascii	"resolution\000"
 3576      6C757469 
 3576      6F6E00
 3577              	.LASF68:
 3578 049a 73746174 		.ascii	"status\000"
 3578      757300
 3579              	.LASF59:
 3580 04a1 69646163 		.ascii	"idacComp\000"
 3580      436F6D70 
 3580      00
 3581              	.LASF82:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 97


 3582 04aa 70635074 		.ascii	"pcPtr\000"
 3582      7200
 3583              	.LASF6:
 3584 04b0 6C6F6E67 		.ascii	"long long int\000"
 3584      206C6F6E 
 3584      6720696E 
 3584      7400
 3585              	.LASF99:
 3586 04be 6E756D43 		.ascii	"numCols\000"
 3586      6F6C7300 
 3587              	.LASF47:
 3588 04c6 6F6E4465 		.ascii	"onDebounce\000"
 3588      626F756E 
 3588      636500
 3589              	.LASF124:
 3590 04d1 61646472 		.ascii	"address\000"
 3590      65737300 
 3591              	.LASF111:
 3592 04d9 63617073 		.ascii	"capsense_ScanAllWidgets\000"
 3592      656E7365 
 3592      5F536361 
 3592      6E416C6C 
 3592      57696467 
 3593              	.LASF131:
 3594 04f1 63616C69 		.ascii	"calibrateStatus\000"
 3594      62726174 
 3594      65537461 
 3594      74757300 
 3595              	.LASF74:
 3596 0501 77646774 		.ascii	"wdgtList\000"
 3596      4C697374 
 3596      00
 3597              	.LASF158:
 3598 050a 63617073 		.ascii	"capsense_IsBusy\000"
 3598      656E7365 
 3598      5F497342 
 3598      75737900 
 3599              	.LASF79:
 3600 051a 736E7254 		.ascii	"snrTestRawCount\000"
 3600      65737452 
 3600      6177436F 
 3600      756E7400 
 3601              	.LASF45:
 3602 052a 6E4E6F69 		.ascii	"nNoiseTh\000"
 3602      73655468 
 3602      00
 3603              	.LASF72:
 3604 0533 63736430 		.ascii	"csd0Config\000"
 3604      436F6E66 
 3604      696700
 3605              	.LASF17:
 3606 053e 63796973 		.ascii	"cyisraddress\000"
 3606      72616464 
 3606      72657373 
 3606      00
 3607              	.LASF143:
 3608 054b 63617073 		.ascii	"capsense_requestScanAllWidget\000"
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 98


 3608      656E7365 
 3608      5F726571 
 3608      75657374 
 3608      5363616E 
 3609              	.LASF132:
 3610 0569 63617073 		.ascii	"capsense_CalibrateAllWidgets\000"
 3610      656E7365 
 3610      5F43616C 
 3610      69627261 
 3610      7465416C 
 3611              	.LASF81:
 3612 0586 6873696F 		.ascii	"hsiomPtr\000"
 3612      6D507472 
 3612      00
 3613              	.LASF11:
 3614 058f 75696E74 		.ascii	"uint32\000"
 3614      333200
 3615              	.LASF94:
 3616 0596 70747232 		.ascii	"ptr2FltrHistory\000"
 3616      466C7472 
 3616      48697374 
 3616      6F727900 
 3617              	.LASF86:
 3618 05a6 6D61736B 		.ascii	"mask\000"
 3618      00
 3619              	.LASF147:
 3620 05ab 63617073 		.ascii	"capsense_CSDInitialize\000"
 3620      656E7365 
 3620      5F435344 
 3620      496E6974 
 3620      69616C69 
 3621              	.LASF141:
 3622 05c2 63617073 		.ascii	"capsense_sensorIndex\000"
 3622      656E7365 
 3622      5F73656E 
 3622      736F7249 
 3622      6E646578 
 3623              	.LASF56:
 3624 05d7 63617073 		.ascii	"capsense_RAM_WD_LIST_STRUCT\000"
 3624      656E7365 
 3624      5F52414D 
 3624      5F57445F 
 3624      4C495354 
 3625              	.LASF19:
 3626 05f3 63617073 		.ascii	"capsense_THRESHOLD_TYPE\000"
 3626      656E7365 
 3626      5F544852 
 3626      4553484F 
 3626      4C445F54 
 3627              	.LASF106:
 3628 060b 63617073 		.ascii	"capsense_FLASH_STRUCT\000"
 3628      656E7365 
 3628      5F464C41 
 3628      53485F53 
 3628      54525543 
 3629              	.LASF27:
 3630 0621 70747253 		.ascii	"ptrSenseClk\000"
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 99


 3630      656E7365 
 3630      436C6B00 
 3631              	.LASF114:
 3632 062d 77646774 		.ascii	"wdgtIndex\000"
 3632      496E6465 
 3632      7800
 3633              	.LASF54:
 3634 0637 63617073 		.ascii	"capsense_RAM_WD_SLIDER_STRUCT\000"
 3634      656E7365 
 3634      5F52414D 
 3634      5F57445F 
 3634      534C4944 
 3635              	.LASF115:
 3636 0655 736E7349 		.ascii	"snsIndex\000"
 3636      6E646578 
 3636      00
 3637              	.LASF137:
 3638 065e 63617073 		.ascii	"capsense_dsRam\000"
 3638      656E7365 
 3638      5F647352 
 3638      616D00
 3639              	.LASF127:
 3640 066d 63617073 		.ascii	"capsense_ConfigureSnsClock\000"
 3640      656E7365 
 3640      5F436F6E 
 3640      66696775 
 3640      7265536E 
 3641              	.LASF21:
 3642 0688 736E7343 		.ascii	"snsClkConstantR\000"
 3642      6C6B436F 
 3642      6E737461 
 3642      6E745200 
 3643              	.LASF16:
 3644 0698 72656733 		.ascii	"reg32\000"
 3644      3200
 3645              	.LASF78:
 3646 069e 736E7254 		.ascii	"snrTestScanCounter\000"
 3646      65737453 
 3646      63616E43 
 3646      6F756E74 
 3646      657200
 3647              	.LASF64:
 3648 06b1 636F6E66 		.ascii	"configId\000"
 3648      69674964 
 3648      00
 3649              	.LASF142:
 3650 06ba 63617073 		.ascii	"capsense_curWidgetResolution\000"
 3650      656E7365 
 3650      5F637572 
 3650      57696467 
 3650      65745265 
 3651              	.LASF93:
 3652 06d7 70747232 		.ascii	"ptr2SnsRam\000"
 3652      536E7352 
 3652      616D00
 3653              	.LASF71:
 3654 06e2 736E7353 		.ascii	"snsStatus\000"
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 100


 3654      74617475 
 3654      7300
 3655              	.LASF129:
 3656 06ec 63617073 		.ascii	"capsense_ConfigureClocks\000"
 3656      656E7365 
 3656      5F436F6E 
 3656      66696775 
 3656      7265436C 
 3657              	.LASF100:
 3658 0705 78526573 		.ascii	"xResolution\000"
 3658      6F6C7574 
 3658      696F6E00 
 3659              	.LASF2:
 3660 0711 73686F72 		.ascii	"short int\000"
 3660      7420696E 
 3660      7400
 3661              	.LASF4:
 3662 071b 6C6F6E67 		.ascii	"long int\000"
 3662      20696E74 
 3662      00
 3663              	.LASF69:
 3664 0724 77646774 		.ascii	"wdgtEnable\000"
 3664      456E6162 
 3664      6C6500
 3665              	.LASF60:
 3666 072f 64696666 		.ascii	"diff\000"
 3666      00
 3667              	.LASF66:
 3668 0734 74756E65 		.ascii	"tunerCmd\000"
 3668      72436D64 
 3668      00
 3669              	.LASF84:
 3670 073d 70735074 		.ascii	"psPtr\000"
 3670      7200
 3671              	.LASF62:
 3672 0743 63617073 		.ascii	"capsense_RAM_SNS_STRUCT\000"
 3672      656E7365 
 3672      5F52414D 
 3672      5F534E53 
 3672      5F535452 
 3673              	.LASF123:
 3674 075b 63617073 		.ascii	"capsense_IsrInitialize\000"
 3674      656E7365 
 3674      5F497372 
 3674      496E6974 
 3674      69616C69 
 3675              	.LASF130:
 3676 0772 63617073 		.ascii	"capsense_CalibrateWidget\000"
 3676      656E7365 
 3676      5F43616C 
 3676      69627261 
 3676      74655769 
 3677              	.LASF70:
 3678 078b 77646774 		.ascii	"wdgtStatus\000"
 3678      53746174 
 3678      757300
 3679              	.LASF153:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 101


 3680 0796 536D6172 		.ascii	"SmartSense_TunePrescalers\000"
 3680      7453656E 
 3680      73655F54 
 3680      756E6550 
 3680      72657363 
 3681              	.LASF24:
 3682 07b0 73656E73 		.ascii	"sensitivity\000"
 3682      69746976 
 3682      69747900 
 3683              	.LASF18:
 3684 07bc 73697A65 		.ascii	"sizetype\000"
 3684      74797065 
 3684      00
 3685              	.LASF88:
 3686 07c5 64725368 		.ascii	"drShift\000"
 3686      69667400 
 3687              	.LASF5:
 3688 07cd 6C6F6E67 		.ascii	"long unsigned int\000"
 3688      20756E73 
 3688      69676E65 
 3688      6420696E 
 3688      7400
 3689              	.LASF22:
 3690 07df 76526566 		.ascii	"vRef\000"
 3690      00
 3691              	.LASF50:
 3692 07e4 69646163 		.ascii	"idacMod\000"
 3692      4D6F6400 
 3693              	.LASF95:
 3694 07ec 70747232 		.ascii	"ptr2DebounceArr\000"
 3694      4465626F 
 3694      756E6365 
 3694      41727200 
 3695              	.LASF101:
 3696 07fc 7843656E 		.ascii	"xCentroidMultiplier\000"
 3696      74726F69 
 3696      644D756C 
 3696      7469706C 
 3696      69657200 
 3697              	.LASF43:
 3698 0810 66696E67 		.ascii	"fingerTh\000"
 3698      65725468 
 3698      00
 3699              	.LASF58:
 3700 0819 62736C6E 		.ascii	"bslnExt\000"
 3700      45787400 
 3701              	.LASF103:
 3702 0821 70747232 		.ascii	"ptr2PosHistory\000"
 3702      506F7348 
 3702      6973746F 
 3702      727900
 3703              	.LASF156:
 3704 0830 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\capsense_Sensing.c\000"
 3704      6E657261 
 3704      7465645F 
 3704      536F7572 
 3704      63655C50 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 102


 3705              	.LASF15:
 3706 085c 63797374 		.ascii	"cystatus\000"
 3706      61747573 
 3706      00
 3707              	.LASF1:
 3708 0865 756E7369 		.ascii	"unsigned char\000"
 3708      676E6564 
 3708      20636861 
 3708      7200
 3709              	.LASF90:
 3710 0873 63617073 		.ascii	"capsense_FLASH_IO_STRUCT\000"
 3710      656E7365 
 3710      5F464C41 
 3710      53485F49 
 3710      4F5F5354 
 3711              	.LASF96:
 3712 088c 73746174 		.ascii	"staticConfig\000"
 3712      6963436F 
 3712      6E666967 
 3712      00
 3713              	.LASF92:
 3714 0899 70747232 		.ascii	"ptr2WdgtRam\000"
 3714      57646774 
 3714      52616D00 
 3715              	.LASF80:
 3716 08a5 63617073 		.ascii	"capsense_RAM_STRUCT\000"
 3716      656E7365 
 3716      5F52414D 
 3716      5F535452 
 3716      55435400 
 3717              	.LASF148:
 3718 08b9 63617073 		.ascii	"capsense_CSDSetupWidget\000"
 3718      656E7365 
 3718      5F435344 
 3718      53657475 
 3718      70576964 
 3719              	.LASF116:
 3720 08d1 73746174 		.ascii	"state\000"
 3720      6500
 3721              	.LASF55:
 3722 08d7 6C696E65 		.ascii	"linearslider0\000"
 3722      6172736C 
 3722      69646572 
 3722      3000
 3723              	.LASF85:
 3724 08e5 6873696F 		.ascii	"hsiomMask\000"
 3724      6D4D6173 
 3724      6B00
 3725              	.LASF117:
 3726 08ef 63757253 		.ascii	"curSnsIOPtr\000"
 3726      6E73494F 
 3726      50747200 
 3727              	.LASF51:
 3728 08fb 736E7343 		.ascii	"snsClk\000"
 3728      6C6B00
 3729              	.LASF160:
 3730 0902 4379456E 		.ascii	"CyEnterCriticalSection\000"
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 103


 3730      74657243 
 3730      72697469 
 3730      63616C53 
 3730      65637469 
 3731              	.LASF0:
 3732 0919 7369676E 		.ascii	"signed char\000"
 3732      65642063 
 3732      68617200 
 3733              	.LASF108:
 3734 0925 63617073 		.ascii	"capsense_Scan\000"
 3734      656E7365 
 3734      5F536361 
 3734      6E00
 3735              	.LASF57:
 3736 0933 62736C6E 		.ascii	"bsln\000"
 3736      00
 3737              	.LASF3:
 3738 0938 73686F72 		.ascii	"short unsigned int\000"
 3738      7420756E 
 3738      7369676E 
 3738      65642069 
 3738      6E7400
 3739              	.LASF29:
 3740 094b 4155544F 		.ascii	"AUTO_TUNE_CONFIG_TYPE\000"
 3740      5F54554E 
 3740      455F434F 
 3740      4E464947 
 3740      5F545950 
 3741              	.LASF125:
 3742 0961 63617073 		.ascii	"capsense_ConfigureModClkClock\000"
 3742      656E7365 
 3742      5F436F6E 
 3742      66696775 
 3742      72654D6F 
 3743              	.LASF91:
 3744 097f 70747232 		.ascii	"ptr2SnsFlash\000"
 3744      536E7346 
 3744      6C617368 
 3744      00
 3745              	.LASF128:
 3746 098c 6E657752 		.ascii	"newRegValue\000"
 3746      65675661 
 3746      6C756500 
 3747              	.LASF9:
 3748 0998 75696E74 		.ascii	"uint8\000"
 3748      3800
 3749              	.LASF13:
 3750 099e 646F7562 		.ascii	"double\000"
 3750      6C6500
 3751              	.LASF61:
 3752 09a5 6E656742 		.ascii	"negBslnRstCnt\000"
 3752      736C6E52 
 3752      7374436E 
 3752      7400
 3753              	.LASF30:
 3754 09b3 70617261 		.ascii	"param0\000"
 3754      6D3000
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccBkjVf3.s 			page 104


 3755              	.LASF31:
 3756 09ba 70617261 		.ascii	"param1\000"
 3756      6D3100
 3757              	.LASF32:
 3758 09c1 70617261 		.ascii	"param2\000"
 3758      6D3200
 3759              	.LASF33:
 3760 09c8 70617261 		.ascii	"param3\000"
 3760      6D3300
 3761              	.LASF34:
 3762 09cf 70617261 		.ascii	"param4\000"
 3762      6D3400
 3763              	.LASF35:
 3764 09d6 70617261 		.ascii	"param5\000"
 3764      6D3500
 3765              	.LASF36:
 3766 09dd 70617261 		.ascii	"param6\000"
 3766      6D3600
 3767              	.LASF150:
 3768 09e4 63617073 		.ascii	"capsense_CSDConnectSns\000"
 3768      656E7365 
 3768      5F435344 
 3768      436F6E6E 
 3768      65637453 
 3769              	.LASF65:
 3770 09fb 64657669 		.ascii	"deviceId\000"
 3770      63654964 
 3770      00
 3771              	.LASF109:
 3772 0a04 77696467 		.ascii	"widgetStatus\000"
 3772      65745374 
 3772      61747573 
 3772      00
 3773              	.LASF52:
 3774 0a11 63617073 		.ascii	"capsense_RAM_WD_BASE_STRUCT\000"
 3774      656E7365 
 3774      5F52414D 
 3774      5F57445F 
 3774      42415345 
 3775              	.LASF53:
 3776 0a2d 706F7369 		.ascii	"position\000"
 3776      74696F6E 
 3776      00
 3777              	.LASF139:
 3778 0a36 63617073 		.ascii	"capsense_scanFreqIndex\000"
 3778      656E7365 
 3778      5F736361 
 3778      6E467265 
 3778      71496E64 
 3779              	.LASF105:
 3780 0a4d 77646774 		.ascii	"wdgtArray\000"
 3780      41727261 
 3780      7900
 3781              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
