ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	2
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CyLib.c"
   1:.\Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:.\Generated_Source\PSoC4/CyLib.c **** * \version 5.40
   4:.\Generated_Source\PSoC4/CyLib.c **** *
   5:.\Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:.\Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:.\Generated_Source\PSoC4/CyLib.c **** *
   8:.\Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:.\Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:.\Generated_Source\PSoC4/CyLib.c **** *
  11:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:.\Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/CyLib.c **** 
  19:.\Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:.\Generated_Source\PSoC4/CyLib.c **** 
  21:.\Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:.\Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:.\Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:.\Generated_Source\PSoC4/CyLib.c **** 
  26:.\Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:.\Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:.\Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 2


  33:.\Generated_Source\PSoC4/CyLib.c **** 
  34:.\Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  37:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  38:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  39:.\Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  40:.\Generated_Source\PSoC4/CyLib.c **** 
  41:.\Generated_Source\PSoC4/CyLib.c **** 
  42:.\Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  43:.\Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  44:.\Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  45:.\Generated_Source\PSoC4/CyLib.c **** *
  46:.\Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  47:.\Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  48:.\Generated_Source\PSoC4/CyLib.c **** *
  49:.\Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  50:.\Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  51:.\Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  52:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  53:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  54:.\Generated_Source\PSoC4/CyLib.c **** 
  55:.\Generated_Source\PSoC4/CyLib.c **** 
  56:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  57:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  58:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  59:.\Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  60:.\Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  61:.\Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  62:.\Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  63:.\Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  64:.\Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  65:.\Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  66:.\Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  67:.\Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  68:.\Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  69:.\Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  70:.\Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  71:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  72:.\Generated_Source\PSoC4/CyLib.c **** 
  73:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  74:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  75:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  76:.\Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  77:.\Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  78:.\Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  79:.\Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  80:.\Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  81:.\Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  82:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  83:.\Generated_Source\PSoC4/CyLib.c **** 
  84:.\Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  85:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  86:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  87:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  88:.\Generated_Source\PSoC4/CyLib.c **** 
  89:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 3


  90:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  91:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  92:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  93:.\Generated_Source\PSoC4/CyLib.c **** *
  94:.\Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  95:.\Generated_Source\PSoC4/CyLib.c **** *
  96:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
  97:.\Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
  98:.\Generated_Source\PSoC4/CyLib.c **** * Resources tab.
  99:.\Generated_Source\PSoC4/CyLib.c **** *
 100:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 101:.\Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 102:.\Generated_Source\PSoC4/CyLib.c **** *
 103:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 104:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 105:.\Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 105 0
  27              		.cfi_startproc
 106:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 106 0
  29 0000 034A     		ldr	r2, .L2
  30 0002 1368     		ldr	r3, [r2]
  31 0004 8021     		mov	r1, #128
  32 0006 0906     		lsl	r1, r1, #24
  33 0008 0B43     		orr	r3, r1
  34 000a 1360     		str	r3, [r2]
 107:.\Generated_Source\PSoC4/CyLib.c **** 
 108:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 109:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 110:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 111:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 112:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 113:.\Generated_Source\PSoC4/CyLib.c **** 
 114:.\Generated_Source\PSoC4/CyLib.c **** 
 115:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 116:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 117:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 118:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 119:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 120:.\Generated_Source\PSoC4/CyLib.c **** 
 121:.\Generated_Source\PSoC4/CyLib.c **** }
  35              		.loc 1 121 0
  36              		@ sp needed
  37 000c 7047     		bx	lr
  38              	.L3:
  39 000e C046     		.align	2
  40              	.L2:
  41 0010 30000340 		.word	1073938480
  42              		.cfi_endproc
  43              	.LFE1:
  44              		.size	CySysClkImoStart, .-CySysClkImoStart
  45              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  46              		.align	2
  47              		.global	CySysClkImoDisableWcoLock
  48              		.code	16
  49              		.thumb_func
  50              		.type	CySysClkImoDisableWcoLock, %function
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 4


  51              	CySysClkImoDisableWcoLock:
  52              	.LFB4:
 122:.\Generated_Source\PSoC4/CyLib.c **** 
 123:.\Generated_Source\PSoC4/CyLib.c **** 
 124:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 125:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 126:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 127:.\Generated_Source\PSoC4/CyLib.c **** *
 128:.\Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 129:.\Generated_Source\PSoC4/CyLib.c **** *
 130:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 131:.\Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 132:.\Generated_Source\PSoC4/CyLib.c **** *
 133:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 134:.\Generated_Source\PSoC4/CyLib.c **** *
 135:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 136:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 137:.\Generated_Source\PSoC4/CyLib.c **** {
 138:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 139:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 140:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 141:.\Generated_Source\PSoC4/CyLib.c **** 
 142:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 143:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 144:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 145:.\Generated_Source\PSoC4/CyLib.c **** 
 146:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 147:.\Generated_Source\PSoC4/CyLib.c **** }
 148:.\Generated_Source\PSoC4/CyLib.c **** 
 149:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 150:.\Generated_Source\PSoC4/CyLib.c **** 
 151:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 152:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 153:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 154:.\Generated_Source\PSoC4/CyLib.c ****     *
 155:.\Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 156:.\Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 157:.\Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 158:.\Generated_Source\PSoC4/CyLib.c ****     *
 159:.\Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 160:.\Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 161:.\Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 162:.\Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 163:.\Generated_Source\PSoC4/CyLib.c ****     * should be called.
 164:.\Generated_Source\PSoC4/CyLib.c ****     *
 165:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 166:.\Generated_Source\PSoC4/CyLib.c ****     * but not both.
 167:.\Generated_Source\PSoC4/CyLib.c ****     *
 168:.\Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 169:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 170:.\Generated_Source\PSoC4/CyLib.c ****     *
 171:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 172:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 173:.\Generated_Source\PSoC4/CyLib.c ****     {
 174:.\Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 175:.\Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 176:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 5


 177:.\Generated_Source\PSoC4/CyLib.c **** 
 178:.\Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 179:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 180:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 181:.\Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 182:.\Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 183:.\Generated_Source\PSoC4/CyLib.c **** 
 184:.\Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 185:.\Generated_Source\PSoC4/CyLib.c ****         {
 186:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 187:.\Generated_Source\PSoC4/CyLib.c **** 
 188:.\Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 189:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 190:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 191:.\Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 192:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 193:.\Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 194:.\Generated_Source\PSoC4/CyLib.c **** 
 195:.\Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 196:.\Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 197:.\Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 198:.\Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 199:.\Generated_Source\PSoC4/CyLib.c ****                 {
 200:.\Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 201:.\Generated_Source\PSoC4/CyLib.c ****                     {
 202:.\Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 203:.\Generated_Source\PSoC4/CyLib.c ****                         break;
 204:.\Generated_Source\PSoC4/CyLib.c ****                     }
 205:.\Generated_Source\PSoC4/CyLib.c ****                 }
 206:.\Generated_Source\PSoC4/CyLib.c ****             #else
 207:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 208:.\Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 209:.\Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 210:.\Generated_Source\PSoC4/CyLib.c **** 
 211:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 212:.\Generated_Source\PSoC4/CyLib.c **** 
 213:.\Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 214:.\Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 215:.\Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 216:.\Generated_Source\PSoC4/CyLib.c ****                 {
 217:.\Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 218:.\Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 219:.\Generated_Source\PSoC4/CyLib.c ****                 }
 220:.\Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 221:.\Generated_Source\PSoC4/CyLib.c **** 
 222:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 223:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 224:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 225:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 226:.\Generated_Source\PSoC4/CyLib.c **** 
 227:.\Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 228:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 229:.\Generated_Source\PSoC4/CyLib.c **** 
 230:.\Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 231:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 232:.\Generated_Source\PSoC4/CyLib.c **** 
 233:.\Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 6


 234:.\Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 235:.\Generated_Source\PSoC4/CyLib.c ****             {
 236:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 237:.\Generated_Source\PSoC4/CyLib.c ****             }
 238:.\Generated_Source\PSoC4/CyLib.c ****             else
 239:.\Generated_Source\PSoC4/CyLib.c ****             {
 240:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 241:.\Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 242:.\Generated_Source\PSoC4/CyLib.c **** 
 243:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 244:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 245:.\Generated_Source\PSoC4/CyLib.c **** 
 246:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 247:.\Generated_Source\PSoC4/CyLib.c ****             }
 248:.\Generated_Source\PSoC4/CyLib.c **** 
 249:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 250:.\Generated_Source\PSoC4/CyLib.c **** 
 251:.\Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 252:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 253:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 254:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 255:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 256:.\Generated_Source\PSoC4/CyLib.c **** 
 257:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 258:.\Generated_Source\PSoC4/CyLib.c ****         }
 259:.\Generated_Source\PSoC4/CyLib.c ****     }
 260:.\Generated_Source\PSoC4/CyLib.c **** 
 261:.\Generated_Source\PSoC4/CyLib.c **** 
 262:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 263:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 264:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 265:.\Generated_Source\PSoC4/CyLib.c ****     *
 266:.\Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 267:.\Generated_Source\PSoC4/CyLib.c ****     *
 268:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 269:.\Generated_Source\PSoC4/CyLib.c ****     * but not both.
 270:.\Generated_Source\PSoC4/CyLib.c ****     *
 271:.\Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 272:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 273:.\Generated_Source\PSoC4/CyLib.c ****     *
 274:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 275:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 276:.\Generated_Source\PSoC4/CyLib.c ****     {
  53              		.loc 1 276 0
  54              		.cfi_startproc
 277:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  55              		.loc 1 277 0
  56 0000 024A     		ldr	r2, .L5
  57 0002 1168     		ldr	r1, [r2]
  58 0004 024B     		ldr	r3, .L5+4
  59 0006 0B40     		and	r3, r1
  60 0008 1360     		str	r3, [r2]
 278:.\Generated_Source\PSoC4/CyLib.c ****     }
  61              		.loc 1 278 0
  62              		@ sp needed
  63 000a 7047     		bx	lr
  64              	.L6:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 7


  65              		.align	2
  66              	.L5:
  67 000c 00000740 		.word	1074200576
  68 0010 FFFFFFBF 		.word	-1073741825
  69              		.cfi_endproc
  70              	.LFE4:
  71              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
  72              		.section	.text.CySysClkImoStop,"ax",%progbits
  73              		.align	2
  74              		.global	CySysClkImoStop
  75              		.code	16
  76              		.thumb_func
  77              		.type	CySysClkImoStop, %function
  78              	CySysClkImoStop:
  79              	.LFB2:
 137:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  80              		.loc 1 137 0
  81              		.cfi_startproc
  82 0000 08B5     		push	{r3, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 3, -8
  85              		.cfi_offset 14, -4
 139:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  86              		.loc 1 139 0
  87 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
  88              	.LVL0:
 146:.\Generated_Source\PSoC4/CyLib.c **** }
  89              		.loc 1 146 0
  90 0006 034A     		ldr	r2, .L8
  91 0008 1368     		ldr	r3, [r2]
  92 000a 5B00     		lsl	r3, r3, #1
  93 000c 5B08     		lsr	r3, r3, #1
  94 000e 1360     		str	r3, [r2]
 147:.\Generated_Source\PSoC4/CyLib.c **** 
  95              		.loc 1 147 0
  96              		@ sp needed
  97 0010 08BD     		pop	{r3, pc}
  98              	.L9:
  99 0012 C046     		.align	2
 100              	.L8:
 101 0014 30000340 		.word	1073938480
 102              		.cfi_endproc
 103              	.LFE2:
 104              		.size	CySysClkImoStop, .-CySysClkImoStop
 105              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 106              		.align	2
 107              		.global	CySysClkImoGetWcoLock
 108              		.code	16
 109              		.thumb_func
 110              		.type	CySysClkImoGetWcoLock, %function
 111              	CySysClkImoGetWcoLock:
 112              	.LFB5:
 279:.\Generated_Source\PSoC4/CyLib.c **** 
 280:.\Generated_Source\PSoC4/CyLib.c **** 
 281:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 282:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 283:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 8


 284:.\Generated_Source\PSoC4/CyLib.c ****     *
 285:.\Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 286:.\Generated_Source\PSoC4/CyLib.c ****     *
 287:.\Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 288:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 289:.\Generated_Source\PSoC4/CyLib.c ****     *
 290:.\Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 291:.\Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 292:.\Generated_Source\PSoC4/CyLib.c ****     *
 293:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 294:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 295:.\Generated_Source\PSoC4/CyLib.c ****     {
 113              		.loc 1 295 0
 114              		.cfi_startproc
 296:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 115              		.loc 1 296 0
 116 0000 034B     		ldr	r3, .L12
 117 0002 1868     		ldr	r0, [r3]
 118 0004 8023     		mov	r3, #128
 119 0006 DB05     		lsl	r3, r3, #23
 120 0008 1840     		and	r0, r3
 297:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 121              		.loc 1 297 0
 122 000a 00D0     		beq	.L11
 123 000c 0120     		mov	r0, #1
 124              	.L11:
 298:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 299:.\Generated_Source\PSoC4/CyLib.c ****     }
 125              		.loc 1 299 0
 126              		@ sp needed
 127 000e 7047     		bx	lr
 128              	.L13:
 129              		.align	2
 130              	.L12:
 131 0010 00000740 		.word	1074200576
 132              		.cfi_endproc
 133              	.LFE5:
 134              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 135              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 136              		.align	2
 137              		.global	CySysClkWriteHfclkDirect
 138              		.code	16
 139              		.thumb_func
 140              		.type	CySysClkWriteHfclkDirect, %function
 141              	CySysClkWriteHfclkDirect:
 142              	.LFB6:
 300:.\Generated_Source\PSoC4/CyLib.c **** 
 301:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 302:.\Generated_Source\PSoC4/CyLib.c **** 
 303:.\Generated_Source\PSoC4/CyLib.c **** 
 304:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 305:.\Generated_Source\PSoC4/CyLib.c **** 
 306:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 307:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 308:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 309:.\Generated_Source\PSoC4/CyLib.c ****     *
 310:.\Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 9


 311:.\Generated_Source\PSoC4/CyLib.c ****     *
 312:.\Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 313:.\Generated_Source\PSoC4/CyLib.c ****     *
 314:.\Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 315:.\Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 316:.\Generated_Source\PSoC4/CyLib.c ****     *
 317:.\Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 318:.\Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 319:.\Generated_Source\PSoC4/CyLib.c ****     *
 320:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 321:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 322:.\Generated_Source\PSoC4/CyLib.c ****     {
 323:.\Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 324:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 325:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 326:.\Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 327:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 328:.\Generated_Source\PSoC4/CyLib.c **** 
 329:.\Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 330:.\Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 331:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 332:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 333:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 334:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 335:.\Generated_Source\PSoC4/CyLib.c **** 
 336:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 337:.\Generated_Source\PSoC4/CyLib.c ****     }
 338:.\Generated_Source\PSoC4/CyLib.c **** 
 339:.\Generated_Source\PSoC4/CyLib.c **** 
 340:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 341:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 342:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 343:.\Generated_Source\PSoC4/CyLib.c ****     *
 344:.\Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 345:.\Generated_Source\PSoC4/CyLib.c ****     *
 346:.\Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 347:.\Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 348:.\Generated_Source\PSoC4/CyLib.c ****     *
 349:.\Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 350:.\Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 351:.\Generated_Source\PSoC4/CyLib.c ****     *
 352:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 353:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 354:.\Generated_Source\PSoC4/CyLib.c ****     {
 355:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 356:.\Generated_Source\PSoC4/CyLib.c **** 
 357:.\Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 358:.\Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 359:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 360:.\Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 361:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 362:.\Generated_Source\PSoC4/CyLib.c ****     }
 363:.\Generated_Source\PSoC4/CyLib.c **** 
 364:.\Generated_Source\PSoC4/CyLib.c **** 
 365:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 367:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 10


 368:.\Generated_Source\PSoC4/CyLib.c ****     *
 369:.\Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 370:.\Generated_Source\PSoC4/CyLib.c ****     *
 371:.\Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 372:.\Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 373:.\Generated_Source\PSoC4/CyLib.c ****     *
 374:.\Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 375:.\Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 376:.\Generated_Source\PSoC4/CyLib.c ****     *
 377:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 378:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 379:.\Generated_Source\PSoC4/CyLib.c ****     {
 380:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 381:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 382:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 383:.\Generated_Source\PSoC4/CyLib.c ****     }
 384:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 385:.\Generated_Source\PSoC4/CyLib.c **** 
 386:.\Generated_Source\PSoC4/CyLib.c **** 
 387:.\Generated_Source\PSoC4/CyLib.c **** 
 388:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 389:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 390:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 391:.\Generated_Source\PSoC4/CyLib.c **** *
 392:.\Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 393:.\Generated_Source\PSoC4/CyLib.c **** *
 394:.\Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 395:.\Generated_Source\PSoC4/CyLib.c **** *
 396:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 397:.\Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 398:.\Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 399:.\Generated_Source\PSoC4/CyLib.c **** *
 400:.\Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 401:.\Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 402:.\Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 403:.\Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 404:.\Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 405:.\Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 406:.\Generated_Source\PSoC4/CyLib.c **** *
 407:.\Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 408:.\Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 409:.\Generated_Source\PSoC4/CyLib.c **** *
 410:.\Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 411:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 412:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 413:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 414:.\Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 415:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 416:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 417:.\Generated_Source\PSoC4/CyLib.c **** *
 418:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 420:.\Generated_Source\PSoC4/CyLib.c **** {
 143              		.loc 1 420 0
 144              		.cfi_startproc
 145              	.LVL1:
 146 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 11


 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 4, -8
 149              		.cfi_offset 14, -4
 150 0002 041C     		mov	r4, r0
 421:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 422:.\Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 423:.\Generated_Source\PSoC4/CyLib.c **** 
 424:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 151              		.loc 1 424 0
 152 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 153              	.LVL2:
 425:.\Generated_Source\PSoC4/CyLib.c **** 
 426:.\Generated_Source\PSoC4/CyLib.c **** 
 427:.\Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 154              		.loc 1 427 0
 155 0008 0449     		ldr	r1, .L15
 156 000a 0A68     		ldr	r2, [r1]
 157 000c 0323     		mov	r3, #3
 158 000e 9A43     		bic	r2, r3
 159              	.LVL3:
 428:.\Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 429:.\Generated_Source\PSoC4/CyLib.c **** 
 430:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 431:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 432:.\Generated_Source\PSoC4/CyLib.c ****     {
 433:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 434:.\Generated_Source\PSoC4/CyLib.c ****     }
 435:.\Generated_Source\PSoC4/CyLib.c ****     else
 436:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 437:.\Generated_Source\PSoC4/CyLib.c ****     {
 438:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 160              		.loc 1 438 0
 161 0010 2340     		and	r3, r4
 162 0012 1343     		orr	r3, r2
 163              	.LVL4:
 439:.\Generated_Source\PSoC4/CyLib.c ****     }
 440:.\Generated_Source\PSoC4/CyLib.c **** 
 441:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 164              		.loc 1 441 0
 165 0014 0B60     		str	r3, [r1]
 442:.\Generated_Source\PSoC4/CyLib.c **** 
 443:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 166              		.loc 1 443 0
 167 0016 FFF7FEFF 		bl	CyExitCriticalSection
 168              	.LVL5:
 444:.\Generated_Source\PSoC4/CyLib.c **** }
 169              		.loc 1 444 0
 170              		@ sp needed
 171              	.LVL6:
 172 001a 10BD     		pop	{r4, pc}
 173              	.L16:
 174              		.align	2
 175              	.L15:
 176 001c 28000340 		.word	1073938472
 177              		.cfi_endproc
 178              	.LFE6:
 179              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 12


 180              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 181              		.align	2
 182              		.global	CySysClkGetSysclkSource
 183              		.code	16
 184              		.thumb_func
 185              		.type	CySysClkGetSysclkSource, %function
 186              	CySysClkGetSysclkSource:
 187              	.LFB7:
 445:.\Generated_Source\PSoC4/CyLib.c **** 
 446:.\Generated_Source\PSoC4/CyLib.c **** 
 447:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 448:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 449:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 450:.\Generated_Source\PSoC4/CyLib.c **** *
 451:.\Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 452:.\Generated_Source\PSoC4/CyLib.c **** *
 453:.\Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 454:.\Generated_Source\PSoC4/CyLib.c **** *
 455:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 456:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 457:.\Generated_Source\PSoC4/CyLib.c **** {
 188              		.loc 1 457 0
 189              		.cfi_startproc
 190 0000 10B5     		push	{r4, lr}
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 4, -8
 193              		.cfi_offset 14, -4
 458:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 459:.\Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 460:.\Generated_Source\PSoC4/CyLib.c **** 
 461:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 194              		.loc 1 461 0
 195 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 196              	.LVL7:
 462:.\Generated_Source\PSoC4/CyLib.c **** 
 463:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 464:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 465:.\Generated_Source\PSoC4/CyLib.c ****     {
 466:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 467:.\Generated_Source\PSoC4/CyLib.c ****     }
 468:.\Generated_Source\PSoC4/CyLib.c ****     else
 469:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 470:.\Generated_Source\PSoC4/CyLib.c ****     {
 471:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 197              		.loc 1 471 0
 198 0006 044B     		ldr	r3, .L18
 199 0008 1B68     		ldr	r3, [r3]
 200 000a 0324     		mov	r4, #3
 201 000c 1C40     		and	r4, r3
 202              	.LVL8:
 472:.\Generated_Source\PSoC4/CyLib.c ****     }
 473:.\Generated_Source\PSoC4/CyLib.c **** 
 474:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 203              		.loc 1 474 0
 204 000e FFF7FEFF 		bl	CyExitCriticalSection
 205              	.LVL9:
 475:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 13


 476:.\Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 477:.\Generated_Source\PSoC4/CyLib.c **** }
 206              		.loc 1 477 0
 207 0012 201C     		mov	r0, r4
 208              		@ sp needed
 209              	.LVL10:
 210 0014 10BD     		pop	{r4, pc}
 211              	.L19:
 212 0016 C046     		.align	2
 213              	.L18:
 214 0018 28000340 		.word	1073938472
 215              		.cfi_endproc
 216              	.LFE7:
 217              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 218              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 219              		.align	2
 220              		.global	CySysClkWriteSysclkDiv
 221              		.code	16
 222              		.thumb_func
 223              		.type	CySysClkWriteSysclkDiv, %function
 224              	CySysClkWriteSysclkDiv:
 225              	.LFB8:
 478:.\Generated_Source\PSoC4/CyLib.c **** 
 479:.\Generated_Source\PSoC4/CyLib.c **** 
 480:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 481:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 482:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 483:.\Generated_Source\PSoC4/CyLib.c **** *
 484:.\Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 485:.\Generated_Source\PSoC4/CyLib.c **** *
 486:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 487:.\Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 488:.\Generated_Source\PSoC4/CyLib.c **** *
 489:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 490:.\Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 491:.\Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 492:.\Generated_Source\PSoC4/CyLib.c **** *
 493:.\Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 494:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 495:.\Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 496:.\Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 497:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 498:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 499:.\Generated_Source\PSoC4/CyLib.c **** *
 500:.\Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 501:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 502:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 503:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 504:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 505:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 506:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 507:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 508:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 509:.\Generated_Source\PSoC4/CyLib.c **** *
 510:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 511:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 512:.\Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 14


 226              		.loc 1 512 0
 227              		.cfi_startproc
 228              	.LVL11:
 229 0000 10B5     		push	{r4, lr}
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 4, -8
 232              		.cfi_offset 14, -4
 233 0002 041C     		mov	r4, r0
 513:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 514:.\Generated_Source\PSoC4/CyLib.c **** 
 515:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 234              		.loc 1 515 0
 235 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 236              	.LVL12:
 516:.\Generated_Source\PSoC4/CyLib.c **** 
 517:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 237              		.loc 1 517 0
 238 0008 A401     		lsl	r4, r4, #6
 239              	.LVL13:
 240 000a FF23     		mov	r3, #255
 241 000c 2340     		and	r3, r4
 518:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 519:.\Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 242              		.loc 1 519 0
 243 000e 0449     		ldr	r1, .L21
 244 0010 0A68     		ldr	r2, [r1]
 245 0012 C024     		mov	r4, #192
 246 0014 A243     		bic	r2, r4
 518:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 247              		.loc 1 518 0
 248 0016 1343     		orr	r3, r2
 517:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 249              		.loc 1 517 0
 250 0018 0B60     		str	r3, [r1]
 520:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 521:.\Generated_Source\PSoC4/CyLib.c **** 
 522:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 251              		.loc 1 522 0
 252 001a FFF7FEFF 		bl	CyExitCriticalSection
 253              	.LVL14:
 523:.\Generated_Source\PSoC4/CyLib.c **** }
 254              		.loc 1 523 0
 255              		@ sp needed
 256 001e 10BD     		pop	{r4, pc}
 257              	.L22:
 258              		.align	2
 259              	.L21:
 260 0020 28000340 		.word	1073938472
 261              		.cfi_endproc
 262              	.LFE8:
 263              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 264              		.section	.text.CySysClkWriteHfclkDiv,"ax",%progbits
 265              		.align	2
 266              		.global	CySysClkWriteHfclkDiv
 267              		.code	16
 268              		.thumb_func
 269              		.type	CySysClkWriteHfclkDiv, %function
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 15


 270              	CySysClkWriteHfclkDiv:
 271              	.LFB10:
 524:.\Generated_Source\PSoC4/CyLib.c **** 
 525:.\Generated_Source\PSoC4/CyLib.c **** 
 526:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 527:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 528:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 529:.\Generated_Source\PSoC4/CyLib.c **** *
 530:.\Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 531:.\Generated_Source\PSoC4/CyLib.c **** *
 532:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 533:.\Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 534:.\Generated_Source\PSoC4/CyLib.c **** *
 535:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 536:.\Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 537:.\Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 538:.\Generated_Source\PSoC4/CyLib.c **** *
 539:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 540:.\Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 541:.\Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 542:.\Generated_Source\PSoC4/CyLib.c **** *
 543:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 544:.\Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 545:.\Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 546:.\Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 547:.\Generated_Source\PSoC4/CyLib.c **** *
 548:.\Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 549:.\Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 550:.\Generated_Source\PSoC4/CyLib.c **** *
 551:.\Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 552:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 553:.\Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 554:.\Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 555:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 556:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 557:.\Generated_Source\PSoC4/CyLib.c **** *
 558:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 559:.\Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 560:.\Generated_Source\PSoC4/CyLib.c **** * the System clock.
 561:.\Generated_Source\PSoC4/CyLib.c **** *
 562:.\Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 563:.\Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 564:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 565:.\Generated_Source\PSoC4/CyLib.c **** * 4.
 566:.\Generated_Source\PSoC4/CyLib.c **** *
 567:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 568:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 569:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 570:.\Generated_Source\PSoC4/CyLib.c ****     {
 571:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 572:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 573:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 574:.\Generated_Source\PSoC4/CyLib.c ****         #else
 575:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 576:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 577:.\Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 578:.\Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 16


 579:.\Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 580:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 581:.\Generated_Source\PSoC4/CyLib.c **** 
 582:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 583:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 584:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 585:.\Generated_Source\PSoC4/CyLib.c **** 
 586:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 587:.\Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 588:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 589:.\Generated_Source\PSoC4/CyLib.c **** 
 590:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 591:.\Generated_Source\PSoC4/CyLib.c **** 
 592:.\Generated_Source\PSoC4/CyLib.c **** 
 593:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 594:.\Generated_Source\PSoC4/CyLib.c **** 
 595:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 596:.\Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 597:.\Generated_Source\PSoC4/CyLib.c ****             {
 598:.\Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 599:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 600:.\Generated_Source\PSoC4/CyLib.c ****             }
 601:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 602:.\Generated_Source\PSoC4/CyLib.c **** 
 603:.\Generated_Source\PSoC4/CyLib.c **** 
 604:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 605:.\Generated_Source\PSoC4/CyLib.c **** 
 606:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 607:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 608:.\Generated_Source\PSoC4/CyLib.c ****                 {
 609:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 610:.\Generated_Source\PSoC4/CyLib.c **** 
 611:.\Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 612:.\Generated_Source\PSoC4/CyLib.c ****                 {
 613:.\Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 614:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 615:.\Generated_Source\PSoC4/CyLib.c ****                 }
 616:.\Generated_Source\PSoC4/CyLib.c **** 
 617:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 618:.\Generated_Source\PSoC4/CyLib.c ****                 }
 619:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 620:.\Generated_Source\PSoC4/CyLib.c **** 
 621:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 622:.\Generated_Source\PSoC4/CyLib.c **** 
 623:.\Generated_Source\PSoC4/CyLib.c **** 
 624:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 625:.\Generated_Source\PSoC4/CyLib.c **** 
 626:.\Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 627:.\Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 628:.\Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 629:.\Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 630:.\Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 631:.\Generated_Source\PSoC4/CyLib.c **** 
 632:.\Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 633:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 634:.\Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 635:.\Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 17


 636:.\Generated_Source\PSoC4/CyLib.c **** 
 637:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 638:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 639:.\Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 640:.\Generated_Source\PSoC4/CyLib.c **** 
 641:.\Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 642:.\Generated_Source\PSoC4/CyLib.c **** 
 643:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 644:.\Generated_Source\PSoC4/CyLib.c ****         {
 645:.\Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 646:.\Generated_Source\PSoC4/CyLib.c ****             {
 647:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 648:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 649:.\Generated_Source\PSoC4/CyLib.c ****             }
 650:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 651:.\Generated_Source\PSoC4/CyLib.c ****             {
 652:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 653:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 654:.\Generated_Source\PSoC4/CyLib.c ****             }
 655:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 656:.\Generated_Source\PSoC4/CyLib.c ****             {
 657:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 658:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 659:.\Generated_Source\PSoC4/CyLib.c ****             }
 660:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 661:.\Generated_Source\PSoC4/CyLib.c ****             {
 662:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 663:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 664:.\Generated_Source\PSoC4/CyLib.c ****             }
 665:.\Generated_Source\PSoC4/CyLib.c ****             else
 666:.\Generated_Source\PSoC4/CyLib.c ****             {
 667:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 668:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 669:.\Generated_Source\PSoC4/CyLib.c ****             }
 670:.\Generated_Source\PSoC4/CyLib.c **** 
 671:.\Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 672:.\Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 673:.\Generated_Source\PSoC4/CyLib.c **** 
 674:.\Generated_Source\PSoC4/CyLib.c **** 
 675:.\Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 676:.\Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 677:.\Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 678:.\Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 679:.\Generated_Source\PSoC4/CyLib.c ****             *
 680:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 681:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 682:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 683:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 684:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 685:.\Generated_Source\PSoC4/CyLib.c ****             {
 686:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 687:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 688:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 689:.\Generated_Source\PSoC4/CyLib.c **** 
 690:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 691:.\Generated_Source\PSoC4/CyLib.c **** 
 692:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 18


 693:.\Generated_Source\PSoC4/CyLib.c ****             }
 694:.\Generated_Source\PSoC4/CyLib.c ****             else
 695:.\Generated_Source\PSoC4/CyLib.c ****             {
 696:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 697:.\Generated_Source\PSoC4/CyLib.c ****             }
 698:.\Generated_Source\PSoC4/CyLib.c **** 
 699:.\Generated_Source\PSoC4/CyLib.c **** 
 700:.\Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 701:.\Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 702:.\Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 703:.\Generated_Source\PSoC4/CyLib.c ****             *
 704:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 705:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 706:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 707:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 708:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 709:.\Generated_Source\PSoC4/CyLib.c ****             {
 710:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 711:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 712:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 713:.\Generated_Source\PSoC4/CyLib.c ****             }
 714:.\Generated_Source\PSoC4/CyLib.c **** 
 715:.\Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 716:.\Generated_Source\PSoC4/CyLib.c **** 
 717:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 718:.\Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 719:.\Generated_Source\PSoC4/CyLib.c ****                 {
 720:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 721:.\Generated_Source\PSoC4/CyLib.c ****                 }
 722:.\Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 723:.\Generated_Source\PSoC4/CyLib.c ****                 {
 724:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 725:.\Generated_Source\PSoC4/CyLib.c ****                 }
 726:.\Generated_Source\PSoC4/CyLib.c ****                 else
 727:.\Generated_Source\PSoC4/CyLib.c ****                 {
 728:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 729:.\Generated_Source\PSoC4/CyLib.c ****                 }
 730:.\Generated_Source\PSoC4/CyLib.c ****             #else
 731:.\Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 732:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 733:.\Generated_Source\PSoC4/CyLib.c **** 
 734:.\Generated_Source\PSoC4/CyLib.c **** 
 735:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 736:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 737:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 738:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 739:.\Generated_Source\PSoC4/CyLib.c **** 
 740:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 741:.\Generated_Source\PSoC4/CyLib.c ****             {
 742:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 743:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 744:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:.\Generated_Source\PSoC4/CyLib.c ****             }
 746:.\Generated_Source\PSoC4/CyLib.c ****         }
 747:.\Generated_Source\PSoC4/CyLib.c ****         else
 748:.\Generated_Source\PSoC4/CyLib.c ****         {
 749:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 19


 750:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 751:.\Generated_Source\PSoC4/CyLib.c ****         }
 752:.\Generated_Source\PSoC4/CyLib.c **** 
 753:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 754:.\Generated_Source\PSoC4/CyLib.c **** 
 755:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 756:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 757:.\Generated_Source\PSoC4/CyLib.c ****             {
 758:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 759:.\Generated_Source\PSoC4/CyLib.c ****             }
 760:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 761:.\Generated_Source\PSoC4/CyLib.c **** 
 762:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 763:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 764:.\Generated_Source\PSoC4/CyLib.c ****             {
 765:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 766:.\Generated_Source\PSoC4/CyLib.c ****             }
 767:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 768:.\Generated_Source\PSoC4/CyLib.c **** 
 769:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 770:.\Generated_Source\PSoC4/CyLib.c ****     }
 771:.\Generated_Source\PSoC4/CyLib.c **** 
 772:.\Generated_Source\PSoC4/CyLib.c **** #else
 773:.\Generated_Source\PSoC4/CyLib.c **** 
 774:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 775:.\Generated_Source\PSoC4/CyLib.c ****     {
 776:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 777:.\Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 778:.\Generated_Source\PSoC4/CyLib.c **** 
 779:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 780:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 781:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 782:.\Generated_Source\PSoC4/CyLib.c ****         
 783:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 784:.\Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 785:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 786:.\Generated_Source\PSoC4/CyLib.c **** 
 787:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 788:.\Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 789:.\Generated_Source\PSoC4/CyLib.c ****         #else
 790:.\Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 791:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 792:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 793:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 794:.\Generated_Source\PSoC4/CyLib.c ****         {
 795:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 796:.\Generated_Source\PSoC4/CyLib.c **** 
 797:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 798:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 799:.\Generated_Source\PSoC4/CyLib.c ****                 {
 800:.\Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 801:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 802:.\Generated_Source\PSoC4/CyLib.c ****                 }
 803:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 804:.\Generated_Source\PSoC4/CyLib.c **** 
 805:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 806:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 20


 807:.\Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 808:.\Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 809:.\Generated_Source\PSoC4/CyLib.c ****                     {
 810:.\Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 811:.\Generated_Source\PSoC4/CyLib.c **** 
 812:.\Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 813:.\Generated_Source\PSoC4/CyLib.c ****                     {
 814:.\Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 815:.\Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 816:.\Generated_Source\PSoC4/CyLib.c ****                     }
 817:.\Generated_Source\PSoC4/CyLib.c **** 
 818:.\Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 819:.\Generated_Source\PSoC4/CyLib.c ****                     }
 820:.\Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 821:.\Generated_Source\PSoC4/CyLib.c **** 
 822:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 823:.\Generated_Source\PSoC4/CyLib.c **** 
 824:.\Generated_Source\PSoC4/CyLib.c **** 
 825:.\Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 826:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 827:.\Generated_Source\PSoC4/CyLib.c **** 
 828:.\Generated_Source\PSoC4/CyLib.c **** 
 829:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 830:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 831:.\Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 832:.\Generated_Source\PSoC4/CyLib.c ****                 {
 833:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 834:.\Generated_Source\PSoC4/CyLib.c ****                 }
 835:.\Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 836:.\Generated_Source\PSoC4/CyLib.c ****                 {
 837:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 838:.\Generated_Source\PSoC4/CyLib.c ****                 }
 839:.\Generated_Source\PSoC4/CyLib.c ****                 else
 840:.\Generated_Source\PSoC4/CyLib.c ****                 {
 841:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 842:.\Generated_Source\PSoC4/CyLib.c ****                 }
 843:.\Generated_Source\PSoC4/CyLib.c ****             #else
 844:.\Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 845:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 846:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 847:.\Generated_Source\PSoC4/CyLib.c **** 
 848:.\Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 849:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 850:.\Generated_Source\PSoC4/CyLib.c **** 
 851:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 852:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 853:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 854:.\Generated_Source\PSoC4/CyLib.c **** 
 855:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 856:.\Generated_Source\PSoC4/CyLib.c **** 
 857:.\Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 858:.\Generated_Source\PSoC4/CyLib.c ****             {
 859:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 860:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 861:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 862:.\Generated_Source\PSoC4/CyLib.c **** 
 863:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 21


 864:.\Generated_Source\PSoC4/CyLib.c **** 
 865:.\Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 866:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 867:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 868:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 869:.\Generated_Source\PSoC4/CyLib.c ****             }
 870:.\Generated_Source\PSoC4/CyLib.c **** 
 871:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 872:.\Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 873:.\Generated_Source\PSoC4/CyLib.c ****                 {
 874:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 875:.\Generated_Source\PSoC4/CyLib.c ****                 }
 876:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 877:.\Generated_Source\PSoC4/CyLib.c ****         
 878:.\Generated_Source\PSoC4/CyLib.c ****         
 879:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 880:.\Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 881:.\Generated_Source\PSoC4/CyLib.c ****                 {
 882:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 883:.\Generated_Source\PSoC4/CyLib.c ****                 }
 884:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 885:.\Generated_Source\PSoC4/CyLib.c **** 
 886:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 887:.\Generated_Source\PSoC4/CyLib.c ****         }
 888:.\Generated_Source\PSoC4/CyLib.c ****         else
 889:.\Generated_Source\PSoC4/CyLib.c ****         {
 890:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 891:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 892:.\Generated_Source\PSoC4/CyLib.c ****         }
 893:.\Generated_Source\PSoC4/CyLib.c ****     }
 894:.\Generated_Source\PSoC4/CyLib.c **** 
 895:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 896:.\Generated_Source\PSoC4/CyLib.c **** 
 897:.\Generated_Source\PSoC4/CyLib.c **** 
 898:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 899:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 900:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 901:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 902:.\Generated_Source\PSoC4/CyLib.c ****     *
 903:.\Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 904:.\Generated_Source\PSoC4/CyLib.c ****     *
 905:.\Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 906:.\Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 907:.\Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 908:.\Generated_Source\PSoC4/CyLib.c ****     *
 909:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 910:.\Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 911:.\Generated_Source\PSoC4/CyLib.c ****     *
 912:.\Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 913:.\Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 914:.\Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 915:.\Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 916:.\Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 917:.\Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 918:.\Generated_Source\PSoC4/CyLib.c ****     *
 919:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 920:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 22


 921:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 922:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 923:.\Generated_Source\PSoC4/CyLib.c ****     *
 924:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 925:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 926:.\Generated_Source\PSoC4/CyLib.c ****     {
 272              		.loc 1 926 0
 273              		.cfi_startproc
 274              	.LVL15:
 275 0000 10B5     		push	{r4, lr}
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 4, -8
 278              		.cfi_offset 14, -4
 279 0002 041C     		mov	r4, r0
 927:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 928:.\Generated_Source\PSoC4/CyLib.c **** 
 929:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 280              		.loc 1 929 0
 281 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 282              	.LVL16:
 930:.\Generated_Source\PSoC4/CyLib.c **** 
 931:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 283              		.loc 1 931 0
 284 0008 054A     		ldr	r2, .L24
 285 000a 1368     		ldr	r3, [r2]
 286 000c 0C21     		mov	r1, #12
 287 000e 8B43     		bic	r3, r1
 932:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 933:.\Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 288              		.loc 1 933 0
 289 0010 0939     		sub	r1, r1, #9
 290 0012 0C40     		and	r4, r1
 291              	.LVL17:
 292 0014 A400     		lsl	r4, r4, #2
 932:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 293              		.loc 1 932 0
 294 0016 1C43     		orr	r4, r3
 931:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 295              		.loc 1 931 0
 296 0018 1460     		str	r4, [r2]
 934:.\Generated_Source\PSoC4/CyLib.c **** 
 935:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 297              		.loc 1 935 0
 298 001a FFF7FEFF 		bl	CyExitCriticalSection
 299              	.LVL18:
 936:.\Generated_Source\PSoC4/CyLib.c ****     }
 300              		.loc 1 936 0
 301              		@ sp needed
 302 001e 10BD     		pop	{r4, pc}
 303              	.L25:
 304              		.align	2
 305              	.L24:
 306 0020 28000340 		.word	1073938472
 307              		.cfi_endproc
 308              	.LFE10:
 309              		.size	CySysClkWriteHfclkDiv, .-CySysClkWriteHfclkDiv
 310              		.section	.text.CySysGetResetReason,"ax",%progbits
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 23


 311              		.align	2
 312              		.global	CySysGetResetReason
 313              		.code	16
 314              		.thumb_func
 315              		.type	CySysGetResetReason, %function
 316              	CySysGetResetReason:
 317              	.LFB11:
 937:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 938:.\Generated_Source\PSoC4/CyLib.c **** 
 939:.\Generated_Source\PSoC4/CyLib.c **** 
 940:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 941:.\Generated_Source\PSoC4/CyLib.c **** 
 942:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 943:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 944:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 945:.\Generated_Source\PSoC4/CyLib.c ****     *
 946:.\Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 947:.\Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
 948:.\Generated_Source\PSoC4/CyLib.c ****     *
 949:.\Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
 950:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
 951:.\Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
 952:.\Generated_Source\PSoC4/CyLib.c ****     * called.
 953:.\Generated_Source\PSoC4/CyLib.c ****     *
 954:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
 955:.\Generated_Source\PSoC4/CyLib.c ****     *
 956:.\Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
 957:.\Generated_Source\PSoC4/CyLib.c ****     *
 958:.\Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
 959:.\Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
 960:.\Generated_Source\PSoC4/CyLib.c ****     *
 961:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
 962:.\Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
 963:.\Generated_Source\PSoC4/CyLib.c ****     *
 964:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
 965:.\Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
 966:.\Generated_Source\PSoC4/CyLib.c ****     * is returned.
 967:.\Generated_Source\PSoC4/CyLib.c ****     *
 968:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
 969:.\Generated_Source\PSoC4/CyLib.c ****     *
 970:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 971:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 972:.\Generated_Source\PSoC4/CyLib.c ****     {
 973:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 974:.\Generated_Source\PSoC4/CyLib.c **** 
 975:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
 976:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
 977:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 978:.\Generated_Source\PSoC4/CyLib.c **** 
 979:.\Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
 980:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 981:.\Generated_Source\PSoC4/CyLib.c **** 
 982:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
 983:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 984:.\Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 985:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 986:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 24


 987:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 988:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
 989:.\Generated_Source\PSoC4/CyLib.c **** 
 990:.\Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 991:.\Generated_Source\PSoC4/CyLib.c ****         {
 992:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 993:.\Generated_Source\PSoC4/CyLib.c **** 
 994:.\Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 995:.\Generated_Source\PSoC4/CyLib.c ****             {
 996:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 997:.\Generated_Source\PSoC4/CyLib.c **** 
 998:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 999:.\Generated_Source\PSoC4/CyLib.c ****                 {
1000:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1001:.\Generated_Source\PSoC4/CyLib.c ****                     break;
1002:.\Generated_Source\PSoC4/CyLib.c ****                 }
1003:.\Generated_Source\PSoC4/CyLib.c ****             }
1004:.\Generated_Source\PSoC4/CyLib.c **** 
1005:.\Generated_Source\PSoC4/CyLib.c ****         }
1006:.\Generated_Source\PSoC4/CyLib.c **** 
1007:.\Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1008:.\Generated_Source\PSoC4/CyLib.c ****     }
1009:.\Generated_Source\PSoC4/CyLib.c **** 
1010:.\Generated_Source\PSoC4/CyLib.c **** 
1011:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1012:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1013:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1014:.\Generated_Source\PSoC4/CyLib.c ****     *
1015:.\Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1016:.\Generated_Source\PSoC4/CyLib.c ****     *
1017:.\Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1018:.\Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1019:.\Generated_Source\PSoC4/CyLib.c ****     * functioning.
1020:.\Generated_Source\PSoC4/CyLib.c ****     *
1021:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1022:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1023:.\Generated_Source\PSoC4/CyLib.c ****     {
1024:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1025:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1026:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1027:.\Generated_Source\PSoC4/CyLib.c **** 
1028:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1029:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1030:.\Generated_Source\PSoC4/CyLib.c ****         #else
1031:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1032:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1033:.\Generated_Source\PSoC4/CyLib.c ****     }
1034:.\Generated_Source\PSoC4/CyLib.c **** 
1035:.\Generated_Source\PSoC4/CyLib.c **** 
1036:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1037:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1038:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1039:.\Generated_Source\PSoC4/CyLib.c ****     *
1040:.\Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1041:.\Generated_Source\PSoC4/CyLib.c ****     *
1042:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1043:.\Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 25


1044:.\Generated_Source\PSoC4/CyLib.c ****     *
1045:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1046:.\Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1047:.\Generated_Source\PSoC4/CyLib.c ****     *
1048:.\Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1049:.\Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1050:.\Generated_Source\PSoC4/CyLib.c ****     *
1051:.\Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1052:.\Generated_Source\PSoC4/CyLib.c ****     *
1053:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1054:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1055:.\Generated_Source\PSoC4/CyLib.c ****     {
1056:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1057:.\Generated_Source\PSoC4/CyLib.c **** 
1058:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1059:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1060:.\Generated_Source\PSoC4/CyLib.c ****         #else
1061:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1062:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1063:.\Generated_Source\PSoC4/CyLib.c **** 
1064:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1065:.\Generated_Source\PSoC4/CyLib.c ****     }
1066:.\Generated_Source\PSoC4/CyLib.c **** 
1067:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS)
1068:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1069:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1070:.\Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1071:.\Generated_Source\PSoC4/CyLib.c ****         *
1072:.\Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1073:.\Generated_Source\PSoC4/CyLib.c ****         *
1074:.\Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1075:.\Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1076:.\Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1077:.\Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1078:.\Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1079:.\Generated_Source\PSoC4/CyLib.c ****         *
1080:.\Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1081:.\Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1082:.\Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1083:.\Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1084:.\Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1085:.\Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1086:.\Generated_Source\PSoC4/CyLib.c ****         *
1087:.\Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1088:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1089:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1090:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1091:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1092:.\Generated_Source\PSoC4/CyLib.c ****         *
1093:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1094:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1095:.\Generated_Source\PSoC4/CyLib.c ****         {
1096:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1097:.\Generated_Source\PSoC4/CyLib.c **** 
1098:.\Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1099:.\Generated_Source\PSoC4/CyLib.c ****             {
1100:.\Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 26


1101:.\Generated_Source\PSoC4/CyLib.c **** 
1102:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1103:.\Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1104:.\Generated_Source\PSoC4/CyLib.c **** 
1105:.\Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1106:.\Generated_Source\PSoC4/CyLib.c ****             }
1107:.\Generated_Source\PSoC4/CyLib.c ****             else
1108:.\Generated_Source\PSoC4/CyLib.c ****             {
1109:.\Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1110:.\Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1111:.\Generated_Source\PSoC4/CyLib.c ****             }
1112:.\Generated_Source\PSoC4/CyLib.c ****         }
1113:.\Generated_Source\PSoC4/CyLib.c **** 
1114:.\Generated_Source\PSoC4/CyLib.c ****     #else
1115:.\Generated_Source\PSoC4/CyLib.c **** 
1116:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1117:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1118:.\Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1119:.\Generated_Source\PSoC4/CyLib.c ****         *
1120:.\Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1121:.\Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1122:.\Generated_Source\PSoC4/CyLib.c ****         *
1123:.\Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1124:.\Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1125:.\Generated_Source\PSoC4/CyLib.c ****         *
1126:.\Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1127:.\Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1128:.\Generated_Source\PSoC4/CyLib.c ****         *
1129:.\Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1130:.\Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1131:.\Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1132:.\Generated_Source\PSoC4/CyLib.c ****         *
1133:.\Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1134:.\Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1135:.\Generated_Source\PSoC4/CyLib.c ****         *
1136:.\Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1137:.\Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1138:.\Generated_Source\PSoC4/CyLib.c ****         *
1139:.\Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1140:.\Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1141:.\Generated_Source\PSoC4/CyLib.c ****         *
1142:.\Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1143:.\Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1144:.\Generated_Source\PSoC4/CyLib.c ****         *
1145:.\Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1146:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1147:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1148:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1149:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1150:.\Generated_Source\PSoC4/CyLib.c ****         *
1151:.\Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1152:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1153:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1154:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1155:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1156:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1157:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 27


1158:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1159:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1160:.\Generated_Source\PSoC4/CyLib.c ****         *
1161:.\Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1162:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1163:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1164:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1165:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1166:.\Generated_Source\PSoC4/CyLib.c ****         *
1167:.\Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1168:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1169:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1170:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1171:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1172:.\Generated_Source\PSoC4/CyLib.c ****         *
1173:.\Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1174:.\Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1175:.\Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1176:.\Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1177:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1178:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1179:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1180:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1181:.\Generated_Source\PSoC4/CyLib.c ****         *
1182:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1183:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1184:.\Generated_Source\PSoC4/CyLib.c ****         {
1185:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1186:.\Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1187:.\Generated_Source\PSoC4/CyLib.c **** 
1188:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1189:.\Generated_Source\PSoC4/CyLib.c **** 
1190:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1191:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1192:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1193:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1194:.\Generated_Source\PSoC4/CyLib.c **** 
1195:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1196:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1197:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1198:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1199:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1200:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1201:.\Generated_Source\PSoC4/CyLib.c **** 
1202:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1203:.\Generated_Source\PSoC4/CyLib.c **** 
1204:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1205:.\Generated_Source\PSoC4/CyLib.c ****         }
1206:.\Generated_Source\PSoC4/CyLib.c **** 
1207:.\Generated_Source\PSoC4/CyLib.c **** 
1208:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1209:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1210:.\Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1211:.\Generated_Source\PSoC4/CyLib.c ****         *
1212:.\Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1213:.\Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1214:.\Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 28


1215:.\Generated_Source\PSoC4/CyLib.c ****         *
1216:.\Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1217:.\Generated_Source\PSoC4/CyLib.c ****         *
1218:.\Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1219:.\Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1220:.\Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1221:.\Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1222:.\Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1223:.\Generated_Source\PSoC4/CyLib.c ****         *
1224:.\Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1225:.\Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1226:.\Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1227:.\Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1228:.\Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1229:.\Generated_Source\PSoC4/CyLib.c ****         *
1230:.\Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1231:.\Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1232:.\Generated_Source\PSoC4/CyLib.c ****         *
1233:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1234:.\Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1235:.\Generated_Source\PSoC4/CyLib.c ****         {
1236:.\Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1237:.\Generated_Source\PSoC4/CyLib.c **** 
1238:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1239:.\Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1240:.\Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1241:.\Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1242:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1243:.\Generated_Source\PSoC4/CyLib.c **** 
1244:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1245:.\Generated_Source\PSoC4/CyLib.c **** 
1246:.\Generated_Source\PSoC4/CyLib.c **** 
1247:.\Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1248:.\Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1249:.\Generated_Source\PSoC4/CyLib.c ****             {
1250:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1251:.\Generated_Source\PSoC4/CyLib.c ****             }
1252:.\Generated_Source\PSoC4/CyLib.c ****             else
1253:.\Generated_Source\PSoC4/CyLib.c ****             {
1254:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1255:.\Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1256:.\Generated_Source\PSoC4/CyLib.c **** 
1257:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1258:.\Generated_Source\PSoC4/CyLib.c ****                 {
1259:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1260:.\Generated_Source\PSoC4/CyLib.c ****                 }
1261:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1262:.\Generated_Source\PSoC4/CyLib.c ****                 {
1263:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1264:.\Generated_Source\PSoC4/CyLib.c ****                 }
1265:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1266:.\Generated_Source\PSoC4/CyLib.c ****                 {
1267:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1268:.\Generated_Source\PSoC4/CyLib.c ****                 }
1269:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1270:.\Generated_Source\PSoC4/CyLib.c ****                 {
1271:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 29


1272:.\Generated_Source\PSoC4/CyLib.c ****                 }
1273:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1274:.\Generated_Source\PSoC4/CyLib.c ****                 {
1275:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1276:.\Generated_Source\PSoC4/CyLib.c ****                 }
1277:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1278:.\Generated_Source\PSoC4/CyLib.c ****                 {
1279:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1280:.\Generated_Source\PSoC4/CyLib.c ****                 }
1281:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1282:.\Generated_Source\PSoC4/CyLib.c ****                 {
1283:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1284:.\Generated_Source\PSoC4/CyLib.c ****                 }
1285:.\Generated_Source\PSoC4/CyLib.c ****                 else
1286:.\Generated_Source\PSoC4/CyLib.c ****                 {
1287:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1288:.\Generated_Source\PSoC4/CyLib.c ****                 }
1289:.\Generated_Source\PSoC4/CyLib.c **** 
1290:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1291:.\Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1292:.\Generated_Source\PSoC4/CyLib.c **** 
1293:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1294:.\Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1295:.\Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1296:.\Generated_Source\PSoC4/CyLib.c ****                 {
1297:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1298:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1299:.\Generated_Source\PSoC4/CyLib.c ****                 }
1300:.\Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1301:.\Generated_Source\PSoC4/CyLib.c ****                 {
1302:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1303:.\Generated_Source\PSoC4/CyLib.c ****                 }
1304:.\Generated_Source\PSoC4/CyLib.c ****                 else
1305:.\Generated_Source\PSoC4/CyLib.c ****                 {
1306:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1307:.\Generated_Source\PSoC4/CyLib.c ****                 }
1308:.\Generated_Source\PSoC4/CyLib.c **** 
1309:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1310:.\Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1311:.\Generated_Source\PSoC4/CyLib.c ****                 {
1312:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1313:.\Generated_Source\PSoC4/CyLib.c ****                 }
1314:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1315:.\Generated_Source\PSoC4/CyLib.c ****                 {
1316:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1317:.\Generated_Source\PSoC4/CyLib.c ****                 }
1318:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1319:.\Generated_Source\PSoC4/CyLib.c ****                 {
1320:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1321:.\Generated_Source\PSoC4/CyLib.c ****                 }
1322:.\Generated_Source\PSoC4/CyLib.c ****                 else
1323:.\Generated_Source\PSoC4/CyLib.c ****                 {
1324:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1325:.\Generated_Source\PSoC4/CyLib.c ****                 }
1326:.\Generated_Source\PSoC4/CyLib.c **** 
1327:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1328:.\Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 30


1329:.\Generated_Source\PSoC4/CyLib.c **** 
1330:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1331:.\Generated_Source\PSoC4/CyLib.c **** 
1332:.\Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1333:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1334:.\Generated_Source\PSoC4/CyLib.c ****                 {
1335:.\Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1336:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1337:.\Generated_Source\PSoC4/CyLib.c ****                 }
1338:.\Generated_Source\PSoC4/CyLib.c ****                 else
1339:.\Generated_Source\PSoC4/CyLib.c ****                 {
1340:.\Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1341:.\Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1342:.\Generated_Source\PSoC4/CyLib.c ****                     */
1343:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1344:.\Generated_Source\PSoC4/CyLib.c ****                 }
1345:.\Generated_Source\PSoC4/CyLib.c ****             }
1346:.\Generated_Source\PSoC4/CyLib.c **** 
1347:.\Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1348:.\Generated_Source\PSoC4/CyLib.c ****         }
1349:.\Generated_Source\PSoC4/CyLib.c **** 
1350:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1351:.\Generated_Source\PSoC4/CyLib.c **** 
1352:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1353:.\Generated_Source\PSoC4/CyLib.c **** 
1354:.\Generated_Source\PSoC4/CyLib.c **** 
1355:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1356:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1357:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1358:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1359:.\Generated_Source\PSoC4/CyLib.c ****     *
1360:.\Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1361:.\Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1362:.\Generated_Source\PSoC4/CyLib.c ****     *
1363:.\Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1364:.\Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1365:.\Generated_Source\PSoC4/CyLib.c ****     *
1366:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1367:.\Generated_Source\PSoC4/CyLib.c ****     *
1368:.\Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1369:.\Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1370:.\Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1371:.\Generated_Source\PSoC4/CyLib.c ****     *
1372:.\Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1373:.\Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1374:.\Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1375:.\Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1376:.\Generated_Source\PSoC4/CyLib.c ****     *
1377:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1378:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1379:.\Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1380:.\Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1381:.\Generated_Source\PSoC4/CyLib.c ****     * still be used.
1382:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1383:.\Generated_Source\PSoC4/CyLib.c ****     *
1384:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1385:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 31


1386:.\Generated_Source\PSoC4/CyLib.c ****     {
1387:.\Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1388:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1389:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1390:.\Generated_Source\PSoC4/CyLib.c **** 
1391:.\Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1392:.\Generated_Source\PSoC4/CyLib.c ****         {
1393:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1394:.\Generated_Source\PSoC4/CyLib.c **** 
1395:.\Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1396:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1397:.\Generated_Source\PSoC4/CyLib.c **** 
1398:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1399:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1400:.\Generated_Source\PSoC4/CyLib.c **** 
1401:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1402:.\Generated_Source\PSoC4/CyLib.c **** 
1403:.\Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1404:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1405:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1406:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1407:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1408:.\Generated_Source\PSoC4/CyLib.c **** 
1409:.\Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1410:.\Generated_Source\PSoC4/CyLib.c ****             {
1411:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1412:.\Generated_Source\PSoC4/CyLib.c **** 
1413:.\Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1414:.\Generated_Source\PSoC4/CyLib.c ****                 {
1415:.\Generated_Source\PSoC4/CyLib.c **** 
1416:.\Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1417:.\Generated_Source\PSoC4/CyLib.c ****                     {
1418:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1419:.\Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1420:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1421:.\Generated_Source\PSoC4/CyLib.c ****                     }
1422:.\Generated_Source\PSoC4/CyLib.c **** 
1423:.\Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1424:.\Generated_Source\PSoC4/CyLib.c ****                     counts--;
1425:.\Generated_Source\PSoC4/CyLib.c ****                 }
1426:.\Generated_Source\PSoC4/CyLib.c ****             }
1427:.\Generated_Source\PSoC4/CyLib.c ****         }
1428:.\Generated_Source\PSoC4/CyLib.c ****         else
1429:.\Generated_Source\PSoC4/CyLib.c ****         {
1430:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1431:.\Generated_Source\PSoC4/CyLib.c ****         }
1432:.\Generated_Source\PSoC4/CyLib.c **** 
1433:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1434:.\Generated_Source\PSoC4/CyLib.c ****     }
1435:.\Generated_Source\PSoC4/CyLib.c **** 
1436:.\Generated_Source\PSoC4/CyLib.c **** 
1437:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1438:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1439:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1440:.\Generated_Source\PSoC4/CyLib.c ****     *
1441:.\Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1442:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 32


1443:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1444:.\Generated_Source\PSoC4/CyLib.c ****     *
1445:.\Generated_Source\PSoC4/CyLib.c ****     * PLL:
1446:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1447:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1448:.\Generated_Source\PSoC4/CyLib.c ****     *
1449:.\Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1450:.\Generated_Source\PSoC4/CyLib.c ****     *
1451:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1452:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1453:.\Generated_Source\PSoC4/CyLib.c ****     {
1454:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1455:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1456:.\Generated_Source\PSoC4/CyLib.c **** 
1457:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1458:.\Generated_Source\PSoC4/CyLib.c **** 
1459:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1460:.\Generated_Source\PSoC4/CyLib.c **** 
1461:.\Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1462:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1463:.\Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1464:.\Generated_Source\PSoC4/CyLib.c ****         {
1465:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1466:.\Generated_Source\PSoC4/CyLib.c ****         }
1467:.\Generated_Source\PSoC4/CyLib.c **** 
1468:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1469:.\Generated_Source\PSoC4/CyLib.c **** 
1470:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1471:.\Generated_Source\PSoC4/CyLib.c ****     }
1472:.\Generated_Source\PSoC4/CyLib.c **** 
1473:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1474:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1475:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1476:.\Generated_Source\PSoC4/CyLib.c ****     *
1477:.\Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1478:.\Generated_Source\PSoC4/CyLib.c ****     *
1479:.\Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1480:.\Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1481:.\Generated_Source\PSoC4/CyLib.c ****     *
1482:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1483:.\Generated_Source\PSoC4/CyLib.c ****     *
1484:.\Generated_Source\PSoC4/CyLib.c ****     * PLL:
1485:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1486:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1487:.\Generated_Source\PSoC4/CyLib.c ****     *
1488:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1489:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1490:.\Generated_Source\PSoC4/CyLib.c ****     {
1491:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1492:.\Generated_Source\PSoC4/CyLib.c **** 
1493:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1494:.\Generated_Source\PSoC4/CyLib.c ****         {
1495:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1496:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1497:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1498:.\Generated_Source\PSoC4/CyLib.c ****         }
1499:.\Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 33


1500:.\Generated_Source\PSoC4/CyLib.c **** 
1501:.\Generated_Source\PSoC4/CyLib.c **** 
1502:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1503:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1504:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1505:.\Generated_Source\PSoC4/CyLib.c ****     *
1506:.\Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1507:.\Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1508:.\Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1509:.\Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1510:.\Generated_Source\PSoC4/CyLib.c ****     *
1511:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1512:.\Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1513:.\Generated_Source\PSoC4/CyLib.c ****     *
1514:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1515:.\Generated_Source\PSoC4/CyLib.c ****     *
1516:.\Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1517:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1518:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1519:.\Generated_Source\PSoC4/CyLib.c ****     *
1520:.\Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1521:.\Generated_Source\PSoC4/CyLib.c ****     * divider.
1522:.\Generated_Source\PSoC4/CyLib.c ****     *
1523:.\Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1524:.\Generated_Source\PSoC4/CyLib.c ****     *
1525:.\Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1526:.\Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1527:.\Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1528:.\Generated_Source\PSoC4/CyLib.c ****     *
1529:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1530:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1531:.\Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1532:.\Generated_Source\PSoC4/CyLib.c ****     *
1533:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1534:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1535:.\Generated_Source\PSoC4/CyLib.c ****     {
1536:.\Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1537:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1538:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1539:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1540:.\Generated_Source\PSoC4/CyLib.c **** 
1541:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1542:.\Generated_Source\PSoC4/CyLib.c **** 
1543:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1544:.\Generated_Source\PSoC4/CyLib.c **** 
1545:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1546:.\Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1547:.\Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1548:.\Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1549:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1550:.\Generated_Source\PSoC4/CyLib.c ****         {
1551:.\Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1552:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1553:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1554:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1555:.\Generated_Source\PSoC4/CyLib.c **** 
1556:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 34


1557:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1558:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1559:.\Generated_Source\PSoC4/CyLib.c **** 
1560:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1561:.\Generated_Source\PSoC4/CyLib.c **** 
1562:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1563:.\Generated_Source\PSoC4/CyLib.c ****         }
1564:.\Generated_Source\PSoC4/CyLib.c **** 
1565:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1566:.\Generated_Source\PSoC4/CyLib.c **** 
1567:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1568:.\Generated_Source\PSoC4/CyLib.c ****     }
1569:.\Generated_Source\PSoC4/CyLib.c **** 
1570:.\Generated_Source\PSoC4/CyLib.c **** 
1571:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1572:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1573:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1574:.\Generated_Source\PSoC4/CyLib.c ****     *
1575:.\Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1576:.\Generated_Source\PSoC4/CyLib.c ****     *
1577:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1578:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1579:.\Generated_Source\PSoC4/CyLib.c ****     *
1580:.\Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1581:.\Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1582:.\Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1583:.\Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1584:.\Generated_Source\PSoC4/CyLib.c ****     *
1585:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1586:.\Generated_Source\PSoC4/CyLib.c ****     *
1587:.\Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1588:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1589:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1590:.\Generated_Source\PSoC4/CyLib.c ****     *
1591:.\Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1592:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1593:.\Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1594:.\Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1595:.\Generated_Source\PSoC4/CyLib.c ****     *
1596:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1597:.\Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1598:.\Generated_Source\PSoC4/CyLib.c ****     *
1599:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1600:.\Generated_Source\PSoC4/CyLib.c ****     *
1601:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1602:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1603:.\Generated_Source\PSoC4/CyLib.c ****     {
1604:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1605:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1606:.\Generated_Source\PSoC4/CyLib.c **** 
1607:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1608:.\Generated_Source\PSoC4/CyLib.c **** 
1609:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1610:.\Generated_Source\PSoC4/CyLib.c ****         {
1611:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1612:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1613:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 35


1614:.\Generated_Source\PSoC4/CyLib.c ****         }
1615:.\Generated_Source\PSoC4/CyLib.c **** 
1616:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1617:.\Generated_Source\PSoC4/CyLib.c ****     }
1618:.\Generated_Source\PSoC4/CyLib.c **** 
1619:.\Generated_Source\PSoC4/CyLib.c **** 
1620:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1621:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1622:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1623:.\Generated_Source\PSoC4/CyLib.c ****     *
1624:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1625:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1626:.\Generated_Source\PSoC4/CyLib.c ****     *
1627:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1628:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1629:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1630:.\Generated_Source\PSoC4/CyLib.c ****     *
1631:.\Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1632:.\Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1633:.\Generated_Source\PSoC4/CyLib.c ****     *
1634:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1635:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1636:.\Generated_Source\PSoC4/CyLib.c ****     {
1637:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1638:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1639:.\Generated_Source\PSoC4/CyLib.c **** 
1640:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1641:.\Generated_Source\PSoC4/CyLib.c **** 
1642:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1643:.\Generated_Source\PSoC4/CyLib.c **** 
1644:.\Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1645:.\Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1646:.\Generated_Source\PSoC4/CyLib.c **** 
1647:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1648:.\Generated_Source\PSoC4/CyLib.c **** 
1649:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1650:.\Generated_Source\PSoC4/CyLib.c ****     }
1651:.\Generated_Source\PSoC4/CyLib.c **** 
1652:.\Generated_Source\PSoC4/CyLib.c **** 
1653:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1654:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1655:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1656:.\Generated_Source\PSoC4/CyLib.c ****     *
1657:.\Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1658:.\Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1659:.\Generated_Source\PSoC4/CyLib.c ****     *
1660:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1661:.\Generated_Source\PSoC4/CyLib.c ****     *
1662:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1663:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1664:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1665:.\Generated_Source\PSoC4/CyLib.c ****     *
1666:.\Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1667:.\Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1668:.\Generated_Source\PSoC4/CyLib.c ****     *
1669:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1670:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 36


1671:.\Generated_Source\PSoC4/CyLib.c ****     {
1672:.\Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1673:.\Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1674:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1675:.\Generated_Source\PSoC4/CyLib.c **** 
1676:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1677:.\Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1678:.\Generated_Source\PSoC4/CyLib.c **** 
1679:.\Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1680:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1681:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1682:.\Generated_Source\PSoC4/CyLib.c ****         {
1683:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1684:.\Generated_Source\PSoC4/CyLib.c ****         }
1685:.\Generated_Source\PSoC4/CyLib.c **** 
1686:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1687:.\Generated_Source\PSoC4/CyLib.c ****     }
1688:.\Generated_Source\PSoC4/CyLib.c **** 
1689:.\Generated_Source\PSoC4/CyLib.c **** 
1690:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1691:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1692:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1693:.\Generated_Source\PSoC4/CyLib.c ****     *
1694:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1695:.\Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1696:.\Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1697:.\Generated_Source\PSoC4/CyLib.c ****     *  this API.
1698:.\Generated_Source\PSoC4/CyLib.c ****     *
1699:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1700:.\Generated_Source\PSoC4/CyLib.c ****     *
1701:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1702:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1703:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1704:.\Generated_Source\PSoC4/CyLib.c ****     *
1705:.\Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1706:.\Generated_Source\PSoC4/CyLib.c ****     *
1707:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1708:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1709:.\Generated_Source\PSoC4/CyLib.c ****     {
1710:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1711:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1712:.\Generated_Source\PSoC4/CyLib.c **** 
1713:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1714:.\Generated_Source\PSoC4/CyLib.c **** 
1715:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1716:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1717:.\Generated_Source\PSoC4/CyLib.c **** 
1718:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1719:.\Generated_Source\PSoC4/CyLib.c **** 
1720:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1721:.\Generated_Source\PSoC4/CyLib.c ****     }
1722:.\Generated_Source\PSoC4/CyLib.c **** 
1723:.\Generated_Source\PSoC4/CyLib.c **** 
1724:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1725:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1726:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1727:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 37


1728:.\Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1729:.\Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1730:.\Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1731:.\Generated_Source\PSoC4/CyLib.c ****     *
1732:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1733:.\Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1734:.\Generated_Source\PSoC4/CyLib.c ****     *
1735:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1736:.\Generated_Source\PSoC4/CyLib.c ****     *
1737:.\Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1738:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1739:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1740:.\Generated_Source\PSoC4/CyLib.c ****     *
1741:.\Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1742:.\Generated_Source\PSoC4/CyLib.c ****     *
1743:.\Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1744:.\Generated_Source\PSoC4/CyLib.c ****     *
1745:.\Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1746:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1747:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1748:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1749:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1750:.\Generated_Source\PSoC4/CyLib.c ****     *
1751:.\Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1752:.\Generated_Source\PSoC4/CyLib.c ****     *
1753:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1754:.\Generated_Source\PSoC4/CyLib.c ****     * frequency.
1755:.\Generated_Source\PSoC4/CyLib.c ****     *
1756:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1757:.\Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1758:.\Generated_Source\PSoC4/CyLib.c ****     *
1759:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1760:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1761:.\Generated_Source\PSoC4/CyLib.c ****     {
1762:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1763:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1764:.\Generated_Source\PSoC4/CyLib.c **** 
1765:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1766:.\Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1767:.\Generated_Source\PSoC4/CyLib.c **** 
1768:.\Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1769:.\Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1770:.\Generated_Source\PSoC4/CyLib.c **** 
1771:.\Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1772:.\Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1773:.\Generated_Source\PSoC4/CyLib.c **** 
1774:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1775:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1776:.\Generated_Source\PSoC4/CyLib.c **** 
1777:.\Generated_Source\PSoC4/CyLib.c **** 
1778:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1779:.\Generated_Source\PSoC4/CyLib.c **** 
1780:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1781:.\Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1782:.\Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1783:.\Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1784:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 38


1785:.\Generated_Source\PSoC4/CyLib.c ****         {
1786:.\Generated_Source\PSoC4/CyLib.c **** 
1787:.\Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1788:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1789:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1790:.\Generated_Source\PSoC4/CyLib.c **** 
1791:.\Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1792:.\Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1793:.\Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1794:.\Generated_Source\PSoC4/CyLib.c **** 
1795:.\Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1796:.\Generated_Source\PSoC4/CyLib.c ****             {
1797:.\Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1798:.\Generated_Source\PSoC4/CyLib.c ****                 {
1799:.\Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1800:.\Generated_Source\PSoC4/CyLib.c **** 
1801:.\Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1802:.\Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1803:.\Generated_Source\PSoC4/CyLib.c **** 
1804:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1805:.\Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1806:.\Generated_Source\PSoC4/CyLib.c **** 
1807:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1808:.\Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1809:.\Generated_Source\PSoC4/CyLib.c **** 
1810:.\Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1811:.\Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1812:.\Generated_Source\PSoC4/CyLib.c ****                     {
1813:.\Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1814:.\Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1815:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1816:.\Generated_Source\PSoC4/CyLib.c ****                     }
1817:.\Generated_Source\PSoC4/CyLib.c ****                 }
1818:.\Generated_Source\PSoC4/CyLib.c **** 
1819:.\Generated_Source\PSoC4/CyLib.c **** 
1820:.\Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1821:.\Generated_Source\PSoC4/CyLib.c ****                 {
1822:.\Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1823:.\Generated_Source\PSoC4/CyLib.c ****                     {
1824:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1825:.\Generated_Source\PSoC4/CyLib.c ****                     }
1826:.\Generated_Source\PSoC4/CyLib.c ****                 }
1827:.\Generated_Source\PSoC4/CyLib.c ****             }
1828:.\Generated_Source\PSoC4/CyLib.c **** 
1829:.\Generated_Source\PSoC4/CyLib.c ****         }
1830:.\Generated_Source\PSoC4/CyLib.c **** 
1831:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1832:.\Generated_Source\PSoC4/CyLib.c ****     }
1833:.\Generated_Source\PSoC4/CyLib.c **** 
1834:.\Generated_Source\PSoC4/CyLib.c **** 
1835:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1836:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1837:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1838:.\Generated_Source\PSoC4/CyLib.c ****     *
1839:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1840:.\Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1841:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 39


1842:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1843:.\Generated_Source\PSoC4/CyLib.c ****     *
1844:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1845:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1846:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1847:.\Generated_Source\PSoC4/CyLib.c ****     *
1848:.\Generated_Source\PSoC4/CyLib.c ****     * \param source:
1849:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
1850:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
1851:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
1852:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
1853:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
1854:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
1855:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
1856:.\Generated_Source\PSoC4/CyLib.c ****     *
1857:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1858:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
1859:.\Generated_Source\PSoC4/CyLib.c ****     {
1860:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1861:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1862:.\Generated_Source\PSoC4/CyLib.c **** 
1863:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1864:.\Generated_Source\PSoC4/CyLib.c **** 
1865:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1866:.\Generated_Source\PSoC4/CyLib.c ****         {
1867:.\Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
1868:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
1869:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
1870:.\Generated_Source\PSoC4/CyLib.c ****         }
1871:.\Generated_Source\PSoC4/CyLib.c **** 
1872:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1873:.\Generated_Source\PSoC4/CyLib.c ****     }
1874:.\Generated_Source\PSoC4/CyLib.c **** 
1875:.\Generated_Source\PSoC4/CyLib.c **** 
1876:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1877:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
1878:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1879:.\Generated_Source\PSoC4/CyLib.c ****     *
1880:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
1881:.\Generated_Source\PSoC4/CyLib.c ****     *
1882:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
1883:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1884:.\Generated_Source\PSoC4/CyLib.c ****     *
1885:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1886:.\Generated_Source\PSoC4/CyLib.c ****     *
1887:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1888:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1889:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1890:.\Generated_Source\PSoC4/CyLib.c ****     *
1891:.\Generated_Source\PSoC4/CyLib.c ****     * \param divider:
1892:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
1893:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1894:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1895:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1896:.\Generated_Source\PSoC4/CyLib.c ****     *
1897:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
1898:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 40


1899:.\Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
1900:.\Generated_Source\PSoC4/CyLib.c ****     *
1901:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1902:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
1903:.\Generated_Source\PSoC4/CyLib.c ****     {
1904:.\Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
1905:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1906:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1907:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1908:.\Generated_Source\PSoC4/CyLib.c **** 
1909:.\Generated_Source\PSoC4/CyLib.c **** 
1910:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1911:.\Generated_Source\PSoC4/CyLib.c **** 
1912:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1913:.\Generated_Source\PSoC4/CyLib.c **** 
1914:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
1915:.\Generated_Source\PSoC4/CyLib.c ****         {
1916:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
1917:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
1918:.\Generated_Source\PSoC4/CyLib.c **** 
1919:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
1920:.\Generated_Source\PSoC4/CyLib.c **** 
1921:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1922:.\Generated_Source\PSoC4/CyLib.c ****         }
1923:.\Generated_Source\PSoC4/CyLib.c **** 
1924:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1925:.\Generated_Source\PSoC4/CyLib.c **** 
1926:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1927:.\Generated_Source\PSoC4/CyLib.c ****     }
1928:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
1929:.\Generated_Source\PSoC4/CyLib.c **** 
1930:.\Generated_Source\PSoC4/CyLib.c **** 
1931:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
1932:.\Generated_Source\PSoC4/CyLib.c **** 
1933:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1934:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
1935:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1936:.\Generated_Source\PSoC4/CyLib.c ****     *
1937:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
1938:.\Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
1939:.\Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
1940:.\Generated_Source\PSoC4/CyLib.c ****     *
1941:.\Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
1942:.\Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
1943:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
1944:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
1945:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
1946:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
1947:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
1948:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
1949:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
1950:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
1951:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
1952:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
1953:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
1954:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
1955:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 41


1956:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
1957:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
1958:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
1959:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
1960:.\Generated_Source\PSoC4/CyLib.c ****     *
1961:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1962:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
1963:.\Generated_Source\PSoC4/CyLib.c ****     {
1964:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
1965:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
1966:.\Generated_Source\PSoC4/CyLib.c **** 
1967:.\Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
1968:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
1969:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
1970:.\Generated_Source\PSoC4/CyLib.c **** 
1971:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
1972:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
1973:.\Generated_Source\PSoC4/CyLib.c **** 
1974:.\Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
1975:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
1976:.\Generated_Source\PSoC4/CyLib.c **** 
1977:.\Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
1978:.\Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
1979:.\Generated_Source\PSoC4/CyLib.c **** 
1980:.\Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
1981:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
1982:.\Generated_Source\PSoC4/CyLib.c ****     }
1983:.\Generated_Source\PSoC4/CyLib.c **** 
1984:.\Generated_Source\PSoC4/CyLib.c **** 
1985:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1986:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
1987:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1988:.\Generated_Source\PSoC4/CyLib.c ****     *
1989:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
1990:.\Generated_Source\PSoC4/CyLib.c ****     *
1991:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1992:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
1993:.\Generated_Source\PSoC4/CyLib.c ****     {
1994:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
1995:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
1996:.\Generated_Source\PSoC4/CyLib.c ****     }
1997:.\Generated_Source\PSoC4/CyLib.c **** 
1998:.\Generated_Source\PSoC4/CyLib.c **** 
1999:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2000:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2001:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2002:.\Generated_Source\PSoC4/CyLib.c ****     *
2003:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2004:.\Generated_Source\PSoC4/CyLib.c ****     *
2005:.\Generated_Source\PSoC4/CyLib.c ****     * \return
2006:.\Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2007:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2008:.\Generated_Source\PSoC4/CyLib.c ****     *
2009:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2010:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2011:.\Generated_Source\PSoC4/CyLib.c ****     {
2012:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 42


2013:.\Generated_Source\PSoC4/CyLib.c ****     }
2014:.\Generated_Source\PSoC4/CyLib.c **** 
2015:.\Generated_Source\PSoC4/CyLib.c **** 
2016:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2017:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2018:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2019:.\Generated_Source\PSoC4/CyLib.c ****     *
2020:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2021:.\Generated_Source\PSoC4/CyLib.c ****     *
2022:.\Generated_Source\PSoC4/CyLib.c ****     * \return
2023:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2024:.\Generated_Source\PSoC4/CyLib.c ****     *
2025:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2026:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2027:.\Generated_Source\PSoC4/CyLib.c ****     {
2028:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2029:.\Generated_Source\PSoC4/CyLib.c ****     }
2030:.\Generated_Source\PSoC4/CyLib.c **** 
2031:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2032:.\Generated_Source\PSoC4/CyLib.c **** 
2033:.\Generated_Source\PSoC4/CyLib.c **** 
2034:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2035:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2036:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2037:.\Generated_Source\PSoC4/CyLib.c **** *
2038:.\Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2039:.\Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2040:.\Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2041:.\Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2042:.\Generated_Source\PSoC4/CyLib.c **** *
2043:.\Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2044:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2045:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2046:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2047:.\Generated_Source\PSoC4/CyLib.c **** *
2048:.\Generated_Source\PSoC4/CyLib.c **** * \return
2049:.\Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2050:.\Generated_Source\PSoC4/CyLib.c **** *
2051:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2052:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2053:.\Generated_Source\PSoC4/CyLib.c **** {
 318              		.loc 1 2053 0
 319              		.cfi_startproc
 320              	.LVL19:
 321 0000 021C     		mov	r2, r0
2054:.\Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2055:.\Generated_Source\PSoC4/CyLib.c **** 
2056:.\Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 322              		.loc 1 2056 0
 323 0002 1920     		mov	r0, #25
 324              	.LVL20:
 325 0004 0240     		and	r2, r0
 326              	.LVL21:
2057:.\Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 327              		.loc 1 2057 0
 328 0006 0249     		ldr	r1, .L27
 329 0008 0B68     		ldr	r3, [r1]
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 43


 330 000a 1840     		and	r0, r3
 331              	.LVL22:
2058:.\Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2059:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 332              		.loc 1 2059 0
 333 000c 0A60     		str	r2, [r1]
2060:.\Generated_Source\PSoC4/CyLib.c **** 
2061:.\Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2062:.\Generated_Source\PSoC4/CyLib.c **** }
 334              		.loc 1 2062 0
 335              		@ sp needed
 336 000e 7047     		bx	lr
 337              	.L28:
 338              		.align	2
 339              	.L27:
 340 0010 54000340 		.word	1073938516
 341              		.cfi_endproc
 342              	.LFE11:
 343              		.size	CySysGetResetReason, .-CySysGetResetReason
 344              		.section	.text.CyDisableInts,"ax",%progbits
 345              		.align	2
 346              		.global	CyDisableInts
 347              		.code	16
 348              		.thumb_func
 349              		.type	CyDisableInts, %function
 350              	CyDisableInts:
 351              	.LFB12:
2063:.\Generated_Source\PSoC4/CyLib.c **** 
2064:.\Generated_Source\PSoC4/CyLib.c **** 
2065:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2066:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2067:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2068:.\Generated_Source\PSoC4/CyLib.c **** *
2069:.\Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2070:.\Generated_Source\PSoC4/CyLib.c **** *
2071:.\Generated_Source\PSoC4/CyLib.c **** * \return
2072:.\Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2073:.\Generated_Source\PSoC4/CyLib.c **** *
2074:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2075:.\Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2076:.\Generated_Source\PSoC4/CyLib.c **** {
 352              		.loc 1 2076 0
 353              		.cfi_startproc
2077:.\Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2078:.\Generated_Source\PSoC4/CyLib.c **** 
2079:.\Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2080:.\Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 354              		.loc 1 2080 0
 355 0000 024B     		ldr	r3, .L30
 356 0002 1868     		ldr	r0, [r3]
 357              	.LVL23:
2081:.\Generated_Source\PSoC4/CyLib.c **** 
2082:.\Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2083:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 358              		.loc 1 2083 0
 359 0004 0122     		mov	r2, #1
 360 0006 5242     		neg	r2, r2
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 44


 361 0008 1A60     		str	r2, [r3]
2084:.\Generated_Source\PSoC4/CyLib.c **** 
2085:.\Generated_Source\PSoC4/CyLib.c ****     return (intState);
2086:.\Generated_Source\PSoC4/CyLib.c **** }
 362              		.loc 1 2086 0
 363              		@ sp needed
 364 000a 7047     		bx	lr
 365              	.L31:
 366              		.align	2
 367              	.L30:
 368 000c 80E100E0 		.word	-536813184
 369              		.cfi_endproc
 370              	.LFE12:
 371              		.size	CyDisableInts, .-CyDisableInts
 372              		.section	.text.CyEnableInts,"ax",%progbits
 373              		.align	2
 374              		.global	CyEnableInts
 375              		.code	16
 376              		.thumb_func
 377              		.type	CyEnableInts, %function
 378              	CyEnableInts:
 379              	.LFB13:
2087:.\Generated_Source\PSoC4/CyLib.c **** 
2088:.\Generated_Source\PSoC4/CyLib.c **** 
2089:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2090:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2091:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2092:.\Generated_Source\PSoC4/CyLib.c **** *
2093:.\Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2094:.\Generated_Source\PSoC4/CyLib.c **** *
2095:.\Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2096:.\Generated_Source\PSoC4/CyLib.c **** *
2097:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2098:.\Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2099:.\Generated_Source\PSoC4/CyLib.c **** {
 380              		.loc 1 2099 0
 381              		.cfi_startproc
 382              	.LVL24:
2100:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 383              		.loc 1 2100 0
 384 0000 014B     		ldr	r3, .L33
 385 0002 1860     		str	r0, [r3]
2101:.\Generated_Source\PSoC4/CyLib.c **** }
 386              		.loc 1 2101 0
 387              		@ sp needed
 388 0004 7047     		bx	lr
 389              	.L34:
 390 0006 C046     		.align	2
 391              	.L33:
 392 0008 00E100E0 		.word	-536813312
 393              		.cfi_endproc
 394              	.LFE13:
 395              		.size	CyEnableInts, .-CyEnableInts
 396              		.section	.text.CyIntEnable,"ax",%progbits
 397              		.align	2
 398              		.global	CyIntEnable
 399              		.code	16
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 45


 400              		.thumb_func
 401              		.type	CyIntEnable, %function
 402              	CyIntEnable:
 403              	.LFB20:
2102:.\Generated_Source\PSoC4/CyLib.c **** 
2103:.\Generated_Source\PSoC4/CyLib.c **** 
2104:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2105:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2106:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2107:.\Generated_Source\PSoC4/CyLib.c **** *
2108:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2109:.\Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2110:.\Generated_Source\PSoC4/CyLib.c **** *
2111:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2112:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2113:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2114:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2115:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2116:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2117:.\Generated_Source\PSoC4/CyLib.c **** *
2118:.\Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2119:.\Generated_Source\PSoC4/CyLib.c **** *
2120:.\Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2121:.\Generated_Source\PSoC4/CyLib.c **** *
2122:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2123:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2124:.\Generated_Source\PSoC4/CyLib.c **** {
2125:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2126:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2127:.\Generated_Source\PSoC4/CyLib.c **** 
2128:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2129:.\Generated_Source\PSoC4/CyLib.c **** 
2130:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2131:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2132:.\Generated_Source\PSoC4/CyLib.c **** 
2133:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2134:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2135:.\Generated_Source\PSoC4/CyLib.c **** 
2136:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2137:.\Generated_Source\PSoC4/CyLib.c **** }
2138:.\Generated_Source\PSoC4/CyLib.c **** 
2139:.\Generated_Source\PSoC4/CyLib.c **** 
2140:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2141:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2142:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2143:.\Generated_Source\PSoC4/CyLib.c **** *
2144:.\Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2145:.\Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2146:.\Generated_Source\PSoC4/CyLib.c **** *
2147:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2148:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2149:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2150:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2151:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2152:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2153:.\Generated_Source\PSoC4/CyLib.c **** *
2154:.\Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 46


2155:.\Generated_Source\PSoC4/CyLib.c **** *
2156:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2157:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2158:.\Generated_Source\PSoC4/CyLib.c **** {
2159:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2160:.\Generated_Source\PSoC4/CyLib.c **** 
2161:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2162:.\Generated_Source\PSoC4/CyLib.c **** 
2163:.\Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2164:.\Generated_Source\PSoC4/CyLib.c **** }
2165:.\Generated_Source\PSoC4/CyLib.c **** 
2166:.\Generated_Source\PSoC4/CyLib.c **** 
2167:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2168:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2169:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2170:.\Generated_Source\PSoC4/CyLib.c **** *
2171:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2172:.\Generated_Source\PSoC4/CyLib.c **** *
2173:.\Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2174:.\Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2175:.\Generated_Source\PSoC4/CyLib.c **** *
2176:.\Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2177:.\Generated_Source\PSoC4/CyLib.c **** *
2178:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2179:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2180:.\Generated_Source\PSoC4/CyLib.c **** {
2181:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2182:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2183:.\Generated_Source\PSoC4/CyLib.c **** 
2184:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2185:.\Generated_Source\PSoC4/CyLib.c **** 
2186:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2187:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2188:.\Generated_Source\PSoC4/CyLib.c **** 
2189:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2190:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2191:.\Generated_Source\PSoC4/CyLib.c **** 
2192:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2193:.\Generated_Source\PSoC4/CyLib.c **** }
2194:.\Generated_Source\PSoC4/CyLib.c **** 
2195:.\Generated_Source\PSoC4/CyLib.c **** 
2196:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2197:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2198:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2199:.\Generated_Source\PSoC4/CyLib.c **** *
2200:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2201:.\Generated_Source\PSoC4/CyLib.c **** *
2202:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2203:.\Generated_Source\PSoC4/CyLib.c **** *
2204:.\Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2205:.\Generated_Source\PSoC4/CyLib.c **** *
2206:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2207:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2208:.\Generated_Source\PSoC4/CyLib.c **** {
2209:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2210:.\Generated_Source\PSoC4/CyLib.c **** 
2211:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 47


2212:.\Generated_Source\PSoC4/CyLib.c **** 
2213:.\Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2214:.\Generated_Source\PSoC4/CyLib.c **** }
2215:.\Generated_Source\PSoC4/CyLib.c **** 
2216:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2217:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2218:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2219:.\Generated_Source\PSoC4/CyLib.c **** *
2220:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2221:.\Generated_Source\PSoC4/CyLib.c **** *
2222:.\Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2223:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2224:.\Generated_Source\PSoC4/CyLib.c **** *
2225:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2226:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2227:.\Generated_Source\PSoC4/CyLib.c **** {
2228:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2229:.\Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2230:.\Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2231:.\Generated_Source\PSoC4/CyLib.c **** 
2232:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2233:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2234:.\Generated_Source\PSoC4/CyLib.c **** 
2235:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2236:.\Generated_Source\PSoC4/CyLib.c **** 
2237:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2238:.\Generated_Source\PSoC4/CyLib.c **** 
2239:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2240:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2241:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2242:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2243:.\Generated_Source\PSoC4/CyLib.c **** 
2244:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2245:.\Generated_Source\PSoC4/CyLib.c **** }
2246:.\Generated_Source\PSoC4/CyLib.c **** 
2247:.\Generated_Source\PSoC4/CyLib.c **** 
2248:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2249:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2250:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2251:.\Generated_Source\PSoC4/CyLib.c **** *
2252:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2253:.\Generated_Source\PSoC4/CyLib.c **** *
2254:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2255:.\Generated_Source\PSoC4/CyLib.c **** *
2256:.\Generated_Source\PSoC4/CyLib.c **** * \return
2257:.\Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2258:.\Generated_Source\PSoC4/CyLib.c **** *
2259:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2260:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2261:.\Generated_Source\PSoC4/CyLib.c **** {
2262:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2263:.\Generated_Source\PSoC4/CyLib.c **** 
2264:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2265:.\Generated_Source\PSoC4/CyLib.c **** 
2266:.\Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2267:.\Generated_Source\PSoC4/CyLib.c **** 
2268:.\Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 48


2269:.\Generated_Source\PSoC4/CyLib.c **** }
2270:.\Generated_Source\PSoC4/CyLib.c **** 
2271:.\Generated_Source\PSoC4/CyLib.c **** 
2272:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2273:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2274:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2275:.\Generated_Source\PSoC4/CyLib.c **** *
2276:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2277:.\Generated_Source\PSoC4/CyLib.c **** *
2278:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2279:.\Generated_Source\PSoC4/CyLib.c **** *
2280:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2281:.\Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2282:.\Generated_Source\PSoC4/CyLib.c **** {
 404              		.loc 1 2282 0
 405              		.cfi_startproc
 406              	.LVL25:
2283:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 407              		.loc 1 2283 0
 408 0000 1F23     		mov	r3, #31
 409 0002 1840     		and	r0, r3
 410              	.LVL26:
 411 0004 1E3B     		sub	r3, r3, #30
 412 0006 8340     		lsl	r3, r3, r0
 413 0008 181C     		mov	r0, r3
 414 000a 014B     		ldr	r3, .L36
 415 000c 1860     		str	r0, [r3]
2284:.\Generated_Source\PSoC4/CyLib.c **** }
 416              		.loc 1 2284 0
 417              		@ sp needed
 418 000e 7047     		bx	lr
 419              	.L37:
 420              		.align	2
 421              	.L36:
 422 0010 00E100E0 		.word	-536813312
 423              		.cfi_endproc
 424              	.LFE20:
 425              		.size	CyIntEnable, .-CyIntEnable
 426              		.section	.text.CyIntGetState,"ax",%progbits
 427              		.align	2
 428              		.global	CyIntGetState
 429              		.code	16
 430              		.thumb_func
 431              		.type	CyIntGetState, %function
 432              	CyIntGetState:
 433              	.LFB21:
2285:.\Generated_Source\PSoC4/CyLib.c **** 
2286:.\Generated_Source\PSoC4/CyLib.c **** 
2287:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2288:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2289:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2290:.\Generated_Source\PSoC4/CyLib.c **** *
2291:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2292:.\Generated_Source\PSoC4/CyLib.c **** *
2293:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2294:.\Generated_Source\PSoC4/CyLib.c **** *
2295:.\Generated_Source\PSoC4/CyLib.c **** * \return
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 49


2296:.\Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2297:.\Generated_Source\PSoC4/CyLib.c **** *
2298:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2299:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2300:.\Generated_Source\PSoC4/CyLib.c **** {
 434              		.loc 1 2300 0
 435              		.cfi_startproc
 436              	.LVL27:
2301:.\Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2302:.\Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 437              		.loc 1 2302 0
 438 0000 044B     		ldr	r3, .L39
 439 0002 1B68     		ldr	r3, [r3]
 440 0004 1F22     		mov	r2, #31
 441 0006 1040     		and	r0, r2
 442              	.LVL28:
 443 0008 C340     		lsr	r3, r3, r0
 444 000a 181C     		mov	r0, r3
 445 000c 0123     		mov	r3, #1
 446 000e 1840     		and	r0, r3
2303:.\Generated_Source\PSoC4/CyLib.c **** }
 447              		.loc 1 2303 0
 448              		@ sp needed
 449 0010 7047     		bx	lr
 450              	.L40:
 451 0012 C046     		.align	2
 452              	.L39:
 453 0014 00E100E0 		.word	-536813312
 454              		.cfi_endproc
 455              	.LFE21:
 456              		.size	CyIntGetState, .-CyIntGetState
 457              		.section	.text.CyIntDisable,"ax",%progbits
 458              		.align	2
 459              		.global	CyIntDisable
 460              		.code	16
 461              		.thumb_func
 462              		.type	CyIntDisable, %function
 463              	CyIntDisable:
 464              	.LFB22:
2304:.\Generated_Source\PSoC4/CyLib.c **** 
2305:.\Generated_Source\PSoC4/CyLib.c **** 
2306:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2307:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2308:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2309:.\Generated_Source\PSoC4/CyLib.c **** *
2310:.\Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2311:.\Generated_Source\PSoC4/CyLib.c **** *
2312:.\Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2313:.\Generated_Source\PSoC4/CyLib.c **** *
2314:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2315:.\Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2316:.\Generated_Source\PSoC4/CyLib.c **** {
 465              		.loc 1 2316 0
 466              		.cfi_startproc
 467              	.LVL29:
2317:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 468              		.loc 1 2317 0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 50


 469 0000 1F23     		mov	r3, #31
 470 0002 1840     		and	r0, r3
 471              	.LVL30:
 472 0004 1E3B     		sub	r3, r3, #30
 473 0006 8340     		lsl	r3, r3, r0
 474 0008 181C     		mov	r0, r3
 475 000a 014B     		ldr	r3, .L42
 476 000c 1860     		str	r0, [r3]
2318:.\Generated_Source\PSoC4/CyLib.c **** }
 477              		.loc 1 2318 0
 478              		@ sp needed
 479 000e 7047     		bx	lr
 480              	.L43:
 481              		.align	2
 482              	.L42:
 483 0010 80E100E0 		.word	-536813184
 484              		.cfi_endproc
 485              	.LFE22:
 486              		.size	CyIntDisable, .-CyIntDisable
 487              		.section	.text.CyIntSetPending,"ax",%progbits
 488              		.align	2
 489              		.global	CyIntSetPending
 490              		.code	16
 491              		.thumb_func
 492              		.type	CyIntSetPending, %function
 493              	CyIntSetPending:
 494              	.LFB23:
2319:.\Generated_Source\PSoC4/CyLib.c **** 
2320:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2321:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2322:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2323:.\Generated_Source\PSoC4/CyLib.c **** *
2324:.\Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2325:.\Generated_Source\PSoC4/CyLib.c **** *
2326:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2327:.\Generated_Source\PSoC4/CyLib.c **** *
2328:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2329:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2330:.\Generated_Source\PSoC4/CyLib.c **** {
 495              		.loc 1 2330 0
 496              		.cfi_startproc
 497              	.LVL31:
2331:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 498              		.loc 1 2331 0
 499 0000 1F23     		mov	r3, #31
 500 0002 1840     		and	r0, r3
 501              	.LVL32:
 502 0004 1E3B     		sub	r3, r3, #30
 503 0006 8340     		lsl	r3, r3, r0
 504 0008 181C     		mov	r0, r3
 505 000a 014B     		ldr	r3, .L45
 506 000c 1860     		str	r0, [r3]
2332:.\Generated_Source\PSoC4/CyLib.c **** }
 507              		.loc 1 2332 0
 508              		@ sp needed
 509 000e 7047     		bx	lr
 510              	.L46:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 51


 511              		.align	2
 512              	.L45:
 513 0010 00E200E0 		.word	-536813056
 514              		.cfi_endproc
 515              	.LFE23:
 516              		.size	CyIntSetPending, .-CyIntSetPending
 517              		.section	.text.CyIntClearPending,"ax",%progbits
 518              		.align	2
 519              		.global	CyIntClearPending
 520              		.code	16
 521              		.thumb_func
 522              		.type	CyIntClearPending, %function
 523              	CyIntClearPending:
 524              	.LFB24:
2333:.\Generated_Source\PSoC4/CyLib.c **** 
2334:.\Generated_Source\PSoC4/CyLib.c **** 
2335:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2336:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2337:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2338:.\Generated_Source\PSoC4/CyLib.c **** *
2339:.\Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2340:.\Generated_Source\PSoC4/CyLib.c **** *
2341:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2342:.\Generated_Source\PSoC4/CyLib.c **** *
2343:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2344:.\Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2345:.\Generated_Source\PSoC4/CyLib.c **** {
 525              		.loc 1 2345 0
 526              		.cfi_startproc
 527              	.LVL33:
2346:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 528              		.loc 1 2346 0
 529 0000 1F23     		mov	r3, #31
 530 0002 1840     		and	r0, r3
 531              	.LVL34:
 532 0004 1E3B     		sub	r3, r3, #30
 533 0006 8340     		lsl	r3, r3, r0
 534 0008 181C     		mov	r0, r3
 535 000a 014B     		ldr	r3, .L48
 536 000c 1860     		str	r0, [r3]
2347:.\Generated_Source\PSoC4/CyLib.c **** }
 537              		.loc 1 2347 0
 538              		@ sp needed
 539 000e 7047     		bx	lr
 540              	.L49:
 541              		.align	2
 542              	.L48:
 543 0010 80E200E0 		.word	-536812928
 544              		.cfi_endproc
 545              	.LFE24:
 546              		.size	CyIntClearPending, .-CyIntClearPending
 547              		.section	.text.CyHalt,"ax",%progbits
 548              		.align	2
 549              		.global	CyHalt
 550              		.code	16
 551              		.thumb_func
 552              		.type	CyHalt, %function
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 52


 553              	CyHalt:
 554              	.LFB25:
2348:.\Generated_Source\PSoC4/CyLib.c **** 
2349:.\Generated_Source\PSoC4/CyLib.c **** 
2350:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2351:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2352:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2353:.\Generated_Source\PSoC4/CyLib.c **** *
2354:.\Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2355:.\Generated_Source\PSoC4/CyLib.c **** *
2356:.\Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2357:.\Generated_Source\PSoC4/CyLib.c **** *
2358:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2359:.\Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2360:.\Generated_Source\PSoC4/CyLib.c **** {
 555              		.loc 1 2360 0
 556              		.cfi_startproc
 557              	.LVL35:
2361:.\Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2362:.\Generated_Source\PSoC4/CyLib.c ****     {
2363:.\Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2364:.\Generated_Source\PSoC4/CyLib.c ****     }
2365:.\Generated_Source\PSoC4/CyLib.c **** 
2366:.\Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2367:.\Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2368:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2369:.\Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 558              		.loc 1 2369 0
 559              	@ 2369 ".\Generated_Source\PSoC4\CyLib.c" 1
 560 0000 01BE     		    bkpt    1
 561              	@ 0 "" 2
2370:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2371:.\Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2372:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2373:.\Generated_Source\PSoC4/CyLib.c **** }
 562              		.loc 1 2373 0
 563              		.code	16
 564              		@ sp needed
 565 0002 7047     		bx	lr
 566              		.cfi_endproc
 567              	.LFE25:
 568              		.size	CyHalt, .-CyHalt
 569              		.section	.text.CyIntSetSysVector,"ax",%progbits
 570              		.align	2
 571              		.global	CyIntSetSysVector
 572              		.code	16
 573              		.thumb_func
 574              		.type	CyIntSetSysVector, %function
 575              	CyIntSetSysVector:
 576              	.LFB14:
2124:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 577              		.loc 1 2124 0
 578              		.cfi_startproc
 579              	.LVL36:
 580 0000 38B5     		push	{r3, r4, r5, lr}
 581              		.cfi_def_cfa_offset 16
 582              		.cfi_offset 3, -16
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 53


 583              		.cfi_offset 4, -12
 584              		.cfi_offset 5, -8
 585              		.cfi_offset 14, -4
 586 0002 041C     		mov	r4, r0
 587 0004 0D1C     		mov	r5, r1
 588              	.LVL37:
2128:.\Generated_Source\PSoC4/CyLib.c **** 
 589              		.loc 1 2128 0
 590 0006 0F28     		cmp	r0, #15
 591 0008 02D9     		bls	.L52
2128:.\Generated_Source\PSoC4/CyLib.c **** 
 592              		.loc 1 2128 0 is_stmt 0 discriminator 1
 593 000a 0020     		mov	r0, #0
 594              	.LVL38:
 595 000c FFF7FEFF 		bl	CyHalt
 596              	.LVL39:
 597              	.L52:
2131:.\Generated_Source\PSoC4/CyLib.c **** 
 598              		.loc 1 2131 0 is_stmt 1
 599 0010 A400     		lsl	r4, r4, #2
 600 0012 8023     		mov	r3, #128
 601 0014 9B05     		lsl	r3, r3, #22
 602 0016 9C46     		mov	ip, r3
 603 0018 6444     		add	r4, r4, ip
 604 001a 2068     		ldr	r0, [r4]
 605              	.LVL40:
2134:.\Generated_Source\PSoC4/CyLib.c **** 
 606              		.loc 1 2134 0
 607 001c 2560     		str	r5, [r4]
2137:.\Generated_Source\PSoC4/CyLib.c **** 
 608              		.loc 1 2137 0
 609              		@ sp needed
 610              	.LVL41:
 611 001e 38BD     		pop	{r3, r4, r5, pc}
 612              		.cfi_endproc
 613              	.LFE14:
 614              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 615              		.section	.text.CyIntGetSysVector,"ax",%progbits
 616              		.align	2
 617              		.global	CyIntGetSysVector
 618              		.code	16
 619              		.thumb_func
 620              		.type	CyIntGetSysVector, %function
 621              	CyIntGetSysVector:
 622              	.LFB15:
2158:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 623              		.loc 1 2158 0
 624              		.cfi_startproc
 625              	.LVL42:
 626 0000 10B5     		push	{r4, lr}
 627              		.cfi_def_cfa_offset 8
 628              		.cfi_offset 4, -8
 629              		.cfi_offset 14, -4
 630 0002 041E     		sub	r4, r0, #0
 631              	.LVL43:
2161:.\Generated_Source\PSoC4/CyLib.c **** 
 632              		.loc 1 2161 0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 54


 633 0004 0F2C     		cmp	r4, #15
 634 0006 02D9     		bls	.L54
2161:.\Generated_Source\PSoC4/CyLib.c **** 
 635              		.loc 1 2161 0 is_stmt 0 discriminator 1
 636 0008 0020     		mov	r0, #0
 637              	.LVL44:
 638 000a FFF7FEFF 		bl	CyHalt
 639              	.LVL45:
 640              	.L54:
2163:.\Generated_Source\PSoC4/CyLib.c **** }
 641              		.loc 1 2163 0 is_stmt 1
 642 000e A400     		lsl	r4, r4, #2
 643 0010 8023     		mov	r3, #128
 644 0012 9B05     		lsl	r3, r3, #22
 645 0014 9C46     		mov	ip, r3
 646 0016 6444     		add	r4, r4, ip
 647 0018 2068     		ldr	r0, [r4]
2164:.\Generated_Source\PSoC4/CyLib.c **** 
 648              		.loc 1 2164 0
 649              		@ sp needed
 650 001a 10BD     		pop	{r4, pc}
 651              		.cfi_endproc
 652              	.LFE15:
 653              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 654              		.section	.text.CyIntSetVector,"ax",%progbits
 655              		.align	2
 656              		.global	CyIntSetVector
 657              		.code	16
 658              		.thumb_func
 659              		.type	CyIntSetVector, %function
 660              	CyIntSetVector:
 661              	.LFB16:
2180:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 662              		.loc 1 2180 0
 663              		.cfi_startproc
 664              	.LVL46:
 665 0000 38B5     		push	{r3, r4, r5, lr}
 666              		.cfi_def_cfa_offset 16
 667              		.cfi_offset 3, -16
 668              		.cfi_offset 4, -12
 669              		.cfi_offset 5, -8
 670              		.cfi_offset 14, -4
 671 0002 041C     		mov	r4, r0
 672 0004 0D1C     		mov	r5, r1
 673              	.LVL47:
2184:.\Generated_Source\PSoC4/CyLib.c **** 
 674              		.loc 1 2184 0
 675 0006 0F28     		cmp	r0, #15
 676 0008 02D9     		bls	.L56
2184:.\Generated_Source\PSoC4/CyLib.c **** 
 677              		.loc 1 2184 0 is_stmt 0 discriminator 1
 678 000a 0020     		mov	r0, #0
 679              	.LVL48:
 680 000c FFF7FEFF 		bl	CyHalt
 681              	.LVL49:
 682              	.L56:
2187:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 55


 683              		.loc 1 2187 0 is_stmt 1
 684 0010 A400     		lsl	r4, r4, #2
 685 0012 034B     		ldr	r3, .L57
 686 0014 9C46     		mov	ip, r3
 687 0016 6444     		add	r4, r4, ip
 688 0018 2068     		ldr	r0, [r4]
 689              	.LVL50:
2190:.\Generated_Source\PSoC4/CyLib.c **** 
 690              		.loc 1 2190 0
 691 001a 2560     		str	r5, [r4]
2193:.\Generated_Source\PSoC4/CyLib.c **** 
 692              		.loc 1 2193 0
 693              		@ sp needed
 694              	.LVL51:
 695 001c 38BD     		pop	{r3, r4, r5, pc}
 696              	.L58:
 697 001e C046     		.align	2
 698              	.L57:
 699 0020 40000020 		.word	536870976
 700              		.cfi_endproc
 701              	.LFE16:
 702              		.size	CyIntSetVector, .-CyIntSetVector
 703              		.section	.text.CyIntGetVector,"ax",%progbits
 704              		.align	2
 705              		.global	CyIntGetVector
 706              		.code	16
 707              		.thumb_func
 708              		.type	CyIntGetVector, %function
 709              	CyIntGetVector:
 710              	.LFB17:
2208:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 711              		.loc 1 2208 0
 712              		.cfi_startproc
 713              	.LVL52:
 714 0000 10B5     		push	{r4, lr}
 715              		.cfi_def_cfa_offset 8
 716              		.cfi_offset 4, -8
 717              		.cfi_offset 14, -4
 718 0002 041E     		sub	r4, r0, #0
 719              	.LVL53:
2211:.\Generated_Source\PSoC4/CyLib.c **** 
 720              		.loc 1 2211 0
 721 0004 0F2C     		cmp	r4, #15
 722 0006 02D9     		bls	.L60
2211:.\Generated_Source\PSoC4/CyLib.c **** 
 723              		.loc 1 2211 0 is_stmt 0 discriminator 1
 724 0008 0020     		mov	r0, #0
 725              	.LVL54:
 726 000a FFF7FEFF 		bl	CyHalt
 727              	.LVL55:
 728              	.L60:
2213:.\Generated_Source\PSoC4/CyLib.c **** }
 729              		.loc 1 2213 0 is_stmt 1
 730 000e A400     		lsl	r4, r4, #2
 731 0010 024B     		ldr	r3, .L61
 732 0012 9C46     		mov	ip, r3
 733 0014 6444     		add	r4, r4, ip
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 56


 734 0016 2068     		ldr	r0, [r4]
2214:.\Generated_Source\PSoC4/CyLib.c **** 
 735              		.loc 1 2214 0
 736              		@ sp needed
 737 0018 10BD     		pop	{r4, pc}
 738              	.L62:
 739 001a C046     		.align	2
 740              	.L61:
 741 001c 40000020 		.word	536870976
 742              		.cfi_endproc
 743              	.LFE17:
 744              		.size	CyIntGetVector, .-CyIntGetVector
 745              		.section	.text.CyIntSetPriority,"ax",%progbits
 746              		.align	2
 747              		.global	CyIntSetPriority
 748              		.code	16
 749              		.thumb_func
 750              		.type	CyIntSetPriority, %function
 751              	CyIntSetPriority:
 752              	.LFB18:
2227:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 753              		.loc 1 2227 0
 754              		.cfi_startproc
 755              	.LVL56:
 756 0000 70B5     		push	{r4, r5, r6, lr}
 757              		.cfi_def_cfa_offset 16
 758              		.cfi_offset 4, -16
 759              		.cfi_offset 5, -12
 760              		.cfi_offset 6, -8
 761              		.cfi_offset 14, -4
 762 0002 041C     		mov	r4, r0
 763 0004 0E1E     		sub	r6, r1, #0
2232:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 764              		.loc 1 2232 0
 765 0006 032E     		cmp	r6, #3
 766 0008 02D9     		bls	.L64
2232:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 767              		.loc 1 2232 0 is_stmt 0 discriminator 1
 768 000a 0020     		mov	r0, #0
 769              	.LVL57:
 770 000c FFF7FEFF 		bl	CyHalt
 771              	.LVL58:
 772              	.L64:
2233:.\Generated_Source\PSoC4/CyLib.c **** 
 773              		.loc 1 2233 0 is_stmt 1
 774 0010 0F2C     		cmp	r4, #15
 775 0012 02D9     		bls	.L65
2233:.\Generated_Source\PSoC4/CyLib.c **** 
 776              		.loc 1 2233 0 is_stmt 0 discriminator 1
 777 0014 0020     		mov	r0, #0
 778 0016 FFF7FEFF 		bl	CyHalt
 779              	.LVL59:
 780              	.L65:
2235:.\Generated_Source\PSoC4/CyLib.c **** 
 781              		.loc 1 2235 0 is_stmt 1
 782 001a 0325     		mov	r5, #3
 783 001c 2540     		and	r5, r4
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 57


 784 001e ED00     		lsl	r5, r5, #3
 785 0020 0635     		add	r5, r5, #6
 786              	.LVL60:
2237:.\Generated_Source\PSoC4/CyLib.c **** 
 787              		.loc 1 2237 0
 788 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 789              	.LVL61:
2239:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 790              		.loc 1 2239 0
 791 0026 A408     		lsr	r4, r4, #2
 792 0028 A400     		lsl	r4, r4, #2
 793 002a 074B     		ldr	r3, .L66
 794 002c 9C46     		mov	ip, r3
 795 002e 6444     		add	r4, r4, ip
 796 0030 2368     		ldr	r3, [r4]
 797              	.LVL62:
2240:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 798              		.loc 1 2240 0
 799 0032 0322     		mov	r2, #3
 800 0034 AA40     		lsl	r2, r2, r5
 801 0036 9343     		bic	r3, r2
 802              	.LVL63:
2241:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 803              		.loc 1 2241 0
 804 0038 AE40     		lsl	r6, r6, r5
 805 003a 351C     		mov	r5, r6
 806              	.LVL64:
 807 003c 1D43     		orr	r5, r3
 808              	.LVL65:
2242:.\Generated_Source\PSoC4/CyLib.c **** 
 809              		.loc 1 2242 0
 810 003e 2560     		str	r5, [r4]
2244:.\Generated_Source\PSoC4/CyLib.c **** }
 811              		.loc 1 2244 0
 812 0040 FFF7FEFF 		bl	CyExitCriticalSection
 813              	.LVL66:
2245:.\Generated_Source\PSoC4/CyLib.c **** 
 814              		.loc 1 2245 0
 815              		@ sp needed
 816              	.LVL67:
 817 0044 70BD     		pop	{r4, r5, r6, pc}
 818              	.L67:
 819 0046 C046     		.align	2
 820              	.L66:
 821 0048 00E400E0 		.word	-536812544
 822              		.cfi_endproc
 823              	.LFE18:
 824              		.size	CyIntSetPriority, .-CyIntSetPriority
 825              		.section	.text.CyIntGetPriority,"ax",%progbits
 826              		.align	2
 827              		.global	CyIntGetPriority
 828              		.code	16
 829              		.thumb_func
 830              		.type	CyIntGetPriority, %function
 831              	CyIntGetPriority:
 832              	.LFB19:
2261:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 58


 833              		.loc 1 2261 0
 834              		.cfi_startproc
 835              	.LVL68:
 836 0000 10B5     		push	{r4, lr}
 837              		.cfi_def_cfa_offset 8
 838              		.cfi_offset 4, -8
 839              		.cfi_offset 14, -4
 840 0002 041E     		sub	r4, r0, #0
2264:.\Generated_Source\PSoC4/CyLib.c **** 
 841              		.loc 1 2264 0
 842 0004 0F2C     		cmp	r4, #15
 843 0006 02D9     		bls	.L69
2264:.\Generated_Source\PSoC4/CyLib.c **** 
 844              		.loc 1 2264 0 is_stmt 0 discriminator 1
 845 0008 0020     		mov	r0, #0
 846              	.LVL69:
 847 000a FFF7FEFF 		bl	CyHalt
 848              	.LVL70:
 849              	.L69:
2266:.\Generated_Source\PSoC4/CyLib.c **** 
 850              		.loc 1 2266 0 is_stmt 1
 851 000e A308     		lsr	r3, r4, #2
 852 0010 9B00     		lsl	r3, r3, #2
 853 0012 054A     		ldr	r2, .L70
 854 0014 9446     		mov	ip, r2
 855 0016 6344     		add	r3, r3, ip
 856 0018 1868     		ldr	r0, [r3]
 857 001a 0323     		mov	r3, #3
 858 001c 1C40     		and	r4, r3
 859 001e E400     		lsl	r4, r4, #3
 860 0020 0634     		add	r4, r4, #6
 861 0022 E040     		lsr	r0, r0, r4
 862              	.LVL71:
2268:.\Generated_Source\PSoC4/CyLib.c **** }
 863              		.loc 1 2268 0
 864 0024 1840     		and	r0, r3
 865              	.LVL72:
2269:.\Generated_Source\PSoC4/CyLib.c **** 
 866              		.loc 1 2269 0
 867              		@ sp needed
 868 0026 10BD     		pop	{r4, pc}
 869              	.L71:
 870              		.align	2
 871              	.L70:
 872 0028 00E400E0 		.word	-536812544
 873              		.cfi_endproc
 874              	.LFE19:
 875              		.size	CyIntGetPriority, .-CyIntGetPriority
 876              		.section	.text.CySoftwareReset,"ax",%progbits
 877              		.align	2
 878              		.global	CySoftwareReset
 879              		.code	16
 880              		.thumb_func
 881              		.type	CySoftwareReset, %function
 882              	CySoftwareReset:
 883              	.LFB26:
2374:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 59


2375:.\Generated_Source\PSoC4/CyLib.c **** 
2376:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2377:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2378:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2379:.\Generated_Source\PSoC4/CyLib.c **** *
2380:.\Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2381:.\Generated_Source\PSoC4/CyLib.c **** *
2382:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2383:.\Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2384:.\Generated_Source\PSoC4/CyLib.c **** {
 884              		.loc 1 2384 0
 885              		.cfi_startproc
2385:.\Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2386:.\Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2387:.\Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2388:.\Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2389:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 886              		.loc 1 2389 0
 887 0000 034A     		ldr	r2, .L73
 888 0002 1368     		ldr	r3, [r2]
 889 0004 1B04     		lsl	r3, r3, #16
 890 0006 1B0C     		lsr	r3, r3, #16
2390:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 891              		.loc 1 2390 0
 892 0008 0249     		ldr	r1, .L73+4
 893 000a 0B43     		orr	r3, r1
2389:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 894              		.loc 1 2389 0
 895 000c 1360     		str	r3, [r2]
2391:.\Generated_Source\PSoC4/CyLib.c **** }
 896              		.loc 1 2391 0
 897              		@ sp needed
 898 000e 7047     		bx	lr
 899              	.L74:
 900              		.align	2
 901              	.L73:
 902 0010 0CED00E0 		.word	-536810228
 903 0014 0400FA05 		.word	100270084
 904              		.cfi_endproc
 905              	.LFE26:
 906              		.size	CySoftwareReset, .-CySoftwareReset
 907              		.section	.text.CyDelay,"ax",%progbits
 908              		.align	2
 909              		.global	CyDelay
 910              		.code	16
 911              		.thumb_func
 912              		.type	CyDelay, %function
 913              	CyDelay:
 914              	.LFB27:
2392:.\Generated_Source\PSoC4/CyLib.c **** 
2393:.\Generated_Source\PSoC4/CyLib.c **** 
2394:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2395:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2396:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2397:.\Generated_Source\PSoC4/CyLib.c **** *
2398:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2399:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 60


2400:.\Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2401:.\Generated_Source\PSoC4/CyLib.c **** *
2402:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2403:.\Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2404:.\Generated_Source\PSoC4/CyLib.c **** {
 915              		.loc 1 2404 0
 916              		.cfi_startproc
 917              	.LVL73:
 918 0000 10B5     		push	{r4, lr}
 919              		.cfi_def_cfa_offset 8
 920              		.cfi_offset 4, -8
 921              		.cfi_offset 14, -4
 922 0002 041C     		mov	r4, r0
2405:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 923              		.loc 1 2405 0
 924 0004 06E0     		b	.L76
 925              	.LVL74:
 926              	.L77:
2406:.\Generated_Source\PSoC4/CyLib.c ****     {
2407:.\Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2408:.\Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2409:.\Generated_Source\PSoC4/CyLib.c ****          */
2410:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 927              		.loc 1 2410 0
 928 0006 084B     		ldr	r3, .L78
 929 0008 1868     		ldr	r0, [r3]
 930 000a FFF7FEFF 		bl	CyDelayCycles
 931              	.LVL75:
2411:.\Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 932              		.loc 1 2411 0
 933 000e 074B     		ldr	r3, .L78+4
 934 0010 9C46     		mov	ip, r3
 935 0012 6444     		add	r4, r4, ip
 936              	.LVL76:
 937              	.L76:
2405:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 938              		.loc 1 2405 0
 939 0014 8023     		mov	r3, #128
 940 0016 1B02     		lsl	r3, r3, #8
 941 0018 9C42     		cmp	r4, r3
 942 001a F4D8     		bhi	.L77
2412:.\Generated_Source\PSoC4/CyLib.c ****     }
2413:.\Generated_Source\PSoC4/CyLib.c **** 
2414:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 943              		.loc 1 2414 0
 944 001c 024B     		ldr	r3, .L78
 945 001e 5868     		ldr	r0, [r3, #4]
 946 0020 6043     		mul	r0, r4
 947 0022 FFF7FEFF 		bl	CyDelayCycles
 948              	.LVL77:
2415:.\Generated_Source\PSoC4/CyLib.c **** }
 949              		.loc 1 2415 0
 950              		@ sp needed
 951              	.LVL78:
 952 0026 10BD     		pop	{r4, pc}
 953              	.L79:
 954              		.align	2
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 61


 955              	.L78:
 956 0028 00000000 		.word	.LANCHOR0
 957 002c 0080FFFF 		.word	-32768
 958              		.cfi_endproc
 959              	.LFE27:
 960              		.size	CyDelay, .-CyDelay
 961              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 962              		.align	2
 963              		.global	CySysClkImoEnableWcoLock
 964              		.code	16
 965              		.thumb_func
 966              		.type	CySysClkImoEnableWcoLock, %function
 967              	CySysClkImoEnableWcoLock:
 968              	.LFB3:
 173:.\Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 969              		.loc 1 173 0
 970              		.cfi_startproc
 971 0000 30B5     		push	{r4, r5, lr}
 972              		.cfi_def_cfa_offset 12
 973              		.cfi_offset 4, -12
 974              		.cfi_offset 5, -8
 975              		.cfi_offset 14, -4
 976 0002 83B0     		sub	sp, sp, #12
 977              		.cfi_def_cfa_offset 24
 978              	.LVL79:
 184:.\Generated_Source\PSoC4/CyLib.c ****         {
 979              		.loc 1 184 0
 980 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 981              	.LVL80:
 982 0008 0028     		cmp	r0, #0
 983 000a 43D0     		beq	.L80
 186:.\Generated_Source\PSoC4/CyLib.c **** 
 984              		.loc 1 186 0
 985 000c FFF7FEFF 		bl	CyEnterCriticalSection
 986              	.LVL81:
 987 0010 041C     		mov	r4, r0
 988              	.LVL82:
 208:.\Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 989              		.loc 1 208 0
 990 0012 214B     		ldr	r3, .L85
 991 0014 1B68     		ldr	r3, [r3]
 992 0016 0722     		mov	r2, #7
 993 0018 1A40     		and	r2, r3
 994 001a 9200     		lsl	r2, r2, #2
 995 001c 101C     		mov	r0, r2
 996 001e 1830     		add	r0, r0, #24
 997              	.LVL83:
 222:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 998              		.loc 1 222 0
 999 0020 1E4B     		ldr	r3, .L85+4
 1000 0022 1968     		ldr	r1, [r3]
 1001 0024 1E4B     		ldr	r3, .L85+8
 1002 0026 1940     		and	r1, r3
 1003              	.LVL84:
 228:.\Generated_Source\PSoC4/CyLib.c **** 
 1004              		.loc 1 228 0
 1005 0028 1E4B     		ldr	r3, .L85+12
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 62


 1006 002a 4343     		mul	r3, r0
 1007 002c 8025     		mov	r5, #128
 1008 002e ED01     		lsl	r5, r5, #7
 1009 0030 AC46     		mov	ip, r5
 1010 0032 6344     		add	r3, r3, ip
 1011 0034 DB0B     		lsr	r3, r3, #15
 1012 0036 013B     		sub	r3, r3, #1
 1013 0038 5B05     		lsl	r3, r3, #21
 1014 003a 5B0D     		lsr	r3, r3, #21
 1015 003c 0B43     		orr	r3, r1
 1016              	.LVL85:
 231:.\Generated_Source\PSoC4/CyLib.c **** 
 1017              		.loc 1 231 0
 1018 003e A021     		mov	r1, #160
 1019 0040 4903     		lsl	r1, r1, #13
 1020 0042 1943     		orr	r1, r3
 1021              	.LVL86:
 234:.\Generated_Source\PSoC4/CyLib.c ****             {
 1022              		.loc 1 234 0
 1023 0044 1928     		cmp	r0, #25
 1024 0046 02D8     		bhi	.L82
 236:.\Generated_Source\PSoC4/CyLib.c ****             }
 1025              		.loc 1 236 0
 1026 0048 174A     		ldr	r2, .L85+16
 1027 004a 1343     		orr	r3, r2
 1028              	.LVL87:
 1029 004c 0CE0     		b	.L83
 1030              	.LVL88:
 1031              	.L82:
 240:.\Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1032              		.loc 1 240 0
 1033 004e 174B     		ldr	r3, .L85+20
 1034 0050 9C46     		mov	ip, r3
 1035 0052 6044     		add	r0, r0, ip
 1036              	.LVL89:
 1037 0054 0078     		ldrb	r0, [r0]
 1038              	.LVL90:
 241:.\Generated_Source\PSoC4/CyLib.c **** 
 1039              		.loc 1 241 0
 1040 0056 023A     		sub	r2, r2, #2
 1041              	.LVL91:
 1042 0058 154B     		ldr	r3, .L85+24
 1043 005a 9B5C     		ldrb	r3, [r3, r2]
 240:.\Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1044              		.loc 1 240 0
 1045 005c C318     		add	r3, r0, r3
 1046              	.LVL92:
 243:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 1047              		.loc 1 243 0
 1048 005e FF2B     		cmp	r3, #255
 1049 0060 00D9     		bls	.L84
 1050 0062 FF23     		mov	r3, #255
 1051              	.L84:
 1052              	.LVL93:
 246:.\Generated_Source\PSoC4/CyLib.c ****             }
 1053              		.loc 1 246 0
 1054 0064 9B05     		lsl	r3, r3, #22
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 63


 1055              	.LVL94:
 1056 0066 0B43     		orr	r3, r1
 1057              	.LVL95:
 1058              	.L83:
 249:.\Generated_Source\PSoC4/CyLib.c **** 
 1059              		.loc 1 249 0
 1060 0068 0C4A     		ldr	r2, .L85+4
 1061 006a 1360     		str	r3, [r2]
 251:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1062              		.loc 1 251 0
 1063 006c 114D     		ldr	r5, .L85+28
 1064 006e 2B68     		ldr	r3, [r5]
 1065              	.LVL96:
 1066 0070 0193     		str	r3, [sp, #4]
 1067              	.LVL97:
 252:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1068              		.loc 1 252 0
 1069 0072 3020     		mov	r0, #48
 1070 0074 FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1071              	.LVL98:
 253:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 1072              		.loc 1 253 0
 1073 0078 0F4A     		ldr	r2, .L85+32
 1074 007a 1368     		ldr	r3, [r2]
 1075 007c 8021     		mov	r1, #128
 1076 007e C905     		lsl	r1, r1, #23
 1077 0080 0B43     		orr	r3, r1
 1078 0082 1360     		str	r3, [r2]
 254:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 1079              		.loc 1 254 0
 1080 0084 1420     		mov	r0, #20
 1081 0086 FFF7FEFF 		bl	CyDelay
 1082              	.LVL99:
 255:.\Generated_Source\PSoC4/CyLib.c **** 
 1083              		.loc 1 255 0
 1084 008a 019B     		ldr	r3, [sp, #4]
 1085 008c 2B60     		str	r3, [r5]
 257:.\Generated_Source\PSoC4/CyLib.c ****         }
 1086              		.loc 1 257 0
 1087 008e 201C     		mov	r0, r4
 1088 0090 FFF7FEFF 		bl	CyExitCriticalSection
 1089              	.LVL100:
 1090              	.L80:
 259:.\Generated_Source\PSoC4/CyLib.c **** 
 1091              		.loc 1 259 0
 1092 0094 03B0     		add	sp, sp, #12
 1093              		@ sp needed
 1094 0096 30BD     		pop	{r4, r5, pc}
 1095              	.L86:
 1096              		.align	2
 1097              	.L85:
 1098 0098 080F0340 		.word	1073942280
 1099 009c 08000740 		.word	1074200584
 1100 00a0 00F800C0 		.word	-1073678336
 1101 00a4 40420F00 		.word	1000000
 1102 00a8 0000D43F 		.word	1070858240
 1103 00ac CDF1FF0F 		.word	268431821
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 64


 1104 00b0 00000000 		.word	.LANCHOR1
 1105 00b4 30001040 		.word	1074790448
 1106 00b8 00000740 		.word	1074200576
 1107              		.cfi_endproc
 1108              	.LFE3:
 1109              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1110              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1111              		.align	2
 1112              		.global	CySysClkWriteImoFreq
 1113              		.code	16
 1114              		.thumb_func
 1115              		.type	CySysClkWriteImoFreq, %function
 1116              	CySysClkWriteImoFreq:
 1117              	.LFB9:
 775:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 1118              		.loc 1 775 0
 1119              		.cfi_startproc
 1120              	.LVL101:
 1121 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1122              		.cfi_def_cfa_offset 20
 1123              		.cfi_offset 4, -20
 1124              		.cfi_offset 5, -16
 1125              		.cfi_offset 6, -12
 1126              		.cfi_offset 7, -8
 1127              		.cfi_offset 14, -4
 1128 0002 83B0     		sub	sp, sp, #12
 1129              		.cfi_def_cfa_offset 32
 1130 0004 041E     		sub	r4, r0, #0
 1131              	.LVL102:
 790:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1132              		.loc 1 790 0
 1133 0006 182C     		cmp	r4, #24
 1134 0008 0BD0     		beq	.L88
 790:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1135              		.loc 1 790 0 is_stmt 0 discriminator 1
 1136 000a 1C28     		cmp	r0, #28
 1137 000c 09D0     		beq	.L88
 790:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1138              		.loc 1 790 0 discriminator 2
 1139 000e 2028     		cmp	r0, #32
 1140 0010 07D0     		beq	.L88
 790:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1141              		.loc 1 790 0 discriminator 3
 1142 0012 2428     		cmp	r0, #36
 1143 0014 05D0     		beq	.L88
 791:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1144              		.loc 1 791 0 is_stmt 1
 1145 0016 2828     		cmp	r0, #40
 1146 0018 03D0     		beq	.L88
 791:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1147              		.loc 1 791 0 is_stmt 0 discriminator 1
 1148 001a 2C28     		cmp	r0, #44
 1149 001c 01D0     		beq	.L88
 791:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1150              		.loc 1 791 0 discriminator 2
 1151 001e 3028     		cmp	r0, #48
 1152 0020 49D1     		bne	.L89
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 65


 1153              	.L88:
 795:.\Generated_Source\PSoC4/CyLib.c **** 
 1154              		.loc 1 795 0 is_stmt 1
 1155 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 1156              	.LVL103:
 1157 0026 0190     		str	r0, [sp, #4]
 1158              	.LVL104:
 798:.\Generated_Source\PSoC4/CyLib.c ****                 {
 1159              		.loc 1 798 0
 1160 0028 FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1161              	.LVL105:
 1162 002c 0028     		cmp	r0, #0
 1163 002e 03D0     		beq	.L94
 1164              	.LVL106:
 801:.\Generated_Source\PSoC4/CyLib.c ****                 }
 1165              		.loc 1 801 0
 1166 0030 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1167              	.LVL107:
 800:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 1168              		.loc 1 800 0
 1169 0034 0126     		mov	r6, #1
 1170 0036 00E0     		b	.L90
 1171              	.LVL108:
 1172              	.L94:
 780:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 1173              		.loc 1 780 0
 1174 0038 0026     		mov	r6, #0
 1175              	.LVL109:
 1176              	.L90:
 826:.\Generated_Source\PSoC4/CyLib.c **** 
 1177              		.loc 1 826 0
 1178 003a 214A     		ldr	r2, .L95
 1179 003c 1368     		ldr	r3, [r2]
 1180 003e 0721     		mov	r1, #7
 1181 0040 8B43     		bic	r3, r1
 1182 0042 1360     		str	r3, [r2]
 1183              	.LVL110:
 844:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1184              		.loc 1 844 0
 1185 0044 1F4B     		ldr	r3, .L95+4
 1186 0046 E318     		add	r3, r4, r3
 1187 0048 1B78     		ldrb	r3, [r3]
 1188 004a DBB2     		uxtb	r3, r3
 1189              	.LVL111:
 846:.\Generated_Source\PSoC4/CyLib.c **** 
 1190              		.loc 1 846 0
 1191 004c 1E4A     		ldr	r2, .L95+8
 1192 004e 1360     		str	r3, [r2]
 849:.\Generated_Source\PSoC4/CyLib.c **** 
 1193              		.loc 1 849 0
 1194 0050 1E4A     		ldr	r2, .L95+12
 1195 0052 1368     		ldr	r3, [r2]
 1196              	.LVL112:
 1197 0054 8B43     		bic	r3, r1
 1198 0056 1360     		str	r3, [r2]
 1199              	.LVL113:
 852:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 66


 1200              		.loc 1 852 0
 1201 0058 1D48     		ldr	r0, .L95+16
 1202 005a 0368     		ldr	r3, [r0]
 1203 005c 7F22     		mov	r2, #127
 1204 005e 9343     		bic	r3, r2
 1205 0060 191C     		mov	r1, r3
 853:.\Generated_Source\PSoC4/CyLib.c **** 
 1206              		.loc 1 853 0
 1207 0062 1C4B     		ldr	r3, .L95+20
 1208 0064 E318     		add	r3, r4, r3
 1209 0066 1B78     		ldrb	r3, [r3]
 1210 0068 1340     		and	r3, r2
 852:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1211              		.loc 1 852 0
 1212 006a 0B43     		orr	r3, r1
 1213 006c 0360     		str	r3, [r0]
 855:.\Generated_Source\PSoC4/CyLib.c **** 
 1214              		.loc 1 855 0
 1215 006e 3220     		mov	r0, #50
 1216 0070 FFF7FEFF 		bl	CyDelayCycles
 1217              	.LVL114:
 857:.\Generated_Source\PSoC4/CyLib.c ****             {
 1218              		.loc 1 857 0
 1219 0074 182C     		cmp	r4, #24
 1220 0076 16D9     		bls	.L91
 860:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1221              		.loc 1 860 0
 1222 0078 114F     		ldr	r7, .L95
 1223 007a 3B68     		ldr	r3, [r7]
 1224 007c 0725     		mov	r5, #7
 1225 007e AB43     		bic	r3, r5
 1226 0080 1A1C     		mov	r2, r3
 861:.\Generated_Source\PSoC4/CyLib.c **** 
 1227              		.loc 1 861 0
 1228 0082 231C     		mov	r3, r4
 1229 0084 1C3B     		sub	r3, r3, #28
 1230 0086 9B08     		lsr	r3, r3, #2
 1231 0088 2B40     		and	r3, r5
 860:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1232              		.loc 1 860 0
 1233 008a 1343     		orr	r3, r2
 1234 008c 3B60     		str	r3, [r7]
 863:.\Generated_Source\PSoC4/CyLib.c **** 
 1235              		.loc 1 863 0
 1236 008e 3220     		mov	r0, #50
 1237 0090 FFF7FEFF 		bl	CyDelayCycles
 1238              	.LVL115:
 867:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1239              		.loc 1 867 0
 1240 0094 3A68     		ldr	r2, [r7]
 1241 0096 AA43     		bic	r2, r5
 868:.\Generated_Source\PSoC4/CyLib.c ****             }
 1242              		.loc 1 868 0
 1243 0098 231C     		mov	r3, r4
 1244 009a 183B     		sub	r3, r3, #24
 1245 009c 9B08     		lsr	r3, r3, #2
 1246 009e 2C1C     		mov	r4, r5
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 67


 1247              	.LVL116:
 1248 00a0 1C40     		and	r4, r3
 867:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1249              		.loc 1 867 0
 1250 00a2 1443     		orr	r4, r2
 1251 00a4 3C60     		str	r4, [r7]
 1252              	.L91:
 872:.\Generated_Source\PSoC4/CyLib.c ****                 {
 1253              		.loc 1 872 0
 1254 00a6 012E     		cmp	r6, #1
 1255 00a8 01D1     		bne	.L92
 874:.\Generated_Source\PSoC4/CyLib.c ****                 }
 1256              		.loc 1 874 0
 1257 00aa FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1258              	.LVL117:
 1259              	.L92:
 886:.\Generated_Source\PSoC4/CyLib.c ****         }
 1260              		.loc 1 886 0
 1261 00ae 0198     		ldr	r0, [sp, #4]
 1262 00b0 FFF7FEFF 		bl	CyExitCriticalSection
 1263              	.LVL118:
 1264 00b4 02E0     		b	.L87
 1265              	.LVL119:
 1266              	.L89:
 891:.\Generated_Source\PSoC4/CyLib.c ****         }
 1267              		.loc 1 891 0 discriminator 1
 1268 00b6 0020     		mov	r0, #0
 1269              	.LVL120:
 1270 00b8 FFF7FEFF 		bl	CyHalt
 1271              	.LVL121:
 1272              	.L87:
 893:.\Generated_Source\PSoC4/CyLib.c **** 
 1273              		.loc 1 893 0
 1274 00bc 03B0     		add	sp, sp, #12
 1275              		@ sp needed
 1276 00be F0BD     		pop	{r4, r5, r6, r7, pc}
 1277              	.L96:
 1278              		.align	2
 1279              	.L95:
 1280 00c0 080F0340 		.word	1073942280
 1281 00c4 CDF1FF0F 		.word	268431821
 1282 00c8 0C0F0340 		.word	1073942284
 1283 00cc 100F0340 		.word	1073942288
 1284 00d0 180F0340 		.word	1073942296
 1285 00d4 B4F1FF0F 		.word	268431796
 1286              		.cfi_endproc
 1287              	.LFE9:
 1288              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1289              		.section	.text.CyDelayUs,"ax",%progbits
 1290              		.align	2
 1291              		.global	CyDelayUs
 1292              		.code	16
 1293              		.thumb_func
 1294              		.type	CyDelayUs, %function
 1295              	CyDelayUs:
 1296              	.LFB28:
2416:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 68


2417:.\Generated_Source\PSoC4/CyLib.c **** 
2418:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2419:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2420:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2421:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2422:.\Generated_Source\PSoC4/CyLib.c **** *
2423:.\Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2424:.\Generated_Source\PSoC4/CyLib.c **** *
2425:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2426:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2427:.\Generated_Source\PSoC4/CyLib.c **** {
 1297              		.loc 1 2427 0
 1298              		.cfi_startproc
 1299              	.LVL122:
 1300 0000 08B5     		push	{r3, lr}
 1301              		.cfi_def_cfa_offset 8
 1302              		.cfi_offset 3, -8
 1303              		.cfi_offset 14, -4
2428:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1304              		.loc 1 2428 0
 1305 0002 034B     		ldr	r3, .L98
 1306 0004 1B7A     		ldrb	r3, [r3, #8]
 1307 0006 5843     		mul	r0, r3
 1308              	.LVL123:
 1309 0008 FFF7FEFF 		bl	CyDelayCycles
 1310              	.LVL124:
2429:.\Generated_Source\PSoC4/CyLib.c **** }
 1311              		.loc 1 2429 0
 1312              		@ sp needed
 1313 000c 08BD     		pop	{r3, pc}
 1314              	.L99:
 1315 000e C046     		.align	2
 1316              	.L98:
 1317 0010 00000000 		.word	.LANCHOR0
 1318              		.cfi_endproc
 1319              	.LFE28:
 1320              		.size	CyDelayUs, .-CyDelayUs
 1321              		.global	__aeabi_uidiv
 1322              		.section	.text.CyDelayFreq,"ax",%progbits
 1323              		.align	2
 1324              		.global	CyDelayFreq
 1325              		.code	16
 1326              		.thumb_func
 1327              		.type	CyDelayFreq, %function
 1328              	CyDelayFreq:
 1329              	.LFB29:
2430:.\Generated_Source\PSoC4/CyLib.c **** 
2431:.\Generated_Source\PSoC4/CyLib.c **** 
2432:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2433:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2434:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2435:.\Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2436:.\Generated_Source\PSoC4/CyLib.c **** *
2437:.\Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2438:.\Generated_Source\PSoC4/CyLib.c **** *
2439:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2440:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 69


2441:.\Generated_Source\PSoC4/CyLib.c **** {
 1330              		.loc 1 2441 0
 1331              		.cfi_startproc
 1332              	.LVL125:
 1333 0000 38B5     		push	{r3, r4, r5, lr}
 1334              		.cfi_def_cfa_offset 16
 1335              		.cfi_offset 3, -16
 1336              		.cfi_offset 4, -12
 1337              		.cfi_offset 5, -8
 1338              		.cfi_offset 14, -4
2442:.\Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1339              		.loc 1 2442 0
 1340 0002 0028     		cmp	r0, #0
 1341 0004 02D0     		beq	.L101
2443:.\Generated_Source\PSoC4/CyLib.c ****     {
2444:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1342              		.loc 1 2444 0
 1343 0006 0C4B     		ldr	r3, .L103
 1344 0008 D860     		str	r0, [r3, #12]
 1345 000a 02E0     		b	.L102
 1346              	.L101:
2445:.\Generated_Source\PSoC4/CyLib.c ****     }
2446:.\Generated_Source\PSoC4/CyLib.c ****     else
2447:.\Generated_Source\PSoC4/CyLib.c ****     {
2448:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1347              		.loc 1 2448 0
 1348 000c 0B4A     		ldr	r2, .L103+4
 1349 000e 0A4B     		ldr	r3, .L103
 1350 0010 DA60     		str	r2, [r3, #12]
 1351              	.L102:
2449:.\Generated_Source\PSoC4/CyLib.c ****     }
2450:.\Generated_Source\PSoC4/CyLib.c **** 
2451:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1352              		.loc 1 2451 0
 1353 0012 094C     		ldr	r4, .L103
 1354 0014 E568     		ldr	r5, [r4, #12]
 1355 0016 0A4B     		ldr	r3, .L103+8
 1356 0018 E818     		add	r0, r5, r3
 1357              	.LVL126:
 1358 001a 0A49     		ldr	r1, .L103+12
 1359 001c FFF7FEFF 		bl	__aeabi_uidiv
 1360              	.LVL127:
 1361 0020 2072     		strb	r0, [r4, #8]
2452:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1362              		.loc 1 2452 0
 1363 0022 094B     		ldr	r3, .L103+16
 1364 0024 E818     		add	r0, r5, r3
 1365 0026 FA21     		mov	r1, #250
 1366 0028 8900     		lsl	r1, r1, #2
 1367 002a FFF7FEFF 		bl	__aeabi_uidiv
 1368              	.LVL128:
 1369 002e 6060     		str	r0, [r4, #4]
2453:.\Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1370              		.loc 1 2453 0
 1371 0030 C003     		lsl	r0, r0, #15
 1372 0032 2060     		str	r0, [r4]
2454:.\Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 70


 1373              		.loc 1 2454 0
 1374              		@ sp needed
 1375 0034 38BD     		pop	{r3, r4, r5, pc}
 1376              	.L104:
 1377 0036 C046     		.align	2
 1378              	.L103:
 1379 0038 00000000 		.word	.LANCHOR0
 1380 003c 00366E01 		.word	24000000
 1381 0040 3F420F00 		.word	999999
 1382 0044 40420F00 		.word	1000000
 1383 0048 E7030000 		.word	999
 1384              		.cfi_endproc
 1385              	.LFE29:
 1386              		.size	CyDelayFreq, .-CyDelayFreq
 1387              		.section	.text.CySysTickStop,"ax",%progbits
 1388              		.align	2
 1389              		.global	CySysTickStop
 1390              		.code	16
 1391              		.thumb_func
 1392              		.type	CySysTickStop, %function
 1393              	CySysTickStop:
 1394              	.LFB33:
2455:.\Generated_Source\PSoC4/CyLib.c **** 
2456:.\Generated_Source\PSoC4/CyLib.c **** 
2457:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2458:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2459:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2460:.\Generated_Source\PSoC4/CyLib.c **** *
2461:.\Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2462:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2463:.\Generated_Source\PSoC4/CyLib.c **** *
2464:.\Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2465:.\Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2466:.\Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2467:.\Generated_Source\PSoC4/CyLib.c **** *
2468:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2469:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2470:.\Generated_Source\PSoC4/CyLib.c **** *
2471:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2472:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2473:.\Generated_Source\PSoC4/CyLib.c **** {
2474:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2475:.\Generated_Source\PSoC4/CyLib.c ****     {
2476:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2477:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2478:.\Generated_Source\PSoC4/CyLib.c ****     }
2479:.\Generated_Source\PSoC4/CyLib.c **** 
2480:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2481:.\Generated_Source\PSoC4/CyLib.c **** }
2482:.\Generated_Source\PSoC4/CyLib.c **** 
2483:.\Generated_Source\PSoC4/CyLib.c **** 
2484:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2485:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2486:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2487:.\Generated_Source\PSoC4/CyLib.c **** *
2488:.\Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2489:.\Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 71


2490:.\Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2491:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2492:.\Generated_Source\PSoC4/CyLib.c **** *
2493:.\Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2494:.\Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2495:.\Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2496:.\Generated_Source\PSoC4/CyLib.c **** *
2497:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2498:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2499:.\Generated_Source\PSoC4/CyLib.c **** *
2500:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2501:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2502:.\Generated_Source\PSoC4/CyLib.c **** {
2503:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2504:.\Generated_Source\PSoC4/CyLib.c **** 
2505:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2506:.\Generated_Source\PSoC4/CyLib.c ****     {
2507:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2508:.\Generated_Source\PSoC4/CyLib.c ****     }
2509:.\Generated_Source\PSoC4/CyLib.c **** 
2510:.\Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2511:.\Generated_Source\PSoC4/CyLib.c **** 
2512:.\Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2513:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2514:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2515:.\Generated_Source\PSoC4/CyLib.c **** 
2516:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2517:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2518:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2519:.\Generated_Source\PSoC4/CyLib.c **** }
2520:.\Generated_Source\PSoC4/CyLib.c **** 
2521:.\Generated_Source\PSoC4/CyLib.c **** 
2522:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2523:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2524:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2525:.\Generated_Source\PSoC4/CyLib.c **** *
2526:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2527:.\Generated_Source\PSoC4/CyLib.c **** *
2528:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2529:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2530:.\Generated_Source\PSoC4/CyLib.c **** *
2531:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2532:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2533:.\Generated_Source\PSoC4/CyLib.c **** {
2534:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2535:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2536:.\Generated_Source\PSoC4/CyLib.c **** }
2537:.\Generated_Source\PSoC4/CyLib.c **** 
2538:.\Generated_Source\PSoC4/CyLib.c **** 
2539:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2540:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2541:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2542:.\Generated_Source\PSoC4/CyLib.c **** *
2543:.\Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2544:.\Generated_Source\PSoC4/CyLib.c **** *
2545:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2546:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 72


2547:.\Generated_Source\PSoC4/CyLib.c **** *
2548:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2549:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2550:.\Generated_Source\PSoC4/CyLib.c **** {
 1395              		.loc 1 2550 0
 1396              		.cfi_startproc
2551:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1397              		.loc 1 2551 0
 1398 0000 024A     		ldr	r2, .L106
 1399 0002 1368     		ldr	r3, [r2]
 1400 0004 0121     		mov	r1, #1
 1401 0006 8B43     		bic	r3, r1
 1402 0008 1360     		str	r3, [r2]
2552:.\Generated_Source\PSoC4/CyLib.c **** }
 1403              		.loc 1 2552 0
 1404              		@ sp needed
 1405 000a 7047     		bx	lr
 1406              	.L107:
 1407              		.align	2
 1408              	.L106:
 1409 000c 10E000E0 		.word	-536813552
 1410              		.cfi_endproc
 1411              	.LFE33:
 1412              		.size	CySysTickStop, .-CySysTickStop
 1413              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1414              		.align	2
 1415              		.global	CySysTickEnableInterrupt
 1416              		.code	16
 1417              		.thumb_func
 1418              		.type	CySysTickEnableInterrupt, %function
 1419              	CySysTickEnableInterrupt:
 1420              	.LFB34:
2553:.\Generated_Source\PSoC4/CyLib.c **** 
2554:.\Generated_Source\PSoC4/CyLib.c **** 
2555:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2556:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2557:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2558:.\Generated_Source\PSoC4/CyLib.c **** *
2559:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2560:.\Generated_Source\PSoC4/CyLib.c **** *
2561:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2562:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2563:.\Generated_Source\PSoC4/CyLib.c **** *
2564:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2565:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2566:.\Generated_Source\PSoC4/CyLib.c **** {
 1421              		.loc 1 2566 0
 1422              		.cfi_startproc
2567:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1423              		.loc 1 2567 0
 1424 0000 024A     		ldr	r2, .L109
 1425 0002 1168     		ldr	r1, [r2]
 1426 0004 0223     		mov	r3, #2
 1427 0006 0B43     		orr	r3, r1
 1428 0008 1360     		str	r3, [r2]
2568:.\Generated_Source\PSoC4/CyLib.c **** }
 1429              		.loc 1 2568 0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 73


 1430              		@ sp needed
 1431 000a 7047     		bx	lr
 1432              	.L110:
 1433              		.align	2
 1434              	.L109:
 1435 000c 10E000E0 		.word	-536813552
 1436              		.cfi_endproc
 1437              	.LFE34:
 1438              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1439              		.section	.text.CySysTickEnable,"ax",%progbits
 1440              		.align	2
 1441              		.global	CySysTickEnable
 1442              		.code	16
 1443              		.thumb_func
 1444              		.type	CySysTickEnable, %function
 1445              	CySysTickEnable:
 1446              	.LFB32:
2533:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1447              		.loc 1 2533 0
 1448              		.cfi_startproc
 1449 0000 08B5     		push	{r3, lr}
 1450              		.cfi_def_cfa_offset 8
 1451              		.cfi_offset 3, -8
 1452              		.cfi_offset 14, -4
2534:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1453              		.loc 1 2534 0
 1454 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1455              	.LVL129:
2535:.\Generated_Source\PSoC4/CyLib.c **** }
 1456              		.loc 1 2535 0
 1457 0006 034A     		ldr	r2, .L112
 1458 0008 1168     		ldr	r1, [r2]
 1459 000a 0123     		mov	r3, #1
 1460 000c 0B43     		orr	r3, r1
 1461 000e 1360     		str	r3, [r2]
2536:.\Generated_Source\PSoC4/CyLib.c **** 
 1462              		.loc 1 2536 0
 1463              		@ sp needed
 1464 0010 08BD     		pop	{r3, pc}
 1465              	.L113:
 1466 0012 C046     		.align	2
 1467              	.L112:
 1468 0014 10E000E0 		.word	-536813552
 1469              		.cfi_endproc
 1470              	.LFE32:
 1471              		.size	CySysTickEnable, .-CySysTickEnable
 1472              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1473              		.align	2
 1474              		.global	CySysTickDisableInterrupt
 1475              		.code	16
 1476              		.thumb_func
 1477              		.type	CySysTickDisableInterrupt, %function
 1478              	CySysTickDisableInterrupt:
 1479              	.LFB35:
2569:.\Generated_Source\PSoC4/CyLib.c **** 
2570:.\Generated_Source\PSoC4/CyLib.c **** 
2571:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 74


2572:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2573:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2574:.\Generated_Source\PSoC4/CyLib.c **** *
2575:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2576:.\Generated_Source\PSoC4/CyLib.c **** *
2577:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2578:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2579:.\Generated_Source\PSoC4/CyLib.c **** *
2580:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2581:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2582:.\Generated_Source\PSoC4/CyLib.c **** {
 1480              		.loc 1 2582 0
 1481              		.cfi_startproc
2583:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1482              		.loc 1 2583 0
 1483 0000 024A     		ldr	r2, .L115
 1484 0002 1368     		ldr	r3, [r2]
 1485 0004 0221     		mov	r1, #2
 1486 0006 8B43     		bic	r3, r1
 1487 0008 1360     		str	r3, [r2]
2584:.\Generated_Source\PSoC4/CyLib.c **** }
 1488              		.loc 1 2584 0
 1489              		@ sp needed
 1490 000a 7047     		bx	lr
 1491              	.L116:
 1492              		.align	2
 1493              	.L115:
 1494 000c 10E000E0 		.word	-536813552
 1495              		.cfi_endproc
 1496              	.LFE35:
 1497              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1498              		.section	.text.CySysTickSetReload,"ax",%progbits
 1499              		.align	2
 1500              		.global	CySysTickSetReload
 1501              		.code	16
 1502              		.thumb_func
 1503              		.type	CySysTickSetReload, %function
 1504              	CySysTickSetReload:
 1505              	.LFB36:
2585:.\Generated_Source\PSoC4/CyLib.c **** 
2586:.\Generated_Source\PSoC4/CyLib.c **** 
2587:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2588:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2589:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2590:.\Generated_Source\PSoC4/CyLib.c **** *
2591:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2592:.\Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2593:.\Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2594:.\Generated_Source\PSoC4/CyLib.c **** *
2595:.\Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2596:.\Generated_Source\PSoC4/CyLib.c **** *
2597:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2598:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2599:.\Generated_Source\PSoC4/CyLib.c **** {
 1506              		.loc 1 2599 0
 1507              		.cfi_startproc
 1508              	.LVL130:
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 75


2600:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1509              		.loc 1 2600 0
 1510 0000 0002     		lsl	r0, r0, #8
 1511              	.LVL131:
 1512 0002 000A     		lsr	r0, r0, #8
 1513 0004 014B     		ldr	r3, .L118
 1514 0006 1860     		str	r0, [r3]
2601:.\Generated_Source\PSoC4/CyLib.c **** }
 1515              		.loc 1 2601 0
 1516              		@ sp needed
 1517 0008 7047     		bx	lr
 1518              	.L119:
 1519 000a C046     		.align	2
 1520              	.L118:
 1521 000c 14E000E0 		.word	-536813548
 1522              		.cfi_endproc
 1523              	.LFE36:
 1524              		.size	CySysTickSetReload, .-CySysTickSetReload
 1525              		.section	.text.CySysTickGetReload,"ax",%progbits
 1526              		.align	2
 1527              		.global	CySysTickGetReload
 1528              		.code	16
 1529              		.thumb_func
 1530              		.type	CySysTickGetReload, %function
 1531              	CySysTickGetReload:
 1532              	.LFB37:
2602:.\Generated_Source\PSoC4/CyLib.c **** 
2603:.\Generated_Source\PSoC4/CyLib.c **** 
2604:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2605:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2606:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2607:.\Generated_Source\PSoC4/CyLib.c **** *
2608:.\Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2609:.\Generated_Source\PSoC4/CyLib.c **** *
2610:.\Generated_Source\PSoC4/CyLib.c **** * \return
2611:.\Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2612:.\Generated_Source\PSoC4/CyLib.c **** *
2613:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2614:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2615:.\Generated_Source\PSoC4/CyLib.c **** {
 1533              		.loc 1 2615 0
 1534              		.cfi_startproc
2616:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1535              		.loc 1 2616 0
 1536 0000 024B     		ldr	r3, .L121
 1537 0002 1868     		ldr	r0, [r3]
 1538 0004 0002     		lsl	r0, r0, #8
 1539 0006 000A     		lsr	r0, r0, #8
2617:.\Generated_Source\PSoC4/CyLib.c **** }
 1540              		.loc 1 2617 0
 1541              		@ sp needed
 1542 0008 7047     		bx	lr
 1543              	.L122:
 1544 000a C046     		.align	2
 1545              	.L121:
 1546 000c 14E000E0 		.word	-536813548
 1547              		.cfi_endproc
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 76


 1548              	.LFE37:
 1549              		.size	CySysTickGetReload, .-CySysTickGetReload
 1550              		.section	.text.CySysTickGetValue,"ax",%progbits
 1551              		.align	2
 1552              		.global	CySysTickGetValue
 1553              		.code	16
 1554              		.thumb_func
 1555              		.type	CySysTickGetValue, %function
 1556              	CySysTickGetValue:
 1557              	.LFB38:
2618:.\Generated_Source\PSoC4/CyLib.c **** 
2619:.\Generated_Source\PSoC4/CyLib.c **** 
2620:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2621:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2622:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2623:.\Generated_Source\PSoC4/CyLib.c **** *
2624:.\Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2625:.\Generated_Source\PSoC4/CyLib.c **** *
2626:.\Generated_Source\PSoC4/CyLib.c **** * \return
2627:.\Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2628:.\Generated_Source\PSoC4/CyLib.c **** *
2629:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2630:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2631:.\Generated_Source\PSoC4/CyLib.c **** {
 1558              		.loc 1 2631 0
 1559              		.cfi_startproc
2632:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1560              		.loc 1 2632 0
 1561 0000 024B     		ldr	r3, .L124
 1562 0002 1868     		ldr	r0, [r3]
 1563 0004 0002     		lsl	r0, r0, #8
 1564 0006 000A     		lsr	r0, r0, #8
2633:.\Generated_Source\PSoC4/CyLib.c **** }
 1565              		.loc 1 2633 0
 1566              		@ sp needed
 1567 0008 7047     		bx	lr
 1568              	.L125:
 1569 000a C046     		.align	2
 1570              	.L124:
 1571 000c 18E000E0 		.word	-536813544
 1572              		.cfi_endproc
 1573              	.LFE38:
 1574              		.size	CySysTickGetValue, .-CySysTickGetValue
 1575              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1576              		.align	2
 1577              		.global	CySysTickSetClockSource
 1578              		.code	16
 1579              		.thumb_func
 1580              		.type	CySysTickSetClockSource, %function
 1581              	CySysTickSetClockSource:
 1582              	.LFB39:
2634:.\Generated_Source\PSoC4/CyLib.c **** 
2635:.\Generated_Source\PSoC4/CyLib.c **** 
2636:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2637:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2638:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2639:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 77


2640:.\Generated_Source\PSoC4/CyLib.c ****     *
2641:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2642:.\Generated_Source\PSoC4/CyLib.c ****     *
2643:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2644:.\Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2645:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2646:.\Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2647:.\Generated_Source\PSoC4/CyLib.c ****     *
2648:.\Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2649:.\Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2650:.\Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2651:.\Generated_Source\PSoC4/CyLib.c ****     *
2652:.\Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2653:.\Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2654:.\Generated_Source\PSoC4/CyLib.c ****     *
2655:.\Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2656:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2657:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2658:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2659:.\Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2660:.\Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2661:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2662:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2663:.\Generated_Source\PSoC4/CyLib.c ****     {
 1583              		.loc 1 2663 0
 1584              		.cfi_startproc
 1585              	.LVL132:
2664:.\Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1586              		.loc 1 2664 0
 1587 0000 0128     		cmp	r0, #1
 1588 0002 05D1     		bne	.L127
2665:.\Generated_Source\PSoC4/CyLib.c ****         {
2666:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1589              		.loc 1 2666 0
 1590 0004 054A     		ldr	r2, .L129
 1591 0006 1168     		ldr	r1, [r2]
 1592 0008 0423     		mov	r3, #4
 1593 000a 0B43     		orr	r3, r1
 1594 000c 1360     		str	r3, [r2]
 1595 000e 04E0     		b	.L126
 1596              	.L127:
2667:.\Generated_Source\PSoC4/CyLib.c ****         }
2668:.\Generated_Source\PSoC4/CyLib.c ****         else
2669:.\Generated_Source\PSoC4/CyLib.c ****         {
2670:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1597              		.loc 1 2670 0
 1598 0010 024A     		ldr	r2, .L129
 1599 0012 1368     		ldr	r3, [r2]
 1600 0014 0421     		mov	r1, #4
 1601 0016 8B43     		bic	r3, r1
 1602 0018 1360     		str	r3, [r2]
 1603              	.L126:
2671:.\Generated_Source\PSoC4/CyLib.c ****         }
2672:.\Generated_Source\PSoC4/CyLib.c ****     }
 1604              		.loc 1 2672 0
 1605              		@ sp needed
 1606 001a 7047     		bx	lr
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 78


 1607              	.L130:
 1608              		.align	2
 1609              	.L129:
 1610 001c 10E000E0 		.word	-536813552
 1611              		.cfi_endproc
 1612              	.LFE39:
 1613              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1614              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1615              		.align	2
 1616              		.global	CySysTickGetCountFlag
 1617              		.code	16
 1618              		.thumb_func
 1619              		.type	CySysTickGetCountFlag, %function
 1620              	CySysTickGetCountFlag:
 1621              	.LFB40:
2673:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2674:.\Generated_Source\PSoC4/CyLib.c **** 
2675:.\Generated_Source\PSoC4/CyLib.c **** 
2676:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2677:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2678:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2679:.\Generated_Source\PSoC4/CyLib.c **** *
2680:.\Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2681:.\Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2682:.\Generated_Source\PSoC4/CyLib.c **** *
2683:.\Generated_Source\PSoC4/CyLib.c **** * \return
2684:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2685:.\Generated_Source\PSoC4/CyLib.c **** *
2686:.\Generated_Source\PSoC4/CyLib.c **** *
2687:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2688:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2689:.\Generated_Source\PSoC4/CyLib.c **** *
2690:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2691:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2692:.\Generated_Source\PSoC4/CyLib.c **** {
 1622              		.loc 1 2692 0
 1623              		.cfi_startproc
2693:.\Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1624              		.loc 1 2693 0
 1625 0000 024B     		ldr	r3, .L132
 1626 0002 1868     		ldr	r0, [r3]
 1627 0004 C003     		lsl	r0, r0, #15
 1628 0006 C00F     		lsr	r0, r0, #31
2694:.\Generated_Source\PSoC4/CyLib.c **** }
 1629              		.loc 1 2694 0
 1630              		@ sp needed
 1631 0008 7047     		bx	lr
 1632              	.L133:
 1633 000a C046     		.align	2
 1634              	.L132:
 1635 000c 10E000E0 		.word	-536813552
 1636              		.cfi_endproc
 1637              	.LFE40:
 1638              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1639              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1640              		.align	2
 1641              		.code	16
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 79


 1642              		.thumb_func
 1643              		.type	CySysTickServiceCallbacks, %function
 1644              	CySysTickServiceCallbacks:
 1645              	.LFB44:
2695:.\Generated_Source\PSoC4/CyLib.c **** 
2696:.\Generated_Source\PSoC4/CyLib.c **** 
2697:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2698:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2699:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2700:.\Generated_Source\PSoC4/CyLib.c **** *
2701:.\Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2702:.\Generated_Source\PSoC4/CyLib.c **** *
2703:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2705:.\Generated_Source\PSoC4/CyLib.c **** {
2706:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2707:.\Generated_Source\PSoC4/CyLib.c **** }
2708:.\Generated_Source\PSoC4/CyLib.c **** 
2709:.\Generated_Source\PSoC4/CyLib.c **** 
2710:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2711:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2712:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:.\Generated_Source\PSoC4/CyLib.c **** *
2714:.\Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2715:.\Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2716:.\Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2717:.\Generated_Source\PSoC4/CyLib.c **** *
2718:.\Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2719:.\Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2720:.\Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2721:.\Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2722:.\Generated_Source\PSoC4/CyLib.c **** *  functions.
2723:.\Generated_Source\PSoC4/CyLib.c **** *
2724:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2725:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2726:.\Generated_Source\PSoC4/CyLib.c **** *
2727:.\Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2728:.\Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2729:.\Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2730:.\Generated_Source\PSoC4/CyLib.c **** *
2731:.\Generated_Source\PSoC4/CyLib.c **** * \return
2732:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2733:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2734:.\Generated_Source\PSoC4/CyLib.c **** *
2735:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2736:.\Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2737:.\Generated_Source\PSoC4/CyLib.c **** *
2738:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2739:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2740:.\Generated_Source\PSoC4/CyLib.c **** {
2741:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2742:.\Generated_Source\PSoC4/CyLib.c **** 
2743:.\Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2744:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2745:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2746:.\Generated_Source\PSoC4/CyLib.c **** }
2747:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 80


2748:.\Generated_Source\PSoC4/CyLib.c **** 
2749:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2750:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2751:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2752:.\Generated_Source\PSoC4/CyLib.c **** *
2753:.\Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2754:.\Generated_Source\PSoC4/CyLib.c **** *
2755:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2756:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2757:.\Generated_Source\PSoC4/CyLib.c **** *
2758:.\Generated_Source\PSoC4/CyLib.c **** * \return
2759:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2760:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2761:.\Generated_Source\PSoC4/CyLib.c **** *
2762:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2763:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2764:.\Generated_Source\PSoC4/CyLib.c **** {
2765:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2766:.\Generated_Source\PSoC4/CyLib.c **** }
2767:.\Generated_Source\PSoC4/CyLib.c **** 
2768:.\Generated_Source\PSoC4/CyLib.c **** 
2769:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2770:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2771:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2772:.\Generated_Source\PSoC4/CyLib.c **** *
2773:.\Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2774:.\Generated_Source\PSoC4/CyLib.c **** *
2775:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2776:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2777:.\Generated_Source\PSoC4/CyLib.c **** {
 1646              		.loc 1 2777 0
 1647              		.cfi_startproc
 1648 0000 10B5     		push	{r4, lr}
 1649              		.cfi_def_cfa_offset 8
 1650              		.cfi_offset 4, -8
 1651              		.cfi_offset 14, -4
2778:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2779:.\Generated_Source\PSoC4/CyLib.c **** 
2780:.\Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2781:.\Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1652              		.loc 1 2781 0
 1653 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1654              	.LVL133:
 1655 0006 0128     		cmp	r0, #1
 1656 0008 0BD1     		bne	.L134
 1657 000a 07E0     		b	.L139
 1658              	.LVL134:
 1659              	.L138:
2782:.\Generated_Source\PSoC4/CyLib.c ****     {
2783:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2784:.\Generated_Source\PSoC4/CyLib.c ****         {
2785:.\Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1660              		.loc 1 2785 0
 1661 000c A300     		lsl	r3, r4, #2
 1662 000e 054A     		ldr	r2, .L140
 1663 0010 9B58     		ldr	r3, [r3, r2]
 1664 0012 002B     		cmp	r3, #0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 81


 1665 0014 00D0     		beq	.L137
2786:.\Generated_Source\PSoC4/CyLib.c ****             {
2787:.\Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1666              		.loc 1 2787 0
 1667 0016 9847     		blx	r3
 1668              	.LVL135:
 1669              	.L137:
2783:.\Generated_Source\PSoC4/CyLib.c ****         {
 1670              		.loc 1 2783 0 discriminator 2
 1671 0018 0134     		add	r4, r4, #1
 1672              	.LVL136:
 1673 001a 00E0     		b	.L135
 1674              	.LVL137:
 1675              	.L139:
 1676 001c 0024     		mov	r4, #0
 1677              	.L135:
 1678              	.LVL138:
2783:.\Generated_Source\PSoC4/CyLib.c ****         {
 1679              		.loc 1 2783 0 is_stmt 0 discriminator 1
 1680 001e 042C     		cmp	r4, #4
 1681 0020 F4D9     		bls	.L138
 1682              	.LVL139:
 1683              	.L134:
2788:.\Generated_Source\PSoC4/CyLib.c ****             }
2789:.\Generated_Source\PSoC4/CyLib.c ****         }
2790:.\Generated_Source\PSoC4/CyLib.c ****     }
2791:.\Generated_Source\PSoC4/CyLib.c **** }
 1684              		.loc 1 2791 0 is_stmt 1
 1685              		@ sp needed
 1686 0022 10BD     		pop	{r4, pc}
 1687              	.L141:
 1688              		.align	2
 1689              	.L140:
 1690 0024 00000000 		.word	.LANCHOR2
 1691              		.cfi_endproc
 1692              	.LFE44:
 1693              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1694              		.section	.text.CySysTickClear,"ax",%progbits
 1695              		.align	2
 1696              		.global	CySysTickClear
 1697              		.code	16
 1698              		.thumb_func
 1699              		.type	CySysTickClear, %function
 1700              	CySysTickClear:
 1701              	.LFB41:
2705:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1702              		.loc 1 2705 0
 1703              		.cfi_startproc
2706:.\Generated_Source\PSoC4/CyLib.c **** }
 1704              		.loc 1 2706 0
 1705 0000 0022     		mov	r2, #0
 1706 0002 014B     		ldr	r3, .L143
 1707 0004 1A60     		str	r2, [r3]
2707:.\Generated_Source\PSoC4/CyLib.c **** 
 1708              		.loc 1 2707 0
 1709              		@ sp needed
 1710 0006 7047     		bx	lr
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 82


 1711              	.L144:
 1712              		.align	2
 1713              	.L143:
 1714 0008 18E000E0 		.word	-536813544
 1715              		.cfi_endproc
 1716              	.LFE41:
 1717              		.size	CySysTickClear, .-CySysTickClear
 1718              		.section	.text.CySysTickInit,"ax",%progbits
 1719              		.align	2
 1720              		.global	CySysTickInit
 1721              		.code	16
 1722              		.thumb_func
 1723              		.type	CySysTickInit, %function
 1724              	CySysTickInit:
 1725              	.LFB31:
2502:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1726              		.loc 1 2502 0
 1727              		.cfi_startproc
 1728 0000 08B5     		push	{r3, lr}
 1729              		.cfi_def_cfa_offset 8
 1730              		.cfi_offset 3, -8
 1731              		.cfi_offset 14, -4
 1732              	.LVL140:
2505:.\Generated_Source\PSoC4/CyLib.c ****     {
 1733              		.loc 1 2505 0
 1734 0002 0023     		mov	r3, #0
 1735 0004 04E0     		b	.L146
 1736              	.LVL141:
 1737              	.L147:
2507:.\Generated_Source\PSoC4/CyLib.c ****     }
 1738              		.loc 1 2507 0 discriminator 3
 1739 0006 9900     		lsl	r1, r3, #2
 1740 0008 0020     		mov	r0, #0
 1741 000a 0D4A     		ldr	r2, .L148
 1742 000c 8850     		str	r0, [r1, r2]
2505:.\Generated_Source\PSoC4/CyLib.c ****     {
 1743              		.loc 1 2505 0 discriminator 3
 1744 000e 0133     		add	r3, r3, #1
 1745              	.LVL142:
 1746              	.L146:
2505:.\Generated_Source\PSoC4/CyLib.c ****     {
 1747              		.loc 1 2505 0 is_stmt 0 discriminator 1
 1748 0010 042B     		cmp	r3, #4
 1749 0012 F8D9     		bls	.L147
2510:.\Generated_Source\PSoC4/CyLib.c **** 
 1750              		.loc 1 2510 0 is_stmt 1
 1751 0014 0F20     		mov	r0, #15
 1752 0016 0B49     		ldr	r1, .L148+4
 1753 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1754              	.LVL143:
2513:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 1755              		.loc 1 2513 0
 1756 001c 0120     		mov	r0, #1
 1757 001e FFF7FEFF 		bl	CySysTickSetClockSource
 1758              	.LVL144:
2516:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1759              		.loc 1 2516 0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 83


 1760 0022 094B     		ldr	r3, .L148+8
 1761 0024 D868     		ldr	r0, [r3, #12]
 1762 0026 FA21     		mov	r1, #250
 1763 0028 8900     		lsl	r1, r1, #2
 1764 002a FFF7FEFF 		bl	__aeabi_uidiv
 1765              	.LVL145:
 1766 002e FFF7FEFF 		bl	CySysTickSetReload
 1767              	.LVL146:
2517:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 1768              		.loc 1 2517 0
 1769 0032 FFF7FEFF 		bl	CySysTickClear
 1770              	.LVL147:
2518:.\Generated_Source\PSoC4/CyLib.c **** }
 1771              		.loc 1 2518 0
 1772 0036 0F20     		mov	r0, #15
 1773 0038 FFF7FEFF 		bl	CyIntEnable
 1774              	.LVL148:
2519:.\Generated_Source\PSoC4/CyLib.c **** 
 1775              		.loc 1 2519 0
 1776              		@ sp needed
 1777 003c 08BD     		pop	{r3, pc}
 1778              	.L149:
 1779 003e C046     		.align	2
 1780              	.L148:
 1781 0040 00000000 		.word	.LANCHOR2
 1782 0044 00000000 		.word	CySysTickServiceCallbacks
 1783 0048 00000000 		.word	.LANCHOR0
 1784              		.cfi_endproc
 1785              	.LFE31:
 1786              		.size	CySysTickInit, .-CySysTickInit
 1787              		.section	.text.CySysTickStart,"ax",%progbits
 1788              		.align	2
 1789              		.global	CySysTickStart
 1790              		.code	16
 1791              		.thumb_func
 1792              		.type	CySysTickStart, %function
 1793              	CySysTickStart:
 1794              	.LFB30:
2473:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1795              		.loc 1 2473 0
 1796              		.cfi_startproc
 1797 0000 08B5     		push	{r3, lr}
 1798              		.cfi_def_cfa_offset 8
 1799              		.cfi_offset 3, -8
 1800              		.cfi_offset 14, -4
2474:.\Generated_Source\PSoC4/CyLib.c ****     {
 1801              		.loc 1 2474 0
 1802 0002 064B     		ldr	r3, .L152
 1803 0004 5B69     		ldr	r3, [r3, #20]
 1804 0006 002B     		cmp	r3, #0
 1805 0008 04D1     		bne	.L151
2476:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1806              		.loc 1 2476 0
 1807 000a FFF7FEFF 		bl	CySysTickInit
 1808              	.LVL149:
2477:.\Generated_Source\PSoC4/CyLib.c ****     }
 1809              		.loc 1 2477 0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 84


 1810 000e 0122     		mov	r2, #1
 1811 0010 024B     		ldr	r3, .L152
 1812 0012 5A61     		str	r2, [r3, #20]
 1813              	.L151:
2480:.\Generated_Source\PSoC4/CyLib.c **** }
 1814              		.loc 1 2480 0
 1815 0014 FFF7FEFF 		bl	CySysTickEnable
 1816              	.LVL150:
2481:.\Generated_Source\PSoC4/CyLib.c **** 
 1817              		.loc 1 2481 0
 1818              		@ sp needed
 1819 0018 08BD     		pop	{r3, pc}
 1820              	.L153:
 1821 001a C046     		.align	2
 1822              	.L152:
 1823 001c 00000000 		.word	.LANCHOR2
 1824              		.cfi_endproc
 1825              	.LFE30:
 1826              		.size	CySysTickStart, .-CySysTickStart
 1827              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1828              		.align	2
 1829              		.global	CySysTickSetCallback
 1830              		.code	16
 1831              		.thumb_func
 1832              		.type	CySysTickSetCallback, %function
 1833              	CySysTickSetCallback:
 1834              	.LFB42:
2740:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1835              		.loc 1 2740 0
 1836              		.cfi_startproc
 1837              	.LVL151:
2743:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1838              		.loc 1 2743 0
 1839 0000 024A     		ldr	r2, .L155
 1840 0002 8300     		lsl	r3, r0, #2
 1841 0004 9858     		ldr	r0, [r3, r2]
 1842              	.LVL152:
2744:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1843              		.loc 1 2744 0
 1844 0006 9950     		str	r1, [r3, r2]
2746:.\Generated_Source\PSoC4/CyLib.c **** 
 1845              		.loc 1 2746 0
 1846              		@ sp needed
 1847 0008 7047     		bx	lr
 1848              	.L156:
 1849 000a C046     		.align	2
 1850              	.L155:
 1851 000c 00000000 		.word	.LANCHOR2
 1852              		.cfi_endproc
 1853              	.LFE42:
 1854              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1855              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1856              		.align	2
 1857              		.global	CySysTickGetCallback
 1858              		.code	16
 1859              		.thumb_func
 1860              		.type	CySysTickGetCallback, %function
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 85


 1861              	CySysTickGetCallback:
 1862              	.LFB43:
2764:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1863              		.loc 1 2764 0
 1864              		.cfi_startproc
 1865              	.LVL153:
2765:.\Generated_Source\PSoC4/CyLib.c **** }
 1866              		.loc 1 2765 0
 1867 0000 8000     		lsl	r0, r0, #2
 1868              	.LVL154:
 1869 0002 014B     		ldr	r3, .L158
 1870 0004 C058     		ldr	r0, [r0, r3]
2766:.\Generated_Source\PSoC4/CyLib.c **** 
 1871              		.loc 1 2766 0
 1872              		@ sp needed
 1873 0006 7047     		bx	lr
 1874              	.L159:
 1875              		.align	2
 1876              	.L158:
 1877 0008 00000000 		.word	.LANCHOR2
 1878              		.cfi_endproc
 1879              	.LFE43:
 1880              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1881              		.section	.text.CyGetUniqueId,"ax",%progbits
 1882              		.align	2
 1883              		.global	CyGetUniqueId
 1884              		.code	16
 1885              		.thumb_func
 1886              		.type	CyGetUniqueId, %function
 1887              	CyGetUniqueId:
 1888              	.LFB45:
2792:.\Generated_Source\PSoC4/CyLib.c **** 
2793:.\Generated_Source\PSoC4/CyLib.c **** 
2794:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2795:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2796:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2797:.\Generated_Source\PSoC4/CyLib.c **** *
2798:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2799:.\Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2800:.\Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2801:.\Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2802:.\Generated_Source\PSoC4/CyLib.c **** *
2803:.\Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2804:.\Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2805:.\Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2806:.\Generated_Source\PSoC4/CyLib.c **** *
2807:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2808:.\Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2809:.\Generated_Source\PSoC4/CyLib.c **** {
 1889              		.loc 1 2809 0
 1890              		.cfi_startproc
 1891              	.LVL155:
2810:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2811:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1892              		.loc 1 2811 0
 1893 0000 134B     		ldr	r3, .L161
 1894 0002 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 86


 1895 0004 DAB2     		uxtb	r2, r3
 1896 0006 0260     		str	r2, [r0]
2812:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1897              		.loc 1 2812 0
 1898 0008 124B     		ldr	r3, .L161+4
 1899 000a 1B78     		ldrb	r3, [r3]
 1900 000c 1B02     		lsl	r3, r3, #8
 1901 000e 1343     		orr	r3, r2
 1902 0010 0360     		str	r3, [r0]
2813:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1903              		.loc 1 2813 0
 1904 0012 114A     		ldr	r2, .L161+8
 1905 0014 1278     		ldrb	r2, [r2]
 1906 0016 1204     		lsl	r2, r2, #16
 1907 0018 1343     		orr	r3, r2
 1908 001a 0360     		str	r3, [r0]
2814:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1909              		.loc 1 2814 0
 1910 001c 0F4A     		ldr	r2, .L161+12
 1911 001e 1278     		ldrb	r2, [r2]
 1912 0020 1206     		lsl	r2, r2, #24
 1913 0022 1343     		orr	r3, r2
 1914 0024 0360     		str	r3, [r0]
2815:.\Generated_Source\PSoC4/CyLib.c **** 
2816:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 1915              		.loc 1 2816 0
 1916 0026 0E4B     		ldr	r3, .L161+16
 1917 0028 1B78     		ldrb	r3, [r3]
 1918 002a DAB2     		uxtb	r2, r3
 1919 002c 4260     		str	r2, [r0, #4]
2817:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1920              		.loc 1 2817 0
 1921 002e 0D4B     		ldr	r3, .L161+20
 1922 0030 1B78     		ldrb	r3, [r3]
 1923 0032 1B02     		lsl	r3, r3, #8
 1924 0034 1343     		orr	r3, r2
 1925 0036 4360     		str	r3, [r0, #4]
2818:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1926              		.loc 1 2818 0
 1927 0038 0B4A     		ldr	r2, .L161+24
 1928 003a 1278     		ldrb	r2, [r2]
 1929 003c 1204     		lsl	r2, r2, #16
 1930 003e 1343     		orr	r3, r2
 1931 0040 4360     		str	r3, [r0, #4]
2819:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1932              		.loc 1 2819 0
 1933 0042 0A4A     		ldr	r2, .L161+28
 1934 0044 1278     		ldrb	r2, [r2]
 1935 0046 1206     		lsl	r2, r2, #24
 1936 0048 1343     		orr	r3, r2
 1937 004a 4360     		str	r3, [r0, #4]
2820:.\Generated_Source\PSoC4/CyLib.c **** #else
2821:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2822:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2823:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2824:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2825:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 87


2826:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
2827:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
2828:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
2829:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
2830:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
2831:.\Generated_Source\PSoC4/CyLib.c **** }
 1938              		.loc 1 2831 0
 1939              		@ sp needed
 1940 004c 7047     		bx	lr
 1941              	.L162:
 1942 004e C046     		.align	2
 1943              	.L161:
 1944 0050 78F1FF0F 		.word	268431736
 1945 0054 79F1FF0F 		.word	268431737
 1946 0058 7AF1FF0F 		.word	268431738
 1947 005c 7BF1FF0F 		.word	268431739
 1948 0060 7CF1FF0F 		.word	268431740
 1949 0064 7DF1FF0F 		.word	268431741
 1950 0068 7EF1FF0F 		.word	268431742
 1951 006c 7FF1FF0F 		.word	268431743
 1952              		.cfi_endproc
 1953              	.LFE45:
 1954              		.size	CyGetUniqueId, .-CyGetUniqueId
 1955              		.global	cyImoFreqMhz2DpllOffset
 1956              		.global	CySysTickInitVar
 1957              		.global	cydelay32kMs
 1958              		.global	cydelayFreqMhz
 1959              		.global	cydelayFreqKhz
 1960              		.global	cydelayFreqHz
 1961              		.section	.rodata
 1962              		.align	2
 1963              		.set	.LANCHOR1,. + 0
 1964              		.type	cyImoFreqMhz2DpllOffset, %object
 1965              		.size	cyImoFreqMhz2DpllOffset, 23
 1966              	cyImoFreqMhz2DpllOffset:
 1967 0000 EE       		.byte	-18
 1968 0001 DB       		.byte	-37
 1969 0002 C9       		.byte	-55
 1970 0003 B9       		.byte	-71
 1971 0004 AA       		.byte	-86
 1972 0005 9B       		.byte	-101
 1973 0006 8E       		.byte	-114
 1974 0007 82       		.byte	-126
 1975 0008 76       		.byte	118
 1976 0009 6B       		.byte	107
 1977 000a 60       		.byte	96
 1978 000b 56       		.byte	86
 1979 000c 4D       		.byte	77
 1980 000d 44       		.byte	68
 1981 000e 3B       		.byte	59
 1982 000f 33       		.byte	51
 1983 0010 2C       		.byte	44
 1984 0011 24       		.byte	36
 1985 0012 1D       		.byte	29
 1986 0013 17       		.byte	23
 1987 0014 10       		.byte	16
 1988 0015 0A       		.byte	10
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 88


 1989 0016 04       		.byte	4
 1990 0017 00       		.data
 1991              		.align	2
 1992              		.set	.LANCHOR0,. + 0
 1993              		.type	cydelay32kMs, %object
 1994              		.size	cydelay32kMs, 4
 1995              	cydelay32kMs:
 1996 0000 0000E02E 		.word	786432000
 1997              		.type	cydelayFreqKhz, %object
 1998              		.size	cydelayFreqKhz, 4
 1999              	cydelayFreqKhz:
 2000 0004 C05D0000 		.word	24000
 2001              		.type	cydelayFreqMhz, %object
 2002              		.size	cydelayFreqMhz, 1
 2003              	cydelayFreqMhz:
 2004 0008 18       		.byte	24
 2005 0009 000000   		.space	3
 2006              		.type	cydelayFreqHz, %object
 2007              		.size	cydelayFreqHz, 4
 2008              	cydelayFreqHz:
 2009 000c 00366E01 		.word	24000000
 2010              		.bss
 2011              		.align	2
 2012              		.set	.LANCHOR2,. + 0
 2013              		.type	CySysTickCallbacks, %object
 2014              		.size	CySysTickCallbacks, 20
 2015              	CySysTickCallbacks:
 2016 0000 00000000 		.space	20
 2016      00000000 
 2016      00000000 
 2016      00000000 
 2016      00000000 
 2017              		.type	CySysTickInitVar, %object
 2018              		.size	CySysTickInitVar, 4
 2019              	CySysTickInitVar:
 2020 0014 00000000 		.space	4
 2021              		.text
 2022              	.Letext0:
 2023              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2024              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 2025              		.file 4 ".\\Generated_Source\\PSoC4\\CyLFClk.h"
 2026              		.file 5 ".\\Generated_Source\\PSoC4\\CyFlash.h"
 2027              		.section	.debug_info,"",%progbits
 2028              	.Ldebug_info0:
 2029 0000 910B0000 		.4byte	0xb91
 2030 0004 0400     		.2byte	0x4
 2031 0006 00000000 		.4byte	.Ldebug_abbrev0
 2032 000a 04       		.byte	0x4
 2033 000b 01       		.uleb128 0x1
 2034 000c 61060000 		.4byte	.LASF103
 2035 0010 01       		.byte	0x1
 2036 0011 FD020000 		.4byte	.LASF104
 2037 0015 51040000 		.4byte	.LASF105
 2038 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2039 001d 00000000 		.4byte	0
 2040 0021 00000000 		.4byte	.Ldebug_line0
 2041 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 89


 2042 0026 01       		.byte	0x1
 2043 0027 06       		.byte	0x6
 2044 0028 E1000000 		.4byte	.LASF0
 2045 002c 02       		.uleb128 0x2
 2046 002d 01       		.byte	0x1
 2047 002e 08       		.byte	0x8
 2048 002f B7040000 		.4byte	.LASF1
 2049 0033 02       		.uleb128 0x2
 2050 0034 02       		.byte	0x2
 2051 0035 05       		.byte	0x5
 2052 0036 C5040000 		.4byte	.LASF2
 2053 003a 02       		.uleb128 0x2
 2054 003b 02       		.byte	0x2
 2055 003c 07       		.byte	0x7
 2056 003d BC020000 		.4byte	.LASF3
 2057 0041 02       		.uleb128 0x2
 2058 0042 04       		.byte	0x4
 2059 0043 05       		.byte	0x5
 2060 0044 46010000 		.4byte	.LASF4
 2061 0048 02       		.uleb128 0x2
 2062 0049 04       		.byte	0x4
 2063 004a 07       		.byte	0x7
 2064 004b 5F020000 		.4byte	.LASF5
 2065 004f 02       		.uleb128 0x2
 2066 0050 08       		.byte	0x8
 2067 0051 05       		.byte	0x5
 2068 0052 D3000000 		.4byte	.LASF6
 2069 0056 02       		.uleb128 0x2
 2070 0057 08       		.byte	0x8
 2071 0058 07       		.byte	0x7
 2072 0059 54000000 		.4byte	.LASF7
 2073 005d 03       		.uleb128 0x3
 2074 005e 04       		.byte	0x4
 2075 005f 05       		.byte	0x5
 2076 0060 696E7400 		.ascii	"int\000"
 2077 0064 02       		.uleb128 0x2
 2078 0065 04       		.byte	0x4
 2079 0066 07       		.byte	0x7
 2080 0067 43020000 		.4byte	.LASF8
 2081 006b 04       		.uleb128 0x4
 2082 006c 71010000 		.4byte	.LASF9
 2083 0070 02       		.byte	0x2
 2084 0071 9201     		.2byte	0x192
 2085 0073 2C000000 		.4byte	0x2c
 2086 0077 04       		.uleb128 0x4
 2087 0078 0F000000 		.4byte	.LASF10
 2088 007c 02       		.byte	0x2
 2089 007d 9301     		.2byte	0x193
 2090 007f 3A000000 		.4byte	0x3a
 2091 0083 04       		.uleb128 0x4
 2092 0084 9D010000 		.4byte	.LASF11
 2093 0088 02       		.byte	0x2
 2094 0089 9401     		.2byte	0x194
 2095 008b 48000000 		.4byte	0x48
 2096 008f 02       		.uleb128 0x2
 2097 0090 04       		.byte	0x4
 2098 0091 04       		.byte	0x4
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 90


 2099 0092 F4030000 		.4byte	.LASF12
 2100 0096 02       		.uleb128 0x2
 2101 0097 08       		.byte	0x8
 2102 0098 04       		.byte	0x4
 2103 0099 90010000 		.4byte	.LASF13
 2104 009d 02       		.uleb128 0x2
 2105 009e 01       		.byte	0x1
 2106 009f 08       		.byte	0x8
 2107 00a0 FE040000 		.4byte	.LASF14
 2108 00a4 04       		.uleb128 0x4
 2109 00a5 4C040000 		.4byte	.LASF15
 2110 00a9 02       		.byte	0x2
 2111 00aa 3C02     		.2byte	0x23c
 2112 00ac B0000000 		.4byte	0xb0
 2113 00b0 05       		.uleb128 0x5
 2114 00b1 6B000000 		.4byte	0x6b
 2115 00b5 04       		.uleb128 0x4
 2116 00b6 68030000 		.4byte	.LASF16
 2117 00ba 02       		.byte	0x2
 2118 00bb 3E02     		.2byte	0x23e
 2119 00bd C1000000 		.4byte	0xc1
 2120 00c1 05       		.uleb128 0x5
 2121 00c2 83000000 		.4byte	0x83
 2122 00c6 04       		.uleb128 0x4
 2123 00c7 1B050000 		.4byte	.LASF17
 2124 00cb 02       		.byte	0x2
 2125 00cc 4E02     		.2byte	0x24e
 2126 00ce D2000000 		.4byte	0xd2
 2127 00d2 06       		.uleb128 0x6
 2128 00d3 04       		.byte	0x4
 2129 00d4 D8000000 		.4byte	0xd8
 2130 00d8 07       		.uleb128 0x7
 2131 00d9 02       		.uleb128 0x2
 2132 00da 04       		.byte	0x4
 2133 00db 07       		.byte	0x7
 2134 00dc 8A030000 		.4byte	.LASF18
 2135 00e0 08       		.uleb128 0x8
 2136 00e1 10040000 		.4byte	.LASF19
 2137 00e5 03       		.byte	0x3
 2138 00e6 F3       		.byte	0xf3
 2139 00e7 D2000000 		.4byte	0xd2
 2140 00eb 09       		.uleb128 0x9
 2141 00ec F7050000 		.4byte	.LASF20
 2142 00f0 01       		.byte	0x1
 2143 00f1 68       		.byte	0x68
 2144 00f2 00000000 		.4byte	.LFB1
 2145 00f6 14000000 		.4byte	.LFE1-.LFB1
 2146 00fa 01       		.uleb128 0x1
 2147 00fb 9C       		.byte	0x9c
 2148 00fc 0A       		.uleb128 0xa
 2149 00fd 4E030000 		.4byte	.LASF21
 2150 0101 01       		.byte	0x1
 2151 0102 1301     		.2byte	0x113
 2152 0104 00000000 		.4byte	.LFB4
 2153 0108 14000000 		.4byte	.LFE4-.LFB4
 2154 010c 01       		.uleb128 0x1
 2155 010d 9C       		.byte	0x9c
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 91


 2156 010e 0B       		.uleb128 0xb
 2157 010f 71020000 		.4byte	.LASF22
 2158 0113 01       		.byte	0x1
 2159 0114 88       		.byte	0x88
 2160 0115 00000000 		.4byte	.LFB2
 2161 0119 18000000 		.4byte	.LFE2-.LFB2
 2162 011d 01       		.uleb128 0x1
 2163 011e 9C       		.byte	0x9c
 2164 011f 2D010000 		.4byte	0x12d
 2165 0123 0C       		.uleb128 0xc
 2166 0124 06000000 		.4byte	.LVL0
 2167 0128 FC000000 		.4byte	0xfc
 2168 012c 00       		.byte	0
 2169 012d 0D       		.uleb128 0xd
 2170 012e 28010000 		.4byte	.LASF77
 2171 0132 01       		.byte	0x1
 2172 0133 2601     		.2byte	0x126
 2173 0135 83000000 		.4byte	0x83
 2174 0139 00000000 		.4byte	.LFB5
 2175 013d 14000000 		.4byte	.LFE5-.LFB5
 2176 0141 01       		.uleb128 0x1
 2177 0142 9C       		.byte	0x9c
 2178 0143 0E       		.uleb128 0xe
 2179 0144 1F000000 		.4byte	.LASF23
 2180 0148 01       		.byte	0x1
 2181 0149 A301     		.2byte	0x1a3
 2182 014b 00000000 		.4byte	.LFB6
 2183 014f 20000000 		.4byte	.LFE6-.LFB6
 2184 0153 01       		.uleb128 0x1
 2185 0154 9C       		.byte	0x9c
 2186 0155 9C010000 		.4byte	0x19c
 2187 0159 0F       		.uleb128 0xf
 2188 015a ED040000 		.4byte	.LASF28
 2189 015e 01       		.byte	0x1
 2190 015f A301     		.2byte	0x1a3
 2191 0161 83000000 		.4byte	0x83
 2192 0165 00000000 		.4byte	.LLST0
 2193 0169 10       		.uleb128 0x10
 2194 016a FE000000 		.4byte	.LASF24
 2195 016e 01       		.byte	0x1
 2196 016f A501     		.2byte	0x1a5
 2197 0171 6B000000 		.4byte	0x6b
 2198 0175 2C000000 		.4byte	.LLST1
 2199 0179 10       		.uleb128 0x10
 2200 017a 2D060000 		.4byte	.LASF25
 2201 017e 01       		.byte	0x1
 2202 017f A601     		.2byte	0x1a6
 2203 0181 83000000 		.4byte	0x83
 2204 0185 3F000000 		.4byte	.LLST2
 2205 0189 0C       		.uleb128 0xc
 2206 018a 08000000 		.4byte	.LVL2
 2207 018e 4F0B0000 		.4byte	0xb4f
 2208 0192 0C       		.uleb128 0xc
 2209 0193 1A000000 		.4byte	.LVL5
 2210 0197 5A0B0000 		.4byte	0xb5a
 2211 019b 00       		.byte	0
 2212 019c 11       		.uleb128 0x11
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 92


 2213 019d B0010000 		.4byte	.LASF31
 2214 01a1 01       		.byte	0x1
 2215 01a2 C801     		.2byte	0x1c8
 2216 01a4 83000000 		.4byte	0x83
 2217 01a8 00000000 		.4byte	.LFB7
 2218 01ac 1C000000 		.4byte	.LFE7-.LFB7
 2219 01b0 01       		.uleb128 0x1
 2220 01b1 9C       		.byte	0x9c
 2221 01b2 E9010000 		.4byte	0x1e9
 2222 01b6 10       		.uleb128 0x10
 2223 01b7 FE000000 		.4byte	.LASF24
 2224 01bb 01       		.byte	0x1
 2225 01bc CA01     		.2byte	0x1ca
 2226 01be 6B000000 		.4byte	0x6b
 2227 01c2 5D000000 		.4byte	.LLST3
 2228 01c6 10       		.uleb128 0x10
 2229 01c7 AD030000 		.4byte	.LASF26
 2230 01cb 01       		.byte	0x1
 2231 01cc CB01     		.2byte	0x1cb
 2232 01ce 83000000 		.4byte	0x83
 2233 01d2 70000000 		.4byte	.LLST4
 2234 01d6 0C       		.uleb128 0xc
 2235 01d7 06000000 		.4byte	.LVL7
 2236 01db 4F0B0000 		.4byte	0xb4f
 2237 01df 0C       		.uleb128 0xc
 2238 01e0 12000000 		.4byte	.LVL9
 2239 01e4 5A0B0000 		.4byte	0xb5a
 2240 01e8 00       		.byte	0
 2241 01e9 0E       		.uleb128 0xe
 2242 01ea 4E050000 		.4byte	.LASF27
 2243 01ee 01       		.byte	0x1
 2244 01ef FF01     		.2byte	0x1ff
 2245 01f1 00000000 		.4byte	.LFB8
 2246 01f5 24000000 		.4byte	.LFE8-.LFB8
 2247 01f9 01       		.uleb128 0x1
 2248 01fa 9C       		.byte	0x9c
 2249 01fb 32020000 		.4byte	0x232
 2250 01ff 0F       		.uleb128 0xf
 2251 0200 EF050000 		.4byte	.LASF29
 2252 0204 01       		.byte	0x1
 2253 0205 FF01     		.2byte	0x1ff
 2254 0207 83000000 		.4byte	0x83
 2255 020b 8E000000 		.4byte	.LLST5
 2256 020f 10       		.uleb128 0x10
 2257 0210 FE000000 		.4byte	.LASF24
 2258 0214 01       		.byte	0x1
 2259 0215 0102     		.2byte	0x201
 2260 0217 6B000000 		.4byte	0x6b
 2261 021b BA000000 		.4byte	.LLST6
 2262 021f 0C       		.uleb128 0xc
 2263 0220 08000000 		.4byte	.LVL12
 2264 0224 4F0B0000 		.4byte	0xb4f
 2265 0228 0C       		.uleb128 0xc
 2266 0229 1E000000 		.4byte	.LVL14
 2267 022d 5A0B0000 		.4byte	0xb5a
 2268 0231 00       		.byte	0
 2269 0232 0E       		.uleb128 0xe
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 93


 2270 0233 38050000 		.4byte	.LASF30
 2271 0237 01       		.byte	0x1
 2272 0238 9D03     		.2byte	0x39d
 2273 023a 00000000 		.4byte	.LFB10
 2274 023e 24000000 		.4byte	.LFE10-.LFB10
 2275 0242 01       		.uleb128 0x1
 2276 0243 9C       		.byte	0x9c
 2277 0244 7B020000 		.4byte	0x27b
 2278 0248 0F       		.uleb128 0xf
 2279 0249 EF050000 		.4byte	.LASF29
 2280 024d 01       		.byte	0x1
 2281 024e 9D03     		.2byte	0x39d
 2282 0250 83000000 		.4byte	0x83
 2283 0254 CD000000 		.4byte	.LLST7
 2284 0258 10       		.uleb128 0x10
 2285 0259 FE000000 		.4byte	.LASF24
 2286 025d 01       		.byte	0x1
 2287 025e 9F03     		.2byte	0x39f
 2288 0260 6B000000 		.4byte	0x6b
 2289 0264 F9000000 		.4byte	.LLST8
 2290 0268 0C       		.uleb128 0xc
 2291 0269 08000000 		.4byte	.LVL16
 2292 026d 4F0B0000 		.4byte	0xb4f
 2293 0271 0C       		.uleb128 0xc
 2294 0272 1E000000 		.4byte	.LVL18
 2295 0276 5A0B0000 		.4byte	0xb5a
 2296 027a 00       		.byte	0
 2297 027b 11       		.uleb128 0x11
 2298 027c A8020000 		.4byte	.LASF32
 2299 0280 01       		.byte	0x1
 2300 0281 0408     		.2byte	0x804
 2301 0283 83000000 		.4byte	0x83
 2302 0287 00000000 		.4byte	.LFB11
 2303 028b 14000000 		.4byte	.LFE11-.LFB11
 2304 028f 01       		.uleb128 0x1
 2305 0290 9C       		.byte	0x9c
 2306 0291 B4020000 		.4byte	0x2b4
 2307 0295 0F       		.uleb128 0xf
 2308 0296 F7040000 		.4byte	.LASF33
 2309 029a 01       		.byte	0x1
 2310 029b 0408     		.2byte	0x804
 2311 029d 83000000 		.4byte	0x83
 2312 02a1 0C010000 		.4byte	.LLST9
 2313 02a5 12       		.uleb128 0x12
 2314 02a6 7D030000 		.4byte	.LASF34
 2315 02aa 01       		.byte	0x1
 2316 02ab 0608     		.2byte	0x806
 2317 02ad 83000000 		.4byte	0x83
 2318 02b1 01       		.uleb128 0x1
 2319 02b2 50       		.byte	0x50
 2320 02b3 00       		.byte	0
 2321 02b4 11       		.uleb128 0x11
 2322 02b5 46000000 		.4byte	.LASF35
 2323 02b9 01       		.byte	0x1
 2324 02ba 1B08     		.2byte	0x81b
 2325 02bc 83000000 		.4byte	0x83
 2326 02c0 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 94


 2327 02c4 10000000 		.4byte	.LFE12-.LFB12
 2328 02c8 01       		.uleb128 0x1
 2329 02c9 9C       		.byte	0x9c
 2330 02ca DD020000 		.4byte	0x2dd
 2331 02ce 12       		.uleb128 0x12
 2332 02cf 16000000 		.4byte	.LASF36
 2333 02d3 01       		.byte	0x1
 2334 02d4 1D08     		.2byte	0x81d
 2335 02d6 83000000 		.4byte	0x83
 2336 02da 01       		.uleb128 0x1
 2337 02db 50       		.byte	0x50
 2338 02dc 00       		.byte	0
 2339 02dd 0E       		.uleb128 0xe
 2340 02de 7C000000 		.4byte	.LASF37
 2341 02e2 01       		.byte	0x1
 2342 02e3 3208     		.2byte	0x832
 2343 02e5 00000000 		.4byte	.LFB13
 2344 02e9 0C000000 		.4byte	.LFE13-.LFB13
 2345 02ed 01       		.uleb128 0x1
 2346 02ee 9C       		.byte	0x9c
 2347 02ef 02030000 		.4byte	0x302
 2348 02f3 13       		.uleb128 0x13
 2349 02f4 AB010000 		.4byte	.LASF38
 2350 02f8 01       		.byte	0x1
 2351 02f9 3208     		.2byte	0x832
 2352 02fb 83000000 		.4byte	0x83
 2353 02ff 01       		.uleb128 0x1
 2354 0300 50       		.byte	0x50
 2355 0301 00       		.byte	0
 2356 0302 0E       		.uleb128 0xe
 2357 0303 CF040000 		.4byte	.LASF39
 2358 0307 01       		.byte	0x1
 2359 0308 E908     		.2byte	0x8e9
 2360 030a 00000000 		.4byte	.LFB20
 2361 030e 14000000 		.4byte	.LFE20-.LFB20
 2362 0312 01       		.uleb128 0x1
 2363 0313 9C       		.byte	0x9c
 2364 0314 29030000 		.4byte	0x329
 2365 0318 0F       		.uleb128 0xf
 2366 0319 A4010000 		.4byte	.LASF40
 2367 031d 01       		.byte	0x1
 2368 031e E908     		.2byte	0x8e9
 2369 0320 6B000000 		.4byte	0x6b
 2370 0324 2A010000 		.4byte	.LLST10
 2371 0328 00       		.byte	0
 2372 0329 11       		.uleb128 0x11
 2373 032a C5000000 		.4byte	.LASF41
 2374 032e 01       		.byte	0x1
 2375 032f FB08     		.2byte	0x8fb
 2376 0331 6B000000 		.4byte	0x6b
 2377 0335 00000000 		.4byte	.LFB21
 2378 0339 18000000 		.4byte	.LFE21-.LFB21
 2379 033d 01       		.uleb128 0x1
 2380 033e 9C       		.byte	0x9c
 2381 033f 54030000 		.4byte	0x354
 2382 0343 0F       		.uleb128 0xf
 2383 0344 A4010000 		.4byte	.LASF40
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 95


 2384 0348 01       		.byte	0x1
 2385 0349 FB08     		.2byte	0x8fb
 2386 034b 6B000000 		.4byte	0x6b
 2387 034f 4B010000 		.4byte	.LLST11
 2388 0353 00       		.byte	0
 2389 0354 0E       		.uleb128 0xe
 2390 0355 4F010000 		.4byte	.LASF42
 2391 0359 01       		.byte	0x1
 2392 035a 0B09     		.2byte	0x90b
 2393 035c 00000000 		.4byte	.LFB22
 2394 0360 14000000 		.4byte	.LFE22-.LFB22
 2395 0364 01       		.uleb128 0x1
 2396 0365 9C       		.byte	0x9c
 2397 0366 7B030000 		.4byte	0x37b
 2398 036a 0F       		.uleb128 0xf
 2399 036b A4010000 		.4byte	.LASF40
 2400 036f 01       		.byte	0x1
 2401 0370 0B09     		.2byte	0x90b
 2402 0372 6B000000 		.4byte	0x6b
 2403 0376 6C010000 		.4byte	.LLST12
 2404 037a 00       		.byte	0
 2405 037b 0E       		.uleb128 0xe
 2406 037c 98020000 		.4byte	.LASF43
 2407 0380 01       		.byte	0x1
 2408 0381 1909     		.2byte	0x919
 2409 0383 00000000 		.4byte	.LFB23
 2410 0387 14000000 		.4byte	.LFE23-.LFB23
 2411 038b 01       		.uleb128 0x1
 2412 038c 9C       		.byte	0x9c
 2413 038d A2030000 		.4byte	0x3a2
 2414 0391 0F       		.uleb128 0xf
 2415 0392 A4010000 		.4byte	.LASF40
 2416 0396 01       		.byte	0x1
 2417 0397 1909     		.2byte	0x919
 2418 0399 6B000000 		.4byte	0x6b
 2419 039d 8D010000 		.4byte	.LLST13
 2420 03a1 00       		.byte	0
 2421 03a2 0E       		.uleb128 0xe
 2422 03a3 93030000 		.4byte	.LASF44
 2423 03a7 01       		.byte	0x1
 2424 03a8 2809     		.2byte	0x928
 2425 03aa 00000000 		.4byte	.LFB24
 2426 03ae 14000000 		.4byte	.LFE24-.LFB24
 2427 03b2 01       		.uleb128 0x1
 2428 03b3 9C       		.byte	0x9c
 2429 03b4 C9030000 		.4byte	0x3c9
 2430 03b8 0F       		.uleb128 0xf
 2431 03b9 A4010000 		.4byte	.LASF40
 2432 03bd 01       		.byte	0x1
 2433 03be 2809     		.2byte	0x928
 2434 03c0 6B000000 		.4byte	0x6b
 2435 03c4 AE010000 		.4byte	.LLST14
 2436 03c8 00       		.byte	0
 2437 03c9 0E       		.uleb128 0xe
 2438 03ca B0040000 		.4byte	.LASF45
 2439 03ce 01       		.byte	0x1
 2440 03cf 3709     		.2byte	0x937
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 96


 2441 03d1 00000000 		.4byte	.LFB25
 2442 03d5 04000000 		.4byte	.LFE25-.LFB25
 2443 03d9 01       		.uleb128 0x1
 2444 03da 9C       		.byte	0x9c
 2445 03db EE030000 		.4byte	0x3ee
 2446 03df 13       		.uleb128 0x13
 2447 03e0 F7040000 		.4byte	.LASF33
 2448 03e4 01       		.byte	0x1
 2449 03e5 3709     		.2byte	0x937
 2450 03e7 6B000000 		.4byte	0x6b
 2451 03eb 01       		.uleb128 0x1
 2452 03ec 50       		.byte	0x50
 2453 03ed 00       		.byte	0
 2454 03ee 11       		.uleb128 0x11
 2455 03ef 3C030000 		.4byte	.LASF46
 2456 03f3 01       		.byte	0x1
 2457 03f4 4B08     		.2byte	0x84b
 2458 03f6 C6000000 		.4byte	0xc6
 2459 03fa 00000000 		.4byte	.LFB14
 2460 03fe 20000000 		.4byte	.LFE14-.LFB14
 2461 0402 01       		.uleb128 0x1
 2462 0403 9C       		.byte	0x9c
 2463 0404 56040000 		.4byte	0x456
 2464 0408 0F       		.uleb128 0xf
 2465 0409 A4010000 		.4byte	.LASF40
 2466 040d 01       		.byte	0x1
 2467 040e 4B08     		.2byte	0x84b
 2468 0410 6B000000 		.4byte	0x6b
 2469 0414 CF010000 		.4byte	.LLST15
 2470 0418 0F       		.uleb128 0xf
 2471 0419 A5030000 		.4byte	.LASF47
 2472 041d 01       		.byte	0x1
 2473 041e 4B08     		.2byte	0x84b
 2474 0420 C6000000 		.4byte	0xc6
 2475 0424 F0010000 		.4byte	.LLST16
 2476 0428 12       		.uleb128 0x12
 2477 0429 38000000 		.4byte	.LASF48
 2478 042d 01       		.byte	0x1
 2479 042e 4D08     		.2byte	0x84d
 2480 0430 C6000000 		.4byte	0xc6
 2481 0434 01       		.uleb128 0x1
 2482 0435 50       		.byte	0x50
 2483 0436 14       		.uleb128 0x14
 2484 0437 00000000 		.4byte	.LASF49
 2485 043b 01       		.byte	0x1
 2486 043c 4E08     		.2byte	0x84e
 2487 043e 56040000 		.4byte	0x456
 2488 0442 00000020 		.4byte	0x20000000
 2489 0446 15       		.uleb128 0x15
 2490 0447 10000000 		.4byte	.LVL39
 2491 044b C9030000 		.4byte	0x3c9
 2492 044f 16       		.uleb128 0x16
 2493 0450 01       		.uleb128 0x1
 2494 0451 50       		.byte	0x50
 2495 0452 01       		.uleb128 0x1
 2496 0453 30       		.byte	0x30
 2497 0454 00       		.byte	0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 97


 2498 0455 00       		.byte	0
 2499 0456 06       		.uleb128 0x6
 2500 0457 04       		.byte	0x4
 2501 0458 C6000000 		.4byte	0xc6
 2502 045c 11       		.uleb128 0x11
 2503 045d DB040000 		.4byte	.LASF50
 2504 0461 01       		.byte	0x1
 2505 0462 6D08     		.2byte	0x86d
 2506 0464 C6000000 		.4byte	0xc6
 2507 0468 00000000 		.4byte	.LFB15
 2508 046c 1C000000 		.4byte	.LFE15-.LFB15
 2509 0470 01       		.uleb128 0x1
 2510 0471 9C       		.byte	0x9c
 2511 0472 A6040000 		.4byte	0x4a6
 2512 0476 0F       		.uleb128 0xf
 2513 0477 A4010000 		.4byte	.LASF40
 2514 047b 01       		.byte	0x1
 2515 047c 6D08     		.2byte	0x86d
 2516 047e 6B000000 		.4byte	0x6b
 2517 0482 1C020000 		.4byte	.LLST17
 2518 0486 14       		.uleb128 0x14
 2519 0487 00000000 		.4byte	.LASF49
 2520 048b 01       		.byte	0x1
 2521 048c 6F08     		.2byte	0x86f
 2522 048e 56040000 		.4byte	0x456
 2523 0492 00000020 		.4byte	0x20000000
 2524 0496 15       		.uleb128 0x15
 2525 0497 0E000000 		.4byte	.LVL45
 2526 049b C9030000 		.4byte	0x3c9
 2527 049f 16       		.uleb128 0x16
 2528 04a0 01       		.uleb128 0x1
 2529 04a1 50       		.byte	0x50
 2530 04a2 01       		.uleb128 0x1
 2531 04a3 30       		.byte	0x30
 2532 04a4 00       		.byte	0
 2533 04a5 00       		.byte	0
 2534 04a6 11       		.uleb128 0x11
 2535 04a7 EE020000 		.4byte	.LASF51
 2536 04ab 01       		.byte	0x1
 2537 04ac 8308     		.2byte	0x883
 2538 04ae C6000000 		.4byte	0xc6
 2539 04b2 00000000 		.4byte	.LFB16
 2540 04b6 24000000 		.4byte	.LFE16-.LFB16
 2541 04ba 01       		.uleb128 0x1
 2542 04bb 9C       		.byte	0x9c
 2543 04bc 0E050000 		.4byte	0x50e
 2544 04c0 0F       		.uleb128 0xf
 2545 04c1 A4010000 		.4byte	.LASF40
 2546 04c5 01       		.byte	0x1
 2547 04c6 8308     		.2byte	0x883
 2548 04c8 6B000000 		.4byte	0x6b
 2549 04cc 3D020000 		.4byte	.LLST18
 2550 04d0 0F       		.uleb128 0xf
 2551 04d1 A5030000 		.4byte	.LASF47
 2552 04d5 01       		.byte	0x1
 2553 04d6 8308     		.2byte	0x883
 2554 04d8 C6000000 		.4byte	0xc6
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 98


 2555 04dc 5E020000 		.4byte	.LLST19
 2556 04e0 12       		.uleb128 0x12
 2557 04e1 38000000 		.4byte	.LASF48
 2558 04e5 01       		.byte	0x1
 2559 04e6 8508     		.2byte	0x885
 2560 04e8 C6000000 		.4byte	0xc6
 2561 04ec 01       		.uleb128 0x1
 2562 04ed 50       		.byte	0x50
 2563 04ee 14       		.uleb128 0x14
 2564 04ef 00000000 		.4byte	.LASF49
 2565 04f3 01       		.byte	0x1
 2566 04f4 8608     		.2byte	0x886
 2567 04f6 56040000 		.4byte	0x456
 2568 04fa 00000020 		.4byte	0x20000000
 2569 04fe 15       		.uleb128 0x15
 2570 04ff 10000000 		.4byte	.LVL49
 2571 0503 C9030000 		.4byte	0x3c9
 2572 0507 16       		.uleb128 0x16
 2573 0508 01       		.uleb128 0x1
 2574 0509 50       		.byte	0x50
 2575 050a 01       		.uleb128 0x1
 2576 050b 30       		.byte	0x30
 2577 050c 00       		.byte	0
 2578 050d 00       		.byte	0
 2579 050e 11       		.uleb128 0x11
 2580 050f 22040000 		.4byte	.LASF52
 2581 0513 01       		.byte	0x1
 2582 0514 9F08     		.2byte	0x89f
 2583 0516 C6000000 		.4byte	0xc6
 2584 051a 00000000 		.4byte	.LFB17
 2585 051e 20000000 		.4byte	.LFE17-.LFB17
 2586 0522 01       		.uleb128 0x1
 2587 0523 9C       		.byte	0x9c
 2588 0524 58050000 		.4byte	0x558
 2589 0528 0F       		.uleb128 0xf
 2590 0529 A4010000 		.4byte	.LASF40
 2591 052d 01       		.byte	0x1
 2592 052e 9F08     		.2byte	0x89f
 2593 0530 6B000000 		.4byte	0x6b
 2594 0534 8A020000 		.4byte	.LLST20
 2595 0538 14       		.uleb128 0x14
 2596 0539 00000000 		.4byte	.LASF49
 2597 053d 01       		.byte	0x1
 2598 053e A108     		.2byte	0x8a1
 2599 0540 56040000 		.4byte	0x456
 2600 0544 00000020 		.4byte	0x20000000
 2601 0548 15       		.uleb128 0x15
 2602 0549 0E000000 		.4byte	.LVL55
 2603 054d C9030000 		.4byte	0x3c9
 2604 0551 16       		.uleb128 0x16
 2605 0552 01       		.uleb128 0x1
 2606 0553 50       		.byte	0x50
 2607 0554 01       		.uleb128 0x1
 2608 0555 30       		.byte	0x30
 2609 0556 00       		.byte	0
 2610 0557 00       		.byte	0
 2611 0558 0E       		.uleb128 0xe
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 99


 2612 0559 E3030000 		.4byte	.LASF53
 2613 055d 01       		.byte	0x1
 2614 055e B208     		.2byte	0x8b2
 2615 0560 00000000 		.4byte	.LFB18
 2616 0564 4C000000 		.4byte	.LFE18-.LFB18
 2617 0568 01       		.uleb128 0x1
 2618 0569 9C       		.byte	0x9c
 2619 056a F7050000 		.4byte	0x5f7
 2620 056e 0F       		.uleb128 0xf
 2621 056f A4010000 		.4byte	.LASF40
 2622 0573 01       		.byte	0x1
 2623 0574 B208     		.2byte	0x8b2
 2624 0576 6B000000 		.4byte	0x6b
 2625 057a AB020000 		.4byte	.LLST21
 2626 057e 0F       		.uleb128 0xf
 2627 057f 1E030000 		.4byte	.LASF54
 2628 0583 01       		.byte	0x1
 2629 0584 B208     		.2byte	0x8b2
 2630 0586 6B000000 		.4byte	0x6b
 2631 058a CC020000 		.4byte	.LLST22
 2632 058e 10       		.uleb128 0x10
 2633 058f FE000000 		.4byte	.LASF24
 2634 0593 01       		.byte	0x1
 2635 0594 B408     		.2byte	0x8b4
 2636 0596 6B000000 		.4byte	0x6b
 2637 059a ED020000 		.4byte	.LLST23
 2638 059e 10       		.uleb128 0x10
 2639 059f 97010000 		.4byte	.LASF55
 2640 05a3 01       		.byte	0x1
 2641 05a4 B508     		.2byte	0x8b5
 2642 05a6 83000000 		.4byte	0x83
 2643 05aa 00030000 		.4byte	.LLST24
 2644 05ae 10       		.uleb128 0x10
 2645 05af 0D020000 		.4byte	.LASF56
 2646 05b3 01       		.byte	0x1
 2647 05b4 B608     		.2byte	0x8b6
 2648 05b6 83000000 		.4byte	0x83
 2649 05ba 13030000 		.4byte	.LLST25
 2650 05be 17       		.uleb128 0x17
 2651 05bf 10000000 		.4byte	.LVL58
 2652 05c3 C9030000 		.4byte	0x3c9
 2653 05c7 D1050000 		.4byte	0x5d1
 2654 05cb 16       		.uleb128 0x16
 2655 05cc 01       		.uleb128 0x1
 2656 05cd 50       		.byte	0x50
 2657 05ce 01       		.uleb128 0x1
 2658 05cf 30       		.byte	0x30
 2659 05d0 00       		.byte	0
 2660 05d1 17       		.uleb128 0x17
 2661 05d2 1A000000 		.4byte	.LVL59
 2662 05d6 C9030000 		.4byte	0x3c9
 2663 05da E4050000 		.4byte	0x5e4
 2664 05de 16       		.uleb128 0x16
 2665 05df 01       		.uleb128 0x1
 2666 05e0 50       		.byte	0x50
 2667 05e1 01       		.uleb128 0x1
 2668 05e2 30       		.byte	0x30
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 100


 2669 05e3 00       		.byte	0
 2670 05e4 0C       		.uleb128 0xc
 2671 05e5 26000000 		.4byte	.LVL61
 2672 05e9 4F0B0000 		.4byte	0xb4f
 2673 05ed 0C       		.uleb128 0xc
 2674 05ee 44000000 		.4byte	.LVL66
 2675 05f2 5A0B0000 		.4byte	0xb5a
 2676 05f6 00       		.byte	0
 2677 05f7 11       		.uleb128 0x11
 2678 05f8 E1010000 		.4byte	.LASF57
 2679 05fc 01       		.byte	0x1
 2680 05fd D408     		.2byte	0x8d4
 2681 05ff 6B000000 		.4byte	0x6b
 2682 0603 00000000 		.4byte	.LFB19
 2683 0607 2C000000 		.4byte	.LFE19-.LFB19
 2684 060b 01       		.uleb128 0x1
 2685 060c 9C       		.byte	0x9c
 2686 060d 41060000 		.4byte	0x641
 2687 0611 0F       		.uleb128 0xf
 2688 0612 A4010000 		.4byte	.LASF40
 2689 0616 01       		.byte	0x1
 2690 0617 D408     		.2byte	0x8d4
 2691 0619 6B000000 		.4byte	0x6b
 2692 061d 31030000 		.4byte	.LLST26
 2693 0621 10       		.uleb128 0x10
 2694 0622 1E030000 		.4byte	.LASF54
 2695 0626 01       		.byte	0x1
 2696 0627 D608     		.2byte	0x8d6
 2697 0629 6B000000 		.4byte	0x6b
 2698 062d 52030000 		.4byte	.LLST27
 2699 0631 15       		.uleb128 0x15
 2700 0632 0E000000 		.4byte	.LVL70
 2701 0636 C9030000 		.4byte	0x3c9
 2702 063a 16       		.uleb128 0x16
 2703 063b 01       		.uleb128 0x1
 2704 063c 50       		.byte	0x50
 2705 063d 01       		.uleb128 0x1
 2706 063e 30       		.byte	0x30
 2707 063f 00       		.byte	0
 2708 0640 00       		.byte	0
 2709 0641 0A       		.uleb128 0xa
 2710 0642 9C000000 		.4byte	.LASF58
 2711 0646 01       		.byte	0x1
 2712 0647 4F09     		.2byte	0x94f
 2713 0649 00000000 		.4byte	.LFB26
 2714 064d 18000000 		.4byte	.LFE26-.LFB26
 2715 0651 01       		.uleb128 0x1
 2716 0652 9C       		.byte	0x9c
 2717 0653 0E       		.uleb128 0xe
 2718 0654 B0050000 		.4byte	.LASF59
 2719 0658 01       		.byte	0x1
 2720 0659 6309     		.2byte	0x963
 2721 065b 00000000 		.4byte	.LFB27
 2722 065f 30000000 		.4byte	.LFE27-.LFB27
 2723 0663 01       		.uleb128 0x1
 2724 0664 9C       		.byte	0x9c
 2725 0665 8C060000 		.4byte	0x68c
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 101


 2726 0669 0F       		.uleb128 0xf
 2727 066a 31040000 		.4byte	.LASF60
 2728 066e 01       		.byte	0x1
 2729 066f 6309     		.2byte	0x963
 2730 0671 83000000 		.4byte	0x83
 2731 0675 65030000 		.4byte	.LLST28
 2732 0679 0C       		.uleb128 0xc
 2733 067a 0E000000 		.4byte	.LVL75
 2734 067e 6B0B0000 		.4byte	0xb6b
 2735 0682 0C       		.uleb128 0xc
 2736 0683 26000000 		.4byte	.LVL77
 2737 0687 6B0B0000 		.4byte	0xb6b
 2738 068b 00       		.byte	0
 2739 068c 0B       		.uleb128 0xb
 2740 068d C8010000 		.4byte	.LASF61
 2741 0691 01       		.byte	0x1
 2742 0692 AC       		.byte	0xac
 2743 0693 00000000 		.4byte	.LFB3
 2744 0697 BC000000 		.4byte	.LFE3-.LFB3
 2745 069b 01       		.uleb128 0x1
 2746 069c 9C       		.byte	0x9c
 2747 069d 35070000 		.4byte	0x735
 2748 06a1 18       		.uleb128 0x18
 2749 06a2 ED000000 		.4byte	.LASF62
 2750 06a6 01       		.byte	0x1
 2751 06a7 B2       		.byte	0xb2
 2752 06a8 83000000 		.4byte	0x83
 2753 06ac 83030000 		.4byte	.LLST29
 2754 06b0 18       		.uleb128 0x18
 2755 06b1 FE000000 		.4byte	.LASF24
 2756 06b5 01       		.byte	0x1
 2757 06b6 B3       		.byte	0xb3
 2758 06b7 6B000000 		.4byte	0x6b
 2759 06bb C1030000 		.4byte	.LLST30
 2760 06bf 18       		.uleb128 0x18
 2761 06c0 CF020000 		.4byte	.LASF63
 2762 06c4 01       		.byte	0x1
 2763 06c5 B4       		.byte	0xb4
 2764 06c6 83000000 		.4byte	0x83
 2765 06ca D4030000 		.4byte	.LLST31
 2766 06ce 18       		.uleb128 0x18
 2767 06cf 0D010000 		.4byte	.LASF64
 2768 06d3 01       		.byte	0x1
 2769 06d4 B5       		.byte	0xb5
 2770 06d5 83000000 		.4byte	0x83
 2771 06d9 2A040000 		.4byte	.LLST32
 2772 06dd 19       		.uleb128 0x19
 2773 06de A4050000 		.4byte	.LASF65
 2774 06e2 01       		.byte	0x1
 2775 06e3 B6       		.byte	0xb6
 2776 06e4 C1000000 		.4byte	0xc1
 2777 06e8 02       		.uleb128 0x2
 2778 06e9 91       		.byte	0x91
 2779 06ea 6C       		.sleb128 -20
 2780 06eb 0C       		.uleb128 0xc
 2781 06ec 08000000 		.4byte	.LVL80
 2782 06f0 7C0B0000 		.4byte	0xb7c
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 102


 2783 06f4 0C       		.uleb128 0xc
 2784 06f5 10000000 		.4byte	.LVL81
 2785 06f9 4F0B0000 		.4byte	0xb4f
 2786 06fd 17       		.uleb128 0x17
 2787 06fe 78000000 		.4byte	.LVL98
 2788 0702 870B0000 		.4byte	0xb87
 2789 0706 11070000 		.4byte	0x711
 2790 070a 16       		.uleb128 0x16
 2791 070b 01       		.uleb128 0x1
 2792 070c 50       		.byte	0x50
 2793 070d 02       		.uleb128 0x2
 2794 070e 08       		.byte	0x8
 2795 070f 30       		.byte	0x30
 2796 0710 00       		.byte	0
 2797 0711 17       		.uleb128 0x17
 2798 0712 8A000000 		.4byte	.LVL99
 2799 0716 53060000 		.4byte	0x653
 2800 071a 24070000 		.4byte	0x724
 2801 071e 16       		.uleb128 0x16
 2802 071f 01       		.uleb128 0x1
 2803 0720 50       		.byte	0x50
 2804 0721 01       		.uleb128 0x1
 2805 0722 44       		.byte	0x44
 2806 0723 00       		.byte	0
 2807 0724 15       		.uleb128 0x15
 2808 0725 94000000 		.4byte	.LVL100
 2809 0729 5A0B0000 		.4byte	0xb5a
 2810 072d 16       		.uleb128 0x16
 2811 072e 01       		.uleb128 0x1
 2812 072f 50       		.byte	0x50
 2813 0730 02       		.uleb128 0x2
 2814 0731 74       		.byte	0x74
 2815 0732 00       		.sleb128 0
 2816 0733 00       		.byte	0
 2817 0734 00       		.byte	0
 2818 0735 0E       		.uleb128 0xe
 2819 0736 27030000 		.4byte	.LASF66
 2820 073a 01       		.byte	0x1
 2821 073b 0603     		.2byte	0x306
 2822 073d 00000000 		.4byte	.LFB9
 2823 0741 D8000000 		.4byte	.LFE9-.LFB9
 2824 0745 01       		.uleb128 0x1
 2825 0746 9C       		.byte	0x9c
 2826 0747 FD070000 		.4byte	0x7fd
 2827 074b 0F       		.uleb128 0xf
 2828 074c ED000000 		.4byte	.LASF62
 2829 0750 01       		.byte	0x1
 2830 0751 0603     		.2byte	0x306
 2831 0753 83000000 		.4byte	0x83
 2832 0757 49040000 		.4byte	.LLST33
 2833 075b 10       		.uleb128 0x10
 2834 075c FE000000 		.4byte	.LASF24
 2835 0760 01       		.byte	0x1
 2836 0761 0803     		.2byte	0x308
 2837 0763 6B000000 		.4byte	0x6b
 2838 0767 99040000 		.4byte	.LLST34
 2839 076b 10       		.uleb128 0x10
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 103


 2840 076c 8D050000 		.4byte	.LASF67
 2841 0770 01       		.byte	0x1
 2842 0771 0903     		.2byte	0x309
 2843 0773 6B000000 		.4byte	0x6b
 2844 0777 AD040000 		.4byte	.LLST35
 2845 077b 10       		.uleb128 0x10
 2846 077c 3E010000 		.4byte	.LASF68
 2847 0780 01       		.byte	0x1
 2848 0781 0C03     		.2byte	0x30c
 2849 0783 83000000 		.4byte	0x83
 2850 0787 D1040000 		.4byte	.LLST36
 2851 078b 0C       		.uleb128 0xc
 2852 078c 26000000 		.4byte	.LVL103
 2853 0790 4F0B0000 		.4byte	0xb4f
 2854 0794 0C       		.uleb128 0xc
 2855 0795 2C000000 		.4byte	.LVL105
 2856 0799 2D010000 		.4byte	0x12d
 2857 079d 0C       		.uleb128 0xc
 2858 079e 34000000 		.4byte	.LVL107
 2859 07a2 FC000000 		.4byte	0xfc
 2860 07a6 17       		.uleb128 0x17
 2861 07a7 74000000 		.4byte	.LVL114
 2862 07ab 6B0B0000 		.4byte	0xb6b
 2863 07af BA070000 		.4byte	0x7ba
 2864 07b3 16       		.uleb128 0x16
 2865 07b4 01       		.uleb128 0x1
 2866 07b5 50       		.byte	0x50
 2867 07b6 02       		.uleb128 0x2
 2868 07b7 08       		.byte	0x8
 2869 07b8 32       		.byte	0x32
 2870 07b9 00       		.byte	0
 2871 07ba 17       		.uleb128 0x17
 2872 07bb 94000000 		.4byte	.LVL115
 2873 07bf 6B0B0000 		.4byte	0xb6b
 2874 07c3 CE070000 		.4byte	0x7ce
 2875 07c7 16       		.uleb128 0x16
 2876 07c8 01       		.uleb128 0x1
 2877 07c9 50       		.byte	0x50
 2878 07ca 02       		.uleb128 0x2
 2879 07cb 08       		.byte	0x8
 2880 07cc 32       		.byte	0x32
 2881 07cd 00       		.byte	0
 2882 07ce 0C       		.uleb128 0xc
 2883 07cf AE000000 		.4byte	.LVL117
 2884 07d3 8C060000 		.4byte	0x68c
 2885 07d7 17       		.uleb128 0x17
 2886 07d8 B4000000 		.4byte	.LVL118
 2887 07dc 5A0B0000 		.4byte	0xb5a
 2888 07e0 ED070000 		.4byte	0x7ed
 2889 07e4 16       		.uleb128 0x16
 2890 07e5 01       		.uleb128 0x1
 2891 07e6 50       		.byte	0x50
 2892 07e7 04       		.uleb128 0x4
 2893 07e8 91       		.byte	0x91
 2894 07e9 64       		.sleb128 -28
 2895 07ea 94       		.byte	0x94
 2896 07eb 01       		.byte	0x1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 104


 2897 07ec 00       		.byte	0
 2898 07ed 15       		.uleb128 0x15
 2899 07ee BC000000 		.4byte	.LVL121
 2900 07f2 C9030000 		.4byte	0x3c9
 2901 07f6 16       		.uleb128 0x16
 2902 07f7 01       		.uleb128 0x1
 2903 07f8 50       		.byte	0x50
 2904 07f9 01       		.uleb128 0x1
 2905 07fa 30       		.byte	0x30
 2906 07fb 00       		.byte	0
 2907 07fc 00       		.byte	0
 2908 07fd 0E       		.uleb128 0xe
 2909 07fe 86010000 		.4byte	.LASF69
 2910 0802 01       		.byte	0x1
 2911 0803 7A09     		.2byte	0x97a
 2912 0805 00000000 		.4byte	.LFB28
 2913 0809 14000000 		.4byte	.LFE28-.LFB28
 2914 080d 01       		.uleb128 0x1
 2915 080e 9C       		.byte	0x9c
 2916 080f 2D080000 		.4byte	0x82d
 2917 0813 0F       		.uleb128 0xf
 2918 0814 20060000 		.4byte	.LASF70
 2919 0818 01       		.byte	0x1
 2920 0819 7A09     		.2byte	0x97a
 2921 081b 77000000 		.4byte	0x77
 2922 081f 14050000 		.4byte	.LLST37
 2923 0823 0C       		.uleb128 0xc
 2924 0824 0C000000 		.4byte	.LVL124
 2925 0828 6B0B0000 		.4byte	0xb6b
 2926 082c 00       		.byte	0
 2927 082d 1A       		.uleb128 0x1a
 2928 082e F2000000 		.4byte	.LASF71
 2929 0832 01       		.byte	0x1
 2930 0833 8809     		.2byte	0x988
 2931 0835 00000000 		.4byte	.LFB29
 2932 0839 4C000000 		.4byte	.LFE29-.LFB29
 2933 083d 01       		.uleb128 0x1
 2934 083e 9C       		.byte	0x9c
 2935 083f 54080000 		.4byte	0x854
 2936 0843 0F       		.uleb128 0xf
 2937 0844 ED000000 		.4byte	.LASF62
 2938 0848 01       		.byte	0x1
 2939 0849 8809     		.2byte	0x988
 2940 084b 83000000 		.4byte	0x83
 2941 084f 35050000 		.4byte	.LLST38
 2942 0853 00       		.byte	0
 2943 0854 0A       		.uleb128 0xa
 2944 0855 E1050000 		.4byte	.LASF72
 2945 0859 01       		.byte	0x1
 2946 085a F509     		.2byte	0x9f5
 2947 085c 00000000 		.4byte	.LFB33
 2948 0860 10000000 		.4byte	.LFE33-.LFB33
 2949 0864 01       		.uleb128 0x1
 2950 0865 9C       		.byte	0x9c
 2951 0866 0A       		.uleb128 0xa
 2952 0867 AC000000 		.4byte	.LASF73
 2953 086b 01       		.byte	0x1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 105


 2954 086c 050A     		.2byte	0xa05
 2955 086e 00000000 		.4byte	.LFB34
 2956 0872 10000000 		.4byte	.LFE34-.LFB34
 2957 0876 01       		.uleb128 0x1
 2958 0877 9C       		.byte	0x9c
 2959 0878 0E       		.uleb128 0xe
 2960 0879 28050000 		.4byte	.LASF74
 2961 087d 01       		.byte	0x1
 2962 087e E409     		.2byte	0x9e4
 2963 0880 00000000 		.4byte	.LFB32
 2964 0884 18000000 		.4byte	.LFE32-.LFB32
 2965 0888 01       		.uleb128 0x1
 2966 0889 9C       		.byte	0x9c
 2967 088a 98080000 		.4byte	0x898
 2968 088e 0C       		.uleb128 0xc
 2969 088f 06000000 		.4byte	.LVL129
 2970 0893 66080000 		.4byte	0x866
 2971 0897 00       		.byte	0
 2972 0898 0A       		.uleb128 0xa
 2973 0899 B8050000 		.4byte	.LASF75
 2974 089d 01       		.byte	0x1
 2975 089e 150A     		.2byte	0xa15
 2976 08a0 00000000 		.4byte	.LFB35
 2977 08a4 10000000 		.4byte	.LFE35-.LFB35
 2978 08a8 01       		.uleb128 0x1
 2979 08a9 9C       		.byte	0x9c
 2980 08aa 0E       		.uleb128 0xe
 2981 08ab 34060000 		.4byte	.LASF76
 2982 08af 01       		.byte	0x1
 2983 08b0 260A     		.2byte	0xa26
 2984 08b2 00000000 		.4byte	.LFB36
 2985 08b6 10000000 		.4byte	.LFE36-.LFB36
 2986 08ba 01       		.uleb128 0x1
 2987 08bb 9C       		.byte	0x9c
 2988 08bc D1080000 		.4byte	0x8d1
 2989 08c0 0F       		.uleb128 0xf
 2990 08c1 0D020000 		.4byte	.LASF56
 2991 08c5 01       		.byte	0x1
 2992 08c6 260A     		.2byte	0xa26
 2993 08c8 83000000 		.4byte	0x83
 2994 08cc 56050000 		.4byte	.LLST39
 2995 08d0 00       		.byte	0
 2996 08d1 0D       		.uleb128 0xd
 2997 08d2 15010000 		.4byte	.LASF78
 2998 08d6 01       		.byte	0x1
 2999 08d7 360A     		.2byte	0xa36
 3000 08d9 83000000 		.4byte	0x83
 3001 08dd 00000000 		.4byte	.LFB37
 3002 08e1 10000000 		.4byte	.LFE37-.LFB37
 3003 08e5 01       		.uleb128 0x1
 3004 08e6 9C       		.byte	0x9c
 3005 08e7 0D       		.uleb128 0xd
 3006 08e8 C3030000 		.4byte	.LASF79
 3007 08ec 01       		.byte	0x1
 3008 08ed 460A     		.2byte	0xa46
 3009 08ef 83000000 		.4byte	0x83
 3010 08f3 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 106


 3011 08f7 10000000 		.4byte	.LFE38-.LFB38
 3012 08fb 01       		.uleb128 0x1
 3013 08fc 9C       		.byte	0x9c
 3014 08fd 0E       		.uleb128 0xe
 3015 08fe D6020000 		.4byte	.LASF80
 3016 0902 01       		.byte	0x1
 3017 0903 660A     		.2byte	0xa66
 3018 0905 00000000 		.4byte	.LFB39
 3019 0909 20000000 		.4byte	.LFE39-.LFB39
 3020 090d 01       		.uleb128 0x1
 3021 090e 9C       		.byte	0x9c
 3022 090f 22090000 		.4byte	0x922
 3023 0913 13       		.uleb128 0x13
 3024 0914 13020000 		.4byte	.LASF81
 3025 0918 01       		.byte	0x1
 3026 0919 660A     		.2byte	0xa66
 3027 091b 83000000 		.4byte	0x83
 3028 091f 01       		.uleb128 0x1
 3029 0920 50       		.byte	0x50
 3030 0921 00       		.byte	0
 3031 0922 0D       		.uleb128 0xd
 3032 0923 2D020000 		.4byte	.LASF82
 3033 0927 01       		.byte	0x1
 3034 0928 830A     		.2byte	0xa83
 3035 092a 83000000 		.4byte	0x83
 3036 092e 00000000 		.4byte	.LFB40
 3037 0932 10000000 		.4byte	.LFE40-.LFB40
 3038 0936 01       		.uleb128 0x1
 3039 0937 9C       		.byte	0x9c
 3040 0938 1B       		.uleb128 0x1b
 3041 0939 47060000 		.4byte	.LASF106
 3042 093d 01       		.byte	0x1
 3043 093e D80A     		.2byte	0xad8
 3044 0940 00000000 		.4byte	.LFB44
 3045 0944 28000000 		.4byte	.LFE44-.LFB44
 3046 0948 01       		.uleb128 0x1
 3047 0949 9C       		.byte	0x9c
 3048 094a 66090000 		.4byte	0x966
 3049 094e 1C       		.uleb128 0x1c
 3050 094f 6900     		.ascii	"i\000"
 3051 0951 01       		.byte	0x1
 3052 0952 DA0A     		.2byte	0xada
 3053 0954 83000000 		.4byte	0x83
 3054 0958 77050000 		.4byte	.LLST40
 3055 095c 0C       		.uleb128 0xc
 3056 095d 06000000 		.4byte	.LVL133
 3057 0961 22090000 		.4byte	0x922
 3058 0965 00       		.byte	0
 3059 0966 0A       		.uleb128 0xa
 3060 0967 50020000 		.4byte	.LASF83
 3061 096b 01       		.byte	0x1
 3062 096c 900A     		.2byte	0xa90
 3063 096e 00000000 		.4byte	.LFB41
 3064 0972 0C000000 		.4byte	.LFE41-.LFB41
 3065 0976 01       		.uleb128 0x1
 3066 0977 9C       		.byte	0x9c
 3067 0978 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 107


 3068 0979 FF010000 		.4byte	.LASF84
 3069 097d 01       		.byte	0x1
 3070 097e C509     		.2byte	0x9c5
 3071 0980 00000000 		.4byte	.LFB31
 3072 0984 4C000000 		.4byte	.LFE31-.LFB31
 3073 0988 01       		.uleb128 0x1
 3074 0989 9C       		.byte	0x9c
 3075 098a ED090000 		.4byte	0x9ed
 3076 098e 1C       		.uleb128 0x1c
 3077 098f 6900     		.ascii	"i\000"
 3078 0991 01       		.byte	0x1
 3079 0992 C709     		.2byte	0x9c7
 3080 0994 83000000 		.4byte	0x83
 3081 0998 95050000 		.4byte	.LLST41
 3082 099c 17       		.uleb128 0x17
 3083 099d 1C000000 		.4byte	.LVL143
 3084 09a1 EE030000 		.4byte	0x3ee
 3085 09a5 B8090000 		.4byte	0x9b8
 3086 09a9 16       		.uleb128 0x16
 3087 09aa 01       		.uleb128 0x1
 3088 09ab 51       		.byte	0x51
 3089 09ac 05       		.uleb128 0x5
 3090 09ad 03       		.byte	0x3
 3091 09ae 00000000 		.4byte	CySysTickServiceCallbacks
 3092 09b2 16       		.uleb128 0x16
 3093 09b3 01       		.uleb128 0x1
 3094 09b4 50       		.byte	0x50
 3095 09b5 01       		.uleb128 0x1
 3096 09b6 3F       		.byte	0x3f
 3097 09b7 00       		.byte	0
 3098 09b8 17       		.uleb128 0x17
 3099 09b9 22000000 		.4byte	.LVL144
 3100 09bd FD080000 		.4byte	0x8fd
 3101 09c1 CB090000 		.4byte	0x9cb
 3102 09c5 16       		.uleb128 0x16
 3103 09c6 01       		.uleb128 0x1
 3104 09c7 50       		.byte	0x50
 3105 09c8 01       		.uleb128 0x1
 3106 09c9 31       		.byte	0x31
 3107 09ca 00       		.byte	0
 3108 09cb 0C       		.uleb128 0xc
 3109 09cc 32000000 		.4byte	.LVL146
 3110 09d0 AA080000 		.4byte	0x8aa
 3111 09d4 0C       		.uleb128 0xc
 3112 09d5 36000000 		.4byte	.LVL147
 3113 09d9 66090000 		.4byte	0x966
 3114 09dd 15       		.uleb128 0x15
 3115 09de 3C000000 		.4byte	.LVL148
 3116 09e2 02030000 		.4byte	0x302
 3117 09e6 16       		.uleb128 0x16
 3118 09e7 01       		.uleb128 0x1
 3119 09e8 50       		.byte	0x50
 3120 09e9 01       		.uleb128 0x1
 3121 09ea 3F       		.byte	0x3f
 3122 09eb 00       		.byte	0
 3123 09ec 00       		.byte	0
 3124 09ed 0E       		.uleb128 0xe
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 108


 3125 09ee 6E030000 		.4byte	.LASF85
 3126 09f2 01       		.byte	0x1
 3127 09f3 A809     		.2byte	0x9a8
 3128 09f5 00000000 		.4byte	.LFB30
 3129 09f9 20000000 		.4byte	.LFE30-.LFB30
 3130 09fd 01       		.uleb128 0x1
 3131 09fe 9C       		.byte	0x9c
 3132 09ff 160A0000 		.4byte	0xa16
 3133 0a03 0C       		.uleb128 0xc
 3134 0a04 0E000000 		.4byte	.LVL149
 3135 0a08 78090000 		.4byte	0x978
 3136 0a0c 0C       		.uleb128 0xc
 3137 0a0d 18000000 		.4byte	.LVL150
 3138 0a11 78080000 		.4byte	0x878
 3139 0a15 00       		.byte	0
 3140 0a16 11       		.uleb128 0x11
 3141 0a17 65050000 		.4byte	.LASF86
 3142 0a1b 01       		.byte	0x1
 3143 0a1c B30A     		.2byte	0xab3
 3144 0a1e E0000000 		.4byte	0xe0
 3145 0a22 00000000 		.4byte	.LFB42
 3146 0a26 10000000 		.4byte	.LFE42-.LFB42
 3147 0a2a 01       		.uleb128 0x1
 3148 0a2b 9C       		.byte	0x9c
 3149 0a2c 5D0A0000 		.4byte	0xa5d
 3150 0a30 0F       		.uleb128 0xf
 3151 0a31 A4010000 		.4byte	.LASF40
 3152 0a35 01       		.byte	0x1
 3153 0a36 B30A     		.2byte	0xab3
 3154 0a38 83000000 		.4byte	0x83
 3155 0a3c B4050000 		.4byte	.LLST42
 3156 0a40 13       		.uleb128 0x13
 3157 0a41 BA030000 		.4byte	.LASF87
 3158 0a45 01       		.byte	0x1
 3159 0a46 B30A     		.2byte	0xab3
 3160 0a48 E0000000 		.4byte	0xe0
 3161 0a4c 01       		.uleb128 0x1
 3162 0a4d 51       		.byte	0x51
 3163 0a4e 12       		.uleb128 0x12
 3164 0a4f 3F000000 		.4byte	.LASF88
 3165 0a53 01       		.byte	0x1
 3166 0a54 B50A     		.2byte	0xab5
 3167 0a56 E0000000 		.4byte	0xe0
 3168 0a5a 01       		.uleb128 0x1
 3169 0a5b 50       		.byte	0x50
 3170 0a5c 00       		.byte	0
 3171 0a5d 11       		.uleb128 0x11
 3172 0a5e 5C010000 		.4byte	.LASF89
 3173 0a62 01       		.byte	0x1
 3174 0a63 CB0A     		.2byte	0xacb
 3175 0a65 E0000000 		.4byte	0xe0
 3176 0a69 00000000 		.4byte	.LFB43
 3177 0a6d 0C000000 		.4byte	.LFE43-.LFB43
 3178 0a71 01       		.uleb128 0x1
 3179 0a72 9C       		.byte	0x9c
 3180 0a73 880A0000 		.4byte	0xa88
 3181 0a77 0F       		.uleb128 0xf
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 109


 3182 0a78 A4010000 		.4byte	.LASF40
 3183 0a7c 01       		.byte	0x1
 3184 0a7d CB0A     		.2byte	0xacb
 3185 0a7f 83000000 		.4byte	0x83
 3186 0a83 D5050000 		.4byte	.LLST43
 3187 0a87 00       		.byte	0
 3188 0a88 0E       		.uleb128 0xe
 3189 0a89 1F020000 		.4byte	.LASF90
 3190 0a8d 01       		.byte	0x1
 3191 0a8e F80A     		.2byte	0xaf8
 3192 0a90 00000000 		.4byte	.LFB45
 3193 0a94 70000000 		.4byte	.LFE45-.LFB45
 3194 0a98 01       		.uleb128 0x1
 3195 0a99 9C       		.byte	0x9c
 3196 0a9a AD0A0000 		.4byte	0xaad
 3197 0a9e 13       		.uleb128 0x13
 3198 0a9f 9B050000 		.4byte	.LASF91
 3199 0aa3 01       		.byte	0x1
 3200 0aa4 F80A     		.2byte	0xaf8
 3201 0aa6 AD0A0000 		.4byte	0xaad
 3202 0aaa 01       		.uleb128 0x1
 3203 0aab 50       		.byte	0x50
 3204 0aac 00       		.byte	0
 3205 0aad 06       		.uleb128 0x6
 3206 0aae 04       		.byte	0x4
 3207 0aaf 83000000 		.4byte	0x83
 3208 0ab3 1D       		.uleb128 0x1d
 3209 0ab4 E0000000 		.4byte	0xe0
 3210 0ab8 C30A0000 		.4byte	0xac3
 3211 0abc 1E       		.uleb128 0x1e
 3212 0abd D9000000 		.4byte	0xd9
 3213 0ac1 04       		.byte	0x4
 3214 0ac2 00       		.byte	0
 3215 0ac3 19       		.uleb128 0x19
 3216 0ac4 7A050000 		.4byte	.LASF92
 3217 0ac8 01       		.byte	0x1
 3218 0ac9 22       		.byte	0x22
 3219 0aca B30A0000 		.4byte	0xab3
 3220 0ace 05       		.uleb128 0x5
 3221 0acf 03       		.byte	0x3
 3222 0ad0 00000000 		.4byte	CySysTickCallbacks
 3223 0ad4 1F       		.uleb128 0x1f
 3224 0ad5 D5030000 		.4byte	.LASF93
 3225 0ad9 01       		.byte	0x1
 3226 0ada 1B       		.byte	0x1b
 3227 0adb 83000000 		.4byte	0x83
 3228 0adf 05       		.uleb128 0x5
 3229 0ae0 03       		.byte	0x3
 3230 0ae1 00000000 		.4byte	cydelayFreqHz
 3231 0ae5 1F       		.uleb128 0x1f
 3232 0ae6 77010000 		.4byte	.LASF94
 3233 0aea 01       		.byte	0x1
 3234 0aeb 1C       		.byte	0x1c
 3235 0aec 83000000 		.4byte	0x83
 3236 0af0 05       		.uleb128 0x5
 3237 0af1 03       		.byte	0x3
 3238 0af2 00000000 		.4byte	cydelayFreqKhz
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 110


 3239 0af6 1F       		.uleb128 0x1f
 3240 0af7 D2050000 		.4byte	.LASF95
 3241 0afb 01       		.byte	0x1
 3242 0afc 1D       		.byte	0x1d
 3243 0afd 6B000000 		.4byte	0x6b
 3244 0b01 05       		.uleb128 0x5
 3245 0b02 03       		.byte	0x3
 3246 0b03 00000000 		.4byte	cydelayFreqMhz
 3247 0b07 1F       		.uleb128 0x1f
 3248 0b08 F2010000 		.4byte	.LASF96
 3249 0b0c 01       		.byte	0x1
 3250 0b0d 1E       		.byte	0x1e
 3251 0b0e 83000000 		.4byte	0x83
 3252 0b12 05       		.uleb128 0x5
 3253 0b13 03       		.byte	0x3
 3254 0b14 00000000 		.4byte	cydelay32kMs
 3255 0b18 1F       		.uleb128 0x1f
 3256 0b19 6B000000 		.4byte	.LASF97
 3257 0b1d 01       		.byte	0x1
 3258 0b1e 35       		.byte	0x35
 3259 0b1f 83000000 		.4byte	0x83
 3260 0b23 05       		.uleb128 0x5
 3261 0b24 03       		.byte	0x3
 3262 0b25 00000000 		.4byte	CySysTickInitVar
 3263 0b29 1D       		.uleb128 0x1d
 3264 0b2a 6B000000 		.4byte	0x6b
 3265 0b2e 390B0000 		.4byte	0xb39
 3266 0b32 1E       		.uleb128 0x1e
 3267 0b33 D9000000 		.4byte	0xd9
 3268 0b37 16       		.byte	0x16
 3269 0b38 00       		.byte	0
 3270 0b39 1F       		.uleb128 0x1f
 3271 0b3a 03050000 		.4byte	.LASF98
 3272 0b3e 01       		.byte	0x1
 3273 0b3f 4B       		.byte	0x4b
 3274 0b40 4A0B0000 		.4byte	0xb4a
 3275 0b44 05       		.uleb128 0x5
 3276 0b45 03       		.byte	0x3
 3277 0b46 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 3278 0b4a 20       		.uleb128 0x20
 3279 0b4b 290B0000 		.4byte	0xb29
 3280 0b4f 21       		.uleb128 0x21
 3281 0b50 81020000 		.4byte	.LASF101
 3282 0b54 03       		.byte	0x3
 3283 0b55 E3       		.byte	0xe3
 3284 0b56 6B000000 		.4byte	0x6b
 3285 0b5a 22       		.uleb128 0x22
 3286 0b5b FA030000 		.4byte	.LASF99
 3287 0b5f 03       		.byte	0x3
 3288 0b60 E4       		.byte	0xe4
 3289 0b61 6B0B0000 		.4byte	0xb6b
 3290 0b65 23       		.uleb128 0x23
 3291 0b66 6B000000 		.4byte	0x6b
 3292 0b6a 00       		.byte	0
 3293 0b6b 22       		.uleb128 0x22
 3294 0b6c 3E040000 		.4byte	.LASF100
 3295 0b70 03       		.byte	0x3
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 111


 3296 0b71 DA       		.byte	0xda
 3297 0b72 7C0B0000 		.4byte	0xb7c
 3298 0b76 23       		.uleb128 0x23
 3299 0b77 83000000 		.4byte	0x83
 3300 0b7b 00       		.byte	0
 3301 0b7c 21       		.uleb128 0x21
 3302 0b7d 89000000 		.4byte	.LASF102
 3303 0b81 04       		.byte	0x4
 3304 0b82 54       		.byte	0x54
 3305 0b83 83000000 		.4byte	0x83
 3306 0b87 24       		.uleb128 0x24
 3307 0b88 08060000 		.4byte	.LASF107
 3308 0b8c 05       		.byte	0x5
 3309 0b8d 52       		.byte	0x52
 3310 0b8e 23       		.uleb128 0x23
 3311 0b8f 83000000 		.4byte	0x83
 3312 0b93 00       		.byte	0
 3313 0b94 00       		.byte	0
 3314              		.section	.debug_abbrev,"",%progbits
 3315              	.Ldebug_abbrev0:
 3316 0000 01       		.uleb128 0x1
 3317 0001 11       		.uleb128 0x11
 3318 0002 01       		.byte	0x1
 3319 0003 25       		.uleb128 0x25
 3320 0004 0E       		.uleb128 0xe
 3321 0005 13       		.uleb128 0x13
 3322 0006 0B       		.uleb128 0xb
 3323 0007 03       		.uleb128 0x3
 3324 0008 0E       		.uleb128 0xe
 3325 0009 1B       		.uleb128 0x1b
 3326 000a 0E       		.uleb128 0xe
 3327 000b 55       		.uleb128 0x55
 3328 000c 17       		.uleb128 0x17
 3329 000d 11       		.uleb128 0x11
 3330 000e 01       		.uleb128 0x1
 3331 000f 10       		.uleb128 0x10
 3332 0010 17       		.uleb128 0x17
 3333 0011 00       		.byte	0
 3334 0012 00       		.byte	0
 3335 0013 02       		.uleb128 0x2
 3336 0014 24       		.uleb128 0x24
 3337 0015 00       		.byte	0
 3338 0016 0B       		.uleb128 0xb
 3339 0017 0B       		.uleb128 0xb
 3340 0018 3E       		.uleb128 0x3e
 3341 0019 0B       		.uleb128 0xb
 3342 001a 03       		.uleb128 0x3
 3343 001b 0E       		.uleb128 0xe
 3344 001c 00       		.byte	0
 3345 001d 00       		.byte	0
 3346 001e 03       		.uleb128 0x3
 3347 001f 24       		.uleb128 0x24
 3348 0020 00       		.byte	0
 3349 0021 0B       		.uleb128 0xb
 3350 0022 0B       		.uleb128 0xb
 3351 0023 3E       		.uleb128 0x3e
 3352 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 112


 3353 0025 03       		.uleb128 0x3
 3354 0026 08       		.uleb128 0x8
 3355 0027 00       		.byte	0
 3356 0028 00       		.byte	0
 3357 0029 04       		.uleb128 0x4
 3358 002a 16       		.uleb128 0x16
 3359 002b 00       		.byte	0
 3360 002c 03       		.uleb128 0x3
 3361 002d 0E       		.uleb128 0xe
 3362 002e 3A       		.uleb128 0x3a
 3363 002f 0B       		.uleb128 0xb
 3364 0030 3B       		.uleb128 0x3b
 3365 0031 05       		.uleb128 0x5
 3366 0032 49       		.uleb128 0x49
 3367 0033 13       		.uleb128 0x13
 3368 0034 00       		.byte	0
 3369 0035 00       		.byte	0
 3370 0036 05       		.uleb128 0x5
 3371 0037 35       		.uleb128 0x35
 3372 0038 00       		.byte	0
 3373 0039 49       		.uleb128 0x49
 3374 003a 13       		.uleb128 0x13
 3375 003b 00       		.byte	0
 3376 003c 00       		.byte	0
 3377 003d 06       		.uleb128 0x6
 3378 003e 0F       		.uleb128 0xf
 3379 003f 00       		.byte	0
 3380 0040 0B       		.uleb128 0xb
 3381 0041 0B       		.uleb128 0xb
 3382 0042 49       		.uleb128 0x49
 3383 0043 13       		.uleb128 0x13
 3384 0044 00       		.byte	0
 3385 0045 00       		.byte	0
 3386 0046 07       		.uleb128 0x7
 3387 0047 15       		.uleb128 0x15
 3388 0048 00       		.byte	0
 3389 0049 27       		.uleb128 0x27
 3390 004a 19       		.uleb128 0x19
 3391 004b 00       		.byte	0
 3392 004c 00       		.byte	0
 3393 004d 08       		.uleb128 0x8
 3394 004e 16       		.uleb128 0x16
 3395 004f 00       		.byte	0
 3396 0050 03       		.uleb128 0x3
 3397 0051 0E       		.uleb128 0xe
 3398 0052 3A       		.uleb128 0x3a
 3399 0053 0B       		.uleb128 0xb
 3400 0054 3B       		.uleb128 0x3b
 3401 0055 0B       		.uleb128 0xb
 3402 0056 49       		.uleb128 0x49
 3403 0057 13       		.uleb128 0x13
 3404 0058 00       		.byte	0
 3405 0059 00       		.byte	0
 3406 005a 09       		.uleb128 0x9
 3407 005b 2E       		.uleb128 0x2e
 3408 005c 00       		.byte	0
 3409 005d 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 113


 3410 005e 19       		.uleb128 0x19
 3411 005f 03       		.uleb128 0x3
 3412 0060 0E       		.uleb128 0xe
 3413 0061 3A       		.uleb128 0x3a
 3414 0062 0B       		.uleb128 0xb
 3415 0063 3B       		.uleb128 0x3b
 3416 0064 0B       		.uleb128 0xb
 3417 0065 27       		.uleb128 0x27
 3418 0066 19       		.uleb128 0x19
 3419 0067 11       		.uleb128 0x11
 3420 0068 01       		.uleb128 0x1
 3421 0069 12       		.uleb128 0x12
 3422 006a 06       		.uleb128 0x6
 3423 006b 40       		.uleb128 0x40
 3424 006c 18       		.uleb128 0x18
 3425 006d 9742     		.uleb128 0x2117
 3426 006f 19       		.uleb128 0x19
 3427 0070 00       		.byte	0
 3428 0071 00       		.byte	0
 3429 0072 0A       		.uleb128 0xa
 3430 0073 2E       		.uleb128 0x2e
 3431 0074 00       		.byte	0
 3432 0075 3F       		.uleb128 0x3f
 3433 0076 19       		.uleb128 0x19
 3434 0077 03       		.uleb128 0x3
 3435 0078 0E       		.uleb128 0xe
 3436 0079 3A       		.uleb128 0x3a
 3437 007a 0B       		.uleb128 0xb
 3438 007b 3B       		.uleb128 0x3b
 3439 007c 05       		.uleb128 0x5
 3440 007d 27       		.uleb128 0x27
 3441 007e 19       		.uleb128 0x19
 3442 007f 11       		.uleb128 0x11
 3443 0080 01       		.uleb128 0x1
 3444 0081 12       		.uleb128 0x12
 3445 0082 06       		.uleb128 0x6
 3446 0083 40       		.uleb128 0x40
 3447 0084 18       		.uleb128 0x18
 3448 0085 9742     		.uleb128 0x2117
 3449 0087 19       		.uleb128 0x19
 3450 0088 00       		.byte	0
 3451 0089 00       		.byte	0
 3452 008a 0B       		.uleb128 0xb
 3453 008b 2E       		.uleb128 0x2e
 3454 008c 01       		.byte	0x1
 3455 008d 3F       		.uleb128 0x3f
 3456 008e 19       		.uleb128 0x19
 3457 008f 03       		.uleb128 0x3
 3458 0090 0E       		.uleb128 0xe
 3459 0091 3A       		.uleb128 0x3a
 3460 0092 0B       		.uleb128 0xb
 3461 0093 3B       		.uleb128 0x3b
 3462 0094 0B       		.uleb128 0xb
 3463 0095 27       		.uleb128 0x27
 3464 0096 19       		.uleb128 0x19
 3465 0097 11       		.uleb128 0x11
 3466 0098 01       		.uleb128 0x1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 114


 3467 0099 12       		.uleb128 0x12
 3468 009a 06       		.uleb128 0x6
 3469 009b 40       		.uleb128 0x40
 3470 009c 18       		.uleb128 0x18
 3471 009d 9742     		.uleb128 0x2117
 3472 009f 19       		.uleb128 0x19
 3473 00a0 01       		.uleb128 0x1
 3474 00a1 13       		.uleb128 0x13
 3475 00a2 00       		.byte	0
 3476 00a3 00       		.byte	0
 3477 00a4 0C       		.uleb128 0xc
 3478 00a5 898201   		.uleb128 0x4109
 3479 00a8 00       		.byte	0
 3480 00a9 11       		.uleb128 0x11
 3481 00aa 01       		.uleb128 0x1
 3482 00ab 31       		.uleb128 0x31
 3483 00ac 13       		.uleb128 0x13
 3484 00ad 00       		.byte	0
 3485 00ae 00       		.byte	0
 3486 00af 0D       		.uleb128 0xd
 3487 00b0 2E       		.uleb128 0x2e
 3488 00b1 00       		.byte	0
 3489 00b2 3F       		.uleb128 0x3f
 3490 00b3 19       		.uleb128 0x19
 3491 00b4 03       		.uleb128 0x3
 3492 00b5 0E       		.uleb128 0xe
 3493 00b6 3A       		.uleb128 0x3a
 3494 00b7 0B       		.uleb128 0xb
 3495 00b8 3B       		.uleb128 0x3b
 3496 00b9 05       		.uleb128 0x5
 3497 00ba 27       		.uleb128 0x27
 3498 00bb 19       		.uleb128 0x19
 3499 00bc 49       		.uleb128 0x49
 3500 00bd 13       		.uleb128 0x13
 3501 00be 11       		.uleb128 0x11
 3502 00bf 01       		.uleb128 0x1
 3503 00c0 12       		.uleb128 0x12
 3504 00c1 06       		.uleb128 0x6
 3505 00c2 40       		.uleb128 0x40
 3506 00c3 18       		.uleb128 0x18
 3507 00c4 9742     		.uleb128 0x2117
 3508 00c6 19       		.uleb128 0x19
 3509 00c7 00       		.byte	0
 3510 00c8 00       		.byte	0
 3511 00c9 0E       		.uleb128 0xe
 3512 00ca 2E       		.uleb128 0x2e
 3513 00cb 01       		.byte	0x1
 3514 00cc 3F       		.uleb128 0x3f
 3515 00cd 19       		.uleb128 0x19
 3516 00ce 03       		.uleb128 0x3
 3517 00cf 0E       		.uleb128 0xe
 3518 00d0 3A       		.uleb128 0x3a
 3519 00d1 0B       		.uleb128 0xb
 3520 00d2 3B       		.uleb128 0x3b
 3521 00d3 05       		.uleb128 0x5
 3522 00d4 27       		.uleb128 0x27
 3523 00d5 19       		.uleb128 0x19
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 115


 3524 00d6 11       		.uleb128 0x11
 3525 00d7 01       		.uleb128 0x1
 3526 00d8 12       		.uleb128 0x12
 3527 00d9 06       		.uleb128 0x6
 3528 00da 40       		.uleb128 0x40
 3529 00db 18       		.uleb128 0x18
 3530 00dc 9742     		.uleb128 0x2117
 3531 00de 19       		.uleb128 0x19
 3532 00df 01       		.uleb128 0x1
 3533 00e0 13       		.uleb128 0x13
 3534 00e1 00       		.byte	0
 3535 00e2 00       		.byte	0
 3536 00e3 0F       		.uleb128 0xf
 3537 00e4 05       		.uleb128 0x5
 3538 00e5 00       		.byte	0
 3539 00e6 03       		.uleb128 0x3
 3540 00e7 0E       		.uleb128 0xe
 3541 00e8 3A       		.uleb128 0x3a
 3542 00e9 0B       		.uleb128 0xb
 3543 00ea 3B       		.uleb128 0x3b
 3544 00eb 05       		.uleb128 0x5
 3545 00ec 49       		.uleb128 0x49
 3546 00ed 13       		.uleb128 0x13
 3547 00ee 02       		.uleb128 0x2
 3548 00ef 17       		.uleb128 0x17
 3549 00f0 00       		.byte	0
 3550 00f1 00       		.byte	0
 3551 00f2 10       		.uleb128 0x10
 3552 00f3 34       		.uleb128 0x34
 3553 00f4 00       		.byte	0
 3554 00f5 03       		.uleb128 0x3
 3555 00f6 0E       		.uleb128 0xe
 3556 00f7 3A       		.uleb128 0x3a
 3557 00f8 0B       		.uleb128 0xb
 3558 00f9 3B       		.uleb128 0x3b
 3559 00fa 05       		.uleb128 0x5
 3560 00fb 49       		.uleb128 0x49
 3561 00fc 13       		.uleb128 0x13
 3562 00fd 02       		.uleb128 0x2
 3563 00fe 17       		.uleb128 0x17
 3564 00ff 00       		.byte	0
 3565 0100 00       		.byte	0
 3566 0101 11       		.uleb128 0x11
 3567 0102 2E       		.uleb128 0x2e
 3568 0103 01       		.byte	0x1
 3569 0104 3F       		.uleb128 0x3f
 3570 0105 19       		.uleb128 0x19
 3571 0106 03       		.uleb128 0x3
 3572 0107 0E       		.uleb128 0xe
 3573 0108 3A       		.uleb128 0x3a
 3574 0109 0B       		.uleb128 0xb
 3575 010a 3B       		.uleb128 0x3b
 3576 010b 05       		.uleb128 0x5
 3577 010c 27       		.uleb128 0x27
 3578 010d 19       		.uleb128 0x19
 3579 010e 49       		.uleb128 0x49
 3580 010f 13       		.uleb128 0x13
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 116


 3581 0110 11       		.uleb128 0x11
 3582 0111 01       		.uleb128 0x1
 3583 0112 12       		.uleb128 0x12
 3584 0113 06       		.uleb128 0x6
 3585 0114 40       		.uleb128 0x40
 3586 0115 18       		.uleb128 0x18
 3587 0116 9742     		.uleb128 0x2117
 3588 0118 19       		.uleb128 0x19
 3589 0119 01       		.uleb128 0x1
 3590 011a 13       		.uleb128 0x13
 3591 011b 00       		.byte	0
 3592 011c 00       		.byte	0
 3593 011d 12       		.uleb128 0x12
 3594 011e 34       		.uleb128 0x34
 3595 011f 00       		.byte	0
 3596 0120 03       		.uleb128 0x3
 3597 0121 0E       		.uleb128 0xe
 3598 0122 3A       		.uleb128 0x3a
 3599 0123 0B       		.uleb128 0xb
 3600 0124 3B       		.uleb128 0x3b
 3601 0125 05       		.uleb128 0x5
 3602 0126 49       		.uleb128 0x49
 3603 0127 13       		.uleb128 0x13
 3604 0128 02       		.uleb128 0x2
 3605 0129 18       		.uleb128 0x18
 3606 012a 00       		.byte	0
 3607 012b 00       		.byte	0
 3608 012c 13       		.uleb128 0x13
 3609 012d 05       		.uleb128 0x5
 3610 012e 00       		.byte	0
 3611 012f 03       		.uleb128 0x3
 3612 0130 0E       		.uleb128 0xe
 3613 0131 3A       		.uleb128 0x3a
 3614 0132 0B       		.uleb128 0xb
 3615 0133 3B       		.uleb128 0x3b
 3616 0134 05       		.uleb128 0x5
 3617 0135 49       		.uleb128 0x49
 3618 0136 13       		.uleb128 0x13
 3619 0137 02       		.uleb128 0x2
 3620 0138 18       		.uleb128 0x18
 3621 0139 00       		.byte	0
 3622 013a 00       		.byte	0
 3623 013b 14       		.uleb128 0x14
 3624 013c 34       		.uleb128 0x34
 3625 013d 00       		.byte	0
 3626 013e 03       		.uleb128 0x3
 3627 013f 0E       		.uleb128 0xe
 3628 0140 3A       		.uleb128 0x3a
 3629 0141 0B       		.uleb128 0xb
 3630 0142 3B       		.uleb128 0x3b
 3631 0143 05       		.uleb128 0x5
 3632 0144 49       		.uleb128 0x49
 3633 0145 13       		.uleb128 0x13
 3634 0146 1C       		.uleb128 0x1c
 3635 0147 06       		.uleb128 0x6
 3636 0148 00       		.byte	0
 3637 0149 00       		.byte	0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 117


 3638 014a 15       		.uleb128 0x15
 3639 014b 898201   		.uleb128 0x4109
 3640 014e 01       		.byte	0x1
 3641 014f 11       		.uleb128 0x11
 3642 0150 01       		.uleb128 0x1
 3643 0151 31       		.uleb128 0x31
 3644 0152 13       		.uleb128 0x13
 3645 0153 00       		.byte	0
 3646 0154 00       		.byte	0
 3647 0155 16       		.uleb128 0x16
 3648 0156 8A8201   		.uleb128 0x410a
 3649 0159 00       		.byte	0
 3650 015a 02       		.uleb128 0x2
 3651 015b 18       		.uleb128 0x18
 3652 015c 9142     		.uleb128 0x2111
 3653 015e 18       		.uleb128 0x18
 3654 015f 00       		.byte	0
 3655 0160 00       		.byte	0
 3656 0161 17       		.uleb128 0x17
 3657 0162 898201   		.uleb128 0x4109
 3658 0165 01       		.byte	0x1
 3659 0166 11       		.uleb128 0x11
 3660 0167 01       		.uleb128 0x1
 3661 0168 31       		.uleb128 0x31
 3662 0169 13       		.uleb128 0x13
 3663 016a 01       		.uleb128 0x1
 3664 016b 13       		.uleb128 0x13
 3665 016c 00       		.byte	0
 3666 016d 00       		.byte	0
 3667 016e 18       		.uleb128 0x18
 3668 016f 34       		.uleb128 0x34
 3669 0170 00       		.byte	0
 3670 0171 03       		.uleb128 0x3
 3671 0172 0E       		.uleb128 0xe
 3672 0173 3A       		.uleb128 0x3a
 3673 0174 0B       		.uleb128 0xb
 3674 0175 3B       		.uleb128 0x3b
 3675 0176 0B       		.uleb128 0xb
 3676 0177 49       		.uleb128 0x49
 3677 0178 13       		.uleb128 0x13
 3678 0179 02       		.uleb128 0x2
 3679 017a 17       		.uleb128 0x17
 3680 017b 00       		.byte	0
 3681 017c 00       		.byte	0
 3682 017d 19       		.uleb128 0x19
 3683 017e 34       		.uleb128 0x34
 3684 017f 00       		.byte	0
 3685 0180 03       		.uleb128 0x3
 3686 0181 0E       		.uleb128 0xe
 3687 0182 3A       		.uleb128 0x3a
 3688 0183 0B       		.uleb128 0xb
 3689 0184 3B       		.uleb128 0x3b
 3690 0185 0B       		.uleb128 0xb
 3691 0186 49       		.uleb128 0x49
 3692 0187 13       		.uleb128 0x13
 3693 0188 02       		.uleb128 0x2
 3694 0189 18       		.uleb128 0x18
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 118


 3695 018a 00       		.byte	0
 3696 018b 00       		.byte	0
 3697 018c 1A       		.uleb128 0x1a
 3698 018d 2E       		.uleb128 0x2e
 3699 018e 01       		.byte	0x1
 3700 018f 3F       		.uleb128 0x3f
 3701 0190 19       		.uleb128 0x19
 3702 0191 03       		.uleb128 0x3
 3703 0192 0E       		.uleb128 0xe
 3704 0193 3A       		.uleb128 0x3a
 3705 0194 0B       		.uleb128 0xb
 3706 0195 3B       		.uleb128 0x3b
 3707 0196 05       		.uleb128 0x5
 3708 0197 27       		.uleb128 0x27
 3709 0198 19       		.uleb128 0x19
 3710 0199 11       		.uleb128 0x11
 3711 019a 01       		.uleb128 0x1
 3712 019b 12       		.uleb128 0x12
 3713 019c 06       		.uleb128 0x6
 3714 019d 40       		.uleb128 0x40
 3715 019e 18       		.uleb128 0x18
 3716 019f 9642     		.uleb128 0x2116
 3717 01a1 19       		.uleb128 0x19
 3718 01a2 01       		.uleb128 0x1
 3719 01a3 13       		.uleb128 0x13
 3720 01a4 00       		.byte	0
 3721 01a5 00       		.byte	0
 3722 01a6 1B       		.uleb128 0x1b
 3723 01a7 2E       		.uleb128 0x2e
 3724 01a8 01       		.byte	0x1
 3725 01a9 03       		.uleb128 0x3
 3726 01aa 0E       		.uleb128 0xe
 3727 01ab 3A       		.uleb128 0x3a
 3728 01ac 0B       		.uleb128 0xb
 3729 01ad 3B       		.uleb128 0x3b
 3730 01ae 05       		.uleb128 0x5
 3731 01af 27       		.uleb128 0x27
 3732 01b0 19       		.uleb128 0x19
 3733 01b1 11       		.uleb128 0x11
 3734 01b2 01       		.uleb128 0x1
 3735 01b3 12       		.uleb128 0x12
 3736 01b4 06       		.uleb128 0x6
 3737 01b5 40       		.uleb128 0x40
 3738 01b6 18       		.uleb128 0x18
 3739 01b7 9642     		.uleb128 0x2116
 3740 01b9 19       		.uleb128 0x19
 3741 01ba 01       		.uleb128 0x1
 3742 01bb 13       		.uleb128 0x13
 3743 01bc 00       		.byte	0
 3744 01bd 00       		.byte	0
 3745 01be 1C       		.uleb128 0x1c
 3746 01bf 34       		.uleb128 0x34
 3747 01c0 00       		.byte	0
 3748 01c1 03       		.uleb128 0x3
 3749 01c2 08       		.uleb128 0x8
 3750 01c3 3A       		.uleb128 0x3a
 3751 01c4 0B       		.uleb128 0xb
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 119


 3752 01c5 3B       		.uleb128 0x3b
 3753 01c6 05       		.uleb128 0x5
 3754 01c7 49       		.uleb128 0x49
 3755 01c8 13       		.uleb128 0x13
 3756 01c9 02       		.uleb128 0x2
 3757 01ca 17       		.uleb128 0x17
 3758 01cb 00       		.byte	0
 3759 01cc 00       		.byte	0
 3760 01cd 1D       		.uleb128 0x1d
 3761 01ce 01       		.uleb128 0x1
 3762 01cf 01       		.byte	0x1
 3763 01d0 49       		.uleb128 0x49
 3764 01d1 13       		.uleb128 0x13
 3765 01d2 01       		.uleb128 0x1
 3766 01d3 13       		.uleb128 0x13
 3767 01d4 00       		.byte	0
 3768 01d5 00       		.byte	0
 3769 01d6 1E       		.uleb128 0x1e
 3770 01d7 21       		.uleb128 0x21
 3771 01d8 00       		.byte	0
 3772 01d9 49       		.uleb128 0x49
 3773 01da 13       		.uleb128 0x13
 3774 01db 2F       		.uleb128 0x2f
 3775 01dc 0B       		.uleb128 0xb
 3776 01dd 00       		.byte	0
 3777 01de 00       		.byte	0
 3778 01df 1F       		.uleb128 0x1f
 3779 01e0 34       		.uleb128 0x34
 3780 01e1 00       		.byte	0
 3781 01e2 03       		.uleb128 0x3
 3782 01e3 0E       		.uleb128 0xe
 3783 01e4 3A       		.uleb128 0x3a
 3784 01e5 0B       		.uleb128 0xb
 3785 01e6 3B       		.uleb128 0x3b
 3786 01e7 0B       		.uleb128 0xb
 3787 01e8 49       		.uleb128 0x49
 3788 01e9 13       		.uleb128 0x13
 3789 01ea 3F       		.uleb128 0x3f
 3790 01eb 19       		.uleb128 0x19
 3791 01ec 02       		.uleb128 0x2
 3792 01ed 18       		.uleb128 0x18
 3793 01ee 00       		.byte	0
 3794 01ef 00       		.byte	0
 3795 01f0 20       		.uleb128 0x20
 3796 01f1 26       		.uleb128 0x26
 3797 01f2 00       		.byte	0
 3798 01f3 49       		.uleb128 0x49
 3799 01f4 13       		.uleb128 0x13
 3800 01f5 00       		.byte	0
 3801 01f6 00       		.byte	0
 3802 01f7 21       		.uleb128 0x21
 3803 01f8 2E       		.uleb128 0x2e
 3804 01f9 00       		.byte	0
 3805 01fa 3F       		.uleb128 0x3f
 3806 01fb 19       		.uleb128 0x19
 3807 01fc 03       		.uleb128 0x3
 3808 01fd 0E       		.uleb128 0xe
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 120


 3809 01fe 3A       		.uleb128 0x3a
 3810 01ff 0B       		.uleb128 0xb
 3811 0200 3B       		.uleb128 0x3b
 3812 0201 0B       		.uleb128 0xb
 3813 0202 27       		.uleb128 0x27
 3814 0203 19       		.uleb128 0x19
 3815 0204 49       		.uleb128 0x49
 3816 0205 13       		.uleb128 0x13
 3817 0206 3C       		.uleb128 0x3c
 3818 0207 19       		.uleb128 0x19
 3819 0208 00       		.byte	0
 3820 0209 00       		.byte	0
 3821 020a 22       		.uleb128 0x22
 3822 020b 2E       		.uleb128 0x2e
 3823 020c 01       		.byte	0x1
 3824 020d 3F       		.uleb128 0x3f
 3825 020e 19       		.uleb128 0x19
 3826 020f 03       		.uleb128 0x3
 3827 0210 0E       		.uleb128 0xe
 3828 0211 3A       		.uleb128 0x3a
 3829 0212 0B       		.uleb128 0xb
 3830 0213 3B       		.uleb128 0x3b
 3831 0214 0B       		.uleb128 0xb
 3832 0215 27       		.uleb128 0x27
 3833 0216 19       		.uleb128 0x19
 3834 0217 3C       		.uleb128 0x3c
 3835 0218 19       		.uleb128 0x19
 3836 0219 01       		.uleb128 0x1
 3837 021a 13       		.uleb128 0x13
 3838 021b 00       		.byte	0
 3839 021c 00       		.byte	0
 3840 021d 23       		.uleb128 0x23
 3841 021e 05       		.uleb128 0x5
 3842 021f 00       		.byte	0
 3843 0220 49       		.uleb128 0x49
 3844 0221 13       		.uleb128 0x13
 3845 0222 00       		.byte	0
 3846 0223 00       		.byte	0
 3847 0224 24       		.uleb128 0x24
 3848 0225 2E       		.uleb128 0x2e
 3849 0226 01       		.byte	0x1
 3850 0227 3F       		.uleb128 0x3f
 3851 0228 19       		.uleb128 0x19
 3852 0229 03       		.uleb128 0x3
 3853 022a 0E       		.uleb128 0xe
 3854 022b 3A       		.uleb128 0x3a
 3855 022c 0B       		.uleb128 0xb
 3856 022d 3B       		.uleb128 0x3b
 3857 022e 0B       		.uleb128 0xb
 3858 022f 27       		.uleb128 0x27
 3859 0230 19       		.uleb128 0x19
 3860 0231 3C       		.uleb128 0x3c
 3861 0232 19       		.uleb128 0x19
 3862 0233 00       		.byte	0
 3863 0234 00       		.byte	0
 3864 0235 00       		.byte	0
 3865              		.section	.debug_loc,"",%progbits
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 121


 3866              	.Ldebug_loc0:
 3867              	.LLST0:
 3868 0000 00000000 		.4byte	.LVL1
 3869 0004 07000000 		.4byte	.LVL2-1
 3870 0008 0100     		.2byte	0x1
 3871 000a 50       		.byte	0x50
 3872 000b 07000000 		.4byte	.LVL2-1
 3873 000f 1A000000 		.4byte	.LVL6
 3874 0013 0100     		.2byte	0x1
 3875 0015 54       		.byte	0x54
 3876 0016 1A000000 		.4byte	.LVL6
 3877 001a 20000000 		.4byte	.LFE6
 3878 001e 0400     		.2byte	0x4
 3879 0020 F3       		.byte	0xf3
 3880 0021 01       		.uleb128 0x1
 3881 0022 50       		.byte	0x50
 3882 0023 9F       		.byte	0x9f
 3883 0024 00000000 		.4byte	0
 3884 0028 00000000 		.4byte	0
 3885              	.LLST1:
 3886 002c 08000000 		.4byte	.LVL2
 3887 0030 19000000 		.4byte	.LVL5-1
 3888 0034 0100     		.2byte	0x1
 3889 0036 50       		.byte	0x50
 3890 0037 00000000 		.4byte	0
 3891 003b 00000000 		.4byte	0
 3892              	.LLST2:
 3893 003f 10000000 		.4byte	.LVL3
 3894 0043 14000000 		.4byte	.LVL4
 3895 0047 0100     		.2byte	0x1
 3896 0049 52       		.byte	0x52
 3897 004a 14000000 		.4byte	.LVL4
 3898 004e 19000000 		.4byte	.LVL5-1
 3899 0052 0100     		.2byte	0x1
 3900 0054 53       		.byte	0x53
 3901 0055 00000000 		.4byte	0
 3902 0059 00000000 		.4byte	0
 3903              	.LLST3:
 3904 005d 06000000 		.4byte	.LVL7
 3905 0061 11000000 		.4byte	.LVL9-1
 3906 0065 0100     		.2byte	0x1
 3907 0067 50       		.byte	0x50
 3908 0068 00000000 		.4byte	0
 3909 006c 00000000 		.4byte	0
 3910              	.LLST4:
 3911 0070 0E000000 		.4byte	.LVL8
 3912 0074 14000000 		.4byte	.LVL10
 3913 0078 0100     		.2byte	0x1
 3914 007a 54       		.byte	0x54
 3915 007b 14000000 		.4byte	.LVL10
 3916 007f 1C000000 		.4byte	.LFE7
 3917 0083 0100     		.2byte	0x1
 3918 0085 50       		.byte	0x50
 3919 0086 00000000 		.4byte	0
 3920 008a 00000000 		.4byte	0
 3921              	.LLST5:
 3922 008e 00000000 		.4byte	.LVL11
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 122


 3923 0092 07000000 		.4byte	.LVL12-1
 3924 0096 0100     		.2byte	0x1
 3925 0098 50       		.byte	0x50
 3926 0099 07000000 		.4byte	.LVL12-1
 3927 009d 0A000000 		.4byte	.LVL13
 3928 00a1 0100     		.2byte	0x1
 3929 00a3 54       		.byte	0x54
 3930 00a4 0A000000 		.4byte	.LVL13
 3931 00a8 24000000 		.4byte	.LFE8
 3932 00ac 0400     		.2byte	0x4
 3933 00ae F3       		.byte	0xf3
 3934 00af 01       		.uleb128 0x1
 3935 00b0 50       		.byte	0x50
 3936 00b1 9F       		.byte	0x9f
 3937 00b2 00000000 		.4byte	0
 3938 00b6 00000000 		.4byte	0
 3939              	.LLST6:
 3940 00ba 08000000 		.4byte	.LVL12
 3941 00be 1D000000 		.4byte	.LVL14-1
 3942 00c2 0100     		.2byte	0x1
 3943 00c4 50       		.byte	0x50
 3944 00c5 00000000 		.4byte	0
 3945 00c9 00000000 		.4byte	0
 3946              	.LLST7:
 3947 00cd 00000000 		.4byte	.LVL15
 3948 00d1 07000000 		.4byte	.LVL16-1
 3949 00d5 0100     		.2byte	0x1
 3950 00d7 50       		.byte	0x50
 3951 00d8 07000000 		.4byte	.LVL16-1
 3952 00dc 14000000 		.4byte	.LVL17
 3953 00e0 0100     		.2byte	0x1
 3954 00e2 54       		.byte	0x54
 3955 00e3 14000000 		.4byte	.LVL17
 3956 00e7 24000000 		.4byte	.LFE10
 3957 00eb 0400     		.2byte	0x4
 3958 00ed F3       		.byte	0xf3
 3959 00ee 01       		.uleb128 0x1
 3960 00ef 50       		.byte	0x50
 3961 00f0 9F       		.byte	0x9f
 3962 00f1 00000000 		.4byte	0
 3963 00f5 00000000 		.4byte	0
 3964              	.LLST8:
 3965 00f9 08000000 		.4byte	.LVL16
 3966 00fd 1D000000 		.4byte	.LVL18-1
 3967 0101 0100     		.2byte	0x1
 3968 0103 50       		.byte	0x50
 3969 0104 00000000 		.4byte	0
 3970 0108 00000000 		.4byte	0
 3971              	.LLST9:
 3972 010c 00000000 		.4byte	.LVL19
 3973 0110 04000000 		.4byte	.LVL20
 3974 0114 0100     		.2byte	0x1
 3975 0116 50       		.byte	0x50
 3976 0117 04000000 		.4byte	.LVL20
 3977 011b 14000000 		.4byte	.LFE11
 3978 011f 0100     		.2byte	0x1
 3979 0121 52       		.byte	0x52
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 123


 3980 0122 00000000 		.4byte	0
 3981 0126 00000000 		.4byte	0
 3982              	.LLST10:
 3983 012a 00000000 		.4byte	.LVL25
 3984 012e 04000000 		.4byte	.LVL26
 3985 0132 0100     		.2byte	0x1
 3986 0134 50       		.byte	0x50
 3987 0135 04000000 		.4byte	.LVL26
 3988 0139 14000000 		.4byte	.LFE20
 3989 013d 0400     		.2byte	0x4
 3990 013f F3       		.byte	0xf3
 3991 0140 01       		.uleb128 0x1
 3992 0141 50       		.byte	0x50
 3993 0142 9F       		.byte	0x9f
 3994 0143 00000000 		.4byte	0
 3995 0147 00000000 		.4byte	0
 3996              	.LLST11:
 3997 014b 00000000 		.4byte	.LVL27
 3998 014f 08000000 		.4byte	.LVL28
 3999 0153 0100     		.2byte	0x1
 4000 0155 50       		.byte	0x50
 4001 0156 08000000 		.4byte	.LVL28
 4002 015a 18000000 		.4byte	.LFE21
 4003 015e 0400     		.2byte	0x4
 4004 0160 F3       		.byte	0xf3
 4005 0161 01       		.uleb128 0x1
 4006 0162 50       		.byte	0x50
 4007 0163 9F       		.byte	0x9f
 4008 0164 00000000 		.4byte	0
 4009 0168 00000000 		.4byte	0
 4010              	.LLST12:
 4011 016c 00000000 		.4byte	.LVL29
 4012 0170 04000000 		.4byte	.LVL30
 4013 0174 0100     		.2byte	0x1
 4014 0176 50       		.byte	0x50
 4015 0177 04000000 		.4byte	.LVL30
 4016 017b 14000000 		.4byte	.LFE22
 4017 017f 0400     		.2byte	0x4
 4018 0181 F3       		.byte	0xf3
 4019 0182 01       		.uleb128 0x1
 4020 0183 50       		.byte	0x50
 4021 0184 9F       		.byte	0x9f
 4022 0185 00000000 		.4byte	0
 4023 0189 00000000 		.4byte	0
 4024              	.LLST13:
 4025 018d 00000000 		.4byte	.LVL31
 4026 0191 04000000 		.4byte	.LVL32
 4027 0195 0100     		.2byte	0x1
 4028 0197 50       		.byte	0x50
 4029 0198 04000000 		.4byte	.LVL32
 4030 019c 14000000 		.4byte	.LFE23
 4031 01a0 0400     		.2byte	0x4
 4032 01a2 F3       		.byte	0xf3
 4033 01a3 01       		.uleb128 0x1
 4034 01a4 50       		.byte	0x50
 4035 01a5 9F       		.byte	0x9f
 4036 01a6 00000000 		.4byte	0
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 124


 4037 01aa 00000000 		.4byte	0
 4038              	.LLST14:
 4039 01ae 00000000 		.4byte	.LVL33
 4040 01b2 04000000 		.4byte	.LVL34
 4041 01b6 0100     		.2byte	0x1
 4042 01b8 50       		.byte	0x50
 4043 01b9 04000000 		.4byte	.LVL34
 4044 01bd 14000000 		.4byte	.LFE24
 4045 01c1 0400     		.2byte	0x4
 4046 01c3 F3       		.byte	0xf3
 4047 01c4 01       		.uleb128 0x1
 4048 01c5 50       		.byte	0x50
 4049 01c6 9F       		.byte	0x9f
 4050 01c7 00000000 		.4byte	0
 4051 01cb 00000000 		.4byte	0
 4052              	.LLST15:
 4053 01cf 00000000 		.4byte	.LVL36
 4054 01d3 0C000000 		.4byte	.LVL38
 4055 01d7 0100     		.2byte	0x1
 4056 01d9 50       		.byte	0x50
 4057 01da 0C000000 		.4byte	.LVL38
 4058 01de 20000000 		.4byte	.LFE14
 4059 01e2 0400     		.2byte	0x4
 4060 01e4 F3       		.byte	0xf3
 4061 01e5 01       		.uleb128 0x1
 4062 01e6 50       		.byte	0x50
 4063 01e7 9F       		.byte	0x9f
 4064 01e8 00000000 		.4byte	0
 4065 01ec 00000000 		.4byte	0
 4066              	.LLST16:
 4067 01f0 00000000 		.4byte	.LVL36
 4068 01f4 0F000000 		.4byte	.LVL39-1
 4069 01f8 0100     		.2byte	0x1
 4070 01fa 51       		.byte	0x51
 4071 01fb 0F000000 		.4byte	.LVL39-1
 4072 01ff 1E000000 		.4byte	.LVL41
 4073 0203 0100     		.2byte	0x1
 4074 0205 55       		.byte	0x55
 4075 0206 1E000000 		.4byte	.LVL41
 4076 020a 20000000 		.4byte	.LFE14
 4077 020e 0400     		.2byte	0x4
 4078 0210 F3       		.byte	0xf3
 4079 0211 01       		.uleb128 0x1
 4080 0212 51       		.byte	0x51
 4081 0213 9F       		.byte	0x9f
 4082 0214 00000000 		.4byte	0
 4083 0218 00000000 		.4byte	0
 4084              	.LLST17:
 4085 021c 00000000 		.4byte	.LVL42
 4086 0220 0A000000 		.4byte	.LVL44
 4087 0224 0100     		.2byte	0x1
 4088 0226 50       		.byte	0x50
 4089 0227 0A000000 		.4byte	.LVL44
 4090 022b 1C000000 		.4byte	.LFE15
 4091 022f 0400     		.2byte	0x4
 4092 0231 F3       		.byte	0xf3
 4093 0232 01       		.uleb128 0x1
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 125


 4094 0233 50       		.byte	0x50
 4095 0234 9F       		.byte	0x9f
 4096 0235 00000000 		.4byte	0
 4097 0239 00000000 		.4byte	0
 4098              	.LLST18:
 4099 023d 00000000 		.4byte	.LVL46
 4100 0241 0C000000 		.4byte	.LVL48
 4101 0245 0100     		.2byte	0x1
 4102 0247 50       		.byte	0x50
 4103 0248 0C000000 		.4byte	.LVL48
 4104 024c 24000000 		.4byte	.LFE16
 4105 0250 0400     		.2byte	0x4
 4106 0252 F3       		.byte	0xf3
 4107 0253 01       		.uleb128 0x1
 4108 0254 50       		.byte	0x50
 4109 0255 9F       		.byte	0x9f
 4110 0256 00000000 		.4byte	0
 4111 025a 00000000 		.4byte	0
 4112              	.LLST19:
 4113 025e 00000000 		.4byte	.LVL46
 4114 0262 0F000000 		.4byte	.LVL49-1
 4115 0266 0100     		.2byte	0x1
 4116 0268 51       		.byte	0x51
 4117 0269 0F000000 		.4byte	.LVL49-1
 4118 026d 1C000000 		.4byte	.LVL51
 4119 0271 0100     		.2byte	0x1
 4120 0273 55       		.byte	0x55
 4121 0274 1C000000 		.4byte	.LVL51
 4122 0278 24000000 		.4byte	.LFE16
 4123 027c 0400     		.2byte	0x4
 4124 027e F3       		.byte	0xf3
 4125 027f 01       		.uleb128 0x1
 4126 0280 51       		.byte	0x51
 4127 0281 9F       		.byte	0x9f
 4128 0282 00000000 		.4byte	0
 4129 0286 00000000 		.4byte	0
 4130              	.LLST20:
 4131 028a 00000000 		.4byte	.LVL52
 4132 028e 0A000000 		.4byte	.LVL54
 4133 0292 0100     		.2byte	0x1
 4134 0294 50       		.byte	0x50
 4135 0295 0A000000 		.4byte	.LVL54
 4136 0299 20000000 		.4byte	.LFE17
 4137 029d 0400     		.2byte	0x4
 4138 029f F3       		.byte	0xf3
 4139 02a0 01       		.uleb128 0x1
 4140 02a1 50       		.byte	0x50
 4141 02a2 9F       		.byte	0x9f
 4142 02a3 00000000 		.4byte	0
 4143 02a7 00000000 		.4byte	0
 4144              	.LLST21:
 4145 02ab 00000000 		.4byte	.LVL56
 4146 02af 0C000000 		.4byte	.LVL57
 4147 02b3 0100     		.2byte	0x1
 4148 02b5 50       		.byte	0x50
 4149 02b6 0C000000 		.4byte	.LVL57
 4150 02ba 4C000000 		.4byte	.LFE18
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 126


 4151 02be 0400     		.2byte	0x4
 4152 02c0 F3       		.byte	0xf3
 4153 02c1 01       		.uleb128 0x1
 4154 02c2 50       		.byte	0x50
 4155 02c3 9F       		.byte	0x9f
 4156 02c4 00000000 		.4byte	0
 4157 02c8 00000000 		.4byte	0
 4158              	.LLST22:
 4159 02cc 00000000 		.4byte	.LVL56
 4160 02d0 0F000000 		.4byte	.LVL58-1
 4161 02d4 0100     		.2byte	0x1
 4162 02d6 51       		.byte	0x51
 4163 02d7 0F000000 		.4byte	.LVL58-1
 4164 02db 4C000000 		.4byte	.LFE18
 4165 02df 0400     		.2byte	0x4
 4166 02e1 F3       		.byte	0xf3
 4167 02e2 01       		.uleb128 0x1
 4168 02e3 51       		.byte	0x51
 4169 02e4 9F       		.byte	0x9f
 4170 02e5 00000000 		.4byte	0
 4171 02e9 00000000 		.4byte	0
 4172              	.LLST23:
 4173 02ed 26000000 		.4byte	.LVL61
 4174 02f1 43000000 		.4byte	.LVL66-1
 4175 02f5 0100     		.2byte	0x1
 4176 02f7 50       		.byte	0x50
 4177 02f8 00000000 		.4byte	0
 4178 02fc 00000000 		.4byte	0
 4179              	.LLST24:
 4180 0300 22000000 		.4byte	.LVL60
 4181 0304 3C000000 		.4byte	.LVL64
 4182 0308 0100     		.2byte	0x1
 4183 030a 55       		.byte	0x55
 4184 030b 00000000 		.4byte	0
 4185 030f 00000000 		.4byte	0
 4186              	.LLST25:
 4187 0313 32000000 		.4byte	.LVL62
 4188 0317 3E000000 		.4byte	.LVL65
 4189 031b 0100     		.2byte	0x1
 4190 031d 53       		.byte	0x53
 4191 031e 3E000000 		.4byte	.LVL65
 4192 0322 44000000 		.4byte	.LVL67
 4193 0326 0100     		.2byte	0x1
 4194 0328 55       		.byte	0x55
 4195 0329 00000000 		.4byte	0
 4196 032d 00000000 		.4byte	0
 4197              	.LLST26:
 4198 0331 00000000 		.4byte	.LVL68
 4199 0335 0A000000 		.4byte	.LVL69
 4200 0339 0100     		.2byte	0x1
 4201 033b 50       		.byte	0x50
 4202 033c 0A000000 		.4byte	.LVL69
 4203 0340 2C000000 		.4byte	.LFE19
 4204 0344 0400     		.2byte	0x4
 4205 0346 F3       		.byte	0xf3
 4206 0347 01       		.uleb128 0x1
 4207 0348 50       		.byte	0x50
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 127


 4208 0349 9F       		.byte	0x9f
 4209 034a 00000000 		.4byte	0
 4210 034e 00000000 		.4byte	0
 4211              	.LLST27:
 4212 0352 24000000 		.4byte	.LVL71
 4213 0356 26000000 		.4byte	.LVL72
 4214 035a 0100     		.2byte	0x1
 4215 035c 50       		.byte	0x50
 4216 035d 00000000 		.4byte	0
 4217 0361 00000000 		.4byte	0
 4218              	.LLST28:
 4219 0365 00000000 		.4byte	.LVL73
 4220 0369 06000000 		.4byte	.LVL74
 4221 036d 0100     		.2byte	0x1
 4222 036f 50       		.byte	0x50
 4223 0370 06000000 		.4byte	.LVL74
 4224 0374 26000000 		.4byte	.LVL78
 4225 0378 0100     		.2byte	0x1
 4226 037a 54       		.byte	0x54
 4227 037b 00000000 		.4byte	0
 4228 037f 00000000 		.4byte	0
 4229              	.LLST29:
 4230 0383 20000000 		.4byte	.LVL83
 4231 0387 54000000 		.4byte	.LVL89
 4232 038b 0100     		.2byte	0x1
 4233 038d 50       		.byte	0x50
 4234 038e 54000000 		.4byte	.LVL89
 4235 0392 56000000 		.4byte	.LVL90
 4236 0396 0700     		.2byte	0x7
 4237 0398 70       		.byte	0x70
 4238 0399 B39C8080 		.sleb128 -268431821
 4238      7F
 4239 039e 9F       		.byte	0x9f
 4240 039f 56000000 		.4byte	.LVL90
 4241 03a3 58000000 		.4byte	.LVL91
 4242 03a7 0300     		.2byte	0x3
 4243 03a9 72       		.byte	0x72
 4244 03aa 18       		.sleb128 24
 4245 03ab 9F       		.byte	0x9f
 4246 03ac 58000000 		.4byte	.LVL91
 4247 03b0 68000000 		.4byte	.LVL95
 4248 03b4 0300     		.2byte	0x3
 4249 03b6 72       		.byte	0x72
 4250 03b7 1A       		.sleb128 26
 4251 03b8 9F       		.byte	0x9f
 4252 03b9 00000000 		.4byte	0
 4253 03bd 00000000 		.4byte	0
 4254              	.LLST30:
 4255 03c1 12000000 		.4byte	.LVL82
 4256 03c5 94000000 		.4byte	.LVL100
 4257 03c9 0100     		.2byte	0x1
 4258 03cb 54       		.byte	0x54
 4259 03cc 00000000 		.4byte	0
 4260 03d0 00000000 		.4byte	0
 4261              	.LLST31:
 4262 03d4 28000000 		.4byte	.LVL84
 4263 03d8 3E000000 		.4byte	.LVL85
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 128


 4264 03dc 0100     		.2byte	0x1
 4265 03de 51       		.byte	0x51
 4266 03df 3E000000 		.4byte	.LVL85
 4267 03e3 44000000 		.4byte	.LVL86
 4268 03e7 0100     		.2byte	0x1
 4269 03e9 53       		.byte	0x53
 4270 03ea 44000000 		.4byte	.LVL86
 4271 03ee 4C000000 		.4byte	.LVL87
 4272 03f2 0100     		.2byte	0x1
 4273 03f4 51       		.byte	0x51
 4274 03f5 4C000000 		.4byte	.LVL87
 4275 03f9 4E000000 		.4byte	.LVL88
 4276 03fd 0100     		.2byte	0x1
 4277 03ff 53       		.byte	0x53
 4278 0400 4E000000 		.4byte	.LVL88
 4279 0404 68000000 		.4byte	.LVL95
 4280 0408 0100     		.2byte	0x1
 4281 040a 51       		.byte	0x51
 4282 040b 68000000 		.4byte	.LVL95
 4283 040f 70000000 		.4byte	.LVL96
 4284 0413 0100     		.2byte	0x1
 4285 0415 53       		.byte	0x53
 4286 0416 70000000 		.4byte	.LVL96
 4287 041a 72000000 		.4byte	.LVL97
 4288 041e 0200     		.2byte	0x2
 4289 0420 72       		.byte	0x72
 4290 0421 00       		.sleb128 0
 4291 0422 00000000 		.4byte	0
 4292 0426 00000000 		.4byte	0
 4293              	.LLST32:
 4294 042a 04000000 		.4byte	.LVL79
 4295 042e 5E000000 		.4byte	.LVL92
 4296 0432 0200     		.2byte	0x2
 4297 0434 30       		.byte	0x30
 4298 0435 9F       		.byte	0x9f
 4299 0436 64000000 		.4byte	.LVL93
 4300 043a 66000000 		.4byte	.LVL94
 4301 043e 0100     		.2byte	0x1
 4302 0440 53       		.byte	0x53
 4303 0441 00000000 		.4byte	0
 4304 0445 00000000 		.4byte	0
 4305              	.LLST33:
 4306 0449 00000000 		.4byte	.LVL101
 4307 044d 25000000 		.4byte	.LVL103-1
 4308 0451 0100     		.2byte	0x1
 4309 0453 50       		.byte	0x50
 4310 0454 25000000 		.4byte	.LVL103-1
 4311 0458 A0000000 		.4byte	.LVL116
 4312 045c 0100     		.2byte	0x1
 4313 045e 54       		.byte	0x54
 4314 045f A0000000 		.4byte	.LVL116
 4315 0463 B6000000 		.4byte	.LVL119
 4316 0467 0400     		.2byte	0x4
 4317 0469 F3       		.byte	0xf3
 4318 046a 01       		.uleb128 0x1
 4319 046b 50       		.byte	0x50
 4320 046c 9F       		.byte	0x9f
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 129


 4321 046d B6000000 		.4byte	.LVL119
 4322 0471 B8000000 		.4byte	.LVL120
 4323 0475 0100     		.2byte	0x1
 4324 0477 50       		.byte	0x50
 4325 0478 B8000000 		.4byte	.LVL120
 4326 047c BC000000 		.4byte	.LVL121
 4327 0480 0100     		.2byte	0x1
 4328 0482 54       		.byte	0x54
 4329 0483 BC000000 		.4byte	.LVL121
 4330 0487 D8000000 		.4byte	.LFE9
 4331 048b 0400     		.2byte	0x4
 4332 048d F3       		.byte	0xf3
 4333 048e 01       		.uleb128 0x1
 4334 048f 50       		.byte	0x50
 4335 0490 9F       		.byte	0x9f
 4336 0491 00000000 		.4byte	0
 4337 0495 00000000 		.4byte	0
 4338              	.LLST34:
 4339 0499 28000000 		.4byte	.LVL104
 4340 049d 44000000 		.4byte	.LVL110
 4341 04a1 0200     		.2byte	0x2
 4342 04a3 91       		.byte	0x91
 4343 04a4 64       		.sleb128 -28
 4344 04a5 00000000 		.4byte	0
 4345 04a9 00000000 		.4byte	0
 4346              	.LLST35:
 4347 04ad 4C000000 		.4byte	.LVL111
 4348 04b1 54000000 		.4byte	.LVL112
 4349 04b5 0100     		.2byte	0x1
 4350 04b7 53       		.byte	0x53
 4351 04b8 54000000 		.4byte	.LVL112
 4352 04bc 58000000 		.4byte	.LVL113
 4353 04c0 0700     		.2byte	0x7
 4354 04c2 0C       		.byte	0xc
 4355 04c3 0C0F0340 		.4byte	0x40030f0c
 4356 04c7 06       		.byte	0x6
 4357 04c8 9F       		.byte	0x9f
 4358 04c9 00000000 		.4byte	0
 4359 04cd 00000000 		.4byte	0
 4360              	.LLST36:
 4361 04d1 06000000 		.4byte	.LVL102
 4362 04d5 30000000 		.4byte	.LVL106
 4363 04d9 0200     		.2byte	0x2
 4364 04db 30       		.byte	0x30
 4365 04dc 9F       		.byte	0x9f
 4366 04dd 30000000 		.4byte	.LVL106
 4367 04e1 38000000 		.4byte	.LVL108
 4368 04e5 0200     		.2byte	0x2
 4369 04e7 31       		.byte	0x31
 4370 04e8 9F       		.byte	0x9f
 4371 04e9 38000000 		.4byte	.LVL108
 4372 04ed 3A000000 		.4byte	.LVL109
 4373 04f1 0200     		.2byte	0x2
 4374 04f3 30       		.byte	0x30
 4375 04f4 9F       		.byte	0x9f
 4376 04f5 3A000000 		.4byte	.LVL109
 4377 04f9 B6000000 		.4byte	.LVL119
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 130


 4378 04fd 0100     		.2byte	0x1
 4379 04ff 56       		.byte	0x56
 4380 0500 B6000000 		.4byte	.LVL119
 4381 0504 BC000000 		.4byte	.LVL121
 4382 0508 0200     		.2byte	0x2
 4383 050a 30       		.byte	0x30
 4384 050b 9F       		.byte	0x9f
 4385 050c 00000000 		.4byte	0
 4386 0510 00000000 		.4byte	0
 4387              	.LLST37:
 4388 0514 00000000 		.4byte	.LVL122
 4389 0518 08000000 		.4byte	.LVL123
 4390 051c 0100     		.2byte	0x1
 4391 051e 50       		.byte	0x50
 4392 051f 08000000 		.4byte	.LVL123
 4393 0523 14000000 		.4byte	.LFE28
 4394 0527 0400     		.2byte	0x4
 4395 0529 F3       		.byte	0xf3
 4396 052a 01       		.uleb128 0x1
 4397 052b 50       		.byte	0x50
 4398 052c 9F       		.byte	0x9f
 4399 052d 00000000 		.4byte	0
 4400 0531 00000000 		.4byte	0
 4401              	.LLST38:
 4402 0535 00000000 		.4byte	.LVL125
 4403 0539 1A000000 		.4byte	.LVL126
 4404 053d 0100     		.2byte	0x1
 4405 053f 50       		.byte	0x50
 4406 0540 1A000000 		.4byte	.LVL126
 4407 0544 4C000000 		.4byte	.LFE29
 4408 0548 0400     		.2byte	0x4
 4409 054a F3       		.byte	0xf3
 4410 054b 01       		.uleb128 0x1
 4411 054c 50       		.byte	0x50
 4412 054d 9F       		.byte	0x9f
 4413 054e 00000000 		.4byte	0
 4414 0552 00000000 		.4byte	0
 4415              	.LLST39:
 4416 0556 00000000 		.4byte	.LVL130
 4417 055a 02000000 		.4byte	.LVL131
 4418 055e 0100     		.2byte	0x1
 4419 0560 50       		.byte	0x50
 4420 0561 02000000 		.4byte	.LVL131
 4421 0565 10000000 		.4byte	.LFE36
 4422 0569 0400     		.2byte	0x4
 4423 056b F3       		.byte	0xf3
 4424 056c 01       		.uleb128 0x1
 4425 056d 50       		.byte	0x50
 4426 056e 9F       		.byte	0x9f
 4427 056f 00000000 		.4byte	0
 4428 0573 00000000 		.4byte	0
 4429              	.LLST40:
 4430 0577 0C000000 		.4byte	.LVL134
 4431 057b 1C000000 		.4byte	.LVL137
 4432 057f 0100     		.2byte	0x1
 4433 0581 54       		.byte	0x54
 4434 0582 1E000000 		.4byte	.LVL138
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 131


 4435 0586 22000000 		.4byte	.LVL139
 4436 058a 0100     		.2byte	0x1
 4437 058c 54       		.byte	0x54
 4438 058d 00000000 		.4byte	0
 4439 0591 00000000 		.4byte	0
 4440              	.LLST41:
 4441 0595 02000000 		.4byte	.LVL140
 4442 0599 06000000 		.4byte	.LVL141
 4443 059d 0200     		.2byte	0x2
 4444 059f 30       		.byte	0x30
 4445 05a0 9F       		.byte	0x9f
 4446 05a1 06000000 		.4byte	.LVL141
 4447 05a5 1B000000 		.4byte	.LVL143-1
 4448 05a9 0100     		.2byte	0x1
 4449 05ab 53       		.byte	0x53
 4450 05ac 00000000 		.4byte	0
 4451 05b0 00000000 		.4byte	0
 4452              	.LLST42:
 4453 05b4 00000000 		.4byte	.LVL151
 4454 05b8 06000000 		.4byte	.LVL152
 4455 05bc 0100     		.2byte	0x1
 4456 05be 50       		.byte	0x50
 4457 05bf 06000000 		.4byte	.LVL152
 4458 05c3 10000000 		.4byte	.LFE42
 4459 05c7 0400     		.2byte	0x4
 4460 05c9 F3       		.byte	0xf3
 4461 05ca 01       		.uleb128 0x1
 4462 05cb 50       		.byte	0x50
 4463 05cc 9F       		.byte	0x9f
 4464 05cd 00000000 		.4byte	0
 4465 05d1 00000000 		.4byte	0
 4466              	.LLST43:
 4467 05d5 00000000 		.4byte	.LVL153
 4468 05d9 02000000 		.4byte	.LVL154
 4469 05dd 0100     		.2byte	0x1
 4470 05df 50       		.byte	0x50
 4471 05e0 02000000 		.4byte	.LVL154
 4472 05e4 0C000000 		.4byte	.LFE43
 4473 05e8 0400     		.2byte	0x4
 4474 05ea F3       		.byte	0xf3
 4475 05eb 01       		.uleb128 0x1
 4476 05ec 50       		.byte	0x50
 4477 05ed 9F       		.byte	0x9f
 4478 05ee 00000000 		.4byte	0
 4479 05f2 00000000 		.4byte	0
 4480              		.section	.debug_aranges,"",%progbits
 4481 0000 7C010000 		.4byte	0x17c
 4482 0004 0200     		.2byte	0x2
 4483 0006 00000000 		.4byte	.Ldebug_info0
 4484 000a 04       		.byte	0x4
 4485 000b 00       		.byte	0
 4486 000c 0000     		.2byte	0
 4487 000e 0000     		.2byte	0
 4488 0010 00000000 		.4byte	.LFB1
 4489 0014 14000000 		.4byte	.LFE1-.LFB1
 4490 0018 00000000 		.4byte	.LFB4
 4491 001c 14000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 132


 4492 0020 00000000 		.4byte	.LFB2
 4493 0024 18000000 		.4byte	.LFE2-.LFB2
 4494 0028 00000000 		.4byte	.LFB5
 4495 002c 14000000 		.4byte	.LFE5-.LFB5
 4496 0030 00000000 		.4byte	.LFB6
 4497 0034 20000000 		.4byte	.LFE6-.LFB6
 4498 0038 00000000 		.4byte	.LFB7
 4499 003c 1C000000 		.4byte	.LFE7-.LFB7
 4500 0040 00000000 		.4byte	.LFB8
 4501 0044 24000000 		.4byte	.LFE8-.LFB8
 4502 0048 00000000 		.4byte	.LFB10
 4503 004c 24000000 		.4byte	.LFE10-.LFB10
 4504 0050 00000000 		.4byte	.LFB11
 4505 0054 14000000 		.4byte	.LFE11-.LFB11
 4506 0058 00000000 		.4byte	.LFB12
 4507 005c 10000000 		.4byte	.LFE12-.LFB12
 4508 0060 00000000 		.4byte	.LFB13
 4509 0064 0C000000 		.4byte	.LFE13-.LFB13
 4510 0068 00000000 		.4byte	.LFB20
 4511 006c 14000000 		.4byte	.LFE20-.LFB20
 4512 0070 00000000 		.4byte	.LFB21
 4513 0074 18000000 		.4byte	.LFE21-.LFB21
 4514 0078 00000000 		.4byte	.LFB22
 4515 007c 14000000 		.4byte	.LFE22-.LFB22
 4516 0080 00000000 		.4byte	.LFB23
 4517 0084 14000000 		.4byte	.LFE23-.LFB23
 4518 0088 00000000 		.4byte	.LFB24
 4519 008c 14000000 		.4byte	.LFE24-.LFB24
 4520 0090 00000000 		.4byte	.LFB25
 4521 0094 04000000 		.4byte	.LFE25-.LFB25
 4522 0098 00000000 		.4byte	.LFB14
 4523 009c 20000000 		.4byte	.LFE14-.LFB14
 4524 00a0 00000000 		.4byte	.LFB15
 4525 00a4 1C000000 		.4byte	.LFE15-.LFB15
 4526 00a8 00000000 		.4byte	.LFB16
 4527 00ac 24000000 		.4byte	.LFE16-.LFB16
 4528 00b0 00000000 		.4byte	.LFB17
 4529 00b4 20000000 		.4byte	.LFE17-.LFB17
 4530 00b8 00000000 		.4byte	.LFB18
 4531 00bc 4C000000 		.4byte	.LFE18-.LFB18
 4532 00c0 00000000 		.4byte	.LFB19
 4533 00c4 2C000000 		.4byte	.LFE19-.LFB19
 4534 00c8 00000000 		.4byte	.LFB26
 4535 00cc 18000000 		.4byte	.LFE26-.LFB26
 4536 00d0 00000000 		.4byte	.LFB27
 4537 00d4 30000000 		.4byte	.LFE27-.LFB27
 4538 00d8 00000000 		.4byte	.LFB3
 4539 00dc BC000000 		.4byte	.LFE3-.LFB3
 4540 00e0 00000000 		.4byte	.LFB9
 4541 00e4 D8000000 		.4byte	.LFE9-.LFB9
 4542 00e8 00000000 		.4byte	.LFB28
 4543 00ec 14000000 		.4byte	.LFE28-.LFB28
 4544 00f0 00000000 		.4byte	.LFB29
 4545 00f4 4C000000 		.4byte	.LFE29-.LFB29
 4546 00f8 00000000 		.4byte	.LFB33
 4547 00fc 10000000 		.4byte	.LFE33-.LFB33
 4548 0100 00000000 		.4byte	.LFB34
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 133


 4549 0104 10000000 		.4byte	.LFE34-.LFB34
 4550 0108 00000000 		.4byte	.LFB32
 4551 010c 18000000 		.4byte	.LFE32-.LFB32
 4552 0110 00000000 		.4byte	.LFB35
 4553 0114 10000000 		.4byte	.LFE35-.LFB35
 4554 0118 00000000 		.4byte	.LFB36
 4555 011c 10000000 		.4byte	.LFE36-.LFB36
 4556 0120 00000000 		.4byte	.LFB37
 4557 0124 10000000 		.4byte	.LFE37-.LFB37
 4558 0128 00000000 		.4byte	.LFB38
 4559 012c 10000000 		.4byte	.LFE38-.LFB38
 4560 0130 00000000 		.4byte	.LFB39
 4561 0134 20000000 		.4byte	.LFE39-.LFB39
 4562 0138 00000000 		.4byte	.LFB40
 4563 013c 10000000 		.4byte	.LFE40-.LFB40
 4564 0140 00000000 		.4byte	.LFB44
 4565 0144 28000000 		.4byte	.LFE44-.LFB44
 4566 0148 00000000 		.4byte	.LFB41
 4567 014c 0C000000 		.4byte	.LFE41-.LFB41
 4568 0150 00000000 		.4byte	.LFB31
 4569 0154 4C000000 		.4byte	.LFE31-.LFB31
 4570 0158 00000000 		.4byte	.LFB30
 4571 015c 20000000 		.4byte	.LFE30-.LFB30
 4572 0160 00000000 		.4byte	.LFB42
 4573 0164 10000000 		.4byte	.LFE42-.LFB42
 4574 0168 00000000 		.4byte	.LFB43
 4575 016c 0C000000 		.4byte	.LFE43-.LFB43
 4576 0170 00000000 		.4byte	.LFB45
 4577 0174 70000000 		.4byte	.LFE45-.LFB45
 4578 0178 00000000 		.4byte	0
 4579 017c 00000000 		.4byte	0
 4580              		.section	.debug_ranges,"",%progbits
 4581              	.Ldebug_ranges0:
 4582 0000 00000000 		.4byte	.LFB1
 4583 0004 14000000 		.4byte	.LFE1
 4584 0008 00000000 		.4byte	.LFB4
 4585 000c 14000000 		.4byte	.LFE4
 4586 0010 00000000 		.4byte	.LFB2
 4587 0014 18000000 		.4byte	.LFE2
 4588 0018 00000000 		.4byte	.LFB5
 4589 001c 14000000 		.4byte	.LFE5
 4590 0020 00000000 		.4byte	.LFB6
 4591 0024 20000000 		.4byte	.LFE6
 4592 0028 00000000 		.4byte	.LFB7
 4593 002c 1C000000 		.4byte	.LFE7
 4594 0030 00000000 		.4byte	.LFB8
 4595 0034 24000000 		.4byte	.LFE8
 4596 0038 00000000 		.4byte	.LFB10
 4597 003c 24000000 		.4byte	.LFE10
 4598 0040 00000000 		.4byte	.LFB11
 4599 0044 14000000 		.4byte	.LFE11
 4600 0048 00000000 		.4byte	.LFB12
 4601 004c 10000000 		.4byte	.LFE12
 4602 0050 00000000 		.4byte	.LFB13
 4603 0054 0C000000 		.4byte	.LFE13
 4604 0058 00000000 		.4byte	.LFB20
 4605 005c 14000000 		.4byte	.LFE20
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 134


 4606 0060 00000000 		.4byte	.LFB21
 4607 0064 18000000 		.4byte	.LFE21
 4608 0068 00000000 		.4byte	.LFB22
 4609 006c 14000000 		.4byte	.LFE22
 4610 0070 00000000 		.4byte	.LFB23
 4611 0074 14000000 		.4byte	.LFE23
 4612 0078 00000000 		.4byte	.LFB24
 4613 007c 14000000 		.4byte	.LFE24
 4614 0080 00000000 		.4byte	.LFB25
 4615 0084 04000000 		.4byte	.LFE25
 4616 0088 00000000 		.4byte	.LFB14
 4617 008c 20000000 		.4byte	.LFE14
 4618 0090 00000000 		.4byte	.LFB15
 4619 0094 1C000000 		.4byte	.LFE15
 4620 0098 00000000 		.4byte	.LFB16
 4621 009c 24000000 		.4byte	.LFE16
 4622 00a0 00000000 		.4byte	.LFB17
 4623 00a4 20000000 		.4byte	.LFE17
 4624 00a8 00000000 		.4byte	.LFB18
 4625 00ac 4C000000 		.4byte	.LFE18
 4626 00b0 00000000 		.4byte	.LFB19
 4627 00b4 2C000000 		.4byte	.LFE19
 4628 00b8 00000000 		.4byte	.LFB26
 4629 00bc 18000000 		.4byte	.LFE26
 4630 00c0 00000000 		.4byte	.LFB27
 4631 00c4 30000000 		.4byte	.LFE27
 4632 00c8 00000000 		.4byte	.LFB3
 4633 00cc BC000000 		.4byte	.LFE3
 4634 00d0 00000000 		.4byte	.LFB9
 4635 00d4 D8000000 		.4byte	.LFE9
 4636 00d8 00000000 		.4byte	.LFB28
 4637 00dc 14000000 		.4byte	.LFE28
 4638 00e0 00000000 		.4byte	.LFB29
 4639 00e4 4C000000 		.4byte	.LFE29
 4640 00e8 00000000 		.4byte	.LFB33
 4641 00ec 10000000 		.4byte	.LFE33
 4642 00f0 00000000 		.4byte	.LFB34
 4643 00f4 10000000 		.4byte	.LFE34
 4644 00f8 00000000 		.4byte	.LFB32
 4645 00fc 18000000 		.4byte	.LFE32
 4646 0100 00000000 		.4byte	.LFB35
 4647 0104 10000000 		.4byte	.LFE35
 4648 0108 00000000 		.4byte	.LFB36
 4649 010c 10000000 		.4byte	.LFE36
 4650 0110 00000000 		.4byte	.LFB37
 4651 0114 10000000 		.4byte	.LFE37
 4652 0118 00000000 		.4byte	.LFB38
 4653 011c 10000000 		.4byte	.LFE38
 4654 0120 00000000 		.4byte	.LFB39
 4655 0124 20000000 		.4byte	.LFE39
 4656 0128 00000000 		.4byte	.LFB40
 4657 012c 10000000 		.4byte	.LFE40
 4658 0130 00000000 		.4byte	.LFB44
 4659 0134 28000000 		.4byte	.LFE44
 4660 0138 00000000 		.4byte	.LFB41
 4661 013c 0C000000 		.4byte	.LFE41
 4662 0140 00000000 		.4byte	.LFB31
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 135


 4663 0144 4C000000 		.4byte	.LFE31
 4664 0148 00000000 		.4byte	.LFB30
 4665 014c 20000000 		.4byte	.LFE30
 4666 0150 00000000 		.4byte	.LFB42
 4667 0154 10000000 		.4byte	.LFE42
 4668 0158 00000000 		.4byte	.LFB43
 4669 015c 0C000000 		.4byte	.LFE43
 4670 0160 00000000 		.4byte	.LFB45
 4671 0164 70000000 		.4byte	.LFE45
 4672 0168 00000000 		.4byte	0
 4673 016c 00000000 		.4byte	0
 4674              		.section	.debug_line,"",%progbits
 4675              	.Ldebug_line0:
 4676 0000 98040000 		.section	.debug_str,"MS",%progbits,1
 4676      02006900 
 4676      00000201 
 4676      FB0E0D00 
 4676      01010101 
 4677              	.LASF49:
 4678 0000 72616D56 		.ascii	"ramVectorTable\000"
 4678      6563746F 
 4678      72546162 
 4678      6C6500
 4679              	.LASF10:
 4680 000f 75696E74 		.ascii	"uint16\000"
 4680      313600
 4681              	.LASF36:
 4682 0016 696E7453 		.ascii	"intState\000"
 4682      74617465 
 4682      00
 4683              	.LASF23:
 4684 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4684      73436C6B 
 4684      57726974 
 4684      65486663 
 4684      6C6B4469 
 4685              	.LASF48:
 4686 0038 6F6C6449 		.ascii	"oldIsr\000"
 4686      737200
 4687              	.LASF88:
 4688 003f 72657456 		.ascii	"retVal\000"
 4688      616C00
 4689              	.LASF35:
 4690 0046 43794469 		.ascii	"CyDisableInts\000"
 4690      7361626C 
 4690      65496E74 
 4690      7300
 4691              	.LASF7:
 4692 0054 6C6F6E67 		.ascii	"long long unsigned int\000"
 4692      206C6F6E 
 4692      6720756E 
 4692      7369676E 
 4692      65642069 
 4693              	.LASF97:
 4694 006b 43795379 		.ascii	"CySysTickInitVar\000"
 4694      73546963 
 4694      6B496E69 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 136


 4694      74566172 
 4694      00
 4695              	.LASF37:
 4696 007c 4379456E 		.ascii	"CyEnableInts\000"
 4696      61626C65 
 4696      496E7473 
 4696      00
 4697              	.LASF102:
 4698 0089 43795379 		.ascii	"CySysClkWcoEnabled\000"
 4698      73436C6B 
 4698      57636F45 
 4698      6E61626C 
 4698      656400
 4699              	.LASF58:
 4700 009c 4379536F 		.ascii	"CySoftwareReset\000"
 4700      66747761 
 4700      72655265 
 4700      73657400 
 4701              	.LASF73:
 4702 00ac 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4702      73546963 
 4702      6B456E61 
 4702      626C6549 
 4702      6E746572 
 4703              	.LASF41:
 4704 00c5 4379496E 		.ascii	"CyIntGetState\000"
 4704      74476574 
 4704      53746174 
 4704      6500
 4705              	.LASF6:
 4706 00d3 6C6F6E67 		.ascii	"long long int\000"
 4706      206C6F6E 
 4706      6720696E 
 4706      7400
 4707              	.LASF0:
 4708 00e1 7369676E 		.ascii	"signed char\000"
 4708      65642063 
 4708      68617200 
 4709              	.LASF62:
 4710 00ed 66726571 		.ascii	"freq\000"
 4710      00
 4711              	.LASF71:
 4712 00f2 43794465 		.ascii	"CyDelayFreq\000"
 4712      6C617946 
 4712      72657100 
 4713              	.LASF24:
 4714 00fe 696E7465 		.ascii	"interruptState\000"
 4714      72727570 
 4714      74537461 
 4714      746500
 4715              	.LASF64:
 4716 010d 6C664C69 		.ascii	"lfLimit\000"
 4716      6D697400 
 4717              	.LASF78:
 4718 0115 43795379 		.ascii	"CySysTickGetReload\000"
 4718      73546963 
 4718      6B476574 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 137


 4718      52656C6F 
 4718      616400
 4719              	.LASF77:
 4720 0128 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 4720      73436C6B 
 4720      496D6F47 
 4720      65745763 
 4720      6F4C6F63 
 4721              	.LASF68:
 4722 013e 77636F4C 		.ascii	"wcoLock\000"
 4722      6F636B00 
 4723              	.LASF4:
 4724 0146 6C6F6E67 		.ascii	"long int\000"
 4724      20696E74 
 4724      00
 4725              	.LASF42:
 4726 014f 4379496E 		.ascii	"CyIntDisable\000"
 4726      74446973 
 4726      61626C65 
 4726      00
 4727              	.LASF89:
 4728 015c 43795379 		.ascii	"CySysTickGetCallback\000"
 4728      73546963 
 4728      6B476574 
 4728      43616C6C 
 4728      6261636B 
 4729              	.LASF9:
 4730 0171 75696E74 		.ascii	"uint8\000"
 4730      3800
 4731              	.LASF94:
 4732 0177 63796465 		.ascii	"cydelayFreqKhz\000"
 4732      6C617946 
 4732      7265714B 
 4732      687A00
 4733              	.LASF69:
 4734 0186 43794465 		.ascii	"CyDelayUs\000"
 4734      6C617955 
 4734      7300
 4735              	.LASF13:
 4736 0190 646F7562 		.ascii	"double\000"
 4736      6C6500
 4737              	.LASF55:
 4738 0197 73686966 		.ascii	"shift\000"
 4738      7400
 4739              	.LASF11:
 4740 019d 75696E74 		.ascii	"uint32\000"
 4740      333200
 4741              	.LASF40:
 4742 01a4 6E756D62 		.ascii	"number\000"
 4742      657200
 4743              	.LASF38:
 4744 01ab 6D61736B 		.ascii	"mask\000"
 4744      00
 4745              	.LASF31:
 4746 01b0 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4746      73436C6B 
 4746      47657453 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 138


 4746      7973636C 
 4746      6B536F75 
 4747              	.LASF61:
 4748 01c8 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 4748      73436C6B 
 4748      496D6F45 
 4748      6E61626C 
 4748      6557636F 
 4749              	.LASF57:
 4750 01e1 4379496E 		.ascii	"CyIntGetPriority\000"
 4750      74476574 
 4750      5072696F 
 4750      72697479 
 4750      00
 4751              	.LASF96:
 4752 01f2 63796465 		.ascii	"cydelay32kMs\000"
 4752      6C617933 
 4752      326B4D73 
 4752      00
 4753              	.LASF84:
 4754 01ff 43795379 		.ascii	"CySysTickInit\000"
 4754      73546963 
 4754      6B496E69 
 4754      7400
 4755              	.LASF56:
 4756 020d 76616C75 		.ascii	"value\000"
 4756      6500
 4757              	.LASF81:
 4758 0213 636C6F63 		.ascii	"clockSource\000"
 4758      6B536F75 
 4758      72636500 
 4759              	.LASF90:
 4760 021f 43794765 		.ascii	"CyGetUniqueId\000"
 4760      74556E69 
 4760      71756549 
 4760      6400
 4761              	.LASF82:
 4762 022d 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4762      73546963 
 4762      6B476574 
 4762      436F756E 
 4762      74466C61 
 4763              	.LASF8:
 4764 0243 756E7369 		.ascii	"unsigned int\000"
 4764      676E6564 
 4764      20696E74 
 4764      00
 4765              	.LASF83:
 4766 0250 43795379 		.ascii	"CySysTickClear\000"
 4766      73546963 
 4766      6B436C65 
 4766      617200
 4767              	.LASF5:
 4768 025f 6C6F6E67 		.ascii	"long unsigned int\000"
 4768      20756E73 
 4768      69676E65 
 4768      6420696E 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 139


 4768      7400
 4769              	.LASF22:
 4770 0271 43795379 		.ascii	"CySysClkImoStop\000"
 4770      73436C6B 
 4770      496D6F53 
 4770      746F7000 
 4771              	.LASF101:
 4772 0281 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4772      74657243 
 4772      72697469 
 4772      63616C53 
 4772      65637469 
 4773              	.LASF43:
 4774 0298 4379496E 		.ascii	"CyIntSetPending\000"
 4774      74536574 
 4774      50656E64 
 4774      696E6700 
 4775              	.LASF32:
 4776 02a8 43795379 		.ascii	"CySysGetResetReason\000"
 4776      73476574 
 4776      52657365 
 4776      74526561 
 4776      736F6E00 
 4777              	.LASF3:
 4778 02bc 73686F72 		.ascii	"short unsigned int\000"
 4778      7420756E 
 4778      7369676E 
 4778      65642069 
 4778      6E7400
 4779              	.LASF63:
 4780 02cf 72656754 		.ascii	"regTmp\000"
 4780      6D7000
 4781              	.LASF80:
 4782 02d6 43795379 		.ascii	"CySysTickSetClockSource\000"
 4782      73546963 
 4782      6B536574 
 4782      436C6F63 
 4782      6B536F75 
 4783              	.LASF51:
 4784 02ee 4379496E 		.ascii	"CyIntSetVector\000"
 4784      74536574 
 4784      56656374 
 4784      6F7200
 4785              	.LASF104:
 4786 02fd 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyLib.c\000"
 4786      6E657261 
 4786      7465645F 
 4786      536F7572 
 4786      63655C50 
 4787              	.LASF54:
 4788 031e 7072696F 		.ascii	"priority\000"
 4788      72697479 
 4788      00
 4789              	.LASF66:
 4790 0327 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4790      73436C6B 
 4790      57726974 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 140


 4790      65496D6F 
 4790      46726571 
 4791              	.LASF46:
 4792 033c 4379496E 		.ascii	"CyIntSetSysVector\000"
 4792      74536574 
 4792      53797356 
 4792      6563746F 
 4792      7200
 4793              	.LASF21:
 4794 034e 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 4794      73436C6B 
 4794      496D6F44 
 4794      69736162 
 4794      6C655763 
 4795              	.LASF16:
 4796 0368 72656733 		.ascii	"reg32\000"
 4796      3200
 4797              	.LASF85:
 4798 036e 43795379 		.ascii	"CySysTickStart\000"
 4798      73546963 
 4798      6B537461 
 4798      727400
 4799              	.LASF34:
 4800 037d 72657475 		.ascii	"returnStatus\000"
 4800      726E5374 
 4800      61747573 
 4800      00
 4801              	.LASF18:
 4802 038a 73697A65 		.ascii	"sizetype\000"
 4802      74797065 
 4802      00
 4803              	.LASF44:
 4804 0393 4379496E 		.ascii	"CyIntClearPending\000"
 4804      74436C65 
 4804      61725065 
 4804      6E64696E 
 4804      6700
 4805              	.LASF47:
 4806 03a5 61646472 		.ascii	"address\000"
 4806      65737300 
 4807              	.LASF26:
 4808 03ad 73797363 		.ascii	"sysclkSource\000"
 4808      6C6B536F 
 4808      75726365 
 4808      00
 4809              	.LASF87:
 4810 03ba 66756E63 		.ascii	"function\000"
 4810      74696F6E 
 4810      00
 4811              	.LASF79:
 4812 03c3 43795379 		.ascii	"CySysTickGetValue\000"
 4812      73546963 
 4812      6B476574 
 4812      56616C75 
 4812      6500
 4813              	.LASF93:
 4814 03d5 63796465 		.ascii	"cydelayFreqHz\000"
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 141


 4814      6C617946 
 4814      72657148 
 4814      7A00
 4815              	.LASF53:
 4816 03e3 4379496E 		.ascii	"CyIntSetPriority\000"
 4816      74536574 
 4816      5072696F 
 4816      72697479 
 4816      00
 4817              	.LASF12:
 4818 03f4 666C6F61 		.ascii	"float\000"
 4818      7400
 4819              	.LASF99:
 4820 03fa 43794578 		.ascii	"CyExitCriticalSection\000"
 4820      69744372 
 4820      69746963 
 4820      616C5365 
 4820      6374696F 
 4821              	.LASF19:
 4822 0410 63795379 		.ascii	"cySysTickCallback\000"
 4822      73546963 
 4822      6B43616C 
 4822      6C626163 
 4822      6B00
 4823              	.LASF52:
 4824 0422 4379496E 		.ascii	"CyIntGetVector\000"
 4824      74476574 
 4824      56656374 
 4824      6F7200
 4825              	.LASF60:
 4826 0431 6D696C6C 		.ascii	"milliseconds\000"
 4826      69736563 
 4826      6F6E6473 
 4826      00
 4827              	.LASF100:
 4828 043e 43794465 		.ascii	"CyDelayCycles\000"
 4828      6C617943 
 4828      79636C65 
 4828      7300
 4829              	.LASF15:
 4830 044c 72656738 		.ascii	"reg8\000"
 4830      00
 4831              	.LASF105:
 4832 0451 5C5C766D 		.ascii	"\\\\vmware-host\\Shared Folders\\Documents\\BLEIOSA"
 4832      77617265 
 4832      2D686F73 
 4832      745C5368 
 4832      61726564 
 4833 047f 50505C50 		.ascii	"PP\\PSoC_Creator\\capsenseled\\145capsenseled.cydsn"
 4833      536F435F 
 4833      43726561 
 4833      746F725C 
 4833      63617073 
 4834 04af 00       		.ascii	"\000"
 4835              	.LASF45:
 4836 04b0 43794861 		.ascii	"CyHalt\000"
 4836      6C7400
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 142


 4837              	.LASF1:
 4838 04b7 756E7369 		.ascii	"unsigned char\000"
 4838      676E6564 
 4838      20636861 
 4838      7200
 4839              	.LASF2:
 4840 04c5 73686F72 		.ascii	"short int\000"
 4840      7420696E 
 4840      7400
 4841              	.LASF39:
 4842 04cf 4379496E 		.ascii	"CyIntEnable\000"
 4842      74456E61 
 4842      626C6500 
 4843              	.LASF50:
 4844 04db 4379496E 		.ascii	"CyIntGetSysVector\000"
 4844      74476574 
 4844      53797356 
 4844      6563746F 
 4844      7200
 4845              	.LASF28:
 4846 04ed 636C6B53 		.ascii	"clkSelect\000"
 4846      656C6563 
 4846      7400
 4847              	.LASF33:
 4848 04f7 72656173 		.ascii	"reason\000"
 4848      6F6E00
 4849              	.LASF14:
 4850 04fe 63686172 		.ascii	"char\000"
 4850      00
 4851              	.LASF98:
 4852 0503 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 4852      6F467265 
 4852      714D687A 
 4852      3244706C 
 4852      6C4F6666 
 4853              	.LASF17:
 4854 051b 63796973 		.ascii	"cyisraddress\000"
 4854      72616464 
 4854      72657373 
 4854      00
 4855              	.LASF74:
 4856 0528 43795379 		.ascii	"CySysTickEnable\000"
 4856      73546963 
 4856      6B456E61 
 4856      626C6500 
 4857              	.LASF30:
 4858 0538 43795379 		.ascii	"CySysClkWriteHfclkDiv\000"
 4858      73436C6B 
 4858      57726974 
 4858      65486663 
 4858      6C6B4469 
 4859              	.LASF27:
 4860 054e 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4860      73436C6B 
 4860      57726974 
 4860      65537973 
 4860      636C6B44 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 143


 4861              	.LASF86:
 4862 0565 43795379 		.ascii	"CySysTickSetCallback\000"
 4862      73546963 
 4862      6B536574 
 4862      43616C6C 
 4862      6261636B 
 4863              	.LASF92:
 4864 057a 43795379 		.ascii	"CySysTickCallbacks\000"
 4864      73546963 
 4864      6B43616C 
 4864      6C626163 
 4864      6B7300
 4865              	.LASF67:
 4866 058d 696D6F54 		.ascii	"imoTrim1Value\000"
 4866      72696D31 
 4866      56616C75 
 4866      6500
 4867              	.LASF91:
 4868 059b 756E6971 		.ascii	"uniqueId\000"
 4868      75654964 
 4868      00
 4869              	.LASF65:
 4870 05a4 666C6173 		.ascii	"flashCtlReg\000"
 4870      6843746C 
 4870      52656700 
 4871              	.LASF59:
 4872 05b0 43794465 		.ascii	"CyDelay\000"
 4872      6C617900 
 4873              	.LASF75:
 4874 05b8 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4874      73546963 
 4874      6B446973 
 4874      61626C65 
 4874      496E7465 
 4875              	.LASF95:
 4876 05d2 63796465 		.ascii	"cydelayFreqMhz\000"
 4876      6C617946 
 4876      7265714D 
 4876      687A00
 4877              	.LASF72:
 4878 05e1 43795379 		.ascii	"CySysTickStop\000"
 4878      73546963 
 4878      6B53746F 
 4878      7000
 4879              	.LASF29:
 4880 05ef 64697669 		.ascii	"divider\000"
 4880      64657200 
 4881              	.LASF20:
 4882 05f7 43795379 		.ascii	"CySysClkImoStart\000"
 4882      73436C6B 
 4882      496D6F53 
 4882      74617274 
 4882      00
 4883              	.LASF107:
 4884 0608 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 4884      73466C61 
 4884      73685365 
ARM GAS  C:\Users\Alan\AppData\Local\Temp\ccZai3Oo.s 			page 144


 4884      74576169 
 4884      74437963 
 4885              	.LASF70:
 4886 0620 6D696372 		.ascii	"microseconds\000"
 4886      6F736563 
 4886      6F6E6473 
 4886      00
 4887              	.LASF25:
 4888 062d 746D7052 		.ascii	"tmpReg\000"
 4888      656700
 4889              	.LASF76:
 4890 0634 43795379 		.ascii	"CySysTickSetReload\000"
 4890      73546963 
 4890      6B536574 
 4890      52656C6F 
 4890      616400
 4891              	.LASF106:
 4892 0647 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4892      73546963 
 4892      6B536572 
 4892      76696365 
 4892      43616C6C 
 4893              	.LASF103:
 4894 0661 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4894      4320342E 
 4894      392E3320 
 4894      32303135 
 4894      30333033 
 4895 0694 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 4895      20726576 
 4895      6973696F 
 4895      6E203232 
 4895      31323230 
 4896 06c7 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4896      67202D66 
 4896      66756E63 
 4896      74696F6E 
 4896      2D736563 
 4897              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
